{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","compiler","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","USE_VALUE","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","v","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","EMPTY$1","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","pipeTypes","pipes","directiveTypes","directives","declaredInputs","encapsulation","Emulated","styles","animations","def","diPublic","consts","vars","hostVars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","invertObject","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","extractDirectiveDef","pipeDefs","extractPipeDef","selectors","viewQuery","features","viewProviders","id","feature","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","publicName","declaredName","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","HEADER_OFFSET","TVIEW","PARENT","NEXT","QUERIES","FLAGS","HOST_NODE","BINDING_INDEX","DIRECTIVES","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","MONKEY_PATCH_KEY_NAME","getContext","mpValue","readPatchedData","lViewData","nodeIndex","isComponentInstance","instance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directivesAcrossView","tNode","firstChild","directiveIndexStart","getDirectiveStartIndex","directiveIndexEnd","getDirectiveEndIndex","traverseNextElement","discoverDirectives","directiveStartIndex","directiveEndIndex","findViaNativeElement","existingCtx","lNode","getLNodeFromViewData","native","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","lNodeIndex","localRefs","getLElementFromComponent","componentInstance","readElementValue","readPatchedLViewData","child","componentIndices","components","elementComponentIndex","lElementIndex","startIndex","count","queueInitHooks","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","arr","throwMultipleComponentError","tagName","RendererStyleFlags3","ACTIVE_INDEX","VIEWS","RENDER_PARENT","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","stringify$1","loadInternal","getLNode","hostView","isContentQueryHost","getRootView","getParentLNode","getHostElementNode","hostTNode","getContainerNode","embeddedView","containerHostIndex","dynamicLContainerNode","getContainerRenderParent","tViewNode","view","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParentNode","beforeNode","rootTNode","node","projectionNodeIndex","nextTNode","elementNode","executeNodeAction","lContainerNode","childContainerData","componentView","findComponentView","head","projection","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","lView","lContainer","parentView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","tContainer","destroyLView","getLViewChild","viewData","childIndex","hostNode","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","destroy","getRenderParent","canInsertNativeNode","currentNode","getHighestElementContainer","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","nativeInsertBefore","appendChild","childEl","childTNode","parentLNode","parentEl","parentTNode","renderParent","getBeforeNodeForView","ngContainer","parentNative","appendProjectedNode","projectedLNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","EMPTY_ARR","EMPTY_OBJ","createEmptyStylingContext","element","sanitizer","initialStylingValues","getOrCreatePlayerContext","stylingContext","allocPlayerContext","updateStyleProp","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","isClassBased_5","valueExists","setDirty","setContextDirty","setStyle","prop","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","setFlag","getProp","findEntryPositionByProp","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","rendererFactory","elementDepthCount","bindingsEnabled","previousOrParentTNode","isParent","currentQueries","_CLEAN_PROMISE","CIRCULAR$1","fill","getRenderer","getRendererFactory","getCurrentSanitizer","getCurrentView","restoreView","viewToRestore","contextViewData","getPreviousOrParentTNode","_getViewData","getCleanup","getTViewCleanup","checkNoChangesMode","bindingRootIndex","getBindingRoot","enterView","newView","oldView","bindingStartIndex","leaveView","creationOnly","refreshDescendantViews","setHostBindings","parentFirstTemplatePass","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","refreshChildComponents","componentRefresh","bindings","hostBindingStartIndex","defs","dirIndex","i_1","blueprint","NO_CHANGE","executeInitAndContentHooks","createLViewData","createLNodeObject","createNodeAtIndex","parentInSameView","tParent","isState","createTNode","tData","tNode_1","dynamicContainerNode","adjustBlueprintForNewNode","resetComponentState","viewToRender","rf","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","nextContext","level","walkUpViews","nestingLevel","renderComponentOrTemplate","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementCreate","setUpAttributes","createDirectivesAndLocals","overriddenRenderer","rendererToUse","createElement","createElementNS","nativeNodeLocalRefExtractor","localRefExtractor","cacheMatchingDirectivesForNode","exportsMap","","matches","currentMatches","findDirectiveMatches","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","instantiateDirectivesDirectly","clone","tDirectives","addComponentLogic","directiveCreate","saveResolvedLocalsInData","localIndex","registry","directiveRegistry","throwCyclicDependencyError","queueComponentIndexForCheck","queueHostBindingForCheck","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","tag","rNode","listener","eventName","listenerFn","useCapture","getPreviousOrParentNode","listen","storeCleanupFn","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","addEventListener","cleanupInstances","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","elementAttribute","element_1","loadElement","removeAttribute","strValue","elementProperty","getTNode","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","enableBindings","disableBindings","tViews","injectorIndex","initialInputs","stylingTemplate","tNodeFlags","direction","propStore","isInput","directiveDef","propertyAliasMap","internalName","elementClassProp","stylingIndex","updateClassProp","addOrRemove","getStylingContext","elementStyling","classDeclarations","styleDeclarations","styleSanitizer","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","elementStylingApply","load","lElement","allocStylingContext","templateStyleContext","renderStyling","styleStore","classStore","isContextDirty","multiStartIndex","isClassBased_6","valueToApply","elementStyleProp","styleIndex","suffix","valueToAdd","elementStylingMap","classes","updateStylingMap","ignoreAllClassUpdates","ignoreAllStyleUpdates","applyAllClasses","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","isClassBased_3","isClassBased_4","textNative","textBinding","existingNode","textContent","directive","baseDirectiveCreate","setInputsFromAttrs","directiveIndex","initialInputData","generateInitialInputs","minifiedInputName","attrValue","addToViewTree","createLContainer","isForViewContainerRef","containerInternal","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","adjustedElementIndex","viewAttached","syncViewWithBlueprint","componentTView","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","rootContext","nothingScheduled","scheduleTick","res_1","clean","scheduler","playerHandler","flushPlayers","rootComponent","detectChanges","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","bindingUpdated","interpolationV","different","content","interpolation1","prefix","v0","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","bindingUpdated3","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","loadDirective","loadQueryList","queryListIdx","loadElementInternal","getBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","oldValue","msg","updateBinding","exp1","exp2","exp3","exp4","getTView","registerContentQuery","queryList","savedContentQueriesLength","currentDirectiveIndex","tViewContentQueries","CLEAN_PROMISE","createRootComponent","componentDef","hostFeatures","createRootContext","LifecycleHooksFeature","rootTView","isComponentDef","definition","InheritDefinitionFeature","superType","getSuperType","getPrototypeOf","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","elementIndex","prevViewQuery_1","superViewQuery_1","ctx","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","setter_1","simpleChanges","writable","currentChange","configurable","onChangesWrapper","delegateHook","ngOnChanges","RendererStyleFlags2","RenderComponentType","slotCount","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","TNODE","PARENT_INJECTOR","INJECTOR_SIZE","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","setUpBloom","parentLoc","getParentInjectorLocation","parentIndex","getParentInjectorView","parentData","bloomIndex","footer","viewOffset","location","startView","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","directiveInject","getOrCreateInjectable","injectRenderer2","getOrCreateRenderer2","injectAttribute","attrNameToInject","startInjectorIndex","bloomHash","bloomHashBitOrFactory","tokenId","injectorView","parentLocation","injectorHasToken","sameHostView","parentLocation_1","searchDirectivesOnInjector","searchMatchesQueuedForCreation","formerInjector","nodeFlags","NodeInjector","_tNode","_hostView","_injectorIndex","setEnvironment","getFactoryOf","typeAny","getInheritedFactory","PublicFeature","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngModule","_this","ngContentSelectors","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_view","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","_lookUpContext","enumerable","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","queries","viewRef","R3_ELEMENT_REF_FACTORY","injectElementRef","R3_TEMPLATE_REF_FACTORY","injectTemplateRef","R3_CHANGE_DETECTOR_REF_FACTORY","injectChangeDetectorRef","createViewRef","isComponent","componentIndex","hostComponentView","R3_VIEW_CONTAINER_REF_FACTORY","injectViewContainerRef","ViewContainerRefToken","createContainerRef","ViewContainerRef_","_lContainer","_tContainerNode","_hostTNode","_viewRefs","clear","templateRef","adjustedIdx","_adjustIndex","createComponent","componentFactory","ngModuleRef","contextInjector","parentInjector","componentRef","insert","destroyed","_getHostNode","move","newIndex","shift","hostLNode","ElementRef","nativeElement","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","setTimeout","WRAP_RENDERER_FACTORY2","ComponentFactory$$1","isInternalRootView","wrapper","rootFlags","tElementNode","componentTag","projection$$1","nodeList","firstTNode","previousTNode","ComponentRef$1","ComponentRef$$1","destroyCbs","changeDetectorRef","i18nTagRegex","appendI18nNode","APP_ROOT","NOT_YET","CIRCULAR$2","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","imported","delete","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","existing","multiRecord_1","hasOnDestroy","input","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","_bootstrapComponents","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","moduleType","pureFunction0","slotOffset","pureFn","thisArg","getCreationMode","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","isPure","transform","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","TemplateRef","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","result","containerValues","list","viewValuesIdx","getIdxOfMatchingSelector","queryRead","factoryFn","matchingIdx","getIdxOfMatchingDirective","queryReadByTNodeType","addMatch","directiveIdx","matchingValue","previous","createPredicate","_valuesTree","QueryList","QueryList_","changes","_values","filter","find","reduce","init","some","toArray","reset","flatten","item","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","queryRefresh","templateRefExtractor","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ÉµdefineBase","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","ÉµdefinePipe","ÉµdirectiveInject","ÉµgetFactoryOf","ÉµgetInheritedFactory","ÉµinjectAttribute","ÉµtemplateRefExtractor","ÉµinjectRenderer2","ÉµNgOnChangesFeature","ÉµPublicFeature","ÉµInheritDefinitionFeature","ÉµelementAttribute","Éµbind","Éµcontainer","ÉµnextContext","ÉµcontainerRefreshStart","ÉµcontainerRefreshEnd","ÉµloadDirective","ÉµloadQueryList","ÉµnamespaceHTML","ÉµnamespaceMathML","ÉµnamespaceSVG","ÉµenableBindings","ÉµdisableBindings","ÉµelementStart","ÉµelementEnd","Éµelement","ÉµEC","elementContainerStart","ÉµeC","elementContainerEnd","ÉµpureFunction0","ÉµpureFunction1","ÉµpureFunction2","ÉµpureFunction3","ÉµpureFunction4","ÉµpureFunction5","ÉµpureFunction6","ÉµpureFunction7","ÉµpureFunction8","ÉµpureFunctionV","ÉµgetCurrentView","ÉµrestoreView","Éµinterpolation1","Éµinterpolation2","Éµinterpolation3","Éµinterpolation4","Éµinterpolation5","Éµinterpolation6","Éµinterpolation7","Éµinterpolation8","ÉµinterpolationV","ÉµelementClassProp","Éµlistener","Éµload","Éµprojection","ÉµelementProperty","ÉµpipeBind1","ÉµpipeBind2","ÉµpipeBind3","ÉµpipeBind4","ÉµpipeBindV","ÉµprojectionDef","Éµpipe","Éµquery","ÉµqueryRefresh","ÉµregisterContentQuery","Éµreference","ÉµelementStyling","ÉµelementStylingMap","ÉµelementStyleProp","ÉµelementStylingApply","Éµtemplate","Éµtext","ÉµtextBinding","ÉµembeddedViewStart","ÉµembeddedViewEnd","ÉµsanitizeHtml","ÉµsanitizeStyle","ÉµdefaultStyleSanitizer","ÉµsanitizeResourceUrl","ÉµsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ÉµsanitizeUrl","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","dep","reflectDependency","LiteralExpr","host","optional","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","WrappedNodeExpr","param","EMPTY_ARRAY$2","compileNgModuleDefs","flatten$1","wrapReference","expandModuleWithProviders","emitInline","compileNgModule","jitExpression","expression","compileInjector","statements","patchComponentDefWithScope","transitiveScopes","from","compilation","dir","transitiveScopesFor","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","out","isModuleWithProviders","directiveMetadata","extractHostBindings","parseHostBindings","listeners","properties","_loop_2","field","ann","isHostBinding","isHostListener","hostPropertyName","inputsFromMetadata","parseInputOutputs","outputsFromMetadata","inputsFromType","outputsFromType","isOutput","bindingPropertyName","typeArgumentCount","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","piece","isUseClassProvider","USE_VALUE$1","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Version","R3_COMPILE_COMPONENT","compileComponent","maybeQueueResolutionOfComponentResources","constantPool","ConstantPool","parseTemplate","preserveWhitespaces","errors","compileComponentFromMetadata","viewQueries","wrapDirectivesInClosure","makeBindingParser","preStatements","hasSelectorScope","ngSelectorScope","R3_COMPILE_DIRECTIVE","compileDirective","sourceMapUrl","compileDirectiveFromMetadata","R3_COMPILE_INJECTABLE","compileInjectable","srcMeta","hasAProvider","ctorDeps","userDeps","computeProvidedIn","R3_COMPILE_NGMODULE","setScopeOnDeclaredComponents","declaration","R3_COMPILE_PIPE","compilePipe","compilePipeFromMetadata","R3_COMPILE_NGMODULE_DEFS","R3_PATCH_COMPONENT_DEF_WTIH_SCOPE","Directive","Component","Default","Pipe","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","Output","HostBinding","HostListener","NgModule","VERSION","full","major","minor","patch","Injectable","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_NGCC__","createCompiler","compileNgModuleFactory","ApplicationRef","f","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewContainerRef","ChangeDetectorRef","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","_data","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugContext","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","Render3DebugRendererFactory2","element$$1","Render3DebugContext","currentTNode","dirStart","CorePlayerHandler","_players","player","play","queuePlayer","R3_COMPILE_COMPONENT__POST_NGCC__","R3_COMPILE_DIRECTIVE__POST_NGCC__","R3_COMPILE_INJECTABLE__POST_NGCC__","R3_COMPILE_NGMODULE__POST_NGCC__","R3_COMPILE_PIPE__POST_NGCC__","R3_ELEMENT_REF_FACTORY__POST_NGCC__","R3_TEMPLATE_REF_FACTORY__POST_NGCC__","R3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__","R3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ÉµNoopNgZone","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","ÉµgetInjectableDef","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","ÉµisPromise","ÉµclearOverrides","ÉµinitServicesIfNeeded","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdetectChanges","ÉµrenderComponent","renderComponent","ÉµRender3ComponentFactory","ÉµRender3ComponentRef","ÉµRender3NgModuleRef","ÉµmarkDirty","markDirty","ÉµNgModuleFactory","ÉµNO_CHANGE","pipeBind2","Éµstore","ÉµwhenRendered","whenRendered","getRootContext$1","Éµi18nApply","i18nApply","instructions","localParentTNode","localPreviousTNode","instruction","elementTNode","textRNode","lastNodeIndex","textTNode","removedNode","removedTNode","Éµi18nExpMapping","i18nExpMapping","translation","placeholders","staticText","Éµi18nInterpolation1","i18nInterpolation1","Éµi18nInterpolation2","i18nInterpolation2","Éµi18nInterpolation3","i18nInterpolation3","idx","Éµi18nInterpolation4","i18nInterpolation4","b1","Éµi18nInterpolation5","i18nInterpolation5","Éµi18nInterpolation6","i18nInterpolation6","Éµi18nInterpolation7","i18nInterpolation7","b2","Éµi18nInterpolation8","i18nInterpolation8","Éµi18nInterpolationV","i18nInterpolationV","Éµi18nMapping","i18nMapping","elements","expressions","templateRoots","lastChildIndex","translationParts","generateMappingInstructions","tmplIndex","partIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","currentElements","currentExpressions","phIndex","templateRootIndex","newTmplIndex","tmplElements","phKeys","ph","tmplExpressions","ÉµWRAP_RENDERER_FACTORY2","ÉµRender3DebugRendererFactory2","ÉµcompileNgModuleDefs","ÉµpatchComponentDefWithScope","ÉµcompileComponent","ÉµcompileDirective","ÉµcompilePipe","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµgetContext","ÉµaddPlayer","addPlayer","elementContext","animationContext","getRootContext","viewOrComponent","ÉµgetPlayers","getPlayers","ÉµcompileNgModuleFactory__POST_NGCC__","compileNgModuleFactory__POST_NGCC__","ÉµR3_COMPILE_COMPONENT__POST_NGCC__","ÉµR3_COMPILE_DIRECTIVE__POST_NGCC__","ÉµR3_COMPILE_INJECTABLE__POST_NGCC__","ÉµR3_COMPILE_NGMODULE__POST_NGCC__","ÉµR3_COMPILE_PIPE__POST_NGCC__","ÉµivyEnable__POST_NGCC__","ÉµR3_ELEMENT_REF_FACTORY__POST_NGCC__","ÉµR3_TEMPLATE_REF_FACTORY__POST_NGCC__","ÉµR3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__","ÉµR3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":";;;;;CAMC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,QAASA,QAAQ,qBAAsBA,QAAQ,mBACrH,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,iBAAkB,UAAW,OAAQ,oBAAqB,kBAAmBJ,GAChIA,GAASD,EAAOO,GAAKP,EAAOO,OAAUP,EAAOO,GAAGC,SAAWR,EAAOS,KAAKT,EAAOO,GAAGG,SAASV,EAAOS,KAAKE,WAH3G,CAIEC,KAAM,SAAWV,EAAQO,EAAKC,EAASC,GAAa,aAkBlD,IAAIE,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,iBAChBC,wBAA2BC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAG5B,SAASO,EAAUR,EAAGC,GAElB,SAASQ,IAAOX,KAAKY,YAAcV,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEW,UAAkB,OAANV,EAAaC,OAAOU,OAAOX,IAAMQ,EAAGE,UAAYV,EAAEU,UAAW,IAAIF,GAGnF,IAAII,EAAW,WAQX,OAPAA,EAAWX,OAAOY,QAAU,SAASD,EAASE,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIX,KADTU,EAAIG,UAAUF,GACOf,OAAOS,UAAUJ,eAAec,KAAKL,EAAGV,KAAIS,EAAET,GAAKU,EAAEV,IAE9E,OAAOS,IAEKO,MAAMxB,KAAMqB,YAGhC,SAASI,EAAWC,EAAYC,EAAQC,EAAKC,GACzC,IAA2H3B,EAAvH4B,EAAIT,UAAUC,OAAQS,EAAID,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOzB,OAAO4B,yBAAyBL,EAAQC,GAAOC,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIV,EAAIO,EAAWJ,OAAS,EAAGH,GAAK,EAAGA,KAASjB,EAAIwB,EAAWP,MAAIY,GAAKD,EAAI,EAAI5B,EAAE6B,GAAKD,EAAI,EAAI5B,EAAEyB,EAAQC,EAAKG,GAAK7B,EAAEyB,EAAQC,KAASG,GAChJ,OAAOD,EAAI,GAAKC,GAAK3B,OAAO+B,eAAeR,EAAQC,EAAKG,GAAIA,EAGhE,SAASK,EAAQC,EAAYC,GACzB,OAAO,SAAUX,EAAQC,GAAOU,EAAUX,EAAQC,EAAKS,IAG3D,SAASE,EAAWC,EAAaC,GAC7B,GAAuB,iBAAZR,SAAoD,mBAArBA,QAAQS,SAAyB,OAAOT,QAAQS,SAASF,EAAaC,GAGpH,SAASE,EAASC,GACd,IAAIC,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UAAW5B,EAAI,EAChE,OAAI0B,EAAUA,EAAEtB,KAAKqB,IAEjBI,KAAM,WAEF,OADIJ,GAAKzB,GAAKyB,EAAEtB,SAAQsB,OAAI,IACnBK,MAAOL,GAAKA,EAAEzB,KAAM+B,MAAON,KAKhD,SAASO,EAAOP,EAAGxB,GACf,IAAIyB,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UACjD,IAAKF,EAAG,OAAOD,EACf,IAAmBb,EAAYqB,EAA3BjC,EAAI0B,EAAEtB,KAAKqB,GAAOS,KACtB,IACI,WAAc,IAANjC,GAAgBA,KAAM,MAAQW,EAAIZ,EAAE6B,QAAQE,MAAMG,EAAGC,KAAKvB,EAAEkB,OAExE,MAAOM,GAASH,GAAMG,MAAOA,GAC7B,QACI,IACQxB,IAAMA,EAAEmB,OAASL,EAAI1B,EAAU,SAAI0B,EAAEtB,KAAKJ,GAElD,QAAU,GAAIiC,EAAG,MAAMA,EAAEG,OAE7B,OAAOF,EAGX,SAASG,IACL,IAAK,IAAIH,KAASlC,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3CkC,EAAKA,EAAGI,OAAON,EAAO9B,UAAUF,KACpC,OAAOkC;;;;;;;OAUX,SAASK,EAAuBC,GAC5B,IAAK,IAAI/B,KAAO+B,EACZ,GAAIA,EAAyB/B,KAAS8B,EAClC,OAAO9B,EAGf,MAAMgC,MAAM,qDAQhB,SAASC,EAAelC,EAAQmC,GAC5B,IAAK,IAAIlC,KAAOkC,EACRA,EAAOrD,eAAemB,KAASD,EAAOlB,eAAemB,KACrDD,EAAOC,GAAOkC,EAAOlC;;;;;;;OAYjC,IAAImC,EAAmBL,GAAyBM,eAAgBN,IAC5DO,EAAmBP,GAAyBQ,eAAgBR,IAC5DS,EAAoBT,GAAyBU,gBAAiBV,IAC9DW,EAAkBX,GAAyBY,cAAeZ,IAC1Da,EAAcb,GAAyBc,UAAWd,IAClDe,EAAgBf,GAAyBgB,YAAahB,IACtDiB,EAAcjB,GAAyBkB,UAAWlB,IAMlDmB,EAAgBnB,GAAyBoB,kBAAmBpB;;;;;;;;AAyBhE,SAASqB,EAAiBC,GACtB,OACIC,WAAYD,EAAKC,YAAc,KAAM5F,QAAS2F,EAAK3F,QAAS4D,WAAOiC,GAuB3E,SAASC,EAAeC,GACpB,OACI/F,QAAS+F,EAAQ/F,QAASgG,UAAWD,EAAQC,cAAiBC,QAASF,EAAQE,aAQvF,SAASC,EAAiBC,GACtB,OAAOA,EAAK/E,eAAe0D,GAAqBqB,EAAKrB,GAAqB,KAO9E,SAASsB,EAAeD,GACpB,OAAOA,EAAK/E,eAAe4D,GAAmBmB,EAAKnB,GAAmB;;;;;;;OAgD1E,IAAIqB,EAAgC,WAChC,SAASA,EAAeC,EAAOP,GAC3BpF,KAAK2F,MAAQA,EAEb3F,KAAK4F,eAAiB,iBAElB5F,KAAKoE,qBADOc,IAAZE,EACuBL,GACnBE,WAAYG,EAAQH,YAAc,OAClC5F,QAAS+F,EAAQ/F,eAIE6F,EAI/B,OADAQ,EAAe7E,UAAUgF,SAAW,WAAc,MAAO,kBAAoB7F,KAAK2F,OAC3ED,EAhBwB,GA0B/BI,EAAc,kBACdC,EAAa,iBACbC,EAAgB;;;;;;;OAIpB,SAASC,EAAcC,EAAMC,EAAOC,EAAaC,EAAsBC,GACnE,IAAIC,EAAWC,EAAiBL,GAChC,SAASM,IAEL,IADA,IAIIC,EAJAC,KACKC,EAAK,EAAGA,EAAKvF,UAAUC,OAAQsF,IACpCD,EAAKC,GAAMvF,UAAUuF,GAGzB,GAAI5G,gBAAgByG,EAEhB,OADAF,EAAShF,KAAKC,MAAM+E,EAAU/C,GAAUxD,MAAO2G,IACxC3G,KAEX,IAAI6G,EAAqB,KAAMH,EAAKD,GAAkBK,KAAKtF,MAAMkF,EAAIlD,QAAU,GAASmD,KACxF,OAAO,SAASI,EAAcC,GAW1B,OAVIV,GACAA,EAAO9E,WAAM,EAAQgC,GAAUwD,GAAML,KAGvBK,EAAIvG,eAAeqF,GACjCkB,EAAIlB,GACJ1F,OAAO+B,eAAe6E,EAAKlB,GAAe7C,WAAa6C,IAC/CxC,KAAKuD,GACbR,GACAA,EAAqBW,GAClBA,GAQf,OALIZ,IACAK,EAAiB5F,UAAYT,OAAOU,OAAOsF,EAAYvF,YAE3D4F,EAAiB5F,UAAU+E,eAAiBM,EAC5CO,EAAiBQ,cAAgBR,EAC1BA,EAEX,SAASD,EAAiBL,GACtB,OAAO,SAASe,IAEZ,IADA,IAAIP,KACKC,EAAK,EAAGA,EAAKvF,UAAUC,OAAQsF,IACpCD,EAAKC,GAAMvF,UAAUuF,GAEzB,GAAIT,EAAO,CACP,IAAIgB,EAAShB,EAAM3E,WAAM,EAAQgC,EAASmD,IAC1C,IAAK,IAAIS,KAAYD,EACjBnH,KAAKoH,GAAYD,EAAOC,KAKxC,SAASC,EAAmBnB,EAAMC,EAAOC,GACrC,IAAIG,EAAWC,EAAiBL,GAChC,SAASmB,IAEL,IADA,IAIIZ,EAJAC,KACKC,EAAK,EAAGA,EAAKvF,UAAUC,OAAQsF,IACpCD,EAAKC,GAAMvF,UAAUuF,GAGzB,GAAI5G,gBAAgBsH,EAEhB,OADAf,EAAS/E,MAAMxB,KAAM2G,GACd3G,KAEX,IAAI6G,EAAqB,KAAMH,EAAKY,GAAuBR,KAAKtF,MAAMkF,EAAIlD,QAAU,GAASmD,KAE7F,OADAY,EAAeC,WAAaX,EACrBU,EACP,SAASA,EAAeP,EAAKS,EAAWC,GAQpC,IALA,IAAIC,EAAaX,EAAIvG,eAAesF,GAChCiB,EAAIjB,GACJ3F,OAAO+B,eAAe6E,EAAKjB,GAAc9C,WAAa8C,GAGnD4B,EAAWrG,QAAUoG,GACxBC,EAAWrE,KAAK,MAGpB,OADCqE,EAAWD,GAASC,EAAWD,QAAcpE,KAAKuD,GAC5CG,GAQf,OALIZ,IACAkB,EAAsBzG,UAAYT,OAAOU,OAAOsF,EAAYvF,YAEhEyG,EAAsBzG,UAAU+E,eAAiBM,EACjDoB,EAAsBL,cAAgBK,EAC/BA,EAEX,SAASM,EAAkB1B,EAAMC,EAAOC,EAAaC,GACjD,IAAIE,EAAWC,EAAiBL,GAChC,SAAS0B,IAEL,IADA,IAIInB,EAJAC,KACKC,EAAK,EAAGA,EAAKvF,UAAUC,OAAQsF,IACpCD,EAAKC,GAAMvF,UAAUuF,GAGzB,GAAI5G,gBAAgB6H,EAEhB,OADAtB,EAAS/E,MAAMxB,KAAM2G,GACd3G,KAEX,IAAI8H,EAAoB,KAAMpB,EAAKmB,GAAsBf,KAAKtF,MAAMkF,EAAIlD,QAAU,GAASmD,KAa3F,OAZA,SAASoB,EAAcpG,EAAQuE,GAC3B,IAAItF,EAAce,EAAOf,YAGrBoH,EAAOpH,EAAYH,eAAeuF,GAClCpF,EAAYoF,GACZ5F,OAAO+B,eAAevB,EAAaoF,GAAiB/C,WAAa+C,GACrEgC,EAAK9B,GAAQ8B,EAAKvH,eAAeyF,IAAS8B,EAAK9B,OAC/C8B,EAAK9B,GAAM+B,QAAQH,GACfzB,GACAA,EAAqB7E,WAAM,EAAQgC,GAAU7B,EAAQuE,GAAOS,KASxE,OALIP,IACAyB,EAAqBhH,UAAYT,OAAOU,OAAOsF,EAAYvF,YAE/DgH,EAAqBhH,UAAU+E,eAAiBM,EAChD2B,EAAqBZ,cAAgBY,EAC9BA;;;;;;;OA6CX,IAiEWK,EAaAC,EA/DPC,EAfAC,EAA+B,IAAI3C,EAAe,6BAMlD4C,EAAYjB,EAAmB,YAAa,SAAUkB,GAAiB,OAAUA,cAAeA,KAoBhGC,EAAkBZ,EAAkB,kBAAmB,SAAUa,EAAUC,GAE3E,YADa,IAATA,IAAmBA,MACf3H,GAAW0H,SAAUA,EAAUE,OAAO,EAAOC,aAAa,EAAOC,aAAa,GAASH,IAb/FN,EACA,SAASA,OAoBTU,EAAelB,EAAkB,eAAgB,SAAUa,EAAUC,GAErE,YADa,IAATA,IAAmBA,MACf3H,GAAW0H,SAAUA,EAAUE,OAAO,EAAMC,aAAa,EAAOC,aAAa,GAAQH,IAC9FN,GAMCW,EAAenB,EAAkB,eAAgB,SAAUa,EAAUC,GAErE,YADa,IAATA,IAAmBA,MACf3H,GAAW0H,SAAUA,EAAUE,OAAO,EAAOC,aAAa,EAAMC,aAAa,GAAQH,IAC9FN,GAMCY,EAAYpB,EAAkB,YAAa,SAAUa,EAAUC,GAC/D,OAAQ3H,GAAW0H,SAAUA,EAAUE,OAAO,EAAMC,aAAa,EAAMC,aAAa,GAAQH,IAC7FN;;;;;;;;AASQF,EAYR5I,EAAQ4I,0BAA4B5I,EAAQ4I,6BANnBA,EAAgC,OAAI,GAAK,SAKjEA,EAAwBA,EAAiC,QAAI,GAAK,WAE3DC,EA+BR7I,EAAQ2J,wBAA0B3J,EAAQ2J,2BA1BpBd,EAAgC,UAAI,GAAK,YAK9DA,EAAqBA,EAA8B,QAAI,GAAK,UAK5DA,EAAqBA,EAAkC,YAAI,GAAK,cAKhEA,EAAqBA,EAA+B,SAAI,GAAK,WAM7DA,EAAqBA,EAA8B,QAAI,GAAK,UAI5DA,EAAqBA,EAAgC,UAAI,GAAK,YA2FlE,IAoBWe,EApBPC,EAAmC,IAAIC,IAM3C,SAASC,EAAyBC,GAC9B,OAAOA,EAAUC,aAAeD,EAAUE,WAAaF,EAAUE,UAAUlI,OAE/E,SAASmI,EAAeC,GACpB,MAA0B,iBAAZA,EAAuBA,EAAWA,EAASC;;;;;;;;;;;;;;;AAUlDT,EA+BR5J,EAAQ4J,oBAAsB5J,EAAQ4J,uBAtBnBA,EAA4B,SAAI,GAAK,WASvDA,EAAkBA,EAA0B,OAAI,GAAK,SAIrDA,EAAkBA,EAAwB,KAAI,GAAK,OAQnDA,EAAkBA,EAA6B,UAAI,GAAK;;;;;;;;AAU5D,IAAIU,EAA6B,oBAAXC,QAA0BA,OAC5CC,EAAyB,oBAATC,MAAqD,oBAAtBC,mBAC/CD,gBAAgBC,mBAAqBD,KAIrCE,EAH6B,oBAAX7K,QAA0BA,QAGtBwK,GAAYE,EAClCI,EAAUC,QAAQC,QAAQ,GAC1BC,EAAkB,KACtB,SAASC,IACL,IAAKD,EAAiB,CAClB,IAAIE,EAAWN,EAAgB,OAC/B,GAAIM,GAAYA,EAASxH,SACrBsH,EAAkBE,EAASxH,cAK3B,IADA,IAAIyH,EAAOpK,OAAOqK,oBAAoBC,IAAI7J,WACjCM,EAAI,EAAGA,EAAIqJ,EAAKlJ,SAAUH,EAAG,CAClC,IAAIS,EAAM4I,EAAKrJ,GACH,YAARS,GAA6B,SAARA,GACrB8I,IAAI7J,UAAUe,KAAS8I,IAAI7J,UAAmB,UAC9CwJ,EAAkBzI,IAKlC,OAAOyI,EAEX,SAASM,GAAkBC,GACH,oBAATC,KAEPX,EAAQY,KAAK,WAAcF,GAAMA,EAAGpJ,MAAM,KAAM,QAGhDqJ,KAAKE,QAAQJ,kBAAkB,oBAAqBC,GAI5D,SAASI,GAAeC,EAAG9K,GACvB,OAAO8K,IAAM9K,GAAkB,iBAAN8K,GAA+B,iBAAN9K,GAAkB+K,MAAMD,IAAMC,MAAM/K,GAE1F,SAASgL,GAAUC,GACf,GAAqB,iBAAVA,EACP,OAAOA,EAEX,GAAIA,aAAiB7K,MACjB,MAAO,IAAM6K,EAAMC,IAAIF,IAAWG,KAAK,MAAQ,IAEnD,GAAa,MAATF,EACA,MAAO,GAAKA,EAEhB,GAAIA,EAAMG,eACN,MAAO,GAAKH,EAAMG,eAEtB,GAAIH,EAAMlF,KACN,MAAO,GAAKkF,EAAMlF,KAEtB,IAAIsF,EAAMJ,EAAMvF,WAChB,GAAW,MAAP2F,EACA,MAAO,GAAKA,EAEhB,IAAIC,EAAeD,EAAIE,QAAQ,MAC/B,OAAyB,IAAlBD,EAAsBD,EAAMA,EAAIG,UAAU,EAAGF;;;;;;;OAsBxD,SAASG,GAAWC,GAGhB,OAFAA,EAAaC,gBAAkBF,GAC/BC,EAAahG,SAAW,WAAc,OAAOsF,GAAUnL,SAChD6L,EAeX,SAASE,GAAkBvG,GACvB,MAAoB,mBAATA,GAAuBA,EAAK/E,eAAe,oBAClD+E,EAAKsG,kBAAoBF,GAClBpG,IAGAA;;;;;;;OAgBf,IAAIwG,GAAS3E,EAAmB,SAAU,SAAU+D,GAAS,OAAUA,MAAOA,KAM1Ea,GAAW5E,EAAmB,YAM9B6E,GAAO7E,EAAmB,QAM1B8E,GAAW9E,EAAmB,YAM9B+E,GAAO/E,EAAmB,QAS1BgF,GAAS,WACTC,GAAsB,IAAIlM,OAC1BmM,GAAqBD,GASrBE,GAAW,IAAI9G,EAAe,YAC9B+G,GAA8B,WAC9B,SAASA,KAaT,OAXAA,EAAa5L,UAAU6L,IAAM,SAAUtB,EAAOuB,GAE1C,QADsB,IAAlBA,IAA4BA,EAAgBL,IAC5CK,IAAkBL,GAKlB,MAAM,IAAI1I,MAAM,sCAAwCuH,GAAUC,GAAS,KAE/E,OAAOuB,GAEJF,EAdsB,GAgC7BG,GAA0B,WAC1B,SAASA,KAwBT,OAdAA,EAAS9L,OAAS,SAAUsE,EAASyH,GACjC,OAAItM,MAAMuM,QAAQ1H,GACP,IAAI2H,GAAe3H,EAASyH,GAG5B,IAAIE,GAAe3H,EAAQC,UAAWD,EAAQyH,OAAQzH,EAAQc,MAAQ,OAGrF0G,EAASL,mBAAqBD,GAC9BM,EAASI,KAAO,IAAIP,GACpBG,EAASxI,gBAAkBW,GACvBE,WAAY,MACZ5F,QAAS,WAAc,OAAO4N,GAAOT,OAElCI,EAzBkB,GA2BzBM,GAAQ,SAAUjK,GAClB,OAAOA,GAEPkK,MACAC,GAAWF,GACXG,GAAoB,WACpB,OAAO9M,MAAMM,UAAUyM,MAAM/L,KAAKF,YAElCkM,GAAY7J,GAAyB8J,QAASC,OAAQC,SAAUhK,IAGhEiK,GAAgBf,GAASI,KACzBY,GAAW,OACXC,GAAc,IACdd,GAAgC,WAChC,SAASA,EAAe1H,EAAWwH,EAAQ/I,QACxB,IAAX+I,IAAqBA,EAASc,SACnB,IAAX7J,IAAqBA,EAAS,MAClC9D,KAAK6M,OAASA,EACd7M,KAAK8D,OAASA,EACd,IAAIgK,EAAU9N,KAAK+N,SAAW,IAAIrD,IAClCoD,EAAQE,IAAIpB,IAAYxB,MAAOwB,GAAUhC,GAAIsC,GAAOe,KAAMd,GAAOlK,MAAOjD,KAAMkO,QAAQ,IACtFJ,EAAQE,IAAIxB,IAAYpB,MAAOoB,GAAU5B,GAAIsC,GAAOe,KAAMd,GAAOlK,MAAOjD,KAAMkO,QAAQ,IAyD9F,SAASC,EAA4BL,EAASM,GAC1C,GAAIA,EAEA,IADAA,EAAWrC,GAAkBqC,cACL7N,MAEpB,IAAK,IAAIY,EAAI,EAAGA,EAAIiN,EAAS9M,OAAQH,IACjCgN,EAA4BL,EAASM,EAASjN,QAGjD,CAAA,GAAwB,mBAAbiN,EAGZ,MAAMC,GAAY,+BAAgCD,GAEjD,IAAIA,GAAgC,iBAAbA,IAAyBA,EAASZ,QAiC1D,MAAMa,GAAY,sBAAuBD,GA/BzC,IAAIhD,EAAQW,GAAkBqC,EAASZ,SACnCc,EA/ChB,SAASC,EAAgBH,GACrB,IAAIH,EA8IR,SAASO,EAAYJ,GACjB,IAAIH,EAAOd,GACPsB,EAAeL,EAASH,KAC5B,GAAIQ,GAAgBA,EAAanN,OAAQ,CACrC2M,KACA,IAAK,IAAI9M,EAAI,EAAGA,EAAIsN,EAAanN,OAAQH,IAAK,CAC1C,IAAIiE,EAAU,EAEd,IADIgG,EAAQW,GAAkB0C,EAAatN,eACtBZ,MACjB,IAAK,IAAImO,EAAI,EAAGC,EAAcvD,EAAOsD,EAAIC,EAAYrN,OAAQoN,IAAK,CAC9D,IAAIlH,EAAamH,EAAYD,GACzBlH,aAAsByE,IAAYzE,GAAcyE,GAChD7G,GAAoB,EAEfoC,aAAsB2E,IAAY3E,GAAc2E,GACrD/G,IAAoB,EAEfoC,aAAsB0E,IAAQ1E,GAAc0E,GACjD9G,IAAoB,EAGpBgG,EADK5D,aAAsBwE,GACnBxE,EAAW4D,MAGXW,GAAkBvE,GAItCyG,EAAK3K,MAAO8H,MAAOA,EAAOhG,QAASA,UAGtC,GAAIgJ,EAASQ,YAAa,CAC3B,IAAIxD,EACJ6C,IAAU7C,MADNA,EAAQW,GAAkBqC,EAASQ,aACfxJ,QAAS,SAEhC,KAAKqJ,GAAkBlB,MAAaa,GAErC,MAAMC,GAAY,kBAAqBD,GAE3C,OAAOH,EArLIO,CAAYJ,GACnBxD,EAAKsC,GACLjK,EAAQkK,GACRe,GAAS,EACTV,EAAUzB,GAAkBqC,EAASZ,SACzC,GAAID,MAAaa,EAEbnL,EAAQmL,EAASV,cAEhB,GAAIU,EAASS,WACdjE,EAAKwD,EAASS,gBAEb,GAAIT,EAASQ,kBACb,GAAIR,EAASU,SACdZ,GAAS,EACTtD,EAAKmB,GAAkBqC,EAASU,cAE/B,CAAA,GAAsB,mBAAXtB,EAKZ,MAAMa,GAAY,sGAAuGD,GAJzHF,GAAS,EACTtD,EAAK4C,EAKT,OAASS,KAAMA,EAAMrD,GAAIA,EAAIsD,OAAQA,EAAQjL,MAAOA,GAsBrBsL,CAAgBH,GACvC,IAAuB,IAAnBA,EAASW,MAAgB,CAEzB,IAAIC,EAAgBlB,EAAQpB,IAAItB,GAChC,GAAI4D,GACA,GAAIA,EAAcpE,KAAOyC,GACrB,MAAM4B,GAAsB7D,QAKhC0C,EAAQE,IAAI5C,EAAO4D,GACf5D,MAAOgD,EAASZ,QAChBS,QACAC,QAAQ,EACRtD,GAAIyC,GACJpK,MAAOkK,KAKf6B,EAAcf,KAAK3K,MAAO8H,MAD1BA,EAAQgD,EACgChJ,QAAS,IAErD,IAAI8J,EAASpB,EAAQpB,IAAItB,GACzB,GAAI8D,GAAUA,EAAOtE,IAAMyC,GACvB,MAAM4B,GAAsB7D,GAEhC0C,EAAQE,IAAI5C,EAAOkD,IApGvBH,CAA4BL,EAASzI,GAwBzC,OAtBA0H,EAAelM,UAAU6L,IAAM,SAAUtB,EAAOuB,EAAewC,QAC7C,IAAVA,IAAoBA,EAAQ,GAChC,IAAID,EAASlP,KAAK+N,SAASrB,IAAItB,GAC/B,IACI,OAqGZ,SAASgE,EAAgBhE,EAAO8D,EAAQpB,EAASjB,EAAQF,EAAewC,GACpE,IACI,OAgBR,SAASE,EAAajE,EAAO8D,EAAQpB,EAASjB,EAAQF,EAAewC,GACjE,IAAIzI,EACAzD,EACJ,IAAIiM,GAAoB,EAARC,EAoCG,EAARA,IACPlM,EAAQ4J,EAAOH,IAAItB,EAAOuB,EAAe,QArCF,CAIvC,IADA1J,EAAQiM,EAAOjM,QACFmK,GACT,MAAMxJ,MAAMiK,GAAc,uBAEzB,GAAI5K,IAAUkK,GAAO,CACtB+B,EAAOjM,MAAQmK,GACf,IACIc,EAASgB,EAAOhB,OAChBtD,EAAKsE,EAAOtE,GACZ0E,EAAaJ,EAAOjB,KACpBA,EAAOd,GACX,GAAImC,EAAWhO,OAAQ,CACnB2M,KACA,IAAK,IAAI9M,EAAI,EAAGA,EAAImO,EAAWhO,OAAQH,IAAK,CACxC,IAAIoO,EAAYD,EAAWnO,GACvBiE,EAAUmK,EAAUnK,QACpBoK,EAAwB,EAAVpK,EAA8B0I,EAAQpB,IAAI6C,EAAUnE,YAASlG,EAC/E+I,EAAK3K,KAAK8L,EAEVG,EAAUnE,MAGVoE,EAEA1B,EAGC0B,GAA2B,EAAVpK,EAAiDyH,EAAhBc,GAAkC,EAAVvI,EAA6B,KAAOwH,GAASL,mBAAoB,KAGpJ2C,EAAOjM,MAAQA,EAAQiL,EAAS,KAAMxH,EAAKkE,GAAI9D,KAAKtF,MAAMkF,EAAIlD,QAAU,GAASyK,KAAYrD,EAAGpJ,WAxBtF0D,EAwBiG+I,IAMnH,OAAOhL,EA1DIoM,CAAajE,EAAO8D,EAAQpB,EAASjB,EAAQF,EAAewC,GAEvE,MAAO/L,GAWH,MATMA,aAAaQ,QACfR,EAAI,IAAIQ,MAAMR,KAEPA,EAAoB,gBAAIA,EAAoB,qBAClD6E,QAAQmD,GACT8D,GAAUA,EAAOjM,OAASmK,KAE1B8B,EAAOjM,MAAQkK,IAEb/J,GApHKgM,CAAgBhE,EAAO8D,EAAQlP,KAAK+N,SAAU/N,KAAK6M,OAAQF,EAAewC,GAErF,MAAO/L,GACH,IAAIqM,EAAYrM,EAAoB,gBAOpC,MANIgI,EAAMiB,KACNoD,EAAUxH,QAAQmD,EAAMiB,KAE5BjJ,EAAEsM,QAAUC,GAAY,KAAOvM,EAAEsM,QAASD,EAAWzP,KAAK8D,QAC1DV,EAAe,YAAIqM,EACnBrM,EAAoB,gBAAI,KAClBA,IAGd2J,EAAelM,UAAUgF,SAAW,WAChC,IAAI+J,KAEJ,OAF2B5P,KAAK+N,SACxB8B,QAAQ,SAAUC,EAAG1E,GAAS,OAAOwE,EAAOtM,KAAK6H,GAAUC,MAC5D,kBAAoBwE,EAAOtE,KAAK,MAAQ,KAE5CyB,EAjCwB,GA8DnC,SAASkC,GAAsB7D,GAC3B,OAAOiD,GAAY,mDAAoDjD,GA4J3E,SAASuE,GAAYhG,EAAMoG,EAAKjM,QACb,IAAXA,IAAqBA,EAAS,MAClC6F,EAAOA,GAA2B,OAAnBA,EAAKqG,OAAO,IAAerG,EAAKqG,OAAO,IAAMnC,GAAclE,EAAKsG,OAAO,GAAKtG,EAC3F,IAAIuG,EAAU/E,GAAU4E,GACxB,GAAIA,aAAexP,MACf2P,EAAUH,EAAI1E,IAAIF,IAAWG,KAAK,aAEjC,GAAmB,iBAARyE,EAAkB,CAC9B,IAAII,KACJ,IAAK,IAAIvO,KAAOmO,EACZ,GAAIA,EAAItP,eAAemB,GAAM,CACzB,IAAIqB,EAAQ8M,EAAInO,GAChBuO,EAAM7M,KAAK1B,EAAM,KAAwB,iBAAVqB,EAAqBmN,KAAKjF,UAAUlI,GAASkI,GAAUlI,KAG9FiN,EAAU,IAAMC,EAAM7E,KAAK,MAAQ,IAEvC,MAAO,uBAAyBxH,EAAS,IAAMA,EAAS,IAAM,IAAM,IAAMoM,EAAU,MAAQvG,EAAK0G,QAAQzC,GAAU,QAEvH,SAASS,GAAY1E,EAAMoG,GACvB,OAAO,IAAInM,MAAM+L,GAAYhG,EAAMoG,IAQvC,IAAIO,QAAmBpL,EACvB,SAASqL,GAAmBC,GACxB,IAAIC,EAASH,GAEb,OADAA,GAAmBE,EACZC,EAEX,SAASxD,GAAO7B,EAAO+D,GAEnB,QADc,IAAVA,IAAoBA,EAAQ,QACPjK,IAArBoL,GACA,MAAM,IAAI1M,MAAM,qDAEf,GAAyB,OAArB0M,GAA2B,CAChC,IAAII,EAAgBnL,EAAiB6F,GACrC,GAAIsF,GAA6C,QAA5BA,EAAczL,WAC/B,YAA+BC,IAAxBwL,EAAczN,MAAsByN,EAAczN,MAAQyN,EAAcrR,UAC3EqR,EAAczN,MAEtB,GAAY,EAARkM,EACA,OAAO,KACX,MAAM,IAAIvL,MAAM,wBAA0BuH,GAAUC,GAAS,KAG7D,OAAOkF,GAAiB5D,IAAItB,EAAe,EAAR+D,EAA2B,UAAOjK,EAAWiK,GAGxF,SAASwB,GAAWC,GAEhB,IADA,IAAIjK,KACKxF,EAAI,EAAGA,EAAIyP,EAAMtP,OAAQH,IAAK,CACnC,IAAI0P,EAAMD,EAAMzP,GAChB,GAAIZ,MAAMuM,QAAQ+D,GAAM,CACpB,GAAmB,IAAfA,EAAIvP,OACJ,MAAM,IAAIsC,MAAM,wCAIpB,IAFA,IAAI4B,OAAON,EACPiK,EAAQ,EACHT,EAAI,EAAGA,EAAImC,EAAIvP,OAAQoN,IAAK,CACjC,IAAI1G,EAAO6I,EAAInC,GACX1G,aAAgBiE,IAAoC,aAAxBjE,EAAKpC,eACjCuJ,GAAS,EAEJnH,aAAgBmE,IAAoC,aAAxBnE,EAAKpC,eACtCuJ,GAAS,EAEJnH,aAAgBkE,IAAgC,SAAxBlE,EAAKpC,eAClCuJ,GAAS,EAGT3J,EADKwC,aAAgBgE,GACdhE,EAAKoD,MAGLpD,EAGfrB,EAAKrD,KAAK2J,GAAOzH,EAAM2J,SAGvBxI,EAAKrD,KAAK2J,GAAO4D,IAGzB,OAAOlK;;;;;;;;;;;;;;;AAoEX,IAAImK,MACAC,MAKAC,GAAmB,EAgBvB,SAASC,GAAgBC,GACrB,IAAI1L,EAAO0L,EAAoB1L,KAC3B2L,EAAYD,EAAoBE,MAChCC,EAAiBH,EAAoBI,WACrCC,KACAC,EAAgBN,EAAoBM,eAAiBlS,EAAQ4J,kBAAkBuI,SAC/EC,EAASR,EAAoBQ,QAAUX,GACvCY,EAAaT,EAAoBS,YAAc,KAC/CjJ,EAAOwI,EAAoBxI,SAC3BiJ,IACAjJ,EAAKiJ,WAAaA,GAEtB,IAAIC,GACApM,KAAMA,EACNqM,SAAU,KACVC,OAAQZ,EAAoBY,OAC5BC,KAAMb,EAAoBa,KAC1BC,SAAUd,EAAoBc,UAAY,EAC1C3S,QAAS6R,EAAoB7R,QAC7B4S,SAAUf,EAAoBe,UAAY,KAC1CC,aAAchB,EAAoBgB,cAAgB,KAClDC,eAAgBjB,EAAoBiB,gBAAkB,KACtDC,sBAAuBlB,EAAoBkB,uBAAyB,KACpEC,WAAYnB,EAAoBmB,YAAc,KAC9CC,OAAQC,GAAarB,EAAoBoB,OAAQf,GACjDA,eAAgBA,EAChBiB,QAASD,GAAarB,EAAoBsB,SAC1CC,SAAUvB,EAAoBuB,UAAY,KAC1CC,OAAQlN,EAAK3E,UAAU8R,UAAY,KACnCC,QAASpN,EAAK3E,UAAUgS,WAAa,KACrCC,iBAAkBtN,EAAK3E,UAAUkS,oBAAsB,KACvDC,oBAAqBxN,EAAK3E,UAAUoS,uBAAyB,KAC7DC,cAAe1N,EAAK3E,UAAUsS,iBAAmB,KACjDC,iBAAkB5N,EAAK3E,UAAUwS,oBAAsB,KACvDC,UAAW9N,EAAK3E,UAAU0S,aAAe,KACzCC,OAAQtC,EAAoBuC,kBAAoBnU,EAAQ4I,wBAAwBwL,OAChFC,cAAetC,EACX,WAAc,OAAkC,mBAAnBA,EAAgCA,IAAmBA,GAC3EhG,IAAIuI,KACT,KACJC,SAAU1C,EACN,WAAc,OAA6B,mBAAdA,EAA2BA,IAAcA,GAAW9F,IAAIyI,KACrF,KACJC,UAAW7C,EAAoB6C,UAC/BC,UAAW9C,EAAoB8C,WAAa,KAC5CC,SAAU/C,EAAoB+C,UAAY,KAC1CvL,KAAMA,EAGN8I,cAAeA,EACfnM,UAAW0L,GACXmD,cAAenD,GACfoD,GAAI,IAAMnD,KAAoBU,OAAQA,GAEtC0C,EAAUlD,EAAoB+C,SAElC,OADAG,GAAWA,EAAQvE,QAAQ,SAAUjF,GAAM,OAAOA,EAAGgH,KAC9CA,EAEX,SAASgC,GAAoBpO,GAKzB,OAJU6O,GAAgB7O,IAAS8O,GAAgB9O,GAMvD,SAASsO,GAAetO,GAKpB,OAJU+O,GAAW/O,GAMzB,SAASgP,GAAe5C,GASpB,OAPIpM,KAAMoM,EAAIpM,KACViP,UAAW7C,EAAI6C,WAAa1D,GAC5B2D,aAAc9C,EAAI8C,cAAgB3D,GAClCzL,QAASsM,EAAItM,SAAWyL,GACxBzR,QAASsS,EAAItS,SAAWyR,GACxB4D,wBAAyB,MAkDjC,SAASpC,GAAaxC,EAAK6E,GACvB,GAAW,MAAP7E,EACA,OAAOe,GACX,IAAI+D,KACJ,IAAK,IAAIC,KAAe/E,EACpB,GAAIA,EAAItP,eAAeqU,GAAc,CACjC,IAAIC,EAAahF,EAAI+E,GACjBE,EAAeD,EACfxU,MAAMuM,QAAQiI,KACdC,EAAeD,EAAW,GAC1BA,EAAaA,EAAW,IAE5BF,EAAUE,GAAcD,EACpBF,IACCA,EAAUI,GAAgBF,GAIvC,OAAOD,EAcX,SAASI,GAAWC,GAChB,IAAI3D,KACJ,OACIe,OAAQC,GAAa2C,EAAe5C,OAAQf,GAC5CA,eAAgBA,EAChBiB,QAASD,GAAa2C,EAAe1C,UAiB7C,IAAI2C,GAAkBlE,GAetB,SAASmE,GAAWC,GAChB,OACInP,KAAMmP,EAAQnP,KACd7G,QAASgW,EAAQhW,QACjBiW,MAAuB,IAAjBD,EAAQC,KACdhC,UAAW+B,EAAQ7P,KAAK3E,UAAU0S,aAAe,MAQzD,SAASc,GAAgB7O,GACrB,OAAOA,EAAKzB,IAAqB,KAErC,SAASuQ,GAAgB9O,GACrB,OAAOA,EAAKvB,IAAqB,KAErC,SAASsQ,GAAW/O,GAChB,OAAOA,EAAKjB,IAAgB,KAEhC,SAASgR,GAAe/P,GACpB,OAAOA,EAAKf,IAAkB;;;;;;;;;;;;;;;AA6DlC,IAAI+Q,GAAgB,GAIhBC,GAAQ,EACRC,GAAS,EACTC,GAAO,EACPC,GAAU,EACVC,GAAQ,EACRC,GAAY,EACZC,GAAgB,EAChBC,GAAa,EACbC,GAAU,EACVC,GAAU,EACVC,GAAa,GACbC,GAAW,GACXC,GAAY,GACZC,GAAO,GACPC,GAAkB,GAClBC,GAAkB,GAClBC,GAAmB,GAYnBC,GAAwB,gBAkB5B,SAASC,GAAWhV,GAChB,IAAIiV,EAAUC,GAAgBlV,GAC9B,GAAIiV,GAGA,GAAIrW,MAAMuM,QAAQ8J,GAAU,CACxB,IAAIE,EAAYF,EACZG,OAAY,EACZzN,OAAYpE,EACZoM,OAAapM,EACjB,GAwIZ,SAAS8R,EAAoBC,GACzB,OAAOA,GAAYA,EAASrW,aAAeqW,EAASrW,YAAYoD,eAzIpDgT,CAAoBrV,GAAS,CAE7B,IAAkB,IADlBoV,EAAYG,GAAiBJ,EAAWnV,IAEpC,MAAM,IAAIiC,MAAM,2DAEpB0F,EAAY3H,OAEX,GAoIjB,SAASwV,EAAoBF,GACzB,OAAOA,GAAYA,EAASrW,aAAeqW,EAASrW,YAAYsD,eArI/CiT,CAAoBxV,GAAS,CAElC,IAAkB,IADlBoV,EA+LhB,SAASK,EAAiBN,EAAWO,GAMjC,IAAIC,EAAuBR,EAAUd,IACjCuB,EAAQT,EAAUrB,IAAO+B,WAC7B,GAA4B,MAAxBF,EACA,KAAOC,GAAO,CAGV,IAFA,IAAIE,EAAsBC,GAAuBH,GAC7CI,EAAoBC,GAAqBL,EAAOE,GAC3CtW,EAAIsW,EAAqBtW,EAAIwW,EAAmBxW,IACrD,GAAImW,EAAqBnW,KAAOkW,EAC5B,OAAOE,EAAM7P,MAGrB6P,EAAQM,GAAoBN,GAGpC,OAAQ,EAnNgBH,CAAiBN,EAAWnV,IAEpC,MAAM,IAAIiC,MAAM,2DAEpB0N,EAqOhB,SAASwG,EAAmBf,EAAWD,GACnC,IAAIQ,EAAuBR,EAAUd,IACrC,GAA4B,MAAxBsB,EAA8B,CAC9B,IAAIC,EAAQT,EAAUrB,IAAO/M,KAAKqO,GAC9BgB,EAAsBL,GAAuBH,GAC7CS,EAAoBJ,GAAqBL,EAAOQ,GAGpD,OAFkB,KAAdR,EAAMpI,OACN4I,IACGT,EAAqBhK,MAAMyK,EAAqBC,GAE3D,OAAO,KA/OkBF,CAAmBf,EAAWD,QAI3C,IAAkB,IADlBC,EAAYkB,GAAqBnB,EAAWnV,IAExC,OAAO,KAOf,IACIuW,EAAcrB,IADdsB,EAAQC,GAAqBtB,EAAWC,IACJsB,QACpCnI,EAAWgI,IAAgB3X,MAAMuM,QAAQoL,GACzCA,EACAI,GAAexB,EAAWC,EAAWoB,EAAME,QAO/C,GALI/O,QAAmCpE,IAAtBgL,EAAQ5G,YACrB4G,EAAQ5G,UAAYA,EACpBiP,GAAgBrI,EAAQ5G,UAAW4G,IAGnCoB,QAAqCpM,IAAvBgL,EAAQoB,WAA0B,CAChDpB,EAAQoB,WAAaA,EACrB,IAAK,IAAInQ,EAAI,EAAGA,EAAImQ,EAAWhQ,OAAQH,IACnCoX,GAAgBjH,EAAWnQ,GAAI+O,GAGvCqI,GAAgBrI,EAAQmI,OAAQnI,GAChC0G,EAAU1G,QASd,IALA,IAAIsI,EAAW7W,EAIX8W,EAAWD,EACRC,EAAWA,EAASC,YAAY,CACnC,IAAIC,EAAgB9B,GAAgB4B,GACpC,GAAIE,EAAe,CAUf,GATI7B,OAAY,IAEZA,EADAvW,MAAMuM,QAAQ6L,GACFA,EAGAA,EAAc7B,WAK1B,OAAO,KAEX,IAAIpP,EAAQuQ,GAAqBnB,EAAW0B,GAC5C,GAAI9Q,GAAS,EAAG,CACZ,IAAIyQ,EACAjI,EAAUoI,GAAexB,EAAWpP,GADpCyQ,EAAQC,GAAqBtB,EAAWpP,IACS2Q,QACrDE,GAAgBJ,EAAME,OAAQnI,GAC9B0G,EAAU1G,EACV,QAKhB,OAAO0G,GAAW,KAKtB,SAAS0B,GAAexB,EAAW8B,EAAYP,GAC3C,OACIvB,UAAWA,EACXC,UAAW6B,EAAYP,OAAQA,EAC/B/O,eAAWpE,EACXoM,gBAAYpM,EACZ2T,eAAW3T,GAUnB,SAAS4T,GAAyBC,GAC9B,IACIZ,EADArB,EAAYD,GAAgBkC,GAEhC,GAAIxY,MAAMuM,QAAQgK,GAAY,CAC1B,IAAI8B,EAAa1B,GAAiBJ,EAAWiC,IAEzC7I,EAAUoI,GAAexB,EAAW8B,GADxCT,EAAQa,GAAiBlC,EAAU8B,KACuBP,SAClD/O,UAAYyP,EACpBR,GAAgBQ,EAAmB7I,GACnCqI,GAAgBrI,EAAQmI,OAAQnI,OAE/B,CACD,IAAIA,EACJiI,EAAQa,IADJ9I,EAAU4G,GACmBA,UAAU5G,EAAQ6G,YAEvD,OAAOoB,EAMX,SAASI,GAAgB5W,EAAQ+G,GAC7B/G,EAAO+U,IAAyBhO,EAMpC,SAASmO,GAAgBlV,GACrB,OAAOA,EAAO+U,IAElB,SAASuC,GAAqBtX,GAC1B,IAAIsB,EAAQ4T,GAAgBlV,GAC5B,OAAIsB,EACO1C,MAAMuM,QAAQ7J,GAASA,EAAQA,EAAM6T,UAEzC,KAWX,SAASmB,GAAqBnB,EAAWuB,GAErC,IADA,IAAId,EAAQT,EAAUrB,IAAO+B,WACtBD,GAAO,CAEV,GADYa,GAAqBtB,EAAWS,EAAM7P,OACxC2Q,SAAWA,EACjB,OAAOd,EAAM7P,MAEjB6P,EAAQM,GAAoBN,GAEhC,OAAQ,EAKZ,SAASM,GAAoBN,GACzB,OAAIA,EAAM2B,MACC3B,EAAM2B,MAER3B,EAAMvU,KACJuU,EAAMvU,KAERuU,EAAM1K,QACJ0K,EAAM1K,OAAO7J,MAEjB,KAKX,SAASkU,GAAiBJ,EAAWiC,GACjC,IAAII,EAAmBrC,EAAUrB,IAAO2D,WACxC,GAAID,EACA,IAAK,IAAIhY,EAAI,EAAGA,EAAIgY,EAAiB7X,OAAQH,IAAK,CAC9C,IAAIkY,EAAwBF,EAAiBhY,GAE7C,GADgB6X,GAAiBlC,EAAUuC,IAAwB3Q,KACrDwN,MAAa6C,EACvB,OAAOM,OAOf,GAFevC,EAAUtB,IACI9M,KAAKwN,MACZ6C,EAGlB,OAAOvD,GAGf,OAAQ,EAqCZ,SAAS4C,GAAqBtB,EAAWwC,GACrC,IAAIrW,EAAQ6T,EAAUwC,GACtB,OAAOrW,EAAQ+V,GAAiB/V,GAAS,KAoB7C,SAASyU,GAAuBH,GAI5B,OAAOA,EAAMpI,OAAS,GAE1B,SAASyI,GAAqBL,EAAOgC,GAIjC,IAAIC,EAAsB,KAAdjC,EAAMpI,MAClB,OAAOqK,EAASD,EAAaC,GAAU,EAE3C,SAASR,GAAiB/V,GACtB,OAAQ1C,MAAMuM,QAAQ7J,GAASA,EAAM,GAAKA;;;;;;;OAsB9C,SAASwW,GAAe/R,EAAOgL,EAAQE,EAAS8G,GAGxChH,IACCgH,EAAMC,YAAcD,EAAMC,eAAiBrW,KAAKoE,EAAOgL,GAExDE,KACC8G,EAAMC,YAAcD,EAAMC,eAAiBrW,KAAKoE,EAAOkL,IACvD8G,EAAME,aAAeF,EAAME,gBAAkBtW,KAAKoE,EAAOkL,IAOlE,SAASiH,GAAoB1K,EAAOuK,GAChC,GAAIA,EAAMI,kBAON,IANA,IAAIC,EAAQ5K,GAAS,GAEjB6K,EAAMD,GADU,KAAR5K,GAKHhO,EAAI4Y,EAAO5Y,EAAI6Y,EAAK7Y,IAAK,CAC9B,IAAIyQ,EAAM8H,EAAMpI,WAAWnQ,GAC3B8Y,GAAkBrI,EAAK8H,EAAOvY,GAC9B+Y,GAAetI,EAAK8H,EAAOvY,GAC3BgZ,GAAkBvI,EAAK8H,EAAOvY,IAK1C,SAAS8Y,GAAkBrI,EAAK8H,EAAOvY,GAC/ByQ,EAAIkB,mBACH4G,EAAMU,eAAiBV,EAAMU,kBAAoB9W,KAAKnC,EAAGyQ,EAAIkB,kBAE9DlB,EAAIoB,uBACH0G,EAAMU,eAAiBV,EAAMU,kBAAoB9W,KAAKnC,EAAGyQ,EAAIoB,sBAC7D0G,EAAMW,oBAAsBX,EAAMW,uBAAyB/W,KAAKnC,EAAGyQ,EAAIoB,sBAIhF,SAASkH,GAAetI,EAAK8H,EAAOvY,GAC5ByQ,EAAIsB,gBACHwG,EAAMY,YAAcZ,EAAMY,eAAiBhX,KAAKnC,EAAGyQ,EAAIsB,eAExDtB,EAAIwB,oBACHsG,EAAMY,YAAcZ,EAAMY,eAAiBhX,KAAKnC,EAAGyQ,EAAIwB,mBACvDsG,EAAMa,iBAAmBb,EAAMa,oBAAsBjX,KAAKnC,EAAGyQ,EAAIwB,mBAI1E,SAAS+G,GAAkBvI,EAAK8H,EAAOvY,GACd,MAAjByQ,EAAI0B,YACHoG,EAAMc,eAAiBd,EAAMc,kBAAoBlX,KAAKnC,EAAGyQ,EAAI0B,WAQtE,SAASmH,GAAiBC,EAAahB,EAAOiB,GACjB,GAArBD,EAAY7E,MACZ+E,GAAaF,EAAY1E,IAAa0D,EAAMC,UAAWD,EAAME,WAAYe,GACzED,EAAY7E,MAAU,IAQ9B,SAAS+E,GAAalS,EAAMmS,EAAUjB,EAAYe,GAC9C,IAAIG,EAAcH,EAAeE,EAAWjB,EACxCkB,GACAC,GAAUrS,EAAMoS,GAUxB,SAASC,GAAUrS,EAAMsS,GACrB,IAAK,IAAI7Z,EAAI,EAAGA,EAAI6Z,EAAI1Z,OAAQH,GAAK,EACjC6Z,EAAI7Z,EAAI,GAAGI,KAAKmH,EAAKsS,EAAI7Z,KASjC,SAAS8Z,GAA4B1D,GACjC,MAAM,IAAI3T,MAAM,+CAAiD2T,EAAM2D;;;;;;;;AA4B3E,IAuBIC,GAvBAC,GAAe,EAGfC,GAAQ,EACRC,GAAgB,EAShBC,GAA0B,cAgB9B,SAASC,GAAqBC,GAC1B,QAAUA,EAAe,QAN7B,SAAWN,GACPA,EAAoBA,EAA+B,UAAI,GAAK,YAC5DA,EAAoBA,EAA8B,SAAI,GAAK,WAF/D,CAGGA,KAAwBA,QAK3B,IAAIO,IACAC,eAAgB,SAAUC,EAAaC,GAAgB,OAAOC;;;;;;;;;;;;;;;;;;;;;;AAoDlE,SAASC,GAAa9Q,EAAG9K,GACrB,IAAI6b,EAAsBC,GAAmBhR,GACzCiR,EAAsBD,GAAmB9b,GAC7C,OAAI6b,GAAuBE,EAuE/B,SAASC,EAAkBlR,EAAG9K,EAAGic,GAG7B,IAFA,IAAIC,EAAYpR,EAAEX,OACdgS,EAAYnc,EAAEmK,SACL,CACT,IAAIiS,EAAQF,EAAUrZ,OAClBwZ,EAAQF,EAAUtZ,OACtB,GAAIuZ,EAAMrZ,MAAQsZ,EAAMtZ,KACpB,OAAO,EACX,GAAIqZ,EAAMrZ,MAAQsZ,EAAMtZ,KACpB,OAAO,EACX,IAAKkZ,EAAWG,EAAMtZ,MAAOuZ,EAAMvZ,OAC/B,OAAO,GAjFJkZ,CAAkBlR,EAAG9K,EAAG4b,MAK1BC,IAFW/Q,GAAmB,iBAANA,GAA+B,mBAANA,GAEZiR,IAD1B/b,GAAmB,iBAANA,GAA+B,mBAANA,IAK3C6K,GAAeC,EAAG9K,GAuBrC,IAAIsc,GAA8B,WAC9B,SAASA,EAAaxZ,GAClBjD,KAAK0c,QAAUzZ,EAWnB,OARAwZ,EAAaE,KAAO,SAAU1Z,GAAS,OAAO,IAAIwZ,EAAaxZ,IAK/DwZ,EAAaG,OAAS,SAAU3Z,GAAS,OAAOwZ,EAAaI,UAAU5Z,GAASA,EAAMyZ,QAAUzZ,GAEhGwZ,EAAaI,UAAY,SAAU5Z,GAAS,OAAOA,aAAiBwZ,GAC7DA,EAbsB,GAmB7BK,GAA8B,WAC9B,SAASA,EAAaC,EAAeC,EAAcC,GAC/Cjd,KAAK+c,cAAgBA,EACrB/c,KAAKgd,aAAeA,EACpBhd,KAAKid,YAAcA,EAMvB,OADAH,EAAajc,UAAUqc,cAAgB,WAAc,OAAOld,KAAKid,aAC1DH,EAVsB,GAYjC,SAASb,GAAmBlM,GACxB,QAAKoN,GAAWpN,KAETxP,MAAMuM,QAAQiD,MACdA,aAAerF,MACdJ,MAAuByF,GA8BnC,SAASoN,GAAWva,GAChB,OAAa,OAANA,IAA4B,mBAANA,GAAiC,iBAANA;;;;;;;OAuB5D,SAASwa,GAAYna,GACjB,MAAoB,mBAATA,EACAA,EAAMiD,MAAQjD,EACL,iBAATA,EACAA,EACE,MAATA,EACO,GACJ,GAAKA,EA2BhB,SAASoa,GAAa3V,EAAOsT,GAEzB,OAAOA,EAAItT,EAAQ8N,IAcvB,SAAS8H,GAAS/F,EAAOgG,GACrB,OAAOvE,GAAiBuE,EAAShG,EAAM7P,QAE3C,SAAS8V,GAAmBjG,GACxB,OAAuD,IAAjC,MAAdA,EAAMpI,OAWlB,SAASsO,GAAY9b,GAGjB,IADA,IAAImV,EAAYvW,MAAMuM,QAAQnL,GAAUA,EAASsX,GAAqBtX,GAC/DmV,KAAkC,GAAnBA,EAAUjB,MAC5BiB,EAAYA,EAAUpB,IAE1B,OAAOoB;;;;;;;;AAcX,SAAS4G,GAAenG,EAAOmD,GAC3B,OAAuB,MAAhBnD,EAAM1K,OAAiB8Q,GAAmBjD,GAC7C4C,GAAS/F,EAAM1K,OAAQ6N,GAM/B,SAASiD,GAAmBjD,GACxB,IAAIkD,EAAYlD,EAAY5E,IAC5B,OAAO8H,GAAgC,IAAnBA,EAAUpY,KAC1B8X,GAASM,EAAWlD,EAAYhF,KAChC,KAER,SAASmI,GAAiBtG,EAAOuG,GAC7B,IAAqB,IAAjBvG,EAAM7P,MAAc,CAGpB,IAAIqW,EAAqBD,EAAavH,IACtC,OAAOwH,GAAsB,EACzBD,EAAapI,IAAQqI,GAAoBC,sBACzC,KAIJ,OAAON,GAAenG,EAAOuG,EAAapI,KAOlD,SAASuI,GAAyBC,EAAWC,GACzC,IAAIC,EAAYP,GAAiBK,EAAWC,GAC5C,OAAOC,EAAYA,EAAU1V,KAAK4S,IAAiB,KASvD,IAAI+C,MAaJ,SAASC,GAAcC,EAAYC,EAAQ/C,EAAUgD,EAAkBC,GAKnE,IAJA,IAAIC,EAAYJ,EAAW9I,IAAOmJ,KAC9BC,GAAuB,EACvBnE,EAAc6D,EACdhH,EAAQoH,EAAUzF,MACf3B,GAAO,CACV,IAAIuH,EAAY,KACZrG,EAAWgG,EAAmBA,EAAiBpG,OAAS,KAC5D,GAAmB,IAAfd,EAAM/R,KAA0B,CAChC,IAAIuZ,EAAczB,GAAS/F,EAAOmD,GAClCsE,GAAkBR,EAAQ/C,EAAUhD,EAAUsG,EAAY1G,OAAQqG,GAC9DK,EAAYf,uBACZgB,GAAkBR,EAAQ/C,EAAUhD,EAAUsG,EAAYf,sBAAsB3F,OAAQqG,QAG3F,GAAmB,IAAfnH,EAAM/R,KAA4B,CACvC,IAAIyZ,EAAiBvE,EAAYnD,EAAM7P,OACvCsX,GAAkBR,EAAQ/C,EAAUhD,EAAUwG,EAAe5G,OAAQqG,GACrE,IAAIQ,EAAqBD,EAAejB,sBACpCiB,EAAejB,sBAAsBtV,KACrCuW,EAAevW,KACf+V,IACAS,EAAmB5D,IAAiBmD,GAEpCS,EAAmB7D,IAAO/Z,SAE1Bwd,GADApE,EAAcwE,EAAmB7D,IAAO,IAChB5F,IAAOmJ,KAG/BF,EAAaO,EAAejB,sBACxBiB,EAAejB,sBAAsB3F,OACrC4G,EAAe5G,aAGtB,GAAmB,IAAfd,EAAM/R,KAA6B,CACxC,IAAI2Z,EAAgBC,GAAkB1E,GAElC2E,EADgBF,EAAcrJ,IACTwJ,WAAW/H,EAAM+H,YAG1CjB,KAAsBQ,GAAuBtH,EAC7C8G,KAAsBQ,GAAuBnE,EACzC2E,IAEAP,GADApE,EAAcyE,EAAczJ,KACJD,IAAO/M,KAAK2W,EAAK3X,aAK7CoX,EAAYvH,EAAM2B,MAEtB,GAAkB,OAAd4F,EAcA,IAZmB,OAAfvH,EAAMvU,MAAgC,KAAduU,EAAMpI,QAC9BuL,EAAc2D,GAAoBQ,KAClCtH,EAAQ8G,GAAoBQ,MAEhCC,EAAYvH,EAAMvU,MAQV8b,GAAW,CAGf,GAAc,QADdvH,EAAQA,EAAM1K,QAAU6N,EAAYjF,IAAOmJ,OACrBrH,IAAUoH,EAC5B,OAAO,KAEQ,IAAfpH,EAAM/R,OAENkZ,GADAhE,EAAcA,EAAYhF,KACD6B,EAAM7P,OAAO2Q,QAItCyG,EAFe,IAAfvH,EAAM/R,MAAyBkV,EAAY/E,KAC3C+E,EAAcA,EAAY/E,KACFF,IAAOmJ,KAGnBrH,EAAMvU,KAI9BuU,EAAQuH,GAShB,SAASM,GAAkBtI,GAEvB,IADA,IAAI6H,EAAY7H,EAAUhB,IACnB6I,GAAgC,IAAnBA,EAAUnZ,MAG1BmZ,GADA7H,EAAYA,EAAUpB,KACAI,IAE1B,OAAOgB,EAMX,SAASkI,GAAkBR,EAAQ/C,EAAU5O,EAAQ+R,EAAMF,GACxC,IAAXF,EACAhD,GAAqBC,GACjBA,EAAS8D,aAAa1S,EAAQ+R,EAAMF,GACpC7R,EAAO0S,aAAaX,EAAMF,GAAY,GAE1B,IAAXF,EACLhD,GAAqBC,GACjBA,EAAS+D,YAAY3S,EAAQ+R,GAC7B/R,EAAO2S,YAAYZ,GAEP,IAAXJ,GAEL/C,EAASgE,YAAYb,GAG7B,SAASc,GAAezc,EAAOwY,GAC3B,OAAOD,GAAqBC,GAAYA,EAASkE,WAAWvC,GAAYna,IACpEwY,EAASiE,eAAetC,GAAYna,IAE5C,SAAS2c,GAA2BrB,EAAYsB,EAAYnB,GACxD,IAAIhG,EAAauF,GAAyBM,EAAW9I,IAAOmJ,KAAML,GACrD7F,GAAaA,EAAWL,QAIjCiG,GAAcC,EAAYsB,EAAa,EAAiB,EADzCtB,EAAWnI,IACwDsC,EAAYgG,GA+DtG,SAASoB,GAAWC,EAAOC,EAAYC,EAAYvY,EAAOwY,GACtD,IAAIC,EAAQH,EAAW3E,IACnB3T,EAAQ,IAERyY,EAAMzY,EAAQ,GAAGiO,IAAQoK,GAEzBrY,EAAQyY,EAAM7e,QACdye,EAAMpK,IAAQwK,EAAMzY,GACpByY,EAAMC,OAAO1Y,EAAO,EAAGqY,KAGvBI,EAAM7c,KAAKyc,GACXA,EAAMpK,IAAQ,MAIduK,GAAkB,IAClBH,EAAMxJ,IAAmB2J,EACzBH,EAAMrK,IAAUuK,GAGhBF,EAAMnK,KACNmK,EAAMnK,IAASkK,WAAWpY,GAG9BqY,EAAMlK,KAAU,EAYpB,SAASwK,GAAWL,EAAYM,EAAaC,GACzC,IAAIJ,EAAQH,EAAW3E,IACnBmF,EAAeL,EAAMG,GACrBA,EAAc,IACdH,EAAMG,EAAc,GAAG3K,IAAQ6K,EAAa7K,KAEhDwK,EAAMC,OAAOE,EAAa,GACrBC,GACDX,GAA2BY,GAAc,GAEzCA,EAAa5K,KACb4K,EAAa5K,IAAS6K,aAE1BD,EAAajK,KAAoB,EACjCiK,EAAa9K,IAAU,KAEvB8K,EAAa3K,MAAU,EAS3B,SAAS4K,GAAWT,EAAYU,EAAYJ,GAExCK,GADWX,EAAW3E,IAAOiF,IAE7BD,GAAWL,EAAYM,IAAeI,EAAWH,UAGrD,SAASK,GAAcC,GACnB,IAAoC,IAAhCA,EAASpL,IAAOqL,WAChB,OAAO,KACX,IAAIC,EAAWF,EAASA,EAASpL,IAAOqL,YACxC,OAAOC,EAASrY,KAAOqY,EAASrY,KAAOqY,EAAS/C,sBAAsBtV,KAQ1E,SAASiY,GAAaxC,GAClB,IAAI1C,EAAW0C,EAAK/H,IAChBoF,GAAqBC,IAAaA,EAASgE,aAC3CnB,GAAcH,EAAM,EAAiB1C,GAlI7C,SAASuF,EAAgBC,GAErB,IAAoC,IAAhCA,EAASxL,IAAOqL,WAChB,OAAOI,GAAYD,GAGvB,IADA,IAAIE,EAAkBP,GAAcK,GAC7BE,GAAiB,CACpB,IAAIne,EAAO,KAaX,GAZIme,EAAgB7f,QAAUkU,GAEf2L,EACF1L,IAAOqL,YAAc,IAC1B9d,EAAO4d,GAFAO,IAMKA,EACF9F,IAAO/Z,SACjB0B,EAFYme,EAEK9F,IAAO,IAEpB,MAARrY,EAAc,CAGd,KAAOme,IAAoBA,EAAgBxL,KAASwL,IAAoBF,GACpEC,GAAYC,GACZA,EAAkBC,GAAeD,EAAiBF,GAEtDC,GAAYC,GAAmBF,GAC/Bje,EAAOme,GAAmBA,EAAgBxL,IAE9CwL,EAAkBne,GAsGtBge,CAAgB7C,GAEhBA,EAAKtI,KAAU,GAcnB,SAASuL,GAAeC,EAAOJ,GAC3B,IAAI1J,EACJ,OAAI8J,EAAM/f,QAAUkU,KAAkB+B,EAAQ8J,EAAMvL,MACjC,IAAfyB,EAAM/R,KAGCqY,GAAiBtG,EAAO8J,GAAO3Y,KAI/B2Y,EAAM3L,MAAYuL,EAAW,KAAOI,EAAM3L,IAQzD,SAASwL,GAAYC,GACjB,GAAIA,EAAgB1L,IAAQ,CACxB,IAAI0I,EAAOgD,GAYnB,SAASG,EAAgBT,GACrB,IAAIU,EAAUV,EAASpL,IAAO8L,QAC9B,GAAe,MAAXA,EAAiB,CACjB,IAAK,IAAIpgB,EAAI,EAAGA,EAAIogB,EAAQjgB,OAAS,EAAGH,GAAK,EACf,iBAAfogB,EAAQpgB,IAEF6X,GAAiB6H,EAASU,EAAQpgB,EAAI,KAAKkX,OAEjDmJ,oBAAoBD,EAAQpgB,GADpB0f,EAAS5K,IAASsL,EAAQpgB,EAAI,IACIogB,EAAQpgB,EAAI,IAC7DA,GAAK,GAEsB,iBAAfogB,EAAQpgB,IAGpBsgB,EADgBZ,EAAS5K,IAASsL,EAAQpgB,OAM1CogB,EAAQpgB,GAAGI,KADGsf,EAAS5K,IAASsL,EAAQpgB,EAAI,KAIpD0f,EAAS5K,IAAW,MAjCpBqL,CAAgBnD,GAqCxB,SAASuD,EAAkBvD,GACvB,IACI3D,EADAd,EAAQyE,EAAK1I,IAEJ,MAATiE,GAAwD,OAAtCc,EAAed,EAAMc,eACvCO,GAAUoD,EAAKnI,IAAawE,GAxC5BkH,CAAkBvD,GA4C1B,SAASwD,EAAsBd,GAC3B,IAAIe,EAAmBf,EAASpL,KAAUoL,EAASpL,IAAOmM,iBACtDA,GACA7G,GAAU8F,EAAUe,GA9CpBD,CAAsBxD,IAEE,IAApBA,EAAK1I,IAAOtB,IAAaqH,GAAqB2C,EAAK/H,MAEnD+H,EAAK/H,IAAUyL,WA6C3B,SAASC,GAAgBvK,EAAOmD,GAC5B,GAAIqH,GAAoBxK,EAAOmD,GAAc,CACzC,IAAIkD,EAAYlD,EAAY5E,IAC5B,OAAuB,MAAhByB,EAAM1K,QAAqC,IAAnB+Q,EAAUpY,KACrCyY,GAAyBL,EAAWlD,GACpCgD,GAAenG,EAAOmD,GAE9B,OAAO,KA0DX,SAASqH,GAAoBxK,EAAOmD,GAChC,IAAIsH,EAAczK,EACd1K,EAAS0K,EAAM1K,OAOnB,OANI0K,EAAM1K,QAAgC,IAAtB0K,EAAM1K,OAAOrH,OAE7BqH,GADAmV,EAAcC,GAA2B1K,IACpB1K,QAEV,OAAXA,IACAA,EAAS6N,EAAY5E,KACrBjJ,GAA0B,IAAhBA,EAAOrH,KAvCzB,SAAS0c,EAA2BC,EAAWhE,GAE3C,IAAIC,EAAYP,GAAiBsE,EAAWhE,GAC5C,OAAiB,MAAbC,GAAsD,MAAjCA,EAAU1V,KAAK4S,IAqC7B4G,CAA2BrV,EAAQ6N,GAlElD,SAAS0H,EAA8B7K,GAInC,OAAoB,MAAhBA,EAAM1K,UAGgB,IAAtB0K,EAAM1K,OAAOrH,MAAmD,KAArB+R,EAAM1K,OAAOsC,OA+DjDiT,CAA8BJ,GAQ7C,SAASK,GAAmB5G,EAAU5O,EAAQqM,EAAOwF,GAC7ClD,GAAqBC,GACrBA,EAAS8D,aAAa1S,EAAQqM,EAAOwF,GAGrC7R,EAAO0S,aAAarG,EAAOwF,GAAY,GAa/C,SAAS4D,GAAYC,EAASC,EAAY9H,GACtC,IAAI+H,EAAc/E,GAAe8E,EAAY9H,GACzCgI,EAAWD,EAAcA,EAAYpK,OAAS,KAClD,GAAgB,OAAZkK,GAAoBR,GAAoBS,EAAY9H,GAAc,CAClE,IAAIe,EAAWf,EAAYtE,IACvBuM,EAAcH,EAAW3V,QAAU6N,EAAY5E,IACnD,GAAyB,IAArB6M,EAAYnd,KAAuB,CACnC,IAAI4Y,EAAYP,GAAiB8E,EAAajI,GAC1CkI,EAAexE,EAAU1V,KAAK4S,IAC9B6E,EAAQ/B,EAAU1V,KAAK2S,IACvB3T,EAAQyY,EAAMzU,QAAQgP,GAC1B2H,GAAmB5G,EAAUmH,EAAavK,OAAQkK,EAASM,GAAqBnb,EAAOyY,EAAO/B,SAEpE,IAArBuE,EAAYnd,KAGjB6c,GAAmB5G,EADRqG,GADYG,GAA2BO,GACL9H,GACXrC,OAAQkK,EAASG,GAGnDlH,GAAqBC,GAAYA,EAAS6G,YAAYI,EAAUH,GAC5DG,EAASJ,YAAYC,GAE7B,OAAO,EAEX,OAAO,EAQX,SAASN,GAA2Ba,GAChC,KAA6B,MAAtBA,EAAYjW,QAA8C,IAA5BiW,EAAYjW,OAAOrH,MACpDsd,EAAcA,EAAYjW,OAE9B,OAAOiW,EAEX,SAASD,GAAqBnb,EAAOyY,EAAO/B,GACxC,GAAI1W,EAAQ,EAAIyY,EAAM7e,OAAQ,CAC1B,IAAI6c,EAAOgC,EAAMzY,EAAQ,GACrBya,EAAYhE,EAAKrI,IACrB,OAAOqM,EAAUjJ,MAAQoE,GAAS6E,EAAUjJ,MAAOiF,GAAM9F,OAAS+F,EAAU/F,OAG5E,OAAO+F,EAAU/F,OAWzB,SAASmH,GAAYjI,EAAO2B,EAAOwB,GAC/B,IAAIqI,EAAerF,GAAenG,EAAOmD,GAAarC,OACtD,GAAc,OAAVa,GAAkB6I,GAAoBxK,EAAOmD,GAAc,CAE3D,IAAIe,EAAWf,EAAYtE,IAG3B,OAFAoF,GAAqBC,GAAYA,EAAS+D,YAAYuD,EAAc7J,GAChE6J,EAAavD,YAAYtG,IACtB,EAEX,OAAO,EAYX,SAAS8J,GAAoBC,EAAgBC,EAAgBC,EAAiBzI,EAAa0I,GACvFd,GAAYW,EAAe5K,OAAQ8K,EAAiBzI,GAIpDnC,GAAgB0K,EAAe5K,OAAQ+K,GACvC,IAAIR,EAAed,GAAgBqB,EAAiBzI,GACpD,GAA4B,IAAxBwI,EAAe1d,KAA4B,CAM3C,IAAIwa,EAAaiD,EAAeva,KAChCsX,EAAW1E,IAAiBsH,EAE5B,IADA,IAAIzC,EAAQH,EAAW3E,IACdla,EAAI,EAAGA,EAAIgf,EAAM7e,OAAQH,IAC9Bye,GAA2BO,EAAMhf,IAAI,EAAM8hB,EAAe5K,aAG7D,GAA4B,IAAxB6K,EAAe1d,KAEpB,IADA,IAAI6d,EAAwBH,EAAehK,MACpCmK,GAEHL,GADuB1F,GAAS+F,EAAuBD,GACjBC,EAAuBF,EAAiBzI,EAAa0I,GAC3FC,EAAwBA,EAAsBrgB,KAGlDigB,EAAejF,wBACfiF,EAAejF,sBAAsBtV,KAAK4S,IAAiBsH,EAC3DN,GAAYW,EAAejF,sBAAsB3F,OAAQ8K,EAAiBzI;;;;;;;OA+BlF,SAAS4I,GAAuB/L,EAAO9O,GAQnC,IANA,IAtBwB8a,EAAkBC,EACtCC,EACAC,EACAC,EAmBAC,EAAO,EACPC,EAAYtM,EAAMuM,MAClBC,EAAsBF,EAAYA,EAAUnY,QAAQ,IAAuB,EAG3EsY,GAAqB,EAChB7iB,EAAI,EAAGA,EAAIsH,EAASnH,OAAQH,IAAK,CACtC,IAAI4J,EAAUtC,EAAStH,GACvB,GAAuB,iBAAZ4J,GAaX,IAAIiZ,EAEJ,GAAW,EAAPJ,GAEA,GADAA,EAAO,EAA2B,EAAPA,EACX,KAAZ7Y,GAAkBA,IAAYwM,EAAM2D,QAAS,CAC7C,GAAI+I,GAAWL,GACX,OAAO,EACXI,GAAqB,OAGxB,CACD,IACIE,EAAkBC,GADA,EAAPP,EAAuB,QAAU7Y,EACI8Y,GACpD,IAAyB,IAArBK,EAAwB,CACxB,GAAID,GAAWL,GACX,OAAO,EACXI,GAAqB,EACrB,SAEJ,IAEQI,EAFJC,EAA2B,EAAPT,EAAuB7Y,EAAUtC,IAAWtH,GACpE,GAA0B,KAAtBkjB,EAUA,GANID,EADAL,GAAuB,GAAKG,EAAkBH,EAC9B,GAIAF,EAAUK,EAAkB,GAErC,EAAPN,IAxEZH,GADoBF,EA0EYa,GAzEE9iB,OAElCqiB,GADAD,EAAaH,EAAiB7X,QAFQ8X,EA0ESa,IAvEpBb,EAAgBliB,QAC3B,IAAhBoiB,GACIA,EAAa,GAA0C,MAArCH,EAAiBG,EAAa,IAE/CC,EAAcF,GAAoD,MAAlCF,EAAiBI,KAoEnC,EAAPC,GAA4BS,IAAsBD,EAAe,CACjE,GAAIH,GAAWL,GACX,OAAO,EACXI,GAAqB,QAhDjC,CAEI,IAAKA,IAAuBC,GAAWL,KAAUK,GAAWlZ,GACxD,OAAO,EAIX,GAAIiZ,GAAsBC,GAAWlZ,GACjC,SACJiZ,GAAqB,EACrBJ,EAAO7Y,EAAkB,EAAP6Y,GA2C1B,OAAOK,GAAWL,IAASI,EAE/B,SAASC,GAAWL,GAChB,OAAgC,IAAjB,EAAPA,GAWZ,SAASO,GAAoBje,EAAM4d,GAC/B,GAAc,OAAVA,EACA,OAAQ,EAGZ,IAFA,IAAIQ,GAAiB,EACjBnjB,EAAI,EACDA,EAAI2iB,EAAMxiB,QAAQ,CACrB,IAAIijB,EAAgBT,EAAM3iB,GAC1B,GAAIojB,IAAkBre,EAClB,OAAO/E,EAEgB,IAAlBojB,EAELpjB,GAAK,GAGiB,IAAlBojB,IACAD,GAAiB,GAErBnjB,GAAKmjB,EAAiB,EAAI,GAGlC,OAAQ,EAEZ,SAASE,GAA2BjN,EAAO9O,GACvC,IAAK,IAAItH,EAAI,EAAGA,EAAIsH,EAASnH,OAAQH,IACjC,GAAImiB,GAAuB/L,EAAO9O,EAAStH,IACvC,OAAO,EAGf,OAAO,EAqBX,SAASsjB,GAAsBlN,EAAOxD,EAAW2Q,GAE7C,IADA,IAAIC,EApBR,SAASC,EAAsBrN,GAC3B,IAAIsM,EAAYtM,EAAMuM,MACtB,GAAiB,MAAbD,EAAmB,CACnB,IAAIgB,EAAqBhB,EAAUnY,QAAQ6P,IAG3C,GAAiC,IAAP,EAArBsJ,GACD,OAAOhB,EAAUgB,EAAqB,GAG9C,OAAO,KAUkBD,CAAsBrN,GACtCpW,EAAI,EAAGA,EAAI4S,EAAUzS,OAAQH,IAGlC,GAAIwjB,IAAuBD,EAAcvjB,IACd,OAAvBwjB,GAA+BH,GAA2BjN,EAAOxD,EAAU5S,IAC3E,OAAOA,EAAI,EAGnB,OAAO,EAGX,IAAI2jB,MACAC,MACJ,SAASC,GAA0BC,EAASC,EAAWC,GACnD,OACIF,GAAW,KAAM,KAAMC,GAAa,KAAMC,IAAyB,MAAO,EAAG,EAAG,KAAM,MAG9F,SAASC,GAAyBzjB,EAAQuO,GAKtC,IAAI4G,GAJJ5G,EAAUA,GAAWyG,GAAWhV,IAIRmV,UAAWC,EAAY7G,EAAQ6G,UACnD9T,EAAQ6T,EAAUC,GAClBsO,EAAiBpiB,EAIrB,OAHK1C,MAAMuM,QAAQ7J,KACfoiB,EAAiBvO,EAAUC,GAAaiO,GAA0B/hB,IAE/DoiB,EAAe,IAE1B,SAASC,EAAmB5c,GACxB,OAAOA,EAAK;;;;;;;OAHoC4c,CAAmBD,GAkSvE,SAASE,GAAgBrV,EAASxI,EAAOzE,GACrC,IAAIuiB,EAAc,EAA4C,EAAR9d,EAClD+d,EAAYC,GAASxV,EAASsV,GAC9BG,EAAWC,GAAY1V,EAASsV,GAEpC,GAAIK,GAAgBF,EAAUF,EAAWxiB,GAAQ,CAE7C6iB,GAAS5V,EAASsV,EAAaviB,GAC/B,IAAI8iB,EAAgBC,GAAsBL,GAEtCM,EAAgBP,GAASxV,EAAS6V,GACtC,IAAKE,GAAiBJ,GAAgBF,EAAUM,EAAehjB,GAAQ,CACnE,IAAIijB,GAAa,EACbC,GAAc,EACdC,EAAgD,IAAnB,EAAXT,IAEjBU,GAAYpjB,EAAOmjB,IAAmBC,GAAYJ,EAAeG,KAClEF,GAAa,EACbC,GAAc,GAElBG,GAASpW,EAAS6V,EAAeG,GACjCI,GAASpW,EAASsV,EAAaW,GAC/BI,GAAgBrW,GAAS,KA2FrC,SAASsW,GAASnO,EAAQoO,EAAMxjB,EAAOwY,EAAUyJ,EAAWwB,GACxDzjB,EAAQiiB,GAAajiB,EAAQiiB,EAAUuB,EAAMxjB,GAASA,EAClDyjB,EACAA,EAAMD,GAAQxjB,EAETA,EAELuY,GAAqBC,GACjBA,EAAS+K,SAASnO,EAAQoO,EAAMxjB,EAAOkY,GAAoBwL,UAC3DtO,EAAc,MAAEuO,YAAYH,EAAMxjB,GAItCuY,GAAqBC,GACjBA,EAASoL,YAAYxO,EAAQoO,EAAMtL,GAAoBwL,UACvDtO,EAAc,MAAEyO,eAAeL,GAe3C,SAASM,GAAS1O,EAAQ2O,EAAWC,EAAKxL,EAAUiL,GAC5CA,EACAA,EAAMM,GAAaC,EAEdA,EAELzL,GAAqBC,GAAYA,EAASyL,SAAS7O,EAAQ2O,GACvD3O,EAAkB,UAAE4O,IAAID,GAI5BxL,GAAqBC,GAAYA,EAAS0L,YAAY9O,EAAQ2O,GAC1D3O,EAAkB,UAAE+O,OAAOJ,GAGvC,SAASV,GAASpW,EAASxI,EAAO2f,GAC9B,IAAIC,EAAgB5f,GAAS,EAAqCA,EAAQ,EAAuBA,EAC7F2f,EACAnX,EAAQoX,IAAkB,EAG1BpX,EAAQoX,KAAkB,EAGlC,SAASC,GAAQrX,EAASxI,GAEtB,OAAmD,IAAlB,EAAzBwI,EADYxI,GAAS,EAAqCA,EAAQ,EAAuBA,IAGrG,SAAS8f,GAAatX,EAASxI,GAE3B,OAAmD,IAAlB,EAAzBwI,EADYxI,GAAS,EAAqCA,EAAQ,EAAuBA,IAGrG,SAAS+f,GAAcvX,EAASxI,GAE5B,OAAsD,IAArB,EAAzBwI,EADYxI,GAAS,EAAqCA,EAAQ,EAAuBA,IAGrG,SAASggB,GAASC,EAAYC,EAAaC,GACvC,OAAqB,EAAbF,EAAiCC,GAAe,EACnDC,GAAgB,GAEzB,SAASC,GAAgB5X,EAAS6X,GAC9B,IAAIrgB,EAAQsgB,GAAgBD,GAC5B,OAAO7X,EAAQ,GAA+BxI,GAElD,SAASsgB,GAAgBD,GACrB,OAAQA,GAAQ,EAAwB,MAE5C,SAAS/B,GAAsB+B,GAC3B,IAAIrgB,EAASqgB,GAAQ,GAAkD,MACvE,OAAOrgB,GAAS,EAAoCA,GAAS,EAEjE,SAASugB,GAAmB/X,GACxB,OAAO8V,GAAsB9V,EAAQ,IAEzC,SAASgY,GAAkBhY,GACvB,OAAOA,EAAQ,GAEnB,SAASiY,GAAQjY,EAASxI,EAAO+e,GAC7BvW,EAAQxI,EAAQ,GAA0B+e,EAE9C,SAASX,GAAS5V,EAASxI,EAAOzE,GAC9BiN,EAAQxI,EAAQ,GAAuBzE,EAE3C,SAASmlB,GAAQlY,EAASxI,EAAOqgB,GAE7B7X,EAD8B,IAAVxI,EAAuCA,EAASA,EAAQ,GACnDqgB,EAE7B,SAASnC,GAAY1V,EAASxI,GAE1B,OAAOwI,EADuB,IAAVxI,EAAuCA,EAASA,EAAQ,GAGhF,SAASge,GAASxV,EAASxI,GACvB,OAAOwI,EAAQxI,EAAQ,GAE3B,SAAS2gB,GAAQnY,EAASxI,GACtB,OAAOwI,EAAQxI,EAAQ,GAK3B,SAAS6e,GAAgBrW,EAASmX,GAC9Bf,GAASpW,EAAS,EAA4BmX,GAElD,SAASiB,GAAwBpY,EAASuW,EAAMlN,GAC5C,IAAK,IAAIpY,GAAKoY,GAAc,GAAK,EAAwBpY,EAAI+O,EAAQ5O,OAAQH,GAAK,EAE9E,GADe+O,EAAQ/O,IACPslB,EACZ,OAAOtlB,EAAI,EAGnB,OAAQ,EAEZ,SAASonB,GAAwBrY,EAASsY,EAAQC,GAC9C,IAAIC,EAAWhD,GAASxV,EAASsY,GAC7BG,EAAUN,GAAQnY,EAASsY,GAC3BI,EAAUhD,GAAY1V,EAASsY,GAC/BK,EAAQD,EACRE,EAAQlD,GAAY1V,EAASuY,GAC7BM,EAAe/C,GAAsB6C,GACrCE,GAAgB,GAGhBX,GAAQlY,EAAS6Y,EAAcrB,GAF3BsB,EAAQpD,GAAY1V,EAAS6Y,GAClBf,GAAgBgB,GAC0BP,IAE7D,IAEQO,EAFJC,EAAejD,GAAsB8C,GACrCG,GAAgB,GAGhBb,GAAQlY,EAAS+Y,EAAcvB,GAF3BsB,EAAQpD,GAAY1V,EAAS+Y,GAClBjB,GAAgBgB,GAC0BR,IAE7D1C,GAAS5V,EAASsY,EAAQ9C,GAASxV,EAASuY,IAC5CN,GAAQjY,EAASsY,EAAQH,GAAQnY,EAASuY,IAC1CL,GAAQlY,EAASsY,EAAQ5C,GAAY1V,EAASuY,IAC9C3C,GAAS5V,EAASuY,EAAQC,GAC1BP,GAAQjY,EAASuY,EAAQE,GACzBP,GAAQlY,EAASuY,EAAQG,GAiB7B,SAASM,GAAuBhZ,EAASxI,EAAOyhB,EAAYjjB,EAAM6hB,EAAM9kB,GACpE,IAAImmB,EAAU1hB,EAAQwI,EAAQ5O,OAE9B4O,EAAQkQ,OAAO1Y,EAAO,EAAU,EAAPqgB,GAAwBoB,EAAa,EAAgB,GAAejjB,EAAMjD,GAC/FmmB,GAnBR,SAASC,EAA0BnZ,EAASoZ,GACxC,IAAK,IAAInoB,EAAImoB,EAAoBnoB,EAAI+O,EAAQ5O,OAAQH,GAAK,EAAc,CACpE,IACIqkB,EAAcQ,GADFJ,GAAY1V,EAAS/O,IAErC,GAAIqkB,EAAc,EAAG,CACjB,IACI+D,EAAwBvB,GADXpC,GAAY1V,EAASsV,IAMtC4C,GAAQlY,EAASsV,EADCkC,IAHDH,GAAQrX,EAASsV,GAAe,EAAgB,IAC5DgC,GAAatX,EAASsV,GAAe,EAAgB,IACrDiC,GAAcvX,EAASsV,GAAe,EAAmB,GACxB+D,EAAuBpoB,MAajEkoB,CAA0BnZ,EAASxI,EAAQ,GAGnD,SAAS2e,GAAYpjB,EAAOukB,GACxB,OAAIA,IACOvkB,EAEM,OAAVA,EAEX,SAASumB,GAAmBtjB,EAAMshB,EAActC,GAC5C,OAAIsC,EACO,EAEFtC,GAAaA,EAAUhf,GACrB,EAEJ,EAEX,SAAS2f,GAAgBkC,EAAM9c,EAAG9K,GAO9B,QAN0B,EAAP4nB,IACH9c,GAAK9K,GACM,EAAP4nB,EAMT9c,EAAEpF,aAAe1F,EAAE0F,WAGvBoF,IAAM9K;;;;;;;OAcjB,IAiCIsb,GAKAgO,GAYAC,GAmBAC,GAwBAC,GAmBAC,GACAnQ,GACAoQ,GAqBAnP,GAWAkG,GAlJAkJ,GAAiB5f,QAAQC,QAAQ,MAejC4f,IAPgB,IAAIzpB,MAAMiV,IAAeyU,KAAK,MAOjC,gBAmBjB,SAASC,KAEL,OAAOzO,GAGX,SAAS0O,KAEL,OAAOV,GAEX,SAASW,KACL,OAAOvJ,IAAYA,GAASxK,IAiChC,SAASgU,KACL,OAAOxJ,GAWX,SAASyJ,GAAYC,GACjBC,GAAkBD,EAStB,SAASE,KAEL,OAAOb,GAmDX,SAASc,KAEL,OAAO7J,GAQX,IAOIvP,GAPAkZ,GAAkB,KAQtB,SAASG,GAAWxM,GAEhB,OAAOA,EAAKlI,MAAakI,EAAKlI,QAElC,SAAS2U,GAAgBzM,GACrB,OAAOA,EAAK1I,IAAO8L,UAAYpD,EAAK1I,IAAO8L,YAO/C,IAAIsJ,IAAqB,EAErB/Q,IAAoB,EAMpBgR,IAAoB,EAExB,SAASC,KACL,OAAOD,GAcX,SAASE,GAAUC,EAASrN,GACxB,IAAIsN,EAAUrK,GAYd,OAXAvP,GAAa2Z,GAAWA,EAAQjV,IAChC0D,GAAQuR,GAAWA,EAAQxV,IAC3BkF,GAAesQ,GAAuD,IAA1B,EAAjBA,EAAQpV,KACnCiE,GAAoBmR,GAAWvR,GAAMI,kBACrCgR,GAAmBG,GAAWvR,GAAMyR,kBACpC1P,GAAWwP,GAAWA,EAAQ7U,IAC9BwT,GAAwBhM,EACxBiM,IAAW,EACXhJ,GAAW2J,GAAkBS,EAC7BC,IAAYA,EAAQtV,IAAWkU,IAC/BA,GAAiBmB,GAAWA,EAAQrV,IAC7BsV,EAUX,SAASE,GAAUH,EAASI,GACnBA,IACIR,IACDjQ,GAAatJ,GAAYoI,GAAMY,UAAWZ,GAAMa,eAAgBI,IAGpEkG,GAAShL,MAAU,GAEvBgL,GAAShL,KAAU,GACnBgL,GAAS9K,IAAiB2D,GAAMyR,kBAChCH,GAAUC,EAAS,MAQvB,SAASK,KACLC,GAAgB7R,GAAMxH,cACtB,IAAIsZ,EAA0B1R,GAE9BJ,GAAMI,kBAAoBA,IAAoB,EACzC+Q,IACDpQ,GAAiBoG,GAAUnH,GAAOiB,IAk7C1C,SAAS8Q,EAA4B3U,GACjC,IAAK,IAAI/L,EAAU6V,GAAc9J,GAAwB,OAAZ/L,EAAkBA,EAAUA,EAAQ4K,IAI7E,GAAI5K,EAAQzJ,OAASkU,IAA2C,OAA1BzK,EAAQqQ,IAE1C,IADA,IAAIsQ,EAAc3gB,EACT5J,EAAI,EAAGA,EAAIuqB,EAAYrQ,IAAO/Z,OAAQH,IAAK,CAChD,IAAIwqB,EAAkBD,EAAYrQ,IAAOla,GAGzCyqB,GAAuBD,EAAiBA,EAAgBlW,IAAQkW,EAAgBzV,IAAU,IA37CtGuV,CAA4B5K,IA4BhC,SAASgL,EAAsBnS,GAC3B,GAA4B,MAAxBA,EAAMvH,eACN,IAAK,IAAIhR,EAAI,EAAGA,EAAIuY,EAAMvH,eAAe7Q,OAAQH,GAAK,EAAG,CACrD,IAAI2qB,EAAkBpS,EAAMvH,eAAehR,GACxBuY,EAAMpI,WAAWwa,GACvB1Z,sBAAsB0Z,EAAiBpS,EAAMvH,eAAehR,EAAI,KA/BrF0qB,CAAsBnS,IACjBmR,IACDjQ,GAAatJ,GAAYoI,GAAMU,aAAcV,GAAMW,kBAAmBM,IAkC9E,SAASoR,EAAuB3S,EAAYoS,GACxC,GAAkB,MAAdpS,EACA,IAAK,IAAIjY,EAAI,EAAGA,EAAIiY,EAAW9X,OAAQH,IACnC6qB,GAAiB5S,EAAWjY,GAAIqqB,GAnCxCO,CAAuBrS,GAAMN,WAAYoS,GAG7C,SAASD,GAAgBU,GACrB,GAAgB,MAAZA,EAAkB,CAClBnB,GAAmBjK,GAAS9K,IAAiB2D,GAAMwS,sBAEnD,IADA,IAAIC,EAAOzS,GAAMpI,WACRnQ,EAAI,EAAGA,EAAI8qB,EAAS3qB,OAAQH,GAAK,EAAG,CACzC,IAAIirB,EAAWH,EAAS9qB,GACpByQ,EAAMua,EAAKC,GACf,GAAItS,GACA,IAAK,IAAIuS,EAAM,EAAGA,EAAMza,EAAII,SAAUqa,IAClC3S,GAAM4S,UAAUhpB,KAAKipB,IACrB1L,GAASvd,KAAKipB,IAGtB3a,EAAIM,aAAaka,EAAUH,EAAS9qB,EAAI,IACxC2pB,GAAmBjK,GAAS9K,IAAiB+U,GAAmBlZ,EAAII,WAsBhF,SAASwa,KACA3B,KACDpQ,GAAiBoG,GAAUnH,GAAOiB,IAClCC,GAAatJ,GAAYoI,GAAMU,aAAcV,GAAMW,kBAAmBM,KAG9E,SAAS8R,GAAgBhR,EAAU/B,EAAOxJ,EAASf,EAAO+V,GACtD,IAAIjO,EAAWyC,EAAM4S,UAAUhf,QAO/B,OANA2J,EAASvB,IAAUuB,EAASR,IAAoBoK,GAChD5J,EAASpB,IAAiB,GAAR1G,EAClB8H,EAASf,IAAWhG,EACpB+G,EAASd,IAAc0K,GAAWA,GAAS1K,IAAc,KACzDc,EAASb,IAAYqF,EACrBxE,EAASZ,IAAa6O,GAAa,KAC5BjO,EAOX,SAASyV,GAAkBlnB,EAAM6S,EAAQgJ,GACrC,OAAShJ,OAAQA,EAAQ3P,KAAM2Y,EAAOrD,sBAAuB,MAEjE,SAAS2O,GAAkBjlB,EAAOlC,EAAM6S,EAAQnS,EAAM4d,EAAOzC,GACzD,IAOI9J,EAPA1K,EAASgd,GAAWD,GAAwBA,IAAyBA,GAAsB/c,OAG3F+f,EAAmB/f,GAAUgU,IAAYhU,IAAWgU,GAAS/K,IAC7D+W,EAAUD,EAAmB/f,EAAS,KACtCigB,EAAmB,MAATzL,EACVzC,EAAO8N,GAAkBlnB,EAAM6S,EAAQyU,EAAUzL,EAAQ,MAE7D,IAAe,IAAX3Z,GAAyB,IAATlC,EAGhB+R,GAAS8J,EAAQA,EAAM5L,IAAOmJ,KAAO,OACjCmO,GAAYvnB,EAAMkC,EAAO,KAAM,KAAMmlB,EAAS,UAEjD,CACD,IAAIvF,EAAgB5f,EAAQ8N,GAExBwX,EAAQtT,GAAMhR,KAGlB,GADAmY,GAASyG,GAAiB1I,EACE,MAAxBoO,EAAM1F,GAAwB,CAC9B,IAAI2F,EAAUD,EAAM1F,GAChByF,GAAYvnB,EAAM8hB,EAAephB,EAAM4d,EAAO+I,EAAS,OACtDhD,IAAYD,KACbA,GAAsB5mB,KAAOiqB,EACzBrD,GAAsBsD,uBACtBtD,GAAsBsD,qBAAqBlqB,KAAOiqB,IAG9D1V,EAAQyV,EAAM1F,GACT5N,GAAMlC,YAAuB,IAAThS,IACrBkU,GAAMlC,WAAaD,GAGnBsS,IAAYD,KACuB,MAA/BA,GAAsB1Q,OAAiB0T,GACR,IAA/BhD,GAAsBpkB,QAEtBokB,GAAsB1Q,MAAQ3B,GAK1C,GAAuC,IAA3B,EAAP/R,IAA2DsnB,EAAS,CACrE,IAAIhW,EAAYuK,EAGhBvK,EAAUhB,IAAayB,EACnBT,EAAUrB,IAAOqE,oBACjBhD,EAAUrB,IAAOmJ,KAAOrH,GAKhC,OAFAqS,GAAwBrS,EACxBsS,IAAW,EACJtS,EAOX,SAAS4V,GAA0BhP,GAC/B,IAAIzE,EAAQyE,EAAK1I,IACbiE,EAAMI,oBACNJ,EAAMwS,wBACNxS,EAAM4S,UAAUhpB,KAAK,MACrB6a,EAAK7a,KAAK,OASlB,SAAS8pB,KACLvD,IAAW,EACXD,GAAwB,KACxBF,GAAoB,EACpBC,IAAkB,EAmCtB,SAASiC,GAAuByB,EAAc3T,EAAOxJ,EAASod,GAC1D,IAEIpC,EAFAqC,EAAY1D,GACZ2D,EAAyB5D,GAE7B,GAA0B,GAAtByD,EAAaxX,IAEb4X,GAAgBJ,EAAanX,UAG7B,IACI2T,IAAW,EACXD,GAAwB,KACxBsB,EAAUF,GAAUqC,EAAcA,EAAavX,KAC/C4X,KACAhU,EAAMzH,SAASqb,EAAIpd,GACV,EAALod,EACAhC,KAGA+B,EAAa5X,IAAOqE,kBAAoBA,IAAoB,EAGpE,QAIIsR,GAAUF,EADqC,IAApB,EAALoC,IAEtBzD,GAAW0D,EACX3D,GAAwB4D,GAcpC,SAASG,GAAYC,GAGjB,YAFc,IAAVA,IAAoBA,EAAQ,IAChCpD,GA+yDJ,SAASqD,EAAYC,EAAcpT,GAC/B,KAAOoT,EAAe,GAElBpT,EAAcA,EAAYjE,IAC1BqX,IAEJ,OAAOpT,EArzDWmT,CAAYD,EAAOpD,KACdtU,IAE3B,SAAS6X,GAA0BxQ,EAAUyQ,EAAoBC,GAC7D,IAAI/C,EAAUF,GAAUzN,EAAUA,EAASzH,KAC3C,IACQ2T,GAAgByE,OAChBzE,GAAgByE,QAEhBD,GACAP,KACAO,EAAWE,GAAe5Q,GAAWyQ,GACrC1C,OAGAkB,KAGAjB,GAAgB7R,GAAMxH,cACtB8Z,GAAiBxW,IAAe,IAGxC,QACQiU,GAAgBzP,KAChByP,GAAgBzP,MAEpBoR,GAAUF,IAYlB,SAASiD,GAAehQ,GACpB,OAAqB,EAAdA,EAAKtI,IAAgC,EACxC,EAKR,IAAIuY,GAAoB,KACxB,SAASC,KACLD,GAAoB,8BAExB,SAASE,KACLF,GAAoB,iCAExB,SAASV,KACLU,GAAoB,KAaxB,SAASnJ,GAAQvd,EAAOxB,EAAM4d,EAAOjL,GACjC0V,GAAa7mB,EAAOxB,EAAM4d,EAAOjL,GACjC2V,KAiDJ,SAASD,GAAa7mB,EAAOxB,EAAM4d,EAAOjL,GAGtC,IAAIR,EAASoW,GAAcvoB,GAEvBqR,EAAQoV,GAAkBjlB,EAAO,EAAiB2Q,EAAQnS,EAAM4d,GAAS,KAAM,MAC/EA,GACA4K,GAAgBrW,EAAQyL,GAE5BxB,GAAYjK,EAAQd,EAAOsJ,IAC3B8N,GAA0B9V,GAIA,IAAtB6Q,IACAnR,GAAgBF,EAAQwI,IAE5B6I,KAQJ,SAAS+E,GAAcvoB,EAAM0oB,GACzB,IACIC,EAAgBD,GAAsBnT,GAY1C,OAXID,GAAqBqT,GACZA,EAAcC,cAAc5oB,EAAMkoB,IAGjB,OAAtBA,GACSS,EAAcC,cAAc5oB,GAG5B2oB,EAAcE,gBAAgBX,GAAmBloB,GAKtE,SAAS8oB,GAA4BzX,EAAOmD,GACxC,OAAO4C,GAAS/F,EAAOmD,GAAarC,OASxC,SAASsW,GAA0B9V,EAAWoW,QAChB,IAAtBA,IAAgCA,EAAoBD,IACnDrF,KAED7P,GAcR,SAASoV,EAA+B3X,EAAOmC,EAAOb,GAElD,IAAIsW,EAAatW,GAAcuW,IAAK,GAAM,KACtCC,EAAU3V,EAAM4V,eAAiBC,GAAqBhY,GAC1D,GAAI8X,EACA,IAAK,IAAIluB,EAAI,EAAGA,EAAIkuB,EAAQ/tB,OAAQH,GAAK,EAAG,CACxC,IAAIyQ,EAAMyd,EAAQluB,GACdquB,EAAaruB,EAAI,EACrBsuB,GAAiB7d,EAAK4d,EAAYH,EAAS3V,GAC3CgW,GAAoBL,EAAQG,GAAa5d,EAAKud,GAGlDA,GAmFR,SAASQ,EAAwBpY,EAAOsB,EAAWsW,GAC/C,GAAItW,EAKA,IAJA,IAAI+W,EAAarY,EAAMqY,cAIdzuB,EAAI,EAAGA,EAAI0X,EAAUvX,OAAQH,GAAK,EAAG,CAC1C,IAAIuG,EAAQynB,EAAWtW,EAAU1X,EAAI,IACrC,GAAa,MAATuG,EACA,MAAM,IAAI9D,MAAM,mBAAqBiV,EAAU1X,EAAI,GAAK,gBAC5DyuB,EAAWtsB,KAAKuV,EAAU1X,GAAIuG,IA5FlCioB,CAAwBpY,EAAOsB,EAAWsW,GAzB1CD,CAA+BtF,GAAuBlQ,GAAOb,GAAa,MAqFlF,SAASgX,IAEL,IAAIrW,EAAsC,KAA9BoQ,GAAsBza,MAIlC,GAHIqO,GAAmBoM,KAA0BE,KAC7CA,GAAiBA,GAAegG,SAEhCtW,EAAQ,EAIR,IAHA,IAAIO,EAAQ6P,GAAsBza,OAAS,GACvC6K,EAAMD,EAAQP,EACduW,EAAcrW,GAAMpI,WACfnQ,EAAI4Y,EAAO5Y,EAAI6Y,EAAK7Y,IAAK,CAC9B,IAAIyQ,EAAMme,EAAY5uB,GAGlByQ,EAAIK,UACJ+d,GAAkBpe,GAEtBqe,GAAgB9uB,EAAGyQ,EAAIvS,UAAWuS,IAnGtCie,GAsIR,SAASK,EAAyBjB,GAC9B,IAAIW,EAAahG,GAAsBgG,WACnCrY,EAAQqS,GACZ,GAAIgG,EAEA,IADA,IAAIO,EAAavG,GAAsBliB,MAAQ,EACtCvG,EAAI,EAAGA,EAAIyuB,EAAWtuB,OAAQH,GAAK,EAAG,CAC3C,IAAIuG,EAAQkoB,EAAWzuB,EAAI,GACvB8B,GAAmB,IAAXyE,EAAeunB,EAAkB1X,EAAOsJ,IAAYvP,GAAW5J,GAC3EmZ,GAASsP,KAAgBltB,GA5IjCitB,CAAyBjB,IAuB7B,SAASM,GAAqBhY,GAC1B,IAAI6Y,EAAW1W,GAAM2W,kBACjBhB,EAAU,KACd,GAAIe,EACA,IAAK,IAAIjvB,EAAI,EAAGA,EAAIivB,EAAS9uB,OAAQH,IAAK,CACtC,IAAIyQ,EAAMwe,EAASjvB,GACfqjB,GAA2BjN,EAAO3F,EAAImC,aACtCsb,IAAYA,MACRzd,EAAIK,UACc,KAAdsF,EAAMpI,OACN8L,GAA4B1D,GAChCyY,GAAkBpe,GAClB2F,EAAMpI,MAAQ,KAEdkgB,EAAQpnB,QAAQ2J,EAAK,OAGrByd,EAAQ/rB,KAAKsO,EAAK,MAElBA,EAAIC,UACJD,EAAIC,SAASD,IAI7B,OAAOyd,EAEX,SAASI,GAAiB7d,EAAK4d,EAAYH,EAAS3V,GAChD,GAA4B,OAAxB2V,EAAQG,GAAsB,CAC9BH,EAAQG,GAAcxF,GACtB,IAAI/S,EAAWrF,EAAIvS,UAEnB,OADCqa,EAAMpI,aAAeoI,EAAMpI,gBAAkBhO,KAAKsO,GAC5Cqe,GAAgBZ,EAAQG,GAAc9V,EAAMpI,WAAWhQ,OAAS,EAAG2V,EAAUrF,GAMxF,OAJSyd,EAAQG,KAAgBxF,IA17ErC,SAASsG,EAA2BllB,GAChC,MAAM,IAAIxH,MAAM,yCAA2CwH,GA27EvDklB,CAA2B1e,EAAIpM,MAE5B,KAGX,SAAS+qB,KACDzW,KACCJ,GAAMN,aAAeM,GAAMN,gBAAkB9V,KAAKsmB,GAAsBliB,OAKjF,SAAS8oB,GAAyBpE,EAAUpa,IAKvC0H,GAAMxH,eAAiBwH,GAAMxH,kBAAoB5O,KAAK8oB,EAAUxC,GAAsBliB,MAAQ8N,IA6CnG,SAASka,GAAoBhoB,EAAOkK,EAAKud,GACjCA,IACIvd,EAAIa,WACJ0c,EAAWvd,EAAIa,UAAY/K,GAC3BkK,EAAIK,WACJkd,EAAW,IAAMznB,IA8B7B,SAAS+oB,GAAiBxC,EAAYnc,EAAQC,EAAMT,EAAYF,EAAO4C,GAOnE,OAAOia,EAAWyC,gBACbzC,EAAWyC,cACRC,IAAa,EAAG1C,EAAYnc,EAAQC,EAAMT,EAAYF,EAAO4C,IAWzE,SAAS2c,GAAYC,EAAW3C,EAAYnc,EAAQC,EAAMT,EAAYF,EAAO4C,GAEzE,IAAImX,EAAoB3V,GAAgB1D,EAIpC+e,EAAoB1F,EAAoBpZ,EACxCua,EA+BR,SAASwE,EAAoB3F,EAAmB0F,GAC5C,IAAIvE,EAAY,IAAI/rB,MAAMswB,GACrB5G,KAAK,KAAM,EAAGkB,GACdlB,KAAKsC,GAAWpB,GAGrB,OAFAmB,EAAU/V,KAAoB,EAC9B+V,EAAUvW,IAAiBoV,EACpBmB,EArCSwE,CAAoB3F,EAAmB0F,GACvD,OAAOvE,EAAU7W,KACbtB,GAAIyc,EACJtE,UAAWA,EACXra,SAAUgc,EACVja,UAAWA,EACX4K,KAAM,KACNlW,KAAM4jB,EAAUhf,QAChBwT,YAAa,EACbqK,kBAAmBA,EACnBe,sBAAuB2E,EACvBvf,WAAY,KACZwI,mBAAmB,EACnBH,UAAW,KACXC,WAAY,KACZQ,aAAc,KACdC,kBAAmB,KACnBC,UAAW,KACXC,eAAgB,KAChBC,aAAc,KACdoH,iBAAkB,KAClBL,QAAS,KACTrP,aAAc,KACdC,eAAgB,KAChBiH,WAAY,KACZiX,kBAAyC,mBAAf/e,EAA4BA,IAAeA,EACrEyf,aAA+B,mBAAV3f,EAAuBA,IAAUA,EACtDke,eAAgB,KAChB9X,WAAY,MAWpB,SAASkX,GAAgBrW,EAAQyL,GAG7B,IAFA,IAAIkN,EAASxV,GAAqBC,IAC9Bta,EAAI,EACDA,EAAI2iB,EAAMxiB,QAAQ,CACrB,IAAI2vB,EAAWnN,EAAM3iB,GACrB,GAAiB,IAAb8vB,EACA,MACJ,GAAIA,IAAa1V,GACbpa,GAAK,OAIL,GAAiB,IAAb8vB,EAAmC,CAEnC,IAAIC,EAAepN,EAAM3iB,EAAI,GACzBgwB,EAAarN,EAAM3iB,EAAI,GACvBiwB,EAAUtN,EAAM3iB,EAAI,GACxB6vB,EACIvV,GACK4V,aAAahZ,EAAQ8Y,EAAYC,EAASF,GAC/C7Y,EAAOiZ,eAAeJ,EAAcC,EAAYC,GACpDjwB,GAAK,OAIDiwB,EAAUtN,EAAM3iB,EAAI,GACxB6vB,EACIvV,GACK4V,aAAahZ,EAAQ4Y,EAAUG,GACpC/Y,EAAOgZ,aAAaJ,EAAUG,GAClCjwB,GAAK,GAarB,SAASowB,GAAkBlyB,EAASmyB,GAEhC/H,GAAkBpqB,EAClB,IAAIoyB,EAAkBpyB,EAAQsc,eAAe,KAAM,MAcnD,MAbyC,iBAAtB6V,EACdhW,GAAqBiW,GAClBA,EAAgBC,kBAAkBF,GAClCC,EAAgBE,cAAcH,GAClCA,EAmBR,SAAS5V,GAAYgW,EAAKC,EAAOjgB,EAAKsT,GAClCkI,KACA,IAAI7V,EAAQoV,GAAkB,EAAG,EAAiBkF,EAAO,KAAM,KAAMpF,GAAgBhR,GAAUgV,GAAiB7e,EAAIK,SAAUL,EAAIE,OAAQF,EAAIG,KAAMH,EAAI+B,cAAe/B,EAAIiC,SAAUjC,EAAIoC,WAAY,KAAMpC,EAAI4B,OAAS,EAAgB,EAAqB0R,IAO7P,OANIpL,KACAvC,EAAMpI,MAAQ,KACVyC,EAAIC,UACJD,EAAIC,SAASD,GACjB8H,GAAMpI,YAAcM,IAEjBiP,GAASrL,IAYpB,SAASsc,GAASC,EAAWC,EAAYC,QAClB,IAAfA,IAAyBA,GAAa,GAC1C,IAAI1a,EAAQqS,GAGZ,GAAmB,IAAfrS,EAAM/R,KAA0B,CAChC,IAAIoZ,EAv3BZ,SAASsT,IACL,OAAgC,MAAzBtI,IAAiCA,KAA0B/I,GAAS/K,IACvE6H,GAAmBkD,IACnBvD,GAASsM,GAAuB/I,IAo3BrBqR,GAIX,GAAI1W,GAAqBC,IAAW,CAChC,IAAIgG,EAAYhG,GAAS0W,OAAOvT,EAAKvG,OAAQ0Z,EAAWC,GACxDI,GAAevR,GAAUY,OAExB,CACD,IAAI4Q,EAsgChB,SAASC,EAA+BN,GACpC,OAAO,SAASO,EAA8BnvB,IACpB,IAAlB4uB,EAAW5uB,KACXA,EAAEovB,iBAEFpvB,EAAEqvB,aAAc,IA3gCMH,CAA+BN,GACrDpT,EAAKvG,OAAOqa,iBAAiBX,EAAWM,EAAiBJ,GACzD,IAAIU,EAAmBhI,GAAW9J,IAClC8R,EAAiBrvB,KAAK+uB,GAClBvY,IACA8Q,GAAgB/J,IAAUvd,KAAKyuB,EAAWxa,EAAM7P,MAAOirB,EAAiBrxB,OAAS,EAAG2wB,SAK1E/sB,IAAlBqS,EAAM/E,UAGN+E,EAAM/E,QAAUogB,GAAwBrb,EAAMpI,MAAO,IAEzD,IACI0jB,EADArgB,EAAU+E,EAAM/E,QAEhBA,IAAYqgB,EAAargB,EAAQuf,KAQzC,SAASe,EAAatgB,EAASsf,GAC3B,IAAK,IAAI3wB,EAAI,EAAGA,EAAIqR,EAAQlR,OAAQH,GAAK,EAAG,CAExC,IAAI4xB,EAAezhB,GAAWkB,EAAQrR,IAAIqR,EAAQrR,EAAI,IAAI6xB,UAAUlB,GACpEmB,GAAwBpS,GAAUkS,EAAcA,EAAaG,cAX7DJ,CAAaD,EAAYb,GAqBjC,SAASiB,GAAwB9U,EAAMjO,EAASuR,GACvCtD,IACDA,EAAO0C,IACX8J,GAAWxM,GAAM7a,KAAK4M,GAClBiO,EAAK1I,IAAOqE,mBACZ8Q,GAAgBzM,GAAM7a,KAAKme,EAAWtD,EAAKlI,IAAS3U,OAAS,GAWrE,SAAS8wB,GAAejU,EAAMsD,GAC1BkJ,GAAWxM,GAAM7a,KAAKme,GAClBtD,EAAK1I,IAAOqE,mBACZ8Q,GAAgBzM,GAAM7a,KAAK6a,EAAKlI,IAAS3U,OAAS,EAAG,MAI7D,SAASktB,KACD3E,GACAA,IAAW,EAIXD,GAAwBA,GAAsB/c,OAGlDid,KACKA,GAAiBA,GAAeqJ,QAAQvJ,KAC7C/P,GAAoB+P,GAAsBza,MAAOuK,IACjDgQ,KAWJ,SAAS0J,GAAiB1rB,EAAOxB,EAAMjD,EAAOiiB,GAC1C,GAAIjiB,IAAUspB,GAAW,CACrB,IAAI8G,EAAYC,GAAY5rB,GAC5B,GAAa,MAATzE,EAEAuY,GAAqBC,IAAYA,GAAS8X,gBAAgBF,EAAUhb,OAAQnS,GACxEmtB,EAAUhb,OAAOkb,gBAAgBrtB,OAEpC,CAED,IAAIstB,EAAwB,MAAbtO,EAAoB9H,GAAYna,GAASiiB,EAAUjiB,GAClEuY,GAAqBC,IAAYA,GAAS4V,aAAagC,EAAUhb,OAAQnS,EAAMstB,GAC3EH,EAAUhb,OAAOgZ,aAAanrB,EAAMstB,KAiBpD,SAASC,GAAgB/rB,EAAON,EAAUnE,EAAOiiB,GAC7C,GAAIjiB,IAAUspB,GAAd,CAEA,IAAI3N,EAAO0U,GAAY5rB,GACnB6P,EAAQmc,GAAShsB,GAGjB6P,QAA0BrS,IAAjBqS,EAAMjF,SAEfiF,EAAMjF,OAASsgB,GAAwBrb,EAAMpI,MAAO,IAExD,IACIwkB,EADAC,EAAYrc,GAASA,EAAMjF,OAE/B,GAAIshB,IAAcD,EAAYC,EAAUxsB,KA6F5C,SAASysB,EAAqBvhB,EAAQrP,GAClC,IAAK,IAAI9B,EAAI,EAAGA,EAAImR,EAAOhR,OAAQH,GAAK,EAEpCmQ,GAAWgB,EAAOnR,IAAImR,EAAOnR,EAAI,IAAM8B,EA/FvC4wB,CAAqBF,EAAW1wB,GA+3BxC,SAAS6wB,EAAkBlV,IAEnBA,EAAKlW,MAA6B,EAAnBkW,EAAKlW,KAAKmN,MACzB+I,EAAKlW,KAAKmN,KAAU,GAj4BpBie,CAAkBlV,OAEjB,CAGD3b,EAAqB,MAAbiiB,EAAoBA,EAAUjiB,GAASA,EAC/C,IAAIoV,EAASuG,EAAKvG,OAElBmD,GAAqBC,IAAYA,GAASmL,YAAYvO,EAAQjR,EAAUnE,GACnEoV,EAAOuO,YAAcvO,EAAOuO,YAAYxf,EAAUnE,GAC/CoV,EAAOjR,GAAYnE,IAoBnC,SAAS8wB,KACLpK,IAAkB,EAmBtB,SAASqK,KACLrK,IAAkB,EAatB,SAASoD,GAAYvnB,EAAM8hB,EAAepM,EAAS4I,EAAOjX,EAAQonB,GAE9D,OACIzuB,KAAMA,EACNkC,MAAO4f,EACP4M,cAAernB,EAASA,EAAOqnB,eAAiB,EAChD/kB,MAAO,EACP+L,QAASA,EACT4I,MAAOA,EACP8L,WAAY,KACZuE,mBAAejvB,EACfoN,YAAQpN,EACRsN,aAAStN,EACT+uB,OAAQA,EACRjxB,KAAM,KACNkW,MAAO,KACPrM,OAAQA,EACRqgB,qBAAsB,KACtB3M,SAAU,KACV6T,gBAAiB,KACjB9U,WAAY,MAoBpB,SAASsT,GAAwByB,EAAYC,GACzC,IAAI9a,EAAqB,KAAb6a,EACRE,EAAY,KAChB,GAAI/a,EAAQ,EAKR,IAJA,IAAIO,EAAQsa,GAAc,GACtBra,EAAMD,EAAQP,EACdgb,EAAwB,IAAdF,EACVnI,EAAOzS,GAAMpI,WACRnQ,EAAI4Y,EAAO5Y,EAAI6Y,EAAK7Y,IAAK,CAC9B,IAAIszB,EAAetI,EAAKhrB,GACpBuzB,EAAmBF,EAAUC,EAAaniB,OAASmiB,EAAajiB,QACpE,IAAK,IAAIuC,KAAc2f,EACnB,GAAIA,EAAiBj0B,eAAesU,GAAa,CAE7C,IAAI4f,EAAeD,EAAiB3f,IADpCwf,EAAYA,OAEgB9zB,eAAesU,GAC7Bwf,EAAUxf,GAAYzR,KAAKnC,EAAGwzB,GACvCJ,EAAUxf,IAAe5T,EAAGwzB,IAKjD,OAAOJ,EAYX,SAASK,GAAiBltB,EAAOmtB,EAAc5xB,IA7gD/C,SAAS6xB,EAAgB5kB,EAASxI,EAAOqtB,GAErCxP,GAAgBrV,EADIxI,EAAQwI,EAAQ,GACI6kB,GA4gDxCD,CAAgBE,GAAkBttB,GAAQmtB,IAAc5xB,GA8B5D,SAASgyB,GAAeC,EAAmBC,EAAmBC,GAC1D,IAAI7d,EAAQqS,GACPrS,EAAM6c,kBAEP7c,EAAM6c,gBAt0Dd,SAASiB,EAA6BC,EAA0BC,EAA0BH,GACtF,IAAIjQ,GAAwB,MACxBjV,EAAU8U,GAA0B,KAAMoQ,EAAgBjQ,GAE1DqQ,KACAC,KACAC,EAAyB,EAC7B,GAAIH,EAEA,IADA,IAAII,GAAwB,EACnBx0B,EAAI,EAAGA,EAAIo0B,EAAyBj0B,OAAQH,IAGjD,GAAU,KAFN2O,EAAIylB,EAAyBp0B,IAG7Bw0B,GAAwB,MAEvB,CACD,IAAIlP,EAAO3W,EACX,GAAI6lB,EAAuB,CACvB,IAAI1yB,EAAQsyB,IAA2Bp0B,GACvCgkB,EAAqB7hB,KAAKL,GAC1BuyB,EAAa/O,GAAQtB,EAAqB7jB,OAAS,OAGnDo0B,IACAF,EAAa/O,GAAQ,EAOrC,GADAvW,EAAQ,GAA+BwlB,EACnCJ,EAEA,IADIK,GAAwB,EACnBx0B,EAAI,EAAGA,EAAIm0B,EAAyBh0B,OAAQH,IAAK,CACtD,IAAI2O,EAEJ,GAAU,KAFNA,EAAIwlB,EAAyBn0B,IAG7Bw0B,GAAwB,MAEvB,CACD,IAAI3O,EAAYlX,EACZ6lB,GACI1yB,EAAQqyB,IAA2Bn0B,GACvCgkB,EAAqB7hB,KAAKL,GAC1BwyB,EAAczO,GAAa7B,EAAqB7jB,OAAS,GAGzDm0B,EAAczO,GAAa,GAK3C,IAAI4O,EAAax1B,OAAOoK,KAAKgrB,GACzBK,EAAaz1B,OAAOoK,KAAKirB,GACzBK,EAAuBF,EAAWt0B,OAClCy0B,EAAaH,EAAWt0B,OAASu0B,EAAWv0B,OAE5C00B,EAAyB,EAAbD,EAA4B,EAAI,EAGhD,IAAS50B,EAAI,EAAmCA,EAAI60B,EAAW70B,IAC3D+O,EAAQ5M,KAAK,MAEjB,IACI2yB,EAA0B,EAAbF,EAA4B,EAE7C,IAAS50B,EAAI,EAAGA,EAAI40B,EAAY50B,IAAK,CACjC,IAAI+0B,EAAiB/0B,GAAK20B,EAEtBK,GADA1P,EAAOyP,EAAiBL,EAAW10B,EAAI20B,GAAwBF,EAAWz0B,GACxD+0B,EAAiBT,EAAchP,GAAQ+O,EAAa/O,IACtE2P,EAAejR,EAAqBgR,GACpCpQ,EAAoB,EAAJ5kB,EAAmB80B,EACnCI,EAAqB,EAAJl1B,EATP,EAUVm1B,EAAc9M,GAAmB/C,EAAMyP,EAAgBd,GAAkB,MAC7EhN,GAAQlY,EAASmmB,EAAgB3O,GAAS4O,EAAaH,EAAiBpQ,IACxEoC,GAAQjY,EAASmmB,EAAgB5P,GACjCX,GAAS5V,EAASmmB,EAAgB,MAElCjO,GAAQlY,EAAS6V,EAAe2B,GADb4O,GAAgC,OAAjBF,EAAwB,EAAgB,GACnBD,EAAiBE,IACxElO,GAAQjY,EAAS6V,EAAeU,GAChCX,GAAS5V,EAAS6V,EAAe,MAMrC,OAFAqC,GAAQlY,EAAS,EAA4BwX,GAAS,EAAG,EAAGuO,IAC5D1P,GAAgBrW,EAASiV,EAAqB7jB,OAAS,GAChD4O,EAivDCmlB,CAA6BH,EAAmBC,EAAmBC,KAEvED,GAAqBA,EAAkB7zB,QACvC4zB,GAAqBA,EAAkB5zB,SACvCi1B,GAAoBhf,EAAM7P,MAAQ8N,IAa1C,SAASwf,GAAkBttB,GACvB,IAAI2d,EAAiBmR,GAAK9uB,GAC1B,IAAKnH,MAAMuM,QAAQuY,GAAiB,CAChC,IAAIoR,EAAWpR,EACX9N,EAAQmc,GAAShsB,GAGrB2d,EAAiBxE,GAASnZ,EAAQ8N,IA33D1C,SAASkhB,EAAoBD,EAAUE,GAEnC,IAAIzmB,EAAUymB,EAAqBrpB,QAEnC,OADA4C,EAAQ,GAA2BumB,EAC5BvmB,EAw3DCwmB,CAAoBD,EAAUlf,EAAM6c,iBAE5C,OAAO/O,EAgBX,SAASkR,GAAoB7uB,IAtkD7B,SAASkvB,EAAc1mB,EAASuL,EAAUob,EAAYC,GAClD,GAkKJ,SAASC,EAAe7mB,GACpB,OAAOqX,GAAQrX,EAAS,GAnKpB6mB,CAAe7mB,GAAU,CAIzB,IAHA,IAAImI,EAASnI,EAAQ,GAAyBmI,OAC1C2e,EAAkB/O,GAAmB/X,GACrCklB,EAAiBlN,GAAkBhY,GAC9B/O,EAAI,EAAmCA,EAAI+O,EAAQ5O,OAAQH,GAAK,EAErE,GAAIomB,GAAQrX,EAAS/O,GAAI,CACrB,IAAIslB,EAAO4B,GAAQnY,EAAS/O,GACxB8B,EAAQyiB,GAASxV,EAAS/O,GAC1B4mB,EAAOnC,GAAY1V,EAAS/O,GAC5B81B,KAAwB,EAAPlP,GAEjBmP,EAAej0B,EADI9B,EAAI61B,IAKF3Q,GAAY6Q,EAAcD,KAG/CC,EAAexR,GAASxV,EADP8V,GAAsB+B,KAStC1B,GAAY6Q,EAAcD,KAC3BC,EAAepP,GAAgB5X,EAAS6X,IAExCkP,EACAlQ,GAAS1O,EAAQoO,IAAMyQ,EAA6Bzb,EAAUqb,GAI9DtQ,GAASnO,EAAQoO,EAAMyQ,EAAczb,EADb,EAAPsM,EAA2BqN,EAAiB,KACHyB,GAE9DvQ,GAASpW,EAAS/O,GAAG,GAG7BolB,GAAgBrW,GAAS,IA8hD7B0mB,CAAc5B,GAAkBttB,GAAQ+T,IAwB5C,SAAS0b,GAAiBzvB,EAAO0vB,EAAYn0B,EAAOo0B,GAChD,IAAIC,EAAa,KACbr0B,IAIIq0B,EAHAD,EAGaja,GAAYna,GAASo0B,EAOrBp0B,GAGrBsiB,GAAgByP,GAAkBttB,GAAQ0vB,EAAYE,GAuB1D,SAASC,GAAkB7vB,EAAO8vB,EAAS9lB,IA70D3C,SAAS+lB,EAAiBvnB,EAASsnB,EAAS9lB,GAGxC,IAAIgmB,EAAwBF,IAAYtnB,EAAQ,GAC5CynB,GAHJjmB,EAASA,GAAU,QAGoBxB,EAAQ,GAC/C,IAAIwnB,IAAyBC,EAA7B,CAEA,IAAI9B,EAAa/Q,GACb8S,GAAkB,EAGjBF,IACDxnB,EAAQ,GAAmCsnB,EACrB,iBAAXA,GACP3B,EAAa2B,EAAQK,MAAM,OAG3BD,GAAkB,GAGlB/B,EAAa2B,EAAUp3B,OAAOoK,KAAKgtB,GAAW1S,IAGtD0S,EAAWA,GAAWzS,GACjB4S,IACDznB,EAAQ,GAAmCwB,GAE/C,IAAIkkB,EAAalkB,EAAStR,OAAOoK,KAAKkH,GAAUoT,GAChDpT,EAASA,GAAUqT,GAUnB,IATA,IAAI+S,EAAoBlC,EAAWt0B,OAE/By2B,GAAQ,EACRC,EAFkB/P,GAAmB/X,GAGrC+nB,EAAY,EACZC,EAAYtC,EAAWt0B,OAASu0B,EAAWv0B,OAIxC02B,EAAW9nB,EAAQ5O,QAAU22B,EAAYC,GAAW,CACvD,IAAIC,EAAiBF,GAAaH,EAIlC,IAHqBK,IAAmBR,GAA2BQ,IAAmBT,EAGpE,CACd,IAAIU,EAAoBD,EAAiBF,EAAYH,EAAoBG,EACrEI,EAAUF,EAAiBtC,EAAWuC,GAAqBxC,EAAWwC,GACtEE,EAAWH,IAAkBP,GAAyBJ,EAAQa,GAAY3mB,EAAO2mB,GAErF,IADI5R,EAAO4B,GAAQnY,EAAS8nB,MACfK,EAAS,CAClB,IAAIp1B,EAAQyiB,GAASxV,EAAS8nB,GAE1BnS,GADAkC,EAAOnC,GAAY1V,EAAS8nB,GACN/0B,EAAOq1B,KAC7BxS,GAAS5V,EAAS8nB,EAAUM,GAIxBzS,GAAgBkC,EAHhBqO,EAAetO,GAAgB5X,EAAS6X,GAGJuQ,KACpChS,GAASpW,EAAS8nB,GAAU,GAC5BD,GAAQ,QAIf,CACD,IAAIQ,EAAejQ,GAAwBpY,EAASmoB,EAASL,GAC7D,GAAIO,EAAe,EAAG,CAElB,IAAIC,EAAiB9S,GAASxV,EAASqoB,GACnCE,EAAgB7S,GAAY1V,EAASqoB,GAEzC,GADAhQ,GAAwBrY,EAAS8nB,EAAUO,GACvC1S,GAAgB4S,EAAeD,EAAgBF,GAAW,CAC1D,IAAIlC,EAAetO,GAAgB5X,EAASuoB,GAC5C3S,GAAS5V,EAAS8nB,EAAUM,GACxBzS,GAAgB4S,EAAerC,EAAckC,KAC7ChS,GAASpW,EAAS8nB,GAAU,GAC5BD,GAAQ,SAOhB7O,GAAuBhZ,EAAS8nB,EAAUG,EAAgBE,EAD5C7O,GAAmB6O,EAASF,EAAgBjQ,GAAkBhY,IACAooB,GAC5EP,GAAQ,GAIpBC,GAAY,EACZC,IAKJ,KAAOD,EAAW9nB,EAAQ5O,QAAQ,CAC9B,IACIo3B,EAA4C,IAAnB,GADzB3Q,EAAOnC,GAAY1V,EAAS8nB,OAEXU,IAAmBf,GAA2Be,IAAmBhB,IAG9DrR,GADhBpjB,EAAQyiB,GAASxV,EAAS8nB,GACSU,KAEnCpS,GAASpW,EAAS8nB,GAAU,GAC5BlS,GAAS5V,EAAS8nB,EAAU,MAC5BD,GAAQ,GAGhBC,GAAY,EAMhB,IADA,IAAI9S,EAAYgD,GAAkBhY,GAC3B+nB,EAAYC,GAAW,CAC1B,IAAIS,EAAiBV,GAAaH,EAElC,IADqBa,IAAmBhB,GAA2BgB,IAAmBjB,EACpE,CACVU,EAAoBO,EAAiBV,EAAYH,EAAoBG,EAAzE,IACIxR,EAAOkS,EAAiB9C,EAAWuC,GAAqBxC,EAAWwC,GAEnErQ,GADA9kB,EAAQ01B,IAAkBf,GAAyBJ,EAAQ/Q,GAAS/U,EAAO+U,GACd,EAAtD+C,GAAmB/C,EAAMkS,EAAgBzT,IACpDhV,EAAQ5M,KAAKykB,EAAMtB,EAAMxjB,GACzB80B,GAAQ,EAEZE,IAEAF,GACAxR,GAAgBrW,GAAS,IAitD7BunB,CAAiBzC,GAAkBttB,GAAQ8vB,EAAS9lB,GAWxD,SAAS/H,GAAKjC,EAAOzE,GAGjB,IAAI21B,EAAalZ,GAAezc,EAAOwY,IACnClE,EAAQoV,GAAkBjlB,EAAO,EAAiBkxB,EAAY,KAAM,MAExE/O,IAAW,EACXvH,GAAYsW,EAAYrhB,EAAOsJ,IASnC,SAASgY,GAAYnxB,EAAOzE,GACxB,GAAIA,IAAUspB,GAAW,CAErB,IAAIuM,EAAexF,GAAY5rB,GAI/B8T,GAAqBC,IAAYA,GAASqK,SAASgT,EAAazgB,OAAQ+E,GAAYna,IAChF61B,EAAazgB,OAAO0gB,YAAc3b,GAAYna,IAe1D,SAASgtB,GAAgBnE,EAAiBkN,EAAWvE,GACjD,IAAI1T,EAAWzD,GAASsM,GAAuB/I,IAC3C5J,EAAWgiB,GAAoBnN,EAAiBkN,EAAWvE,EAAc1T,GAkB7E,OAjBI0T,EAAaxiB,WACb8O,EAASrY,KAAKwN,IAAW8iB,GAEzBlf,KAGAL,GAAeqS,EAAiB2I,EAAa/hB,OAAQ+hB,EAAa7hB,QAAS8G,IACvE+a,EAAaviB,cACbse,GAAyB1E,IAG7BlC,IAAyBA,GAAsB9F,OAuEvD,SAASoV,EAAmBC,EAAgBliB,EAAU3E,EAAQiF,GAC1D,IAAI6hB,EAAmB7hB,EAAM4c,oBACJjvB,IAArBk0B,GAAkCD,GAAkBC,EAAiB93B,UACrE83B,EAwBR,SAASC,EAAsBF,EAAgB7mB,EAAQiF,GACnD,IAAI6hB,EAAmB7hB,EAAM4c,gBAAkB5c,EAAM4c,kBACrDiF,EAAiBD,GAAkB,KAGnC,IAFA,IAAIrV,EAAQvM,EAAMuM,MACd3iB,EAAI,EACDA,EAAI2iB,EAAMxiB,QAAQ,CACrB,IAAI2vB,EAAWnN,EAAM3iB,GACrB,GAAiB,IAAb8vB,EACA,MACJ,GAAiB,IAAbA,EAAJ,CAKA,IAAIqI,EAAoBhnB,EAAO2e,GAC3BsI,EAAYzV,EAAM3iB,EAAI,QACA+D,IAAtBo0B,IACoBF,EAAiBD,KAAoBC,EAAiBD,QAC5D71B,KAAKg2B,EAAmBC,GAE1Cp4B,GAAK,OATDA,GAAK,EAWb,OAAOi4B,EA9CgBC,CAAsBF,EAAgB7mB,EAAQiF,IAErE,IAAI4c,EAAgBiF,EAAiBD,GACrC,GAAIhF,EACA,IAAK,IAAIhzB,EAAI,EAAGA,EAAIgzB,EAAc7yB,OAAQH,GAAK,EAC3C8V,EAASkd,EAAchzB,IAAMgzB,EAAchzB,EAAI,GA9EnD+3B,CAAmBpN,EAAiB7U,EAAUwd,EAAaniB,OAAQsX,IAEnE6K,EAAatiB,gBACbsiB,EAAatiB,iBAEV8E,EAEX,SAAS+Y,GAAkBpe,GACvB,IAAImP,EAAWzD,GAASsM,GAAuB/I,IAC3CnH,EAAQ+W,GAAiB7e,EAAIK,SAAUL,EAAIE,OAAQF,EAAIG,KAAMH,EAAI+B,cAAe/B,EAAIiC,SAAUjC,EAAIoC,WAGlGmL,EAAgBqa,GAAc3Y,GAAU+I,GAAsBliB,MAAO+kB,GAAgBhD,GAAgB9N,eAAeoF,EAAS1I,OAAQzG,GAAM8H,EAAO,KAAM9H,EAAI4B,OAAS,EAAgB,EAAqB4W,OAG9MrJ,EAASrY,KAAOyW,EAChBA,EAAcrJ,IAAa8T,GACvB9P,IACAyW,KAQR,SAAS0I,GAAoBvxB,EAAOsxB,EAAWvE,EAAc1T,GAWzD,GARAxI,GAAgBygB,EAAWnY,IACvBE,GACAxI,GAAgBwI,EAAS1I,OAAQwI,IAEnB,MAAdvP,KACAuP,GAAS7K,IAAc1E,OAE3BA,GAAW5J,GAASsxB,EAChBlf,GAAmB,CACnB,IAAI3K,EAAQya,GAAsBza,MACc,IAAnC,KAARA,GAIDya,GAAsBza,MAClBzH,GAAS,GAA+C,KAARyH,EAAiC,EAKrFya,GAAsBza,YAGzB,CACD,IAAI0C,EAAW4iB,EAAa5iB,SACxBA,GACAA,EAAS4iB,GAKjB,OAH+B,MAA3BA,EAAapiB,YAAoD,GAA9BuX,GAAsBpkB,MACzDkpB,GAAgB3N,EAAS1I,OAAQoc,EAAapiB,YAE3C2mB,EAuEX,SAASS,GAAiB/e,EAAagf,GACnC,OACIA,EAAwB,KAAO,EAC/Bhf,EACA,KACA,QAEA,MAoBR,SAASzI,GAASvK,EAAOumB,EAAYnc,EAAQC,EAAMmJ,EAAS4I,EAAOjL,EAAWoW,GAE1E,IAAI1X,EAAQoiB,GAAkBjyB,EAAOwT,GAAW,KAAM4I,GAAS,MAC3DhK,KACAvC,EAAM0c,OAAStD,IAAa,EAAG1C,EAAYnc,EAAQC,EAAM2H,GAAM2W,kBAAmB3W,GAAMqX,aAAc,OAE1GpC,GAA0B9V,EAAWoW,GACrCnF,KACKA,GAAiBA,GAAeqJ,QAAQvJ,KAC7C/P,GAAoBtC,EAAMpI,MAAOuK,IACjCmQ,IAAW,EAWf,SAASzL,GAAU1W,GACf,IAAI6P,EAAQoiB,GAAkBjyB,EAAO,KAAM,MAC3CoS,KAAsBvC,EAAM0c,WAC5BpK,IAAW,EAEf,SAAS8P,GAAkBjyB,EAAOwT,EAAS4I,GAEvC,IAAI9D,EAAayZ,GAAiB5Y,IAE9B+Y,EAAUne,GAASoe,cAAwC,IAC3DtiB,EAAQoV,GAAkBjlB,EAAO,EAAmBkyB,EAAS1e,EAAS4I,EAAO9D,GAWjF,OAVAA,EAAW1E,IAAiBwG,GAAgBvK,EAAOsJ,IACnDyB,GAAYsX,EAASriB,EAAOsJ,IAG5B2Y,GAAc3Y,GAAUnZ,EAAQ8N,GAAewK,GAC3C8J,KAEA9J,EAAWpK,IAAWkU,GAAe1L,aAGlC7G,EAOX,SAASuiB,GAAsBpyB,GAC3BkiB,GAAwBvM,GAAa3V,EAAOgS,GAAMhR,MAElDmhB,IAAW,EAEXhJ,GAAS+I,GAAsBliB,OAAOgB,KAAK0S,IAAgB,EACtDyP,IAGDpQ,GAAiBoG,GAAUnH,GAAOiB,IAQ1C,SAASof,KACDlQ,GACAA,IAAW,EAKXD,GAAwBA,GAAsB/c,OAOlD,IAHA,IAAImT,EAAaa,GAAS+I,GAAsBliB,OAAOgB,KACnDsxB,EAAYha,EAAW5E,IAEpB4e,EAAYha,EAAW3E,IAAO/Z,QACjCmf,GAAWT,EAAY4J,GAAuBoQ,GA2DtD,SAASC,GAAkBC,EAAapoB,EAAQC,GAE5C,IAAIooB,EAAgD,IAA/BvQ,GAAsBpkB,KACvCokB,GAAsB/c,OACtB+c,GAEAxL,EAAYyC,GAASsZ,EAAezyB,OACpCgT,EAAcmG,GAEdb,EAAa5B,EAAU1V,KACvB2kB,EApCR,SAAS+M,EAAYpa,EAAYqa,EAAgBC,EAAUJ,GAEvD,IADA,IAAI/Z,EAAQH,EAAW3E,IACdla,EAAIm5B,EAAUn5B,EAAIgf,EAAM7e,OAAQH,IAAK,CAC1C,IAAIo5B,EAAmBpa,EAAMhf,GAAGsU,IAAOtB,GACvC,GAAIomB,IAAqBL,EACrB,OAAO/Z,EAAMhf,GAEZ,KAAIo5B,EAAmBL,GAQxB,MANAzZ,GAAWT,EAAYqa,EAAgBl5B,GAS/C,OAAO,KAkBYi5B,CAAYpa,EAAYma,EAAgBna,EAAW5E,IAAe8e,GAqBrF,OApBI7M,GACAxD,IAAW,EACXmB,GAAUqC,EAAcA,EAAa5X,IAAOmJ,QAI5CyO,EAAeZ,GAAgBhR,GA6BvC,SAAS+e,EAAyB5J,EAAW9e,EAAQC,EAAMlF,GAEvD,IAAI4tB,EAAkB5tB,EAAOonB,OAM7B,OAHIrD,GAAa6J,EAAgBn5B,QAAwC,MAA9Bm5B,EAAgB7J,MACvD6J,EAAgB7J,GAAaD,GAAYC,EAAW,KAAM9e,EAAQC,EAAM2H,GAAM2W,kBAAmB3W,GAAMqX,aAAc,OAElH0J,EAAgB7J,GArCsB4J,CAAyBN,EAAapoB,EAAQC,EAAMooB,GAAiB,KAAM,EAAqB/P,MACrIpK,EAAWpK,MACXyX,EAAazX,IAAWoK,EAAWpK,IAAS8kB,cAEhD/N,GAAkBuN,EAAa,EAAc,KAAM,KAAM,KAAM7M,GAC/DrC,GAAUqC,EAAcA,EAAa5X,IAAOmJ,OAE5CR,IACIzD,IAEAmF,GAAWuN,EAAcrN,EAAYtF,EAAasF,EAAW5E,KAAgB,GAEjF4E,EAAW5E,OAER+S,GAAed,GA0B1B,SAASsN,KACL,IAAIC,EAAW/Z,GAAS/K,IACxBwV,KACAF,GAAUvK,GAASnL,KACnBkU,GAAwBgR,EACxB/Q,IAAW,EAQf,SAASmC,GAAiB6O,EAAsBrP,GAE5C,IAIIjO,EAJUvE,GAAiB6H,GAASga,IAIjBnyB,KAEnBoyB,GAAavd,IAA+B,EAAlBA,EAAS1H,MACnC2V,GA8BR,SAASuP,EAAsB5b,GAE3B,IADA,IAAI6b,EAAiB7b,EAAc1J,IAC1BtU,EAAIge,EAAc7d,OAAQH,EAAI65B,EAAe1O,UAAUhrB,OAAQH,IACpEge,EAAche,GAAK65B,EAAe1O,UAAUnrB,GAjCjB45B,CAAsBxd,GACjD0d,GAAsB1d,EAAUA,EAASrH,MAoCjD,SAAS4kB,GAAa3c,GAClB,OAA4C,IAAtB,EAAdA,EAAKtI,KAuBjB,SAASqlB,GAAcnnB,EAAW2Q,GAC9B,IAAIyW,EAAgB/b,GAAkByB,IAAU/K,IAChD,IAAKqlB,EAAc7b,WAMf,IALA,IACI8b,EAAQD,EAAc7b,WACtB,IAAI/e,MAFcwT,EAAYA,EAAUzS,OAAS,EAAI,GAE1B2oB,KAAK,MAChCoR,EAAQD,EAAM9tB,QACdguB,EAAiBH,EAAcjiB,MACT,OAAnBoiB,GAAyB,CAC5B,IAAIC,EAAcxnB,EAAY0Q,GAAsB6W,EAAgBvnB,EAAW2Q,GAAiB,EAC5F8W,EAAWF,EAAet4B,KAC1Bq4B,EAAME,GACNF,EAAME,GAAav4B,KAAOs4B,GAG1BF,EAAMG,GAAeD,EACrBA,EAAet4B,KAAO,MAE1Bq4B,EAAME,GAAeD,EACrBA,EAAiBE,GAW7B,IAAIC,MAUJ,SAASnc,GAAWvI,EAAW2kB,EAAe5X,QACpB,IAAlB4X,IAA4BA,EAAgB,GAChD,IAAIvY,EAAkBwJ,GAAkB5V,EAAW,EAAoB,KAAM,KAAM+M,GAAS,KAAM,MAE/D,OAA/BX,EAAgB7D,aAChB6D,EAAgB7D,WAAaoc,GAEjC7R,IAAW,EAOX,IALA,IAAI1K,EAAgBC,GAAkByB,IAElC8a,EADgBxc,EAAcrJ,IACAwJ,WAAWoc,GACzCE,EAAgBzc,EAAczJ,IAC9BmJ,GAAuB,EACpB8c,GAAe,CAClB,GAA2B,IAAvBA,EAAcn2B,KAA6B,CAE3C,IAAIq2B,EAAuBzc,GAAkBwc,GAEzCE,EADuBD,EAAqB/lB,IACFwJ,WAAWqc,EAAcrc,YACvE,GAAIwc,EAAoB,CACpBL,KAAwB5c,GAAuB8c,EAC/CF,KAAwB5c,GAAuB+c,EAC/CD,EAAgBG,EAChBF,EAAgBC,EAAqBnmB,IACrC,cAGH,CACD,IAAIyC,EAAQyjB,EAAcD,EAAcj0B,OAGxCi0B,EAAcxsB,OAAS,KACvB6T,GAAoB7K,EAAOwjB,EAAexY,EAAiBtC,GAAU+a,GAI9C,OAAvBD,EAAc34B,MAAiB44B,IAAkBzc,EAAczJ,MAC/DkmB,EAAgBH,GAAsB5c,KACtC8c,EAAgBF,GAAsB5c,MAE1C8c,EAAgBA,EAAc34B,MActC,SAASw2B,GAAc9e,EAAaqhB,EAAmB1a,GAQnD,OAPI3G,EAAYpE,IACZoE,EAAYpE,IAAMX,IAAQ0L,EAErBvH,KACLJ,GAAMoH,WAAaib,GAEvBrhB,EAAYpE,IAAQ+K,EACbA,EAuBX,SAAS2a,GAAc7d,GAEnB,IADA,IAAIzD,EAAcyD,EACXzD,KAAsC,GAArBA,EAAY7E,MAChC6E,EAAY7E,KAAU,EACtB6E,EAAcA,EAAYhF,IAE9BgF,EAAY7E,KAAU,EAEtB,IAAIomB,EAAcvhB,EAAYxE,IAC1BgmB,EAAyC,IAAtBD,EAAY9sB,MACnC8sB,EAAY9sB,OAAS,EACjB+sB,GACAC,GAAaF,GAcrB,SAASE,GAAaF,GAEd,IAAIG,EADJH,EAAYI,OAAStS,KAErBkS,EAAYI,MAAQ,IAAIlyB,QAAQ,SAAUpI,GAAK,OAAOq6B,EAAQr6B,IAC9Dk6B,EAAYK,UAAU,WAKlB,GAJwB,EAApBL,EAAY9sB,QACZ8sB,EAAY9sB,QAAS,EACrBse,GAAgBwO,IAEI,EAApBA,EAAY9sB,MAA8B,CAC1C8sB,EAAY9sB,QAAS,EACrB,IAAIotB,EAAgBN,EAAYM,cAC5BA,GACAA,EAAcC,eAGtBP,EAAYI,MAAQtS,GACpBqS,EAAM,SAIlB,SAAS3O,GAAgBwO,GACrB,IAAK,IAAI96B,EAAI,EAAGA,EAAI86B,EAAY7iB,WAAW9X,OAAQH,IAAK,CACpD,IAAIs7B,EAAgBR,EAAY7iB,WAAWjY,GAC3C4sB,GAA0B9U,GAAqBwjB,GAAgBA,IAgBvE,SAASC,GAAcpzB,GAInB2xB,GAHeniB,GAAyBxP,GAGTZ,KAAMY,GAOzC,SAASqzB,GAAwB7lB,GAC7B2W,GAAgB3W,EAAUZ,KAoC9B,SAAS+kB,GAAsB1d,EAAUjU,GACrC,IAAIszB,EAAYrf,EAAS9H,IACrByV,EAAUF,GAAUzN,EAAUA,EAASzH,KACvCmY,EAAa2O,EAAU3qB,SACvB+B,EAAY4oB,EAAU5oB,UAC1B,IACI0Z,KAUR,SAASmP,EAAgB7oB,EAAW7E,EAAO7F,GACnC0K,GAAsB,EAAR7E,GACd6E,EAAU,EAAgB1K,GAX1BuzB,CAAgB7oB,EAAWuJ,EAAS1H,IAAQvM,GAC5C2kB,EAAWE,GAAe5Q,GAAWjU,GACrCgiB,KAYR,SAASwR,EAAgB9oB,EAAW1K,GAC5B0K,GACAA,EAAU,EAAgB1K,GAb1BwzB,CAAgB9oB,EAAW1K,GAE/B,QACI8hB,GAAUF,IAiClB,IAAIqB,MAMJ,SAASzlB,GAAK7D,GACV,OAAO85B,GAAelc,GAAS9K,MAAkB9S,GAASA,EAAQspB,GActE,SAASyQ,GAAe71B,GAIpB,IADA,IAAI81B,GAAY,EACP97B,EAAI,EAAGA,EAAIgG,EAAO7F,OAAQH,GAAK,EAEpC47B,GAAelc,GAAS9K,MAAkB5O,EAAOhG,MAAQ87B,GAAY,GAEzE,IAAKA,EACD,OAAO1Q,GAGX,IAAI2Q,EAAU/1B,EAAO,GACrB,IAAShG,EAAI,EAAGA,EAAIgG,EAAO7F,OAAQH,GAAK,EACpC+7B,GAAW9f,GAAYjW,EAAOhG,IAAMgG,EAAOhG,EAAI,GAEnD,OAAO+7B,EASX,SAASC,GAAeC,EAAQC,EAAIhG,GAEhC,OADgB0F,GAAelc,GAAS9K,MAAkBsnB,GACvCD,EAAShgB,GAAYigB,GAAMhG,EAAS9K,GAG3D,SAAS+Q,GAAeF,EAAQC,EAAIE,EAAIC,EAAInG,GACxC,IAAI4F,EAAYQ,GAAgB5c,GAAS9K,IAAgBsnB,EAAIG,GAE7D,OADA3c,GAAS9K,KAAkB,EACpBknB,EAAYG,EAAShgB,GAAYigB,GAAME,EAAKngB,GAAYogB,GAAMnG,EAAS9K,GAGlF,SAASmR,GAAeN,EAAQC,EAAIE,EAAIC,EAAIG,EAAIC,EAAIvG,GAChD,IAAI4F,EAAYY,GAAgBhd,GAAS9K,IAAgBsnB,EAAIG,EAAII,GAEjE,OADA/c,GAAS9K,KAAkB,EACpBknB,EAAYG,EAAShgB,GAAYigB,GAAME,EAAKngB,GAAYogB,GAAMG,EAAKvgB,GAAYwgB,GAAMvG,EACxF9K,GAGR,SAASuR,GAAeV,EAAQC,EAAIE,EAAIC,EAAIG,EAAIC,EAAIG,EAAIC,EAAI3G,GACxD,IAAI4F,EAAYgB,GAAgBpd,GAAS9K,IAAgBsnB,EAAIG,EAAII,EAAII,GAErE,OADAnd,GAAS9K,KAAkB,EACpBknB,EACHG,EAAShgB,GAAYigB,GAAME,EAAKngB,GAAYogB,GAAMG,EAAKvgB,GAAYwgB,GAAMG,EAAK3gB,GAAY4gB,GACtF3G,EACJ9K,GAGR,SAAS2R,GAAed,EAAQC,EAAIE,EAAIC,EAAIG,EAAIC,EAAIG,EAAIC,EAAIG,EAAIC,EAAI/G,GAChE,IAAI4F,EAAYgB,GAAgBpd,GAAS9K,IAAgBsnB,EAAIG,EAAII,EAAII,GAGrE,OAFAf,EAAYF,GAAelc,GAAS9K,IAAiB,EAAGqoB,IAAOnB,EAC/Dpc,GAAS9K,KAAkB,EACpBknB,EACHG,EAAShgB,GAAYigB,GAAME,EAAKngB,GAAYogB,GAAMG,EAAKvgB,GAAYwgB,GAAMG,EAAK3gB,GAAY4gB,GAAMG,EAC5F/gB,GAAYghB,GAAM/G,EACtB9K,GAGR,SAAS8R,GAAejB,EAAQC,EAAIE,EAAIC,EAAIG,EAAIC,EAAIG,EAAIC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIlH,GACxE,IAAI4F,EAAYgB,GAAgBpd,GAAS9K,IAAgBsnB,EAAIG,EAAII,EAAII,GAGrE,OAFAf,EAAYQ,GAAgB5c,GAAS9K,IAAiB,EAAGqoB,EAAIG,IAAOtB,EACpEpc,GAAS9K,KAAkB,EACpBknB,EACHG,EAAShgB,GAAYigB,GAAME,EAAKngB,GAAYogB,GAAMG,EAAKvgB,GAAYwgB,GAAMG,EAAK3gB,GAAY4gB,GAAMG,EAC5F/gB,GAAYghB,GAAME,EAAKlhB,GAAYmhB,GAAMlH,EAC7C9K,GAGR,SAASiS,GAAepB,EAAQC,EAAIE,EAAIC,EAAIG,EAAIC,EAAIG,EAAIC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIrH,GAChF,IAAI4F,EAAYgB,GAAgBpd,GAAS9K,IAAgBsnB,EAAIG,EAAII,EAAII,GAGrE,OAFAf,EAAYY,GAAgBhd,GAAS9K,IAAiB,EAAGqoB,EAAIG,EAAIG,IAAOzB,EACxEpc,GAAS9K,KAAkB,EACpBknB,EACHG,EAAShgB,GAAYigB,GAAME,EAAKngB,GAAYogB,GAAMG,EAAKvgB,GAAYwgB,GAAMG,EAAK3gB,GAAY4gB,GAAMG,EAC5F/gB,GAAYghB,GAAME,EAAKlhB,GAAYmhB,GAAME,EAAKrhB,GAAYshB,GAAMrH,EACpE9K,GAGR,SAASoS,GAAevB,EAAQC,EAAIE,EAAIC,EAAIG,EAAIC,EAAIG,EAAIC,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIxH,GACxF,IAAI4F,EAAYgB,GAAgBpd,GAAS9K,IAAgBsnB,EAAIG,EAAII,EAAII,GAGrE,OAFAf,EAAYgB,GAAgBpd,GAAS9K,IAAiB,EAAGqoB,EAAIG,EAAIG,EAAIG,IAAO5B,EAC5Epc,GAAS9K,KAAkB,EACpBknB,EACHG,EAAShgB,GAAYigB,GAAME,EAAKngB,GAAYogB,GAAMG,EAAKvgB,GAAYwgB,GAAMG,EAAK3gB,GAAY4gB,GAAMG,EAC5F/gB,GAAYghB,GAAME,EAAKlhB,GAAYmhB,GAAME,EAAKrhB,GAAYshB,GAAME,EAAKxhB,GAAYyhB,GAAMxH,EAC3F9K,GAGR,SAAS7F,GAAMhf,EAAOzE,GAGlB,IAAIqkB,EAAgB5f,EAAQ8N,GACxB8R,GAAiB5N,GAAMhR,KAAKpH,SAC5BoY,GAAMhR,KAAK4e,GAAiB,MAEhCzG,GAASyG,GAAiBrkB,EAU9B,SAAS67B,GAAUp3B,GACf,OAAO2V,GAAa3V,EAAO8iB,IAW/B,SAASuU,GAAcr3B,GAGnB,OAAO4J,GAAW5J,GAEtB,SAASs3B,GAAcC,GAGnB,OAAOpe,GAASrK,IAAiByoB,GAGrC,SAASzI,GAAK9uB,GACV,OAAO2V,GAAa3V,EAAOmZ,IAE/B,SAASyS,GAAY5rB,GACjB,OApvHJ,SAASw3B,EAAoBx3B,EAAOsT,GAEhC,OAAOhC,GADKqE,GAAa3V,EAAOsT,IAmvHzBkkB,CAAoBx3B,EAAOmZ,IAEtC,SAAS6S,GAAShsB,GACd,OAAOgS,GAAMhR,KAAKhB,EAAQ8N,IAG9B,SAAS2pB,GAAWC,GAIhB,OAAOve,GAASue,GAGpB,SAASrC,GAAeqC,EAAcn8B,GAGlC,GAAI4d,GAASue,KAAkB7S,GAC3B1L,GAASue,GAAgBn8B,MAExB,CAAA,IA7zHT,SAASo8B,EAAYp0B,EAAG9K,EAAG0qB,GAMvB,QAAS5f,GAAMA,GAAK9K,GAAMA,IAAM8K,IAAM9K,EAuzH7Bk/B,CAAYxe,GAASue,GAAen8B,GAKzC,OAAO,GAtiIf,SAASq8B,EAA0B3kB,EAAckQ,EAAoB0U,EAAU9Z,GAC3E,GAAIoF,EAAoB,CACpB,IAAI2U,EAAM,8GAAgHD,EAAW,sBAAwB9Z,EAAY,KAOzK,MANI9K,IACA6kB,GACI,wJAIF,IAAI57B,MAAM47B,IAyhIhBF,CAA0B3kB,GAAckQ,GAAoBhK,GAASue,GAAen8B,GACpF4d,GAASue,GAAgBn8B,EAK7B,OAAO,EAGX,SAASw8B,GAAcL,EAAcn8B,GACjC,OAAO4d,GAASue,GAAgBn8B,EAGpC,SAASw6B,GAAgB2B,EAAcM,EAAMC,GACzC,IAAI1C,EAAYF,GAAeqC,EAAcM,GAC7C,OAAO3C,GAAeqC,EAAe,EAAGO,IAAS1C,EAGrD,SAASY,GAAgBuB,EAAcM,EAAMC,EAAMC,GAC/C,IAAI3C,EAAYQ,GAAgB2B,EAAcM,EAAMC,GACpD,OAAO5C,GAAeqC,EAAe,EAAGQ,IAAS3C,EAGrD,SAASgB,GAAgBmB,EAAcM,EAAMC,EAAMC,EAAMC,GACrD,IAAI5C,EAAYQ,GAAgB2B,EAAcM,EAAMC,GACpD,OAAOlC,GAAgB2B,EAAe,EAAGQ,EAAMC,IAAS5C,EAE5D,SAAS6C,KACL,OAAOpmB,GAMX,SAASqmB,GAAqBC,GAC1B,IAAIC,GAA6Bpf,GAASrK,MAAqBqK,GAASrK,SAAwBlT,KAAK08B,GACrG,GAAIlmB,GAAmB,CACnB,IAAIomB,EAAwB5uB,GAAWhQ,OAAS,EAC5C6+B,EAAsBzmB,GAAMvH,iBAAmBuH,GAAMvH,mBAErD+tB,KAD0BxmB,GAAMvH,eAAe7Q,OAASoY,GAAMvH,eAAeuH,GAAMvH,eAAe7Q,OAAS,IAAM,IAEjH6+B,EAAoB78B,KAAK48B,EAAuBD,EAA4B,IAoBxF,IAAIG,GAAgBrW;;;;;;;OA6DpB,SAASsW,GAAoBthB,EAAauhB,EAAcrf,EAAUgb,EAAasE,GAE3E,IAAIj3B,EAAY2vB,GAAoB,EAAGqH,EAAajhC,UAAWihC,EAAcvhB,GAO7E,OANIuhB,EAAapuB,cACbse,GAAyB,GAC7ByL,EAAY7iB,WAAW9V,KAAKgG,GAC5ByV,EAAYrW,KAAKwN,IAAW5M,EAC5Bi3B,GAAgBA,EAAa1wB,QAAQ,SAAUuE,GAAW,OAAOA,EAAQ9K,EAAWg3B,KACpF/U,GAAgBtK,EAASxL,IAAOvD,cACzB5I,EAEX,SAASk3B,GAAkBlE,EAAWC,GAClC,OACInjB,cACAkjB,UAAWA,EACXD,MAAO+D,GACP7D,cAAeA,GAAiB,KAChCptB,MAAO,GAgBf,SAASsxB,GAAsBn3B,EAAWsI,GACtC,IAAI8uB,EAAYznB,GAAqB3P,GAAWmM,IAEhDgE,GAAe,EAAG7H,EAAIc,OAAQd,EAAIgB,QAAS8tB,GAE3C7mB,GAAoB,EAAG6mB;;;;;;;;AA4C3B,SAASC,GAAeC,GAEpB,MAA+B,mBADrBA,EACQ3uB,SAStB,SAAS4uB,GAAyBD,GA+I9B,IA9IA,IAAIE,EARR,SAASC,EAAav7B,GAClB,OAAOpF,OAAO4gC,eAAex7B,EAAK3E,WAAWD,YAO7BmgC,CAAaH,EAAWp7B,MACpCy7B,EAAU,WACV,IAAIC,EAAKx6B,EACLy6B,OAAWj8B,EACf,GAAIy7B,GAAeC,GAEfO,EAAWL,EAAU98B,gBAAkB88B,EAAU58B,mBAEhD,CACD,GAAI48B,EAAU98B,eACV,MAAM,IAAIJ,MAAM,wCAGpBu9B,EAAWL,EAAU58B,eAEzB,IAAIk9B,EAAUN,EAAUl8B,UAGxB,GAAIw8B,GAAWD,EAAU,CACrB,IAAIE,EAAeT,EACnBS,EAAa/uB,OAASgvB,GAAiBV,EAAWtuB,QAClD+uB,EAAa9vB,eAAiB+vB,GAAiBV,EAAWrvB,gBAC1D8vB,EAAa7uB,QAAU8uB,GAAiBV,EAAWpuB,SAQvD,GANI4uB,IAEAv9B,EAAe+8B,EAAWtuB,OAAQ8uB,EAAQ9uB,QAC1CzO,EAAe+8B,EAAWrvB,eAAgB6vB,EAAQ7vB,gBAClD1N,EAAe+8B,EAAWpuB,QAAS4uB,EAAQ5uB,UAE3C2uB,EAAU,CAEV,IAAII,EAAqBX,EAAW1uB,aAChCsvB,EAAsBL,EAASjvB,aAanC,GAZIsvB,IAEIZ,EAAW1uB,aADXqvB,EAC0B,SAAUpI,EAAgBsI,GAChDD,EAAoBrI,EAAgBsI,GACpCF,EAAmBpI,EAAgBsI,IAIbD,GAI9Bb,GAAeC,IAAeD,GAAeQ,GAAW,CACxD,IAAIO,EAAkBd,EAAW5sB,UAC7B2tB,EAAmBR,EAASntB,UAC5B2tB,IAEIf,EAAW5sB,UADX0tB,EACuB,SAAUpU,EAAIsU,GACjCD,EAAiBrU,EAAIsU,GACrBF,EAAgBpU,EAAIsU,IAIDD,GAKnC,IAAIE,EAAuBjB,EAAWzuB,eAClC2vB,EAAwBX,EAAShvB,eACjC2vB,IAEIlB,EAAWzuB,eADX0vB,EAC4B,WACxBC,IACAD,KAIwBC,GAIpC,IAAIC,EAA8BnB,EAAWxuB,sBACzC4vB,EAA+Bb,EAAS/uB,sBACxC4vB,IAEIpB,EAAWxuB,sBADX2vB,EACmC,SAAU5I,EAAgB8I,GACzDD,EAA6B7I,EAAgB8I,GAC7CF,EAA4B5I,EAAgB8I,IAIbD,GAI3Cn+B,EAAe+8B,EAAWtuB,OAAQ6uB,EAAS7uB,QAC3CzO,EAAe+8B,EAAWrvB,eAAgB4vB,EAAS5vB,gBACnD1N,EAAe+8B,EAAWpuB,QAAS2uB,EAAS3uB,SAG5CouB,EAAW5tB,oBACP4tB,EAAW5tB,qBAAuBmuB,EAASnuB,oBAC/C4tB,EAAW9tB,iBAAmB8tB,EAAW9tB,kBAAoBquB,EAASruB,iBACtE8tB,EAAWxtB,iBAAmBwtB,EAAWxtB,kBAAoB+tB,EAAS/tB,iBACtEwtB,EAAW1tB,cAAgB0tB,EAAW1tB,eAAiBiuB,EAASjuB,cAChE0tB,EAAWhuB,QAAUguB,EAAWhuB,SAAWuuB,EAASvuB,QACpDguB,EAAWttB,UAAYstB,EAAWttB,WAAa6tB,EAAS7tB,UACxDstB,EAAWluB,OAASkuB,EAAWluB,QAAUyuB,EAASzuB,OAElD,IAAIuB,EAAWktB,EAASltB,SACxB,GAAIA,EACA,IACI,IAAK,IAAIiuB,EAAav/B,EAASsR,GAAWkuB,EAAeD,EAAWl/B,QAASm/B,EAAaj/B,KAAMi/B,EAAeD,EAAWl/B,OAAQ,CAC9H,IAAIoR,EAAU+tB,EAAal/B,MACvBmR,GAAWA,IAAYysB,IACvBzsB,EAAQwsB,IAIpB,MAAOwB,GAASlB,GAAQ39B,MAAO6+B,GAC/B,QACI,IACQD,IAAiBA,EAAaj/B,OAASwD,EAAKw7B,EAAWG,SAAS37B,EAAGnF,KAAK2gC,GAEhF,QAAU,GAAIhB,EAAK,MAAMA,EAAI39B,OAGrC,MAAO,QAIP,IAAI++B,EAAiBxB,EAAUjgC,UAC3ByhC,IACA1B,EAAW5tB,oBACP4tB,EAAW5tB,qBAAuBsvB,EAAetvB,oBACrD4tB,EAAW9tB,iBACP8tB,EAAW9tB,kBAAoBwvB,EAAexvB,iBAClD8tB,EAAWxtB,iBACPwtB,EAAWxtB,kBAAoBkvB,EAAelvB,iBAClDwtB,EAAW1tB,cAAgB0tB,EAAW1tB,eAAiBovB,EAAepvB,cACtE0tB,EAAWhuB,QAAUguB,EAAWhuB,SAAW0vB,EAAe1vB,QAC1DguB,EAAWttB,UAAYstB,EAAWttB,WAAagvB,EAAehvB,UAC9DstB,EAAWluB,OAASkuB,EAAWluB,QAAU4vB,EAAe5vB,QAGhEouB,EAAY1gC,OAAO4gC,eAAeF,IAE/BA,GAEa,UADFG,OAKtB,SAASK,GAAiBr+B,GACtB,OAAIA,IAAU6N,MAGL7N,IAAU8N,MAIR9N;;;;;;;OAWf,IAAIs/B,GAAiB,iBAqBrB,SAASC,GAAmB5B,GACxB,IAAI6B,EAA2B7B,EAAWrvB,eACtCmxB,EAAQ9B,EAAWp7B,KAAK3E,UACxBogC,EAAU,SAAUjsB,GACpB,GAAIytB,EAAyBhiC,eAAeuU,GAAe,CAOvD,IANA,IAAIF,EAAc2tB,EAAyBztB,GACvC2tB,EAAkBJ,GAAiBztB,EAGnC8tB,OAAmB19B,EACnB29B,EAAaH,GACTE,GAAoBC,GACxBziC,OAAO4gC,eAAe6B,KAAgBziC,OAAO4gC,eAAe5gC,OAAOS,YACnE+hC,EAAmBxiC,OAAO4B,yBAAyB6gC,EAAY/tB,GAC/D+tB,EAAaziC,OAAO4gC,eAAe6B,GAEvC,IACIC,EAAWF,GAAoBA,EAAiB50B,IAEpD5N,OAAO+B,eAAeugC,EAAO5tB,GACzBpI,IAJSk2B,GAAoBA,EAAiBl2B,MAKzCo2B,OAAW59B,EAAY,WAAc,OAAOlF,KAAK2iC,KACtD30B,IAAK,SAAU/K,GACX,IAAI8/B,EAAgB/iC,KAAKuiC,IACpBQ,IACDA,KAEA3iC,OAAO+B,eAAenC,KAAMuiC,IAAkBt/B,MAAO8/B,EAAeC,UAAU,KAElF,IAAI9lB,GAAiBld,KAAKS,eAAekiC,GACrCM,EAAgBF,EAAc/tB,GAC9BiuB,EACAA,EAAcjmB,aAAe/Z,EAG7B8/B,EAAc/tB,GACV,IAAI8H,GAAa9c,KAAK2iC,GAAkB1/B,EAAOia,GAEnDA,EAEA9c,OAAO+B,eAAenC,KAAM2iC,GAAmB1/B,MAAOA,EAAO+/B,UAAU,IAGvEhjC,KAAK2iC,GAAmB1/B,EAExB6/B,GACAA,EAASvhC,KAAKvB,KAAMiD,IAG5BigC,cAAc,MAI1B,IAAK,IAAIluB,KAAgBytB,EACrBxB,EAAQjsB,GAKa,MAArB4rB,EAAWluB,SACXkuB,EAAWluB,OAASywB,GAAiBvC,EAAWluB,SAEpDkuB,EAAWhuB,QAAUuwB,GAAiBvC,EAAWhuB,SAErD,SAASuwB,GAAiBC,GACtB,OAAO,WACH,IAAIL,EAAgB/iC,KAAKuiC,IACJ,MAAjBQ,IACA/iC,KAAKqjC,YAAYN,GACjB/iC,KAAKuiC,IAAkB,MAEvBa,GACAA,EAAa5hC,MAAMxB;;;;;;;OAc/B,IAyDWsjC,GAzDPC,GACA,SAASA,GAAoBpvB,EAAI5K,EAAai6B,EAAWhyB,EAAeE,EAAQC,GAC5E3R,KAAKmU,GAAKA,EACVnU,KAAKuJ,YAAcA,EACnBvJ,KAAKwjC,UAAYA,EACjBxjC,KAAKwR,cAAgBA,EACrBxR,KAAK0R,OAASA,EACd1R,KAAK2R,WAAaA,GAOtB8xB,GACA,SAASA,OAOTC,GACA,SAASA,OAmBTC,IAfuB,IAAIj+B,EAAe,wBAgB1C,SAASi+B,QASTC,GACA,SAASA,QAIFN,GASRhkC,EAAQgkC,sBAAwBhkC,EAAQgkC,yBALnBA,GAA+B,UAAI,GAAK,YAI5DA,GAAoBA,GAA8B,SAAI,GAAK,WAiB/D,IAAIO,GACA,SAASA,OAoBTC,GAAQ,EACRC,GAAkB,EAClBC,GAAgB,EAehBC,GAAaC,IAEbC,GAAkB;;;;;;;;;;;;;;OAwCtB,SAASC,KAEL,OAAOC,GAA+B5Z,KAA4BC,MAStE,SAAS2Z,GAA+B9sB,EAAOgG,GAC3C,IAAI+mB,EAkCR,SAASC,EAAiBhtB,EAAOgG,GAC7B,OAA6B,IAAzBhG,EAAM2c,eAGL3c,EAAM1K,QAAU0K,EAAM1K,OAAOqnB,gBAAkB3c,EAAM2c,eAGH,MAAnD3W,EAAShG,EAAM2c,cAAgB6P,KACvB,EAGDxsB,EAAM2c,cA7CWqQ,CAAiBhtB,EAAOgG,GACpD,IAA+B,IAA3B+mB,EACA,OAAOA,EAEX,IAAI5qB,EAAQ6D,EAAS9H,IACjBiE,EAAMI,oBAENvC,EAAM2c,cAAgB3W,EAASjc,OAC/BkjC,GAAW9qB,EAAMhR,KAAM6O,GACvBitB,GAAWjnB,EAAU,MACrBinB,GAAW9qB,EAAM4S,UAAW,MAC5B5S,EAAMwS,uBAAyB8X,IAEnC,IAAIS,EAAYC,GAA0BntB,EAAOgG,GAC7ConB,EAA0B,MAAZF,EACdxkB,EAAa2kB,GAAsBH,EAAWlnB,GAC9CsnB,EAAa5kB,EAAWxK,IAAO/M,KAC/BwrB,EAAgB3c,EAAM2c,cAG1B,IAAmB,IAAfuQ,EACA,IAAK,IAAItjC,EAAI,EAAGA,EAAI4iC,GAAiB5iC,IAAK,CACtC,IAAI2jC,EAAaH,EAAcxjC,EAG/Boc,EAAS2W,EAAgB/yB,GAAK8e,EAAW6kB,GAAcD,EAAWC,GAI1E,OADAvnB,EAAS2W,EAAgB6P,IAAmBU,EACrCvQ,EAEX,SAASsQ,GAAWxpB,EAAK+pB,GACrB/pB,EAAI1X,KAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAGyhC,GAoBrC,SAASL,GAA0BntB,EAAO4G,GACtC,GAAI5G,EAAM1K,SAA0C,IAAhC0K,EAAM1K,OAAOqnB,cAC7B,OAAO3c,EAAM1K,OAAOqnB,cAOxB,IAFA,IAAItW,EAAYO,EAAKrI,IACjBkvB,EAAa,EACVpnB,IAA0C,IAA7BA,EAAUsW,eAE1BtW,GADAO,EAAOA,EAAK1H,KACKX,IACjBkvB,IAEJ,OAAOpnB,EACHA,EAAUsW,cAAiB8Q,GAAc,IACxC,EAWT,SAASJ,GAAsBK,EAAUC,GAOrC,IANA,IAAIF,EAAaC,GAAY,GACzBhlB,EAAailB,EAKVF,EAAa,GAChB/kB,EAAaA,EAAWxJ,IACxBuuB,IAEJ,OAAO/kB,EAgBX,SAASpO,GAASD,IARlB,SAASuzB,EAAmBjR,EAAe/V,EAAMvM,IA7IjD,SAASwzB,EAASlR,EAAexa,EAAOlU,GACpC,GAAIkU,EAAMI,kBAAmB,CACzB,IAAI3F,EAAK3O,EAAKX,GAGJ,MAANsP,IACAA,EAAK3O,EAAKX,GAAiBs/B,MAI/B,IAAIkB,EAAWlxB,EAAK8vB,GAIhBqB,EAAO,GAAKD,EAIZE,EAAgB,GAAXF,EACLG,EAAgB,GAAXH,EACLrY,EAAQtT,EAAMhR,KAHE,IAAX28B,EAKLE,EAAMC,EAAMxY,EAAMkH,EAAgB,IAAMoR,EAAStY,EAAMkH,EAAgB,IAAMoR,EACxEE,EAAMxY,EAAMkH,EAAgB,IAAMoR,EAAStY,EAAMkH,EAAgB,IAAMoR,EAG5EC,EAAMC,EAAMxY,EAAMkH,EAAgB,IAAMoR,EAAStY,EAAMkH,EAAgB,IAAMoR,EACxEE,EAAMxY,EAAMkH,EAAgB,IAAMoR,EAAStY,EAAMkH,IAAkBoR,GAmHhFF,CAASlR,EAAe/V,EAAK1I,IAAQ7D,EAAIpM,MAQzC2/B,CAAmBf,KAA2B1Z,KAAgB9Y,GAElE,SAAS6zB,GAAgBr6B,EAAO+D,GAE5B,YADc,IAAVA,IAAoBA,EAAQ,GACzBu2B,GAAsBtB,KAA2B1Z,KAAgBtf,EAAO+D,GAEnF,SAASw2B,KACL,OAAOC,GAAqBlb,MAiChC,SAASmb,GAAgBC,GACrB,IAGIhiB,EAHQ2G,KAGM3G,MAClB,GAAIA,EACA,IAAK,IAAI3iB,EAAI,EAAGA,EAAI2iB,EAAMxiB,OAAQH,GAAQ,EAAG,CACzC,IAAI8vB,EAAWnN,EAAM3iB,GACrB,GAAiB,IAAb8vB,EACA,MACJ,GAAIA,GAAY6U,EACZ,OAAOhiB,EAAM3iB,EAAI,IAMjC,SAASykC,GAAqBznB,GAC1B,IAAI1C,EAAW0C,EAAK/H,IACpB,GAAIoF,GAAqBC,GACrB,OAAOA,EAGP,MAAM,IAAI7X,MAAM,gEAcxB,SAAS8hC,GAAsBK,EAAoBxoB,EAAUnS,EAAO+D,QAClD,IAAVA,IAAoBA,EAAQ,GAChC,IAAI62B,EAqHR,SAASC,EAAsB76B,GAC3B,IAAI86B,EAAU96B,EAAMvG,GACpB,MAA0B,iBAAZqhC,EAAuBA,EAAUjC,GAAaiC,EAvH5CD,CAAsB76B,GAGtC,GAAyB,mBAAd46B,EACP,OAAOA,IAGX,GAAiB,MAAbA,EAAmB,CACnB,IAAI9R,EAAgB6R,EAChBI,EAAe5oB,EAMnB,IALY,EAARpO,IAEA+kB,EAAiC,OAD7BkS,EAAiBD,EAAajS,EAAgB6P,KAElDoC,EAAevB,GAAsBwB,EAAgBD,KAE/B,IAAnBjS,GAAsB,CAGzB,MAA0B,IAAnBA,IAECmS,GAAiBL,EAAW9R,EAAeiS,EAAa1wB,IAAO/M,OAF1C,CAKzB,GAAY,EAARyG,GACQ,EAARA,IACKm3B,GAAaH,EAAajS,EAAgB6P,KAAmB,CAClE7P,GAAiB,EACjB,MAKJ,IAAImS,GAAiBL,EAAW9R,EAAeiS,GAK1C,CACDjS,GAAiB,EACjB,MANA,IAAIqS,EAAmBJ,EAAajS,EAAgB6P,IACpD7P,EAAmC,MAAnBqS,EAChBJ,EAAevB,GAAsB2B,EAAkBJ,GAS/D,IAAuB,IAAnBjS,EACA,MAIJ,IAYIkS,EAZAnvB,OAAW,EACf,GAAIA,EAAWuvB,GAA2BtS,EAAeiS,EAAc/6B,GACnE,OAAO6L,EAIX,GAAIid,IAAkB6R,GAAsBxoB,IAAa4oB,IACpDlvB,EAAWwvB,GAA+Br7B,EAAO+6B,EAAa1wB,MAC/D,OAAOwB,EAKXid,EAAiC,OAD7BkS,EAAiBD,EAAajS,EAAgB6P,KAElDoC,EAAevB,GAAsBwB,EAAgBD,IAG7D,IACIO,EAAiBn2B,GADAgN,EAASpH,KAE9B,IACI,OAAOlJ,GAAO7B,EAAO+D,GAEzB,QACIoB,GAAmBm2B,IAG3B,SAASD,GAA+Br7B,EAAOwxB,GAC3C,IAAIvN,EAAUuN,EAAUtN,eACxB,GAAID,EACA,IAAK,IAAIluB,EAAI,EAAGA,EAAIkuB,EAAQ/tB,OAAQH,GAAK,EAAG,CACxC,IAAIyQ,EAAMyd,EAAQluB,GAClB,GAAIyQ,EAAIpM,OAAS4F,EACb,OAAOqkB,GAAiB7d,EAAKzQ,EAAI,EAAGkuB,EAASuN,GAIzD,OAAO,KAEX,SAAS4J,GAA2BtS,EAAeiS,EAAc/6B,GAC7D,IACIu7B,EADQR,EAAa1wB,IAAO/M,KAAKwrB,EAAgB4P,IAC/B30B,MAClBqK,EAAoB,KAAZmtB,EACZ,GAAc,IAAVntB,EAIA,IAHA,IAAIO,EAAQ4sB,GAAa,GACrB3sB,EAAMD,EAAQP,EACd2S,EAAOga,EAAa1wB,IAAOnE,WACtBnQ,EAAI4Y,EAAO5Y,EAAI6Y,EAAK7Y,IAAK,CAG9B,IAAIszB,EAAetI,EAAKhrB,GACxB,GAAIszB,EAAajvB,OAAS4F,GAASqpB,EAAa5iB,SAC5C,OAAOs0B,EAAanwB,IAAY7U,GAI5C,OAAO,KAiBX,SAASklC,GAAiBL,EAAW9R,EAAeiS,GAIhD,IAEIZ,EAAiB,GAAZS,EACLR,EAAiB,GAAZQ,EAeT,UAjBqB,IAAZA,EAQGT,EAAMC,EAAKW,EAAajS,EAAgB,GAAKiS,EAAajS,EAAgB,GAC7EsR,EAAKW,EAAajS,EAAgB,GAAKiS,EAAajS,EAAgB,GAGjEqR,EAAMC,EAAKW,EAAajS,EAAgB,GAAKiS,EAAajS,EAAgB,GAC7EsR,EAAKW,EAAajS,EAAgB,GAAKiS,EAAajS,IAdlD,GAAK8R,GA0BpB,SAASM,GAAaF,GAClB,QAASA,GAAmBA,GAAkB,IAA8B,EAEhF,IAAIQ,GAA8B,WAC9B,SAASA,EAAaC,EAAQC,GAC1B9mC,KAAK6mC,OAASA,EACd7mC,KAAK8mC,UAAYA,EACjB9mC,KAAK+mC,eAAiB1C,GAA+BwC,EAAQC,GASjE,OAPAF,EAAa/lC,UAAU6L,IAAM,SAAUtB,GACnC,OAAIA,IAAUy4B,GACH+B,GAAqB5lC,KAAK8mC,YA5sG7C,SAASE,EAAezvB,EAAO4G,GAC3ByL,GAAwBrS,EACxBsJ,GAAW1C,EA4sGP6oB,CAAehnC,KAAK6mC,OAAQ7mC,KAAK8mC,WAC1BpB,GAAsB1lC,KAAK+mC,eAAgB/mC,KAAK8mC,UAAW17B,KAE/Dw7B,EAbsB,GAejC,SAASK,GAAazhC,GAClB,IAAI0hC,EAAU1hC,EACVoM,EAAMyC,GAAgB6yB,IAAY5yB,GAAgB4yB,IAClD3yB,GAAW2yB,IAAY3hC,EAAiB2hC,IAAYzhC,EAAeyhC,GACvE,OAAKt1B,QAAuB1M,IAAhB0M,EAAIvS,QAGTuS,EAAIvS,QAFA,KAIf,SAAS8nC,GAAoB3hC,GACzB,IACInG,EAAU4nC,GADF7mC,OAAO4gC,eAAex7B,EAAK3E,WAAWD,aAElD,OAAgB,OAAZvB,EACOA,EAOA,SAAU4B,GAAK,OAAO,IAAIA;;;;;;;OAiBzC,SAASmmC,GAAcxG,GACnBA,EAAW/uB,SAAWA;;;;;;;OAgB1B,IAAIw1B,GACA,SAASA,OAITC,GACA,SAASA;;;;;;;;AAYb,SAASC,GAAwBj+B,GAC7B,IAAI/F,EAAQK,MAAM,kCAAoCuH,GAAU7B,GAAa,kDAE7E,OADA/F,EAAMikC,IAAmBl+B,EAClB/F,EAEX,IAwVIkkC,GAsBAC,GAmDAC,GAjaAH,GAAkB,cAClBI,GAA+C,WAC/C,SAASA,KAKT,OAHAA,EAA8B/mC,UAAUgnC,wBAA0B,SAAUv+B,GACxE,MAAMi+B,GAAwBj+B,IAE3Bs+B,EANuC,GAQ9CE,GAA0C,WAC1C,SAASA,KAGT,OADAA,EAAyB96B,KAAO,IAAI46B,GAC7BE,EAJkC,GAMzCC,GAAiD,WACjD,SAASA,EAAgCC,EAAWC,EAASC,GACzDloC,KAAKioC,QAAUA,EACfjoC,KAAKkoC,UAAYA,EACjBloC,KAAKmoC,WAAa,IAAIz9B,IACtB,IAAK,IAAIvJ,EAAI,EAAGA,EAAI6mC,EAAU1mC,OAAQH,IAAK,CACvC,IAAI9B,EAAU2oC,EAAU7mC,GACxBnB,KAAKmoC,WAAWn6B,IAAI3O,EAAQ+oC,cAAe/oC,IAanD,OAVA0oC,EAAgClnC,UAAUgnC,wBAA0B,SAAUv+B,GAC1E,IAAIjK,EAAUW,KAAKmoC,WAAWz7B,IAAIpD,GAIlC,IAHKjK,GAAWW,KAAKioC,UACjB5oC,EAAUW,KAAKioC,QAAQJ,wBAAwBv+B,KAE9CjK,EACD,MAAMkoC,GAAwBj+B,GAElC,OAAO,IAAI++B,GAA8BhpC,EAASW,KAAKkoC,YAEpDH,EApByC,GAsBhDM,GAA+C,SAAUC,GAEzD,SAASD,EAA8BhpC,EAASkpC,GAC5C,IAAIC,EAAQF,EAAO/mC,KAAKvB,OAASA,KAQjC,OAPAwoC,EAAMnpC,QAAUA,EAChBmpC,EAAMD,SAAWA,EACjBC,EAAM//B,SAAWpJ,EAAQoJ,SACzB+/B,EAAMJ,cAAgB/oC,EAAQ+oC,cAC9BI,EAAMC,mBAAqBppC,EAAQopC,mBACnCD,EAAMl2B,OAASjT,EAAQiT,OACvBk2B,EAAMh2B,QAAUnT,EAAQmT,QACjBg2B,EAKX,OAfA9nC,EAAU2nC,EAA+BC,GAYzCD,EAA8BxnC,UAAUC,OAAS,SAAU0P,EAAUk4B,EAAkBC,EAAoBJ,GACvG,OAAOvoC,KAAKX,QAAQyB,OAAO0P,EAAUk4B,EAAkBC,EAAoBJ,GAAYvoC,KAAKuoC,WAEzFF,EAhBuC,CAiBhDf,IAiBEsB,GACA,SAASA,OAOTC,GACA,SAASA,OAYTC,GAAyB,WACzB,SAASA,EAAQC,EAAOC,EAAUC,GAC9BjpC,KAAKgpC,SAAWA,EAChBhpC,KAAKipC,gBAAkBA,EACvBjpC,KAAKkpC,QAAU,KACflpC,KAAKmpC,kBAAoB,KAIzBnpC,KAAKopC,WAAa,KAClBppC,KAAK+oC,MAAQA,EAoNjB,OAlNA3oC,OAAO+B,eAAe2mC,EAAQjoC,UAAW,WACrC6L,IAAK,WAAc,OAAO1M,KAAKgpC,SAAWhpC,KAAKgpC,SAAWhpC,KAAKqpC,kBAC/DC,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAe2mC,EAAQjoC,UAAW,aACrC6L,IAAK,WACD,OAAoD,KAAxB,GAApB1M,KAAK+oC,MAAMlzB,MAEvByzB,YAAY,EACZpG,cAAc,IAElB4F,EAAQjoC,UAAUghB,QAAU,WACpB7hB,KAAKmpC,mBAAqBrO,GAAa96B,KAAK+oC,SAC5C/oC,KAAKmpC,kBAAkBI,OAAOvpC,KAAKmpC,kBAAkBz9B,QAAQ1L,OAC7DA,KAAKmpC,kBAAoB,MAE7BxoB,GAAa3gB,KAAK+oC,QAEtBD,EAAQjoC,UAAUyS,UAAY,SAAUk2B,GAAYpX,GAAepyB,KAAK+oC,MAAOS,IAmC/EV,EAAQjoC,UAAU4oC,aAAe,WAAczN,GAAch8B,KAAK+oC,QAsDlED,EAAQjoC,UAAU0oC,OAAS,WAAcvpC,KAAK+oC,MAAMlzB,MAAU,GAyD9DizB,EAAQjoC,UAAU6oC,SAAW,WAAc1pC,KAAK+oC,MAAMlzB,KAAU,GAsBhEizB,EAAQjoC,UAAU67B,cAAgB,WAC9B,IAAIjT,EAAkBU,KAClBV,EAAgByE,OAChBzE,EAAgByE,QAEpBwO,GAAc18B,KAAKkQ,SACfuZ,EAAgBzP,KAChByP,EAAgBzP,OASxB8uB,EAAQjoC,UAAU8oC,eAAiB,YAtnDvC,SAASA,EAAergC,GACpBuhB,IAAqB,EACrB,IACI6R,GAAcpzB,GAElB,QACIuhB,IAAqB,GAgnDwB8e,CAAe3pC,KAAKkQ,UACrE44B,EAAQjoC,UAAU+oC,yBAA2B,SAAUC,GAAS7pC,KAAKmpC,kBAAoBU,GACzFf,EAAQjoC,UAAUipC,iBAAmB,WAAc9pC,KAAKkpC,QAAU,MAClEJ,EAAQjoC,UAAUkpC,eAAiB,SAAUC,GAAUhqC,KAAKkpC,QAAUc,GACtElB,EAAQjoC,UAAUwoC,eAAiB,WAC/B,OAAOrpC,KAAKgpC,SAAWhpC,KAAK+oC,MAAMrzB,IAAQM,IAAYhW,KAAKipC,kBAExDH,EA9NiB,GAiOxBmB,GAA6B,SAAU3B,GAEvC,SAAS2B,EAAYlB,GACjB,IAAIP,EAAQF,EAAO/mC,KAAKvB,KAAM+oC,EAAO,MAAO,IAAM/oC,KAElD,OADAwoC,EAAMO,MAAQA,EACPP,EAIX,OARA9nC,EAAUupC,EAAa3B,GAMvB2B,EAAYppC,UAAU67B,cAAgB,WAAcC,GAAwB38B,KAAK+oC,QACjFkB,EAAYppC,UAAU8oC,eAAiB,YAtnD3C,SAASO,EAAyBpzB,GAC9B+T,IAAqB,EACrB,IACI8R,GAAwB7lB,GAE5B,QACI+T,IAAqB,GAgnD4Bqf,CAAyBlqC,KAAK+oC,QAC5EkB,EATqB,CAU9BnB,IA0BF,SAASqB,GAAiBC,EAAiB7yB,EAAO4G,GAW9C,OAVKspB,KAEDA,GAA8B,SAAUa,GAEpC,SAAS+B,IACL,OAAkB,OAAX/B,GAAmBA,EAAO9mC,MAAMxB,KAAMqB,YAAcrB,KAE/D,OAJAU,EAAU2pC,EAAa/B,GAIhB+B,EALkB,CAM3BD,IAEC,IAAI3C,GAAanqB,GAAS/F,EAAO4G,GAAM9F,QAoBlD,SAASiyB,GAAkBC,EAAkBH,EAAiBxsB,EAAWL,GAChEmqB,KAEDA,GAA+B,SAAUY,GAErC,SAASkC,EAAaC,EAAwBC,EAAYC,EAAQC,EAAWC,EAAU9D,GACnF,IAAIyB,EAAQF,EAAO/mC,KAAKvB,OAASA,KAOjC,OANAwoC,EAAMiC,uBAAyBA,EAC/BjC,EAAMkC,WAAaA,EACnBlC,EAAMmC,OAASA,EACfnC,EAAMoC,UAAYA,EAClBpC,EAAMqC,SAAWA,EACjBrC,EAAMzB,eAAiBA,EAChByB,EAYX,OArBA9nC,EAAU8pC,EAAclC,GAWxBkC,EAAa3pC,UAAUiqC,mBAAqB,SAAU56B,EAAS66B,EAAc1Q,EAAgB9c,EAAU7V,GACnG,IAAIqY,EA33GpB,SAASirB,EAA0BtxB,EAAOxJ,EAAS+6B,EAAiBxvB,EAAUyvB,EAAShX,GACnF,IAAI3G,EAAY1D,GACZ2D,EAAyB5D,GAC7BC,IAAW,EACXD,GAAwB,KACxB,IAAI7J,EAAQ0M,GAAgBhR,EAAU/B,EAAOxJ,EAAS,EAAqBka,MAW3E,OAVArK,EAAMtJ,IAAoBw0B,EACtBC,IACAnrB,EAAMnK,IAAWs1B,EAAQxQ,cAE7B/N,IAAmB,EAAG,EAAc,KAAM,KAAM,KAAM5M,GAClDrG,EAAMI,oBACNJ,EAAMkF,KAAKsV,cAAgBA,GAE/BrK,GAAW0D,EACX3D,GAAwB4D,EACjBzN,EA22GiBirB,CAA0BhrC,KAAK2qC,OAAQz6B,EAASlQ,KAAKyqC,uBAAwBzqC,KAAK4qC,UAAW5qC,KAAK6qC,SAAU7qC,KAAK+mC,gBACzHgE,GACAjrB,GAAWC,EAAOgrB,EAAcxtB,EAAU7V,EAAO2yB,EAAextB,OAAOnF,OAE3EkkB,GAAuB7L,EAAO/f,KAAK2qC,OAAQz6B,EAAS,GACpD,IAAIi7B,EAAU,IAAIrC,GAAQ/oB,EAAO7P,GAAU,GAE3C,OADAi7B,EAAQ/B,WAAarpB,EAAMjK,IACpBq1B,GAEJX,EAtBmB,CAuB5BD,IAEN,IAAIxpB,EAAWzD,GAASM,EAAWL,GAGnC,OAAO,IAAImqB,GAAcnqB,EAAU4sB,GAAiBC,EAAiBxsB,EAAWL,GAAWK,EAAUqW,OAAQ/J,KAAenJ,EAASrY,KAAKkN,IAAUgI,EAAUsW;;;;;;;;AAuLlK,IAAIkX;;;;;;;;AAjQJ,SAASC,GAAiBjB,GACtB,OAAOD,GAAiBC,EAAiB3f,KAA4BC,OAiQrE4gB,GAnOJ,SAASC,GAAkBhB,EAAkBH,GACzC,OAAOE,GAAkBC,EAAkBH,EAAiB3f,KAA4BC,OAmOxF8gB,GAjCJ,SAASC,KACL,OAUJ,SAASC,EAAc9tB,EAAWL,EAAUrN,GACxC,GAz4KJ,SAASy7B,EAAYp0B,GACjB,OAAkD,OAA5B,KAAdA,EAAMpI,OAw4KVw8B,CAAY/tB,GAAY,CACxB,IAAIguB,EAAiBhuB,EAAUzO,OAAS,GACpCgQ,EAAgB7B,GAASM,EAAWL,GAAU7U,KAClD,OAAO,IAAIogC,GAAQ3pB,EAAejP,EAAS07B,GAE1C,GAAuB,IAAnBhuB,EAAUpY,KAA0B,CACzC,IAAIqmC,EAAoBzsB,GAAkB7B,GAC1C,OAAO,IAAIurB,GAAQ+C,EAAmBA,EAAkB31B,KAAW,GAEvE,OAAO,KApBAw1B,CAAcjhB,KAA4BC,KAAgB,OAiCjEohB,GAjLJ,SAASC,GAAuBC,EAAuB5B,GAEnD,OAWJ,SAAS6B,EAAmBD,EAAuB5B,EAAiBxsB,EAAWL,GACtEoqB,KAEDA,GAAoC,SAAUW,GAE1C,SAAS4D,EAAkBC,EAAaC,EAAiBC,EAAYvF,GACjE,IAAI0B,EAAQF,EAAO/mC,KAAKvB,OAASA,KAMjC,OALAwoC,EAAM2D,YAAcA,EACpB3D,EAAM4D,gBAAkBA,EACxB5D,EAAM6D,WAAaA,EACnB7D,EAAM1B,UAAYA,EAClB0B,EAAM8D,aACC9D,EAmGX,OA3GA9nC,EAAUwrC,EAAmB5D,GAU7BloC,OAAO+B,eAAe+pC,EAAkBrrC,UAAW,WAC/C6L,IAAK,WACD,OAAOy9B,GAAiBC,EAAiBpqC,KAAKqsC,WAAYrsC,KAAK8mC,YAEnEwC,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAe+pC,EAAkBrrC,UAAW,YAC/C6L,IAAK,WAAc,OAAO,IAAIk6B,GAAa5mC,KAAKqsC,WAAYrsC,KAAK8mC,YACjEwC,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAe+pC,EAAkBrrC,UAAW,kBAE/C6L,IAAK,WACD,IAAI05B,EAAiB1B,GAA0B1kC,KAAKqsC,WAAYrsC,KAAK8mC,WACjE7mB,EAAa2kB,GAAsBwB,EAAgBpmC,KAAK8mC,WAExDnkB,EAAc1C,EAAWxK,IAAO/M,KADD,MAAjB09B,GAElB,OAA2B,IAApBA,EAAwB,IAAI35B,GAC/B,IAAIm6B,GAAajkB,EAAa1C,IAEtCqpB,YAAY,EACZpG,cAAc,IAElBgJ,EAAkBrrC,UAAU0rC,MAAQ,WAChC,KAAOvsC,KAAKmsC,YAAY9wB,IAAO/Z,QAC3BtB,KAAKonB,OAAO,IAGpB8kB,EAAkBrrC,UAAU6L,IAAM,SAAUhF,GAAS,OAAO1H,KAAKssC,UAAU5kC,IAAU,MACrFtH,OAAO+B,eAAe+pC,EAAkBrrC,UAAW,UAC/C6L,IAAK,WAAc,OAAO1M,KAAKmsC,YAAY9wB,IAAO/Z,QAClDgoC,YAAY,EACZpG,cAAc,IAElBgJ,EAAkBrrC,UAAUiqC,mBAAqB,SAAU0B,EAAat8B,EAASxI,GAC7E,IAAI+kC,EAAczsC,KAAK0sC,aAAahlC,GAChCyjC,EAAUqB,EACT1B,mBAAmB56B,MAAelQ,KAAKmsC,YAAansC,KAAKosC,gBAAiBpsC,KAAK8mC,UAAW2F,GAG/F,OAFAtB,EAAQvB,yBAAyB5pC,MACjCA,KAAKssC,UAAUlsB,OAAOqsB,EAAa,EAAGtB,GAC/BA,GAEXe,EAAkBrrC,UAAU8rC,gBAAkB,SAAUC,EAAkBllC,EAAO8I,EAAUk4B,EAAkBmE,GACzG,IAAIC,EAAkBt8B,GAAYxQ,KAAK+sC,gBAClCF,GAAeC,IAChBD,EAAcC,EAAgBpgC,IAAIk8B,GAAa,OAEnD,IAAIoE,EAAeJ,EAAiB9rC,OAAOgsC,EAAiBpE,OAAkBxjC,EAAW2nC,GAEzF,OADA7sC,KAAKitC,OAAOD,EAAazvB,SAAU7V,GAC5BslC,GAEXd,EAAkBrrC,UAAUosC,OAAS,SAAU9B,EAASzjC,GACpD,GAAIyjC,EAAQ+B,UACR,MAAM,IAAItpC,MAAM,sDAEpB,IAAImc,EAAQorB,EAAQpC,MAChB0D,EAAczsC,KAAK0sC,aAAahlC,GACpCoY,GAAWC,EAAO/f,KAAKmsC,YAAansC,KAAK8mC,UAAW2F,EAAazsC,KAAKosC,gBAAgBv/B,OAAOnF,OAC7F,IAAIqjC,EAAe/qC,KAAKmtC,eAAenvB,sBAKvC,OAHA4B,GAA2BG,GAAO,EADjB8C,GAAqB4pB,EAAazsC,KAAKmsC,YAAY9wB,IAAQ0vB,IAE5EI,EAAQvB,yBAAyB5pC,MACjCA,KAAKssC,UAAUlsB,OAAOqsB,EAAa,EAAGtB,GAC/BA,GAEXe,EAAkBrrC,UAAUusC,KAAO,SAAUjC,EAASkC,GAClD,IAAI3lC,EAAQ1H,KAAK0L,QAAQy/B,GAGzB,OAFAnrC,KAAKupC,OAAO7hC,GACZ1H,KAAKitC,OAAO9B,EAASnrC,KAAK0sC,aAAaW,IAChClC,GAEXe,EAAkBrrC,UAAU6K,QAAU,SAAUy/B,GAAW,OAAOnrC,KAAKssC,UAAU5gC,QAAQy/B,IACzFe,EAAkBrrC,UAAUumB,OAAS,SAAU1f,GAC3C,IAAI+kC,EAAczsC,KAAK0sC,aAAahlC,GAAQ,GAC5C+Y,GAAWzgB,KAAKmsC,YAAansC,KAAKosC,gBAAiBK,GACnDzsC,KAAKssC,UAAUlsB,OAAOqsB,EAAa,IAEvCP,EAAkBrrC,UAAU0oC,OAAS,SAAU7hC,GAC3C,IAAI+kC,EAAczsC,KAAK0sC,aAAahlC,GAAQ,GAE5C,OADA2Y,GAAWrgB,KAAKmsC,YAAaM,IAAezsC,KAAKosC,gBAAgB7rB,UAC1DvgB,KAAKssC,UAAUlsB,OAAOqsB,EAAa,GAAG,IAAM,MAEvDP,EAAkBrrC,UAAU6rC,aAAe,SAAUhlC,EAAO4lC,GAExD,YADc,IAAVA,IAAoBA,EAAQ,GACnB,MAAT5lC,EACO1H,KAAKmsC,YAAY9wB,IAAO/Z,OAASgsC,EAOrC5lC,GAEXwkC,EAAkBrrC,UAAUssC,aAAe,WAAc,OAAO7vB,GAAStd,KAAKqsC,WAAYrsC,KAAK8mC,YACxFoF,EA5GwB,CA6GjCF,IAEN,IAAIuB,EAAYjwB,GAASM,EAAWL,GAEhCyC,EAAayZ,GAAiBlc,GAAU,GACxCqc,EAAUrc,EAASnH,IAAUyjB,cAAwC,IACrE5a,EAAiByN,GAAkB,EAAmBkN,EAAS5Z,GASnE,OARAA,EAAW1E,IAAiBwG,GAAgBlE,EAAWL,GACvD+E,GAAYsX,EAAShc,EAAWL,GAC3BK,EAAUsP,uBACXtP,EAAUsP,qBACNH,GAAY,GAAoB,EAAG,KAAM,KAAMnP,EAAW,OAElE2vB,EAAUvvB,sBAAwBiB,EAClCua,GAAcjc,EAAUK,EAAUlW,MAAOsY,GAClC,IAAI2nB,GAAmB3nB,EAAYpC,EAAUsP,qBAAsBtP,EAAWL,GA1I9E0uB,CAAmBD,EAAuB5B,EAD7B3f,KAC6DC,OA+MjF8iB,GAA4B,WAC5B,SAASA,EAAWC,GAChBztC,KAAKytC,cAAgBA,EAIzB,OADAD,EAAW1oC,kBAAoB,WAAc,OAAOsmC,GAAuBoC,IACpEA,EANoB,GAgB3BE,GAA4C,SAAUpF,GAEtD,SAASqF,IACL,OAAkB,OAAXrF,GAAmBA,EAAO9mC,MAAMxB,KAAMqB,YAAcrB,KAO/D,OATAU,EAAUitC,EAA6BrF,GAIvCqF,EAA4B9sC,UAAUgnC,wBAA0B,SAAUv+B,GAEtE,IAAIg3B,EAAejsB,GAAgB/K,GACnC,OAAO,IAAIskC,GAAmBtN,IAE3BqN,EAVoC,CAW7C7F,IACF,SAAS+F,GAAWxiC,GAChB,IAAIyiC,KACJ,IAAK,IAAIC,KAAe1iC,EAChBA,EAAI5K,eAAestC,IAEnBD,EAAMxqC,MAAO8D,SADEiE,EAAI0iC,GACcC,aAAcD,IAGvD,OAAOD,EAKX,IAAIG,GAAe,IAAIvoC,EAAe,sBAAwBT,WAAY,OAAQ5F,QAAS,WAAc,OAAOmhC,GAAkBvzB,GAAOihC,QAKrIA,GAAY,IAAIxoC,EAAe,mBAC/BT,WAAY,OACZ5F,QAAS,WAEL,MAD8C,oBAA1B8uC,uBAA2D,oBAAXtkC,OACpDskC,sBAAsBrnC,KAAK+C,QAAUukC,cAOzDC,GAAyB,IAAI3oC,EAAe,0BAI5CkoC,GAAoC,SAAUtF,GAE9C,SAASgG,EAAoBhO,GACzB,IAAIkI,EAAQF,EAAO/mC,KAAKvB,OAASA,KAKjC,OAJAwoC,EAAMlI,aAAeA,EACrBkI,EAAMJ,cAAgB9H,EAAa96B,KACnCgjC,EAAM//B,SAAW63B,EAAavsB,UAAU,GAAG,GAC3Cy0B,EAAMC,sBACCD,EAyFX,OAhGA9nC,EAAU4tC,EAAqBhG,GAS/BloC,OAAO+B,eAAemsC,EAAoBztC,UAAW,UACjD6L,IAAK,WACD,OAAOmhC,GAAW7tC,KAAKsgC,aAAahuB,SAExCg3B,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAemsC,EAAoBztC,UAAW,WACjD6L,IAAK,WACD,OAAOmhC,GAAW7tC,KAAKsgC,aAAa9tB,UAExC82B,YAAY,EACZpG,cAAc,IAElBoL,EAAoBztC,UAAUC,OAAS,SAAU0P,EAAUk4B,EAAkBC,EAAoBJ,GAC7F,IACI9e,EADA8kB,OAA4CrpC,IAAvByjC,EAIrBlf,EAFA8e,EACcA,EAAS/3B,SAAS9D,IAAI2hC,GAAwB,SAAUv+B,GAAK,OAAOA,GAChE0+B,CAAQjG,EAAS/3B,SAAS9D,IAAIk3B,KAG9BloB,GAEtB,IAAIqF,EAAWwtB,EACX9f,GAAczuB,KAAKyI,SAAUghB,EAAgB9N,eAAe,KAAM3b,KAAKsgC,eACvE/O,GAAkB9H,EAAiBkf,GAGnC8F,EAAYzuC,KAAKsgC,aAAa9sB,OAAS,GACvC,GACAyoB,EAAcsM,IAAagG,EAC3BhG,EAAS/3B,SAAS9D,IAAIuhC,IACtBzN,GAAkB2N,sBAAsBrnC,KAAK+C,SAE7CoX,EAAWwL,GAAgBhD,EAAgB9N,eAAeoF,EAAU/gB,KAAKsgC,cAAe3P,IAAa,EAAG,KAAM,EAAG,EAAG,KAAM,KAAM,MAAOsL,EAAawS,GACxJxtB,EAAS9K,IAAcoyB,GAAYA,EAAS/3B,UAAY,KAExD,IACIlH,EACAyV,EACA2vB,EAHAxjB,EAAUF,GAAU/J,EAAU,MAIlC,IAYI,GAXIwI,EAAgByE,OAChBzE,EAAgByE,QAMpB5kB,EAAY+2B,GAJZthB,EAAcnD,GAAY+yB,EAAc5tB,EAAU/gB,KAAKsgC,cAIVtgC,KAAKsgC,aAAcrf,EAAUgb,GAAcwE,KACxFiO,EAAehb,GAAS,GAGpBgV,EAGA,IAFA,IAAIhhC,EAAQ,EACRknC,EAAgBF,EAAapvB,cACxBne,EAAI,EAAGA,EAAIunC,EAAiBpnC,OAAQH,IAAK,CAI9C,IAHA,IAAI0tC,EAAWnG,EAAiBvnC,GAC5B2tC,EAAa,KACbC,EAAgB,KACXrgC,EAAI,EAAGA,EAAImgC,EAASvtC,OAAQoN,IAAK,CACtCye,GAA0BlM,GAC1B,IAAI1J,EAAQoV,KAAoBjlB,EAAO,EAAiBmnC,EAASngC,GAAI,KAAM,MAC3EqgC,EAAiBA,EAAc/rC,KAAOuU,EAAUu3B,EAAav3B,EAC7Dw3B,EAAgBx3B,EAEpBq3B,EAActrC,KAAKwrC,GAI3B,IAAI3vB,EAAgBJ,EAAYrW,KAChCkjB,GAAuBzM,EAAeA,EAAc1J,IAAQnM,EAAW,GACvE6V,EAActJ,MAAU,EAE5B,QACImV,GAAUE,EAAS,MACfzB,EAAgBzP,KAChByP,EAAgBzP,MAExB,IAAIgzB,EAAe,IAAIgC,GAAehvC,KAAKooC,cAAe9+B,EAAW2X,EAAUzQ,EAAU25B,GAAiBqD,GAAYkB,EAAcztB,IAKpI,OAJIstB,IAEAvB,EAAazvB,SAAS6rB,WAAWlwB,MAAQw1B,GAEtC1B,GAEJsB,EAjG4B,CAkGrChH,IAUE0H,IAT2B,IAAItB,GASC,SAAUpF,GAE1C,SAAS2G,EAAgB7G,EAAenxB,EAAUgK,EAAUzQ,EAAUy0B,GAClE,IAAIuD,EAAQF,EAAO/mC,KAAKvB,OAASA,KAQjC,OAPAwoC,EAAMvD,SAAWA,EACjBuD,EAAM0G,cACN1G,EAAMvxB,SAAWA,EACjBuxB,EAAMjrB,SAAWirB,EAAM2G,kBAAoB,IAAIlF,GAAYhpB,GAC3DunB,EAAMjrB,SAAS6rB,WAAazc,IAAmB,EAAG,EAAc,KAAM,KAAM,KAAM1L,GAClFunB,EAAMh4B,SAAWA,EACjBg4B,EAAMJ,cAAgBA,EACfI,EAWX,OArBA9nC,EAAUuuC,EAAiB3G,GAY3B2G,EAAgBpuC,UAAUghB,QAAU,WAEhC7hB,KAAKkvC,WAAWr/B,QAAQ,SAAUjF,GAAM,OAAOA,MAC/C5K,KAAKkvC,WAAa,MAEtBD,EAAgBpuC,UAAUyS,UAAY,SAAUk2B,GAE5CxpC,KAAKkvC,WAAW5rC,KAAKkmC,IAElByF,EAtBwB,CAuBjC5H,KASE+H,GAAe,eAoKnB,SAASC,GAAezwB,EAAMrH,EAAOoL,EAAaosB,GAI9C,IAAIluB,EAAW6J,KAqBf,OAnBwB7J,EAASpL,IAAOqE,oBAEhCi1B,IAAkBpsB,GAAepL,IAAUoL,EAAYzJ,OACvD3B,EAAMvU,KAAO2f,EAAYzJ,MACzByJ,EAAYzJ,MAAQ3B,GAEfw3B,IAAkBpsB,GAAepL,IAAUw3B,EAAc/rC,MAC9DuU,EAAMvU,KAAO+rC,EAAc/rC,KAC3B+rC,EAAc/rC,KAAOuU,GAGrBA,EAAMvU,KAAO,KAEb2f,IAAgB9B,EAAS/K,MACzByB,EAAM1K,OAAS8V,IAGvBL,GAAY1D,EAAKvG,OAAQd,EAAOsJ,GAEb,IAAftJ,EAAM/R,MAA8BoZ,EAAKZ,uBACzCsE,GAAY1D,EAAKZ,sBAAsB3F,OAAQd,EAAOsJ,GAC/CtJ,EAAM2V,sBAEV3V;;;;;;;;AAibX,IAAI+3B,GAAW,IAAI5pC,EAAe,4EAY9B6pC,MAQAC,MACAC,MAIAC,QAAkBxqC;;;;;;;OACtB,SAASyqC,KAIL,YAHwBzqC,IAApBwqC,KACAA,GAAkB,IAAIjjC,IAEnBijC,GAOX,SAASE,GAAeC,EAAShjC,EAAQijC,GAIrC,YAHe,IAAXjjC,IAAqBA,EAAS,WACN,IAAxBijC,IAAkCA,EAAsB,MAC5DjjC,EAASA,GAAU8iC,KACZ,IAAII,GAAWF,EAASC,EAAqBjjC,GAExD,IAAIkjC,GAA4B,WAC5B,SAASA,EAAWn+B,EAAKk+B,EAAqBjjC,GAC1C,IAAI27B,EAAQxoC,KACZA,KAAK6M,OAASA,EAId7M,KAAK8N,QAAU,IAAIpD,IAInB1K,KAAKgwC,iBAAmB,IAAI5mC,IAI5BpJ,KAAKsT,UAAY,IAAIlK,IAIrBpJ,KAAKktC,WAAY,EAGjB+C,IAAar+B,GAAM,SAAUs+B,GAAe,OAAO1H,EAAM2H,oBAAoBD,EAAa,IAAI9mC,OAC9F0mC,GACIG,GAAYH,EAAqB,SAAU1hC,GAAY,OAAOo6B,EAAM4H,gBAAgBhiC,KAExFpO,KAAK8N,QAAQE,IAAIxB,GAAU6jC,QAAWnrC,EAAWlF,OAGjDA,KAAKswC,eAAiBtwC,KAAK8N,QAAQyiC,IAAIjB,IAEvCtvC,KAAKgwC,iBAAiBngC,QAAQ,SAAUggC,GAAW,OAAOrH,EAAM97B,IAAImjC,KAwLxE,OAhLAE,EAAWlvC,UAAUghB,QAAU,WAC3B7hB,KAAKwwC,qBAELxwC,KAAKktC,WAAY,EACjB,IAEIltC,KAAKsT,UAAUzD,QAAQ,SAAU4gC,GAAW,OAAOA,EAAQl9B,gBAE/D,QAEIvT,KAAK8N,QAAQy+B,QACbvsC,KAAKsT,UAAUi5B,QACfvsC,KAAKgwC,iBAAiBzD,UAG9BwD,EAAWlvC,UAAU6L,IAAM,SAAUtB,EAAOuB,EAAewC,QACjC,IAAlBxC,IAA4BA,EAAgBJ,SAClC,IAAV4C,IAAoBA,EAAQ,GAChCnP,KAAKwwC,qBAEL,IAAIE,EAAmBngC,GAAmBvQ,MAC1C,IAEI,KAAc,EAARmP,GAA2B,CAE7B,IAAID,EAASlP,KAAK8N,QAAQpB,IAAItB,GAC9B,QAAelG,IAAXgK,EAAsB,CAGtB,IAAI0C,EA8NxB,SAAS++B,EAAsB1tC,GAC3B,MAAyB,mBAAVA,GACO,iBAAVA,GAAsBA,aAAiByC;;;;;;;OAhOzBirC,CAAsBvlC,IAAU7F,EAAiB6F,GACvDwG,GAAO5R,KAAK4wC,qBAAqBh/B,KAGjC1C,EAAS2hC,GAAoBzlC,GAC7BpL,KAAK8N,QAAQE,IAAI5C,EAAO8D,IAIhC,QAAehK,IAAXgK,EACA,OAAOlP,KAAK8wC,QAAQ1lC,EAAO8D,GAMnC,OADqB,EAARC,GAAsCwgC,KAC5C3vC,KAAK6M,OAAOH,IAAItB,EAAOuB,GAElC,QAEI4D,GAAmBmgC,KAG3BX,EAAWlvC,UAAU2vC,mBAAqB,WACtC,GAAIxwC,KAAKktC,UACL,MAAM,IAAItpC,MAAM,yCAOxBmsC,EAAWlvC,UAAUsvC,oBAAsB,SAAUY,EAAiBC,GAClE,IAAIxI,EAAQxoC,KAMR4R,EAAMnM,EALVsrC,EAAkBhlC,GAAkBglC,IAOhCxI,EAAmB,MAAP32B,GAAgBm/B,EAAgBxI,eAAYrjC,EAIxD2qC,OAAwB3qC,IAAbqjC,EAA0BwI,EAAkBxI,EAGvDljC,OAA0BH,IAAbqjC,GAA2BwI,EAAgB1rC,WACxDoqC,GAOJ,QAJiBvqC,IAAbqjC,IACA32B,EAAMnM,EAAe8iC,IAGd,MAAP32B,EAAJ,CAIA,GAAIo/B,EAAQT,IAAIV,GACZ,MAAM,IAAIjsC,MAAM,6BAA+BuH,GAAU0kC,GAAW,8BAOxE,GAJA7vC,KAAKgwC,iBAAiB/oB,IAAI4oB,GAC1B7vC,KAAK8N,QAAQE,IAAI6hC,EAASQ,GAAWz+B,EAAIvS,UAGtB,MAAfuS,EAAItM,QAAiB,CAGrB0rC,EAAQ/pB,IAAI4oB,GACZ,IACII,GAAYr+B,EAAItM,QAAS,SAAU2rC,GAAY,OAAOzI,EAAM2H,oBAAoBc,EAAUD,KAE9F,QAEIA,EAAQE,OAAOrB,IAIF,MAAjBj+B,EAAIvM,WACJ4qC,GAAYr+B,EAAIvM,UAAW,SAAU+I,GAAY,OAAOo6B,EAAM4H,gBAAgBhiC,KAGlF6hC,GAAY5qC,EAAW,SAAU+I,GAAY,OAAOo6B,EAAM4H,gBAAgBhiC,OAK9E2hC,EAAWlvC,UAAUuvC,gBAAkB,SAAUhiC,GAI7C,IAAIhD,EAAQ+lC,GADZ/iC,EAAWrC,GAAkBqC,IACUA,EAAWrC,GAAkBqC,EAASZ,SAEzE0B,EAiEZ,SAASkiC,EAAiBhjC,GACtB,IAAIhD,EAAQW,GAAkBqC,GAC1BnL,EAAQssC,GACRlwC,OAAU6F,EACd,GAAIisC,GAAe/iC,GACf,OAAOyiC,GAAoBziC,GAI3B,GADAhD,EAAQW,GAAkBqC,EAASZ,SAkC3C,SAAS6jC,EAAgBpuC,GACrB,OAAOsK,MAAatK,EAlCZouC,CAAgBjjC,GAChBnL,EAAQmL,EAASV,cAEhB,GAiCb,SAAS4jC,EAAmBruC,GACxB,QAASA,EAAM2L,YAlCF0iC,CAAmBljC,GACxB/O,EAAU,WAAc,OAAO4N,GAAOmB,EAASQ,mBAE9C,GAiCb,SAAS2iC,EAAkBtuC,GACvB,QAASA,EAAM4L,WAlCF0iC,CAAkBnjC,GACvB/O,EAAU,WAAc,OAAO+O,EAASS,WAAWrN,MAAM4M,EAAU5K,EAASmN,GAAWvC,EAASH,iBAE/F,CACD,IAAIujC,EAAapjC,EAASU,UAAY1D,EACtC,IAkCZ,SAASqmC,EAAQxuC,GACb,QAASA,EAAMgL,KAnCHwjC,CAAQrjC,GAIR,OAAOyiC,GAAoBW,GAH3BnyC,EAAU,WAAc,OAAO,IAAK,EAAayH,KAAKtF,MAAM,EAAcgC,QAAU,GAASmN,GAAWvC,EAASH,UAO7H,OAAOoiC,GAAWhxC,EAAS4D,GA7FVmuC,CAAiBhjC,GAC9B,GAAK+iC,GAAe/iC,KAAgC,IAAnBA,EAASW,MAkBrC,CACD,IAAI2iC,EAAW1xC,KAAK8N,QAAQpB,IAAItB,GAChC,GAAIsmC,QAA+BxsC,IAAnBwsC,EAAS3iC,MACrB,MAAM,IAAInL,MAAM,4BAA8BuH,GAAUC,QArBN,CAGtD,IAAIumC,EAAgB3xC,KAAK8N,QAAQpB,IAAItB,GACrC,GAAIumC,GAEA,QAA4BzsC,IAAxBysC,EAAc5iC,MACd,MAAM,IAAInL,MAAM,4BAA8BwH,EAAQ,UAI1DumC,EAAgBtB,QAAWnrC,EAAWqqC,IAAS,IACjClwC,QAAU,WAAc,OAAOsR,GAAWghC,EAAc5iC,QACtE/O,KAAK8N,QAAQE,IAAI5C,EAAOumC,GAE5BvmC,EAAQgD,EACRujC,EAAc5iC,MAAMzL,KAAK8K,GAQ7BpO,KAAK8N,QAAQE,IAAI5C,EAAO8D,IAE5B6gC,EAAWlvC,UAAUiwC,QAAU,SAAU1lC,EAAO8D,GAC5C,GAAIA,EAAOjM,QAAUusC,GACjB,MAAM,IAAI5rC,MAAM,oBAAsBuH,GAAUC,IASpD,OAPS8D,EAAOjM,QAAUssC,KACtBrgC,EAAOjM,MAAQusC,GACftgC,EAAOjM,MAAQiM,EAAO7P,WAEE,iBAAjB6P,EAAOjM,OAAsBiM,EAAOjM,OAuFvD,SAAS2uC,EAAa3uC,GAClB,MAAwB,iBAAVA,GAA+B,MAATA,GAAiBA,EAAMsQ,aAC1B,mBAAtBtQ,EAAMsQ,YAzF2Cq+B,CAAa1iC,EAAOjM,QACxEjD,KAAKsT,UAAU2T,IAAI/X,EAAOjM,OAEvBiM,EAAOjM,OAElB8sC,EAAWlvC,UAAU+vC,qBAAuB,SAAUh/B,GAClD,QAAKA,EAAI3M,aAG0B,iBAAnB2M,EAAI3M,WACU,QAAnB2M,EAAI3M,YAA4C,SAAnB2M,EAAI3M,YAAyBjF,KAAKswC,eAG/DtwC,KAAKgwC,iBAAiBO,IAAI3+B,EAAI3M,cAGtC8qC,EAvNoB,GAyN/B,SAASc,GAAoBzlC,GACzB,IAAIsF,EAAgBnL,EAAiB6F,GACrC,GAAsB,OAAlBsF,EAAwB,CACxB,GAAItF,aAAiB1F,EACjB,MAAM,IAAI9B,MAAM,SAAWuH,GAAUC,GAAS,8CAIlD,OAAOilC,GAAW,WAAc,OAAO,IAAIjlC,IAE/C,OAAOilC,GAAW3/B,EAAcrR,SAgCpC,SAASgxC,GAAWhxC,EAAS4D,EAAO8L,GAGhC,YAFc,IAAV9L,IAAoBA,EAAQssC,SAClB,IAAVxgC,IAAoBA,GAAQ,IAE5B1P,QAASA,EACT4D,MAAOA,EACP8L,MAAOA,UAAa7J,GAG5B,SAAS+qC,GAAY4B,EAAOjnC,GACxBinC,EAAMhiC,QAAQ,SAAU5M,GAAS,OAAO1C,MAAMuM,QAAQ7J,GAASgtC,GAAYhtC,EAAO2H,GAAMA,EAAG3H,KAW/F,SAASkuC,GAAeluC,GACpB,MAAwB,mBAAVA,EAqBlB,IAAI6uC,IACAtkC,QAASs6B,GACTj5B,WAAY,WAAc,OAAO,IAAI6+B,IACrCz/B,SAEA8jC,GAA+B,SAAUzJ,GAEzC,SAAS0J,EAAeC,EAAclF,GAClC,IAAIvE,EAAQF,EAAO/mC,KAAKvB,OAASA,KAEjCwoC,EAAM0J,wBACN1J,EAAM0G,cACN,IAAIxqC,EAAc6Q,GAAe08B,GAYjC,OAVAzJ,EAAM0J,qBAAuBxtC,EAAY+P,UAOzC+zB,EAAMh4B,SAAWo/B,GAAeqC,EAAclF,GAL1C+E,IACItkC,QAASo7B,GACTl7B,SAAU86B,KAIlBA,EAAMvxB,SAAWuxB,EAAMh4B,SAAS9D,IAAIulC,GACpCzJ,EAAM2J,yBAA2B,IAAIzE,GAC9BlF,EAWX,OA7BA9nC,EAAUsxC,EAAgB1J,GAoB1B0J,EAAenxC,UAAUghB,QAAU,WAE/B7hB,KAAKkvC,WAAWr/B,QAAQ,SAAUjF,GAAM,OAAOA,MAC/C5K,KAAKkvC,WAAa,MAEtB8C,EAAenxC,UAAUyS,UAAY,SAAUk2B,GAE3CxpC,KAAKkvC,WAAW5rC,KAAKkmC,IAElBwI,EA9BuB,CA+BhCpJ,IACEwJ,GAAmC,SAAU9J,GAE7C,SAAS+J,EAAmBC,GACxB,IAAI9J,EAAQF,EAAO/mC,KAAKvB,OAASA,KAEjC,OADAwoC,EAAM8J,WAAaA,EACZ9J,EAKX,OATA9nC,EAAU2xC,EAAoB/J,GAM9B+J,EAAmBxxC,UAAUC,OAAS,SAAUisC,GAC5C,OAAO,IAAIgF,GAAc/xC,KAAKsyC,WAAYvF,IAEvCsF,EAV2B,CAWpCxJ;;;;;;;;AAiCF,SAAS0J,GAAcC,EAAYC,EAAQC,GAEvC,IAAItT,EAAerU,KAAmBynB,EACtC,OAhmKJ,SAASG,IAEL,OAAOh4B,GA8lKAg4B,GACHlT,GAAcL,EAAcsT,EAAUD,EAAOlxC,KAAKmxC,GAAWD,KAC7DtT,GAAWC,GAYnB,SAASwT,GAAcJ,EAAYC,EAAQI,EAAKH,GAE5C,IAAItT,EAAerU,KAAmBynB,EACtC,OAAOzV,GAAeqC,EAAcyT,GAChCpT,GAAcL,EAAe,EAAGsT,EAAUD,EAAOlxC,KAAKmxC,EAASG,GAAOJ,EAAOI,IAC7E1T,GAAWC,EAAe,GAalC,SAAS0T,GAAcN,EAAYC,EAAQ/S,EAAMC,EAAM+S,GAEnD,IAAItT,EAAerU,KAAmBynB,EACtC,OAAO/U,GAAgB2B,EAAcM,EAAMC,GACvCF,GAAcL,EAAe,EAAGsT,EAAUD,EAAOlxC,KAAKmxC,EAAShT,EAAMC,GAAQ8S,EAAO/S,EAAMC,IAC1FR,GAAWC,EAAe,GAclC,SAAS2T,GAAcP,EAAYC,EAAQ/S,EAAMC,EAAMC,EAAM8S,GAEzD,IAAItT,EAAerU,KAAmBynB,EACtC,OAAO3U,GAAgBuB,EAAcM,EAAMC,EAAMC,GAC7CH,GAAcL,EAAe,EAAGsT,EAAUD,EAAOlxC,KAAKmxC,EAAShT,EAAMC,EAAMC,GAAQ6S,EAAO/S,EAAMC,EAAMC,IACtGT,GAAWC,EAAe,GAelC,SAAS4T,GAAcR,EAAYC,EAAQ/S,EAAMC,EAAMC,EAAMC,EAAM6S,GAE/D,IAAItT,EAAerU,KAAmBynB,EACtC,OAAOvU,GAAgBmB,EAAcM,EAAMC,EAAMC,EAAMC,GACnDJ,GAAcL,EAAe,EAAGsT,EAAUD,EAAOlxC,KAAKmxC,EAAShT,EAAMC,EAAMC,EAAMC,GAAQ4S,EAAO/S,EAAMC,EAAMC,EAAMC,IAClHV,GAAWC,EAAe,GAgBlC,SAAS6T,GAAcT,EAAYC,EAAQ/S,EAAMC,EAAMC,EAAMC,EAAMqT,EAAMR,GAErE,IAAItT,EAAerU,KAAmBynB,EAClCvV,EAAYgB,GAAgBmB,EAAcM,EAAMC,EAAMC,EAAMC,GAChE,OAAO9C,GAAeqC,EAAe,EAAG8T,IAASjW,EAC7CwC,GAAcL,EAAe,EAAGsT,EAAUD,EAAOlxC,KAAKmxC,EAAShT,EAAMC,EAAMC,EAAMC,EAAMqT,GACnFT,EAAO/S,EAAMC,EAAMC,EAAMC,EAAMqT,IACnC/T,GAAWC,EAAe,GAiBlC,SAAS+T,GAAcX,EAAYC,EAAQ/S,EAAMC,EAAMC,EAAMC,EAAMqT,EAAME,EAAMV,GAE3E,IAAItT,EAAerU,KAAmBynB,EAClCvV,EAAYgB,GAAgBmB,EAAcM,EAAMC,EAAMC,EAAMC,GAChE,OAAOpC,GAAgB2B,EAAe,EAAG8T,EAAME,IAASnW,EACpDwC,GAAcL,EAAe,EAAGsT,EAAUD,EAAOlxC,KAAKmxC,EAAShT,EAAMC,EAAMC,EAAMC,EAAMqT,EAAME,GACzFX,EAAO/S,EAAMC,EAAMC,EAAMC,EAAMqT,EAAME,IACzCjU,GAAWC,EAAe,GAkBlC,SAASiU,GAAcb,EAAYC,EAAQ/S,EAAMC,EAAMC,EAAMC,EAAMqT,EAAME,EAAME,EAAMZ,GAEjF,IAAItT,EAAerU,KAAmBynB,EAClCvV,EAAYgB,GAAgBmB,EAAcM,EAAMC,EAAMC,EAAMC,GAChE,OAAOhC,GAAgBuB,EAAe,EAAG8T,EAAME,EAAME,IAASrW,EAC1DwC,GAAcL,EAAe,EAAGsT,EAC5BD,EAAOlxC,KAAKmxC,EAAShT,EAAMC,EAAMC,EAAMC,EAAMqT,EAAME,EAAME,GACzDb,EAAO/S,EAAMC,EAAMC,EAAMC,EAAMqT,EAAME,EAAME,IAC/CnU,GAAWC,EAAe,GAmBlC,SAASmU,GAAcf,EAAYC,EAAQ/S,EAAMC,EAAMC,EAAMC,EAAMqT,EAAME,EAAME,EAAME,EAAMd,GAEvF,IAAItT,EAAerU,KAAmBynB,EAClCvV,EAAYgB,GAAgBmB,EAAcM,EAAMC,EAAMC,EAAMC,GAChE,OAAO5B,GAAgBmB,EAAe,EAAG8T,EAAME,EAAME,EAAME,IAASvW,EAChEwC,GAAcL,EAAe,EAAGsT,EAC5BD,EAAOlxC,KAAKmxC,EAAShT,EAAMC,EAAMC,EAAMC,EAAMqT,EAAME,EAAME,EAAME,GAC/Df,EAAO/S,EAAMC,EAAMC,EAAMC,EAAMqT,EAAME,EAAME,EAAME,IACrDrU,GAAWC,EAAe,GAelC,SAASqU,GAAcjB,EAAYC,EAAQiB,EAAMhB,GAI7C,IAFA,IAAItT,EAAerU,KAAmBynB,EAClCvV,GAAY,EACP97B,EAAI,EAAGA,EAAIuyC,EAAKpyC,OAAQH,IAC7B47B,GAAeqC,IAAgBsU,EAAKvyC,MAAQ87B,GAAY,GAE5D,OAAOA,EAAYwC,GAAcL,EAAcqT,EAAOjxC,MAAMkxC,EAASgB,IACjEvU,GAAWC;;;;;;;OAiBnB,SAASuU,GAAKjsC,EAAOksC,GACjB,IACIv+B,EADAqE,EAAQomB,KAERxY,EAAgB5f,EAAQ8N,GACxBkE,EAAMI,mBACNzE,EAqBR,SAASw+B,EAAa3tC,EAAMkqB,GACxB,GAAIA,EACA,IAAK,IAAIjvB,EAAI,EAAGA,EAAIivB,EAAS9uB,OAAQH,IAAK,CACtC,IAAIkU,EAAU+a,EAASjvB,GACvB,GAAI+E,IAASmP,EAAQnP,KACjB,OAAOmP,EAInB,MAAM,IAAIzR,MAAM,mBAAqBsC,EAAO,gBA9B9B2tC,CAAaD,EAAUl6B,EAAMqX,cACvCrX,EAAMhR,KAAK4e,GAAiBjS,EACxBA,EAAQ/B,YACPoG,EAAMkI,mBAAqBlI,EAAMkI,sBAAwBte,KAAKgkB,EAAejS,EAAQ/B,YAI1F+B,EAAUqE,EAAMhR,KAAK4e,GAEzB,IAAIwsB,EAAez+B,EAAQhW,UAE3B,OADAqnB,GAAMhf,EAAOosC,GACNA,EA+BX,SAASC,GAAUrsC,EAAO8qC,EAAYhV,GAClC,IAAIsW,EAAetd,GAAK9uB,GACxB,OAAOssC,GAAOtsC,GAASkrC,GAAcJ,EAAYsB,EAAaG,UAAWzW,EAAIsW,GACzEA,EAAaG,UAAUzW,GA8B/B,SAAS0W,GAAUxsC,EAAO8qC,EAAYhV,EAAII,EAAII,GAC1C,IAAI8V,EAAetd,GAAK9uB,GACxB,OAAOssC,GAAOtsC,GACVqrC,GAAcP,EAAYsB,EAAaG,UAAWzW,EAAII,EAAII,EAAI8V,GAC9DA,EAAaG,UAAUzW,EAAII,EAAII,GAevC,SAASmW,GAAUzsC,EAAO8qC,EAAYhV,EAAII,EAAII,EAAII,GAC9C,IAAI0V,EAAetd,GAAK9uB,GACxB,OAAOssC,GAAOtsC,GACVsrC,GAAcR,EAAYsB,EAAaG,UAAWzW,EAAII,EAAII,EAAII,EAAI0V,GAClEA,EAAaG,UAAUzW,EAAII,EAAII,EAAII,GAY3C,SAASgW,GAAU1sC,EAAO8qC,EAAYrrC,GAClC,IAAI2sC,EAAetd,GAAK9uB,GACxB,OAAOssC,GAAOtsC,GAAS+rC,GAAcjB,EAAYsB,EAAaG,UAAW9sC,EAAQ2sC,GAC7EA,EAAaG,UAAUzyC,MAAMsyC,EAAc3sC,GAEnD,SAAS6sC,GAAOtsC,GACZ,OAAOo4B,KAAWp3B,KAAKhB,EAAQ8N,IAAeF;;;;;;;OA8DlD,IAAI++B,GAA8B,SAAU/L,GASxC,SAAS+L,EAAaC,QACF,IAAZA,IAAsBA,GAAU,GACpC,IAAI9L,EAAQF,EAAO/mC,KAAKvB,OAASA,KAEjC,OADAwoC,EAAM+L,UAAYD,EACX9L,EAkDX,OA9DA9nC,EAAU2zC,EAAc/L,GAkBxB+L,EAAaxzC,UAAU2zC,KAAO,SAAUvxC,GAASqlC,EAAOznC,UAAUmC,KAAKzB,KAAKvB,KAAMiD,IASlFoxC,EAAaxzC,UAAUmyB,UAAY,SAAUyhB,EAAiBlxC,EAAOmxC,GACjE,IAAIC,EACAC,EAAU,SAAUC,GAAO,OAAO,MAClCC,EAAa,WAAc,OAAO,MAClCL,GAA8C,iBAApBA,GAC1BE,EAAc30C,KAAKu0C,UAAY,SAAUtxC,GACrCmrC,WAAW,WAAc,OAAOqG,EAAgBzxC,KAAKC,MACrD,SAAUA,GAASwxC,EAAgBzxC,KAAKC,IACxCwxC,EAAgBlxC,QAChBqxC,EAAU50C,KAAKu0C,UAAY,SAAUM,GAAOzG,WAAW,WAAc,OAAOqG,EAAgBlxC,MAAMsxC,MAC9F,SAAUA,GAAOJ,EAAgBlxC,MAAMsxC,KAE3CJ,EAAgBC,WAChBI,EAAa90C,KAAKu0C,UAAY,WAAcnG,WAAW,WAAc,OAAOqG,EAAgBC,cACxF,WAAcD,EAAgBC,eAItCC,EAAc30C,KAAKu0C,UAAY,SAAUtxC,GAASmrC,WAAW,WAAc,OAAOqG,EAAgBxxC,MAC9F,SAAUA,GAASwxC,EAAgBxxC,IACnCM,IACAqxC,EACI50C,KAAKu0C,UAAY,SAAUM,GAAOzG,WAAW,WAAc,OAAO7qC,EAAMsxC,MAAc,SAAUA,GAAOtxC,EAAMsxC,KAEjHH,IACAI,EACI90C,KAAKu0C,UAAY,WAAcnG,WAAW,WAAc,OAAOsG,OAAoB,WAAcA,OAG7G,IAAIK,EAAOzM,EAAOznC,UAAUmyB,UAAUzxB,KAAKvB,KAAM20C,EAAaC,EAASE,GAIvE,OAHIL,aAA2B50C,EAAKm1C,cAChCP,EAAgBxtB,IAAI8tB,GAEjBA,GAEJV,EA/DsB,CAgE/Bx0C,EAAKo1C,SA0BHC,GAA6B,WAC7B,SAASA,KAIT,OADAA,EAAYpwC,kBAAoB,WAAc,OAAOwmC,GAAwB4J,EAAa1H,KACnF0H,EALqB,GA+B5BC,GAA2B,WAC3B,SAASA,EAAUtoC,EAAQuoC,EAASC,GAChCr1C,KAAK6M,OAASA,EACd7M,KAAKo1C,QAAUA,EACfp1C,KAAKq1C,KAAOA,EA2ChB,OAzCAF,EAAUt0C,UAAUy0C,MAAQ,SAAUtV,EAAWuV,EAAWC,EAASC,GAC7DD,EACAx1C,KAAKq1C,KAAOK,GAAY11C,KAAKq1C,KAAMrV,EAAWuV,EAAmB,MAARE,EAAeA,EAAO,MAG/Ez1C,KAAKo1C,QAAUM,GAAY11C,KAAKo1C,QAASpV,EAAWuV,EAAmB,MAARE,EAAeA,EAAO,OAG7FN,EAAUt0C,UAAUivB,MAAQ,WAAc,OAAO,IAAIqlB,EAAUn1C,KAAM,KAAMA,KAAKq1C,OAChFF,EAAUt0C,UAAUud,UAAY,WAC5B,IAAIu3B,EAAiBC,GAAuB51C,KAAKo1C,SAC7CS,EAAcD,GAAuB51C,KAAKq1C,MAC9C,OAAOM,GAAkBE,EAAc,IAAIV,EAAUn1C,KAAM21C,EAAgBE,GAAe,MAE9FV,EAAUt0C,UAAU65B,WAAa,WAC7B,IAAIib,EAAiBG,GAAkB91C,KAAKo1C,SACxCS,EAAcC,GAAkB91C,KAAKq1C,MACzC,OAAOM,GAAkBE,EAAc,IAAIV,EAAUn1C,KAAM21C,EAAgBE,GAAe,MAE9FV,EAAUt0C,UAAUif,WAAa,SAAUpY,GACvCquC,GAAaruC,EAAO1H,KAAKo1C,SACzBW,GAAaruC,EAAO1H,KAAKq1C,OAE7BF,EAAUt0C,UAAUsyB,QAAU,SAAU5b,GAEpC,OADA0P,GAAIjnB,KAAKq1C,KAAM99B,GACXiG,GAAmBjG,IACnB0P,GAAIjnB,KAAKo1C,QAAS79B,GACdA,EAAM1K,QAAU2Q,GAAmBjG,EAAM1K,SAGzCoa,GAAIjnB,KAAK6M,OAAOuoC,QAAS79B,GAEtBvX,KAAK6M,SAWxB,SAASmpC,EAAkBz+B,GACvB,OAAwB,OAAjBA,EAAM1K,QAAmB2Q,GAAmBjG,EAAM1K,QAVrDmpC,CAAkBz+B,IAAU0P,GAAIjnB,KAAKo1C,QAAS79B,GACvCvX,OAEXm1C,EAAUt0C,UAAU4f,WAAa,WAC7Bw1B,GAAaj2C,KAAKo1C,SAClBa,GAAaj2C,KAAKq1C,OAEfF,EA/CmB;;;;;;;OAoD9B,SAASS,GAAuBM,GAE5B,IADA,IAAIC,EAAS,KACND,GAAO,CACV,IAAIE,KACJF,EAAM/uC,OAAO7D,KAAK8yC,GAQlBD,GANInzC,KAAMmzC,EACNE,KAAMH,EAAMG,KACZd,UAAWW,EAAMX,UACjBpuC,OAAQivC,EACRA,gBAAiB,MAGrBF,EAAQA,EAAMlzC,KAElB,OAAOmzC,EAEX,SAASL,GAAkBI,GAEvB,IADA,IAAIC,EAAS,KACND,GAQHC,GANInzC,KAAMmzC,EACNE,KAAMH,EAAMG,KACZd,UAAWW,EAAMX,UACjBpuC,UACAivC,gBAAiBF,EAAM/uC,QAG3B+uC,EAAQA,EAAMlzC,KAElB,OAAOmzC,EAEX,SAASJ,GAAaruC,EAAOwuC,GACzB,KAAOA,GAGHA,EAAME,gBAAgBh2B,OAAO1Y,EAAO,EAAGwuC,EAAM/uC,QAC7C+uC,EAAQA,EAAMlzC,KAGtB,SAASizC,GAAaC,GAClB,KAAOA,GAAO,CAGV,IAAIE,EAAkBF,EAAME,gBACxBE,EAAgBF,EAAgB1qC,QAAQwqC,EAAM/uC,QACpCivC,EAAgBh2B,OAAOk2B,EAAe,GAGxC,GAAGh1C,QACX40C,EAAMG,KAAK/vB,WAEf4vB,EAAQA,EAAMlzC,MAWtB,SAASuzC,GAAyBh/B,EAAO9O,GACrC,IAAImnB,EAAarY,EAAMqY,WACvB,GAAIA,EACA,IAAK,IAAIzuB,EAAI,EAAGA,EAAIyuB,EAAWtuB,OAAQH,GAAK,EACxC,GAAIyuB,EAAWzuB,KAAOsH,EAClB,OAAOmnB,EAAWzuB,EAAI,GAIlC,OAAO,KA2BX,SAASq1C,GAAUj/B,EAAOmD,EAAa+6B,GACnC,IAAIgB,EAAYhB,EAAK5wC,GACrB,GAAyB,mBAAd4xC,EACP,OAAOA,IAGP,IAAIC,EAvBZ,SAASC,EAA0Bp/B,EAAOmD,EAAalV,GACnD,IAAI2mB,EAAOzR,EAAYjF,IAAOnE,WAC9B,GAAI6a,EAKA,IAJA,IAAIhd,EAAQoI,EAAMpI,MAEd4K,EAAQ5K,GAAS,GACjB6K,EAAMD,GAFU,KAAR5K,GAGHhO,EAAI4Y,EAAO5Y,EAAI6Y,EAAK7Y,IAAK,CAC9B,IAAIyQ,EAAMua,EAAKhrB,GACf,GAAIyQ,EAAIpM,OAASA,GAAQoM,EAAIC,SACzB,OAAO1Q,EAInB,OAAO,KASew1C,CAA0Bp/B,EAAOmD,EAAa+6B,GAChE,OAAoB,OAAhBiB,EACOh8B,EAAY1E,IAAY0gC,GAGhC,KAEX,SAASE,GAAqBr/B,EAAOmD,GACjC,OAAmB,IAAfnD,EAAM/R,MAA2C,IAAf+R,EAAM/R,KACjC2kC,GAAiBqD,GAAYj2B,EAAOmD,GAE5B,IAAfnD,EAAM/R,KACC8kC,GAAkB4K,GAAa1H,GAAYj2B,EAAOmD,GAEtD,KAEX,SAASuM,GAAIivB,EAAO3+B,GAEhB,IADA,IAAImD,EAAcgQ,KACXwrB,GAAO,CACV,IAAIX,EAAYW,EAAMX,UAClB/vC,EAAO+vC,EAAU/vC,KACrB,GAAIA,EAGe,QADX2wC,EAASK,GAAUj/B,EAAOmD,EAAa66B,EAAUE,MAAQjwC,KAEzDqxC,GAASX,EAAOC,QAKpB,IADA,IAAI1tC,EAAW8sC,EAAU9sC,SAChBtH,EAAI,EAAGA,EAAIsH,EAASnH,OAAQH,IAAK,CACtC,IAAI21C,EAAeP,GAAyBh/B,EAAO9O,EAAStH,IAC5D,GAAqB,OAAjB21C,EAAuB,CACvB,IAAIX,EAAS,KAcE,QAZXA,EADAZ,EAAUE,KACDe,GAAUj/B,EAAOmD,EAAa66B,EAAUE,MAG7CqB,GAAgB,EACPp8B,EAAY1E,IAAY8gC,GAKxBF,GAAqBr/B,EAAOmD,KAIzCm8B,GAASX,EAAOC,IAKhCD,EAAQA,EAAMlzC,MAGtB,SAAS6zC,GAASX,EAAOa,GACrBb,EAAM/uC,OAAO7D,KAAKyzC,GAClBb,EAAMG,KAAK/vB,WAUf,SAASovB,GAAYsB,EAAUhX,EAAWuV,EAAWE,GACjD,OACIzyC,KAAMg0C,EACNX,KAAMrW,EACNuV,UAZR,SAAS0B,EAAgB1B,EAAWE,GAChC,IAAI3oC,EAAUvM,MAAMuM,QAAQyoC,GAC5B,OACI/vC,KAAMsH,EAAU,KAAOyoC,EACvB9sC,SAAUqE,EAAUyoC,EAAY,KAChCE,KAAMA,GAOKwB,CAAgB1B,EAAWE,GACtCtuC,OAAQ64B,EAAUkX,YAClBd,gBAAiB,MAGzB,IAkFIe,GAlF4B,WAC5B,SAASC,IACLp3C,KAAK+3B,OAAQ,EACb/3B,KAAKq3C,QAAU,IAAIhD,GACnBr0C,KAAKs3C,WAELt3C,KAAKk3C,eA0ET,OAxEA92C,OAAO+B,eAAei1C,EAAWv2C,UAAW,UACxC6L,IAAK,WAAc,OAAO1M,KAAKs3C,QAAQh2C,QACvCgoC,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAei1C,EAAWv2C,UAAW,SACxC6L,IAAK,WACD,IAAIvF,EAASnH,KAAKs3C,QAClB,OAAOnwC,EAAO7F,OAAS6F,EAAO,GAAK,MAEvCmiC,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAei1C,EAAWv2C,UAAW,QACxC6L,IAAK,WACD,IAAIvF,EAASnH,KAAKs3C,QAClB,OAAOnwC,EAAO7F,OAAS6F,EAAOA,EAAO7F,OAAS,GAAK,MAEvDgoC,YAAY,EACZpG,cAAc,IAMlBkU,EAAWv2C,UAAUwK,IAAM,SAAUT,GAAM,OAAO5K,KAAKs3C,QAAQjsC,IAAIT,IAKnEwsC,EAAWv2C,UAAU02C,OAAS,SAAU3sC,GACpC,OAAO5K,KAAKs3C,QAAQC,OAAO3sC,IAM/BwsC,EAAWv2C,UAAU22C,KAAO,SAAU5sC,GAClC,OAAO5K,KAAKs3C,QAAQE,KAAK5sC,IAM7BwsC,EAAWv2C,UAAU42C,OAAS,SAAU7sC,EAAI8sC,GACxC,OAAO13C,KAAKs3C,QAAQG,OAAO7sC,EAAI8sC,IAMnCN,EAAWv2C,UAAUgP,QAAU,SAAUjF,GAAM5K,KAAKs3C,QAAQznC,QAAQjF,IAKpEwsC,EAAWv2C,UAAU82C,KAAO,SAAU/sC,GAClC,OAAO5K,KAAKs3C,QAAQK,KAAK/sC,IAE7BwsC,EAAWv2C,UAAU+2C,QAAU,WAAc,OAAO53C,KAAKs3C,QAAQhqC,MAAM,IACvE8pC,EAAWv2C,UAAUyJ,KAAuB,WAAc,OAAOtK,KAAKs3C,QAAQhtC,QAC9E8sC,EAAWv2C,UAAUgF,SAAW,WAAc,OAAO7F,KAAKs3C,QAAQzxC,YAClEuxC,EAAWv2C,UAAUg3C,MAAQ,SAAUrsC,GACnCxL,KAAKs3C,QA5gPb,SAASQ,EAAQzB,GAGb,IAFA,IAAIF,KACAh1C,EAAI,EACDA,EAAIk1C,EAAK/0C,QAAQ,CACpB,IAAIy2C,EAAO1B,EAAKl1C,GACZZ,MAAMuM,QAAQirC,GACVA,EAAKz2C,OAAS,GACd+0C,EAAO0B,EAAKt0C,OAAO4yC,EAAK/oC,MAAMnM,EAAI,IAClCA,EAAI,GAGJA,KAIJg1C,EAAO7yC,KAAKy0C,GACZ52C,KAGR,OAAOg1C,EAy/OY2B,CAAQtsC,GACvBxL,KAAK+3B,OAAQ,GAEjBqf,EAAWv2C,UAAUm3C,gBAAkB,WAAch4C,KAAKq3C,QAAQ7C,KAAKx0C,OACvEo3C,EAAWv2C,UAAUylB,SAAW,WAActmB,KAAK+3B,OAAQ,GAC3Dqf,EAAWv2C,UAAUghB,QAAU,WAC3B7hB,KAAKq3C,QAAQ3C,WACb10C,KAAKq3C,QAAQnkB,eAEVkkB,EAhFoB,GA6F/B,SAASlB,GAAM+B,EAAa1C,EAAWC,EAEvCC,GAEI,IAAIzV,EAAY,IAAImX,GAOpB,OAx8LJ,SAASe,EAA0BC,GAQ/B,OALIvuB,IAAyBA,KAA0B/I,GAAS/K,MAC3D0H,GAAmBoM,MACpBE,KAAmBA,GAAiBA,GAAegG,SACnDlG,GAAsBza,OAAS,OAE5B2a,KAAmBA,GAAiB,IAAIquB,EAAU,KAAM,KAAM,OA07LvDD,CAA0B/C,IAChCG,MAAMtV,EAAWuV,EAAWC,EAASC,GAC7CxiB,GAAwB,KAAM+M,EAAWA,EAAUne,SAChC,MAAfo2B,GACAvxB,GAAMuxB,EAAajY,GAEhBA,EAOX,SAASoY,GAAapY,GAElB,QAAIA,EAAUjI,QACViI,EAAU6X,MAFM7X,EAEckX,aAC9BlX,EAAUgY,mBACH;;;;;;;OAgBf,SAASK,GAAqB9gC,EAAOmD,GACjC,OAAO4vB,GAAkB4K,GAAa1H,GAAYj2B,EAAOmD;;;;;;;;;;;;;;OAkB7D,IAAI49B,GAAQ,8BACZ,SAASC,GAAwBt1C,EAAOuC,GACpC,OAAQvC,aAAiBwK,QAAUxK,EAAMq1C,MAAW9yC,EA8DxD,SAASgzC,GAA8BC,EAAe70B,GAClD,IAAI80B,EAAU,IAAIjrC,OAAOgrC,GAEzB,OADAC,EAAQJ,IAAS10B,EACV80B;;;;;;;OAgBX,IAAIC,IAAW,EACXC,IAAiB,EASrB,SAASC,KAEL,OADAD,IAAiB,EACVD;;;;;;;;AAgCX,IAAIG,GAAiC,WACjC,SAASA,EAAgBC,GAIrB,GAHA/4C,KAAK+4C,WAAaA,EAClB/4C,KAAKg5C,cAAgBh5C,KAAK+4C,WAAWE,eAAeC,mBAAmB,sBACvEl5C,KAAKm5C,iBAAmBn5C,KAAKg5C,cAAcI,KACd,MAAzBp5C,KAAKm5C,iBAA0B,CAG/B,IAAIE,EAAYr5C,KAAKg5C,cAAclqB,cAAc,QACjD9uB,KAAKg5C,cAAc12B,YAAY+2B,GAC/Br5C,KAAKm5C,iBAAmBn5C,KAAKg5C,cAAclqB,cAAc,QACzDuqB,EAAU/2B,YAAYtiB,KAAKm5C,kBAE/Bn5C,KAAKm5C,iBAAiBG,UAAY,wDAC9Bt5C,KAAKm5C,iBAAiBxnB,eAAkB3xB,KAAKm5C,iBAAiBxnB,cAAc,QAMhF3xB,KAAKm5C,iBAAiBG,UAClB,mEAOIt5C,KAAKu5C,oBANTv5C,KAAKm5C,iBAAiBxnB,eAAiB3xB,KAAKm5C,iBAAiBxnB,cAAc,YAkHvF,SAAS6nB,IACL,IACI,QAAS3vC,OAAO4vC,UAEpB,MAAOr2C,GACH,OAAO;;;;;;;OAlHCo2C,GAC2Bx5C,KAAK05C,8BAKb15C,KAAK25C,mCAhB5B35C,KAAKu5C,oBAAsBv5C,KAAK45C,wBA8GxC,OAvFAd,EAAgBj4C,UAAU+4C,wBAA0B,SAAUC,GAI1DA,EAAO,0BAA4BA,EAAO,UAC1C,IACIA,EAAOC,UAAUD,GAErB,MAAOz2C,GACH,OAAO,KAEX,IAAI22C,EAAM,IAAIC,eACdD,EAAIE,aAAe,WACnBF,EAAIG,KAAK,MAAO,gCAAkCL,GAAM,GACxDE,EAAII,UAAKj1C,GACT,IAAIk0C,EAAOW,EAAIrwC,SAAS0vC,KAExB,OADAA,EAAK55B,YAAY45B,EAAK5hC,YACf4hC,GAOXN,EAAgBj4C,UAAU64C,8BAAgC,SAAUG,GAIhEA,EAAO,0BAA4BA,EAAO,UAC1C,IACI,IAAIT,GAAO,IAAIvvC,OACV4vC,WACAW,gBAAgBP,EAAM,aACtBT,KAEL,OADAA,EAAK55B,YAAY45B,EAAK5hC,YACf4hC,EAEX,MAAOh2C,GACH,OAAO,OASf01C,EAAgBj4C,UAAU84C,kCAAoC,SAAUE,GAEpE,IAAIQ,EAAar6C,KAAKg5C,cAAclqB,cAAc,YAClD,MAAI,YAAaurB,GACbA,EAAWf,UAAYO,EAChBQ,IAEXr6C,KAAKm5C,iBAAiBG,UAAYO,EAG9B75C,KAAK+4C,WAAWuB,cAChBt6C,KAAKu6C,mBAAmBv6C,KAAKm5C,kBAE1Bn5C,KAAKm5C,mBAUhBL,EAAgBj4C,UAAU05C,mBAAqB,SAAUC,GAGrD,IAFA,IAAIC,EAAUD,EAAGnoC,WAERlR,EAAIs5C,EAAQn5C,OAAS,EAAG,EAAIH,EAAGA,IAAK,CACzC,IACI8vB,EADSwpB,EAAQ1C,KAAK52C,GACJ+E,KACL,cAAb+qB,GAAyD,IAA7BA,EAASvlB,QAAQ,SAC7C8uC,EAAGjnB,gBAAgBtC,GAI3B,IADA,IAAIypB,EAAYF,EAAGhjC,WACZkjC,GACCA,EAAUC,WAAaC,KAAKC,cAC5B76C,KAAKu6C,mBAAmBG,GAC5BA,EAAYA,EAAUI,aAGvBhC,EA/HyB,GAkLhCiC,GAAmB,8DAEnBC,GAAmB,uIACvB,SAASC,GAAaC,GAElB,OADAA,EAAMztC,OAAOytC,IACLC,MAAMJ,KAAqBG,EAAIC,MAAMH,IAClCE,GACPrC,MACAuC,QAAQC,KAAK,wCAA0CH,EAAM,sCAE1D,UAAYA;;;;;;;;AAcvB,SAASI,GAAOC,GACZ,IAAIra,EAAKx6B,EACL8E,KACJ,IACI,IAAK,IAAIgwC,EAAK74C,EAAS44C,EAAK1jB,MAAM,MAAO4jB,EAAKD,EAAGx4C,QAASy4C,EAAGv4C,KAAMu4C,EAAKD,EAAGx4C,OAEvEwI,EADQiwC,EAAGx4C,QACF,EAGjB,MAAOm/B,GAASlB,GAAQ39B,MAAO6+B,GAC/B,QACI,IACQqZ,IAAOA,EAAGv4C,OAASwD,EAAK80C,EAAGnZ,SAAS37B,EAAGnF,KAAKi6C,GAEpD,QAAU,GAAIta,EAAK,MAAMA,EAAI39B,OAEjC,OAAOiI,EAEX,SAASkwC,KAEL,IADA,IAIIC,EAAKj1C,EAJLk1C,KACKh1C,EAAK,EAAGA,EAAKvF,UAAUC,OAAQsF,IACpCg1C,EAAKh1C,GAAMvF,UAAUuF,GAGzB,IAAI4E,KACJ,IACI,IAAK,IAAIqwC,EAASl5C,EAASi5C,GAAOE,EAAWD,EAAO74C,QAAS84C,EAAS54C,KAAM44C,EAAWD,EAAO74C,OAAQ,CAClG,IAAI9B,EAAI46C,EAAS74C,MACjB,IAAK,IAAI6M,KAAK5O,EACNA,EAAET,eAAeqP,KACjBtE,EAAIsE,IAAK,IAIzB,MAAOisC,GAASJ,GAAQp4C,MAAOw4C,GAC/B,QACI,IACQD,IAAaA,EAAS54C,OAASwD,EAAKm1C,EAAOxZ,SAAS37B,EAAGnF,KAAKs6C,GAEpE,QAAU,GAAIF,EAAK,MAAMA,EAAIp4C,OAEjC,OAAOiI,EAOX,IAgJIwwC,GA0DOC,GA1MPC,GAAgBZ,GAAO,0BAGvBa,GAAkCb,GAAO,kDACzCc,GAAmCd,GAAO,SAC1Ce,GAA4BX,GAAMU,GAAkCD,IAEpEG,GAAiBZ,GAAMS,GAAiCb,GAAO,oMAI/DiB,GAAkBb,GAAMU,GAAkCd,GAAO,+LAGjEkB,GAAiBd,GAAMQ,GAAeI,GAAgBC,GAAiBF,IAEvEI,GAAYnB,GAAO,gEAEnBoB,GAAepB,GAAO,UACtBqB,GAAarB,GAAO,idAWpBsB,GAAclB,GAAMe,GAAWC,GAAcC,IAK7CE,GAA0C,WAC1C,SAASA,IAGL78C,KAAK88C,oBAAqB,EAC1B98C,KAAK+8C,OAiFT,OA/EAF,EAAyBh8C,UAAUm8C,iBAAmB,SAAUxC,GAK5D,IADA,IAAIzvC,EAAUyvC,EAAGhjC,WACVzM,GAWH,GAVIA,EAAQ4vC,WAAaC,KAAKC,aAC1B76C,KAAKi9C,aAAalyC,GAEbA,EAAQ4vC,WAAaC,KAAKsC,UAC/Bl9C,KAAKm9C,MAAMpyC,EAAQqyC,WAInBp9C,KAAK88C,oBAAqB,EAE1B/xC,EAAQyM,WACRzM,EAAUA,EAAQyM,gBAGtB,KAAOzM,GAAS,CAERA,EAAQ4vC,WAAaC,KAAKC,cAC1B76C,KAAKq9C,WAAWtyC,GAEpB,IAAI/H,EAAOhD,KAAKs9C,sBAAsBvyC,EAASA,EAAQ+vC,aACvD,GAAI93C,EAAM,CACN+H,EAAU/H,EACV,MAEJ+H,EAAU/K,KAAKs9C,sBAAsBvyC,EAASA,EAAQ2N,YAG9D,OAAO1Y,KAAK+8C,IAAIzxC,KAAK,KAEzBuxC,EAAyBh8C,UAAUo8C,aAAe,SAAUh4B,GACxD,IAAI/J,EAAU+J,EAAQs4B,SAASC,cAC/B,GAAKhB,GAAe/7C,eAAeya,GAAnC,CAIAlb,KAAK+8C,IAAIz5C,KAAK,KACdtD,KAAK+8C,IAAIz5C,KAAK4X,GAEd,IADA,IAjJgBuiC,EAiJZhD,EAAUx1B,EAAQ5S,WACblR,EAAI,EAAGA,EAAIs5C,EAAQn5C,OAAQH,IAAK,CACrC,IAAIu8C,EAASjD,EAAQ1C,KAAK52C,GACtB8vB,EAAWysB,EAAOx3C,KAClBy3C,EAAQ1sB,EAASusB,cACrB,GAAKZ,GAAYn8C,eAAek9C,GAAhC,CAIA,IAAI16C,EAAQy6C,EAAOz6C,MAEfw5C,GAAUkB,KACV16C,EAAQg4C,GAAah4C,IACrBy5C,GAAaiB,KA9JLF,EA+Jex6C,EAAvBA,GA9JZw6C,EAAShwC,OAAOgwC,IACF5lB,MAAM,KAAKxsB,IAAI,SAAUoyC,GAAU,OAAOxC,GAAawC,EAAOG,UAAYtyC,KAAK,OA8JrFtL,KAAK+8C,IAAIz5C,KAAK,IAAK2tB,EAAU,KAAM4sB,GAAe56C,GAAQ,UATtDjD,KAAK88C,oBAAqB,EAWlC98C,KAAK+8C,IAAIz5C,KAAK,UAtBVtD,KAAK88C,oBAAqB,GAwBlCD,EAAyBh8C,UAAUw8C,WAAa,SAAUtyC,GACtD,IAAImQ,EAAUnQ,EAAQwyC,SAASC,cAC3BhB,GAAe/7C,eAAeya,KAAaghC,GAAcz7C,eAAeya,KACxElb,KAAK+8C,IAAIz5C,KAAK,MACdtD,KAAK+8C,IAAIz5C,KAAK4X,GACdlb,KAAK+8C,IAAIz5C,KAAK,OAGtBu5C,EAAyBh8C,UAAUs8C,MAAQ,SAAUA,GAASn9C,KAAK+8C,IAAIz5C,KAAKu6C,GAAeV,KAC3FN,EAAyBh8C,UAAUy8C,sBAAwB,SAAU1+B,EAAM4c,GACvE,GAAIA,IACC5c,EAAKk/B,wBAAwBtiB,GAC1Bof,KAAKmD,kCAAoCnD,KAAKmD,+BAClD,MAAM,IAAIn6C,MAAM,6DAA+Dgb,EAAKo/B,WAExF,OAAOxiB,GAEJqhB,EAtFkC,GAyFzCoB,GAAwB,kCAExBC,GAA0B,gBAO9B,SAASL,GAAe56C,GACpB,OAAOA,EAAMoN,QAAQ,KAAM,SACtBA,QAAQ4tC,GAAuB,SAAU9C,GAG1C,MAAO,MAAyB,MAFvBA,EAAMgD,WAAW,GAEJ,QADZhD,EAAMgD,WAAW,GACqB,OAAU,OAAW,MAEpE9tC,QAAQ6tC,GAAyB,SAAU/C,GAAS,MAAO,KAAOA,EAAMgD,WAAW,GAAK,MACxF9tC,QAAQ,KAAM,QACdA,QAAQ,KAAM,QAOvB,SAAS+tC,GAAcrF,EAAYsF,GAC/B,IAAIlF,EAAmB,KACvB,IACI6C,GAAkBA,IAAmB,IAAIlD,GAAgBC,GAEzD,IAAIuF,EAAaD,EAAkB5wC,OAAO4wC,GAAmB,GAC7DlF,EAAmB6C,GAAgBzC,oBAAoB+E,GAGvD,IAAIC,EAAe,EACfC,EAAaF,EACjB,EAAG,CACC,GAAqB,IAAjBC,EACA,MAAM,IAAI36C,MAAM,yDAEpB26C,IACAD,EAAaE,EACbA,EAAarF,EAAiBG,UAC9BH,EAAmB6C,GAAgBzC,oBAAoB+E,SAClDA,IAAeE,GACxB,IAAIt5B,EAAY,IAAI23B,GAChB4B,EAAWv5B,EAAU83B,iBAAiB0B,GAAmBvF,IAAqBA,GAIlF,OAHIN,MAAe3zB,EAAU43B,oBACzB1B,QAAQC,KAAK,qFAEVoD,EAEX,QAEI,GAAItF,EAEA,IADA,IAAI1gC,EAAWimC,GAAmBvF,IAAqBA,EAChD1gC,EAASjB,YACZiB,EAAS+G,YAAY/G,EAASjB,aAK9C,SAASknC,GAAmBlE,GACxB,MAAO,YAAaA,GAIxB,SAASmE,EAAkBnE,GACvB,OAAOA,EAAGG,WAAaC,KAAKC,cAAgC,aAAhBL,EAAG+C;;;;;;;OALaoB,CAAkBnE,GAC1EA,EAAGtd,QACH;;;;;;;;AAaG+e,GAOR38C,EAAQ28C,kBAAoB38C,EAAQ28C,qBANnBA,GAAsB,KAAI,GAAK,OAC/CA,GAAgBA,GAAsB,KAAI,GAAK,OAC/CA,GAAgBA,GAAuB,MAAI,GAAK,QAChDA,GAAgBA,GAAwB,OAAI,GAAK,SACjDA,GAAgBA,GAAqB,IAAI,GAAK,MAC9CA,GAAgBA,GAA8B,aAAI,GAAK,eAO3D,IAAI2C,GACA,SAASA,OAgCTC,GAAmB,IAAIC,OAAO,8LAEZ,KAmBlBC,GAAS;;;;;;;OA2Bb,SAASC,GAAe/7C,GAEpB,KADAA,EAAQwK,OAAOxK,GAAO26C,QAElB,MAAO,GAGX,IAAIqB,EAAWh8C,EAAMk4C,MAAM4D,IAC3B,OAAKE,GAAYhE,GAAagE,EAAS,MAAQA,EAAS,IACpDh8C,EAAMk4C,MAAM0D,KA1BpB,SAASK,EAAkBj8C,GAGvB,IAFA,IAAIk8C,GAAgB,EAChBC,GAAgB,EACXj+C,EAAI,EAAGA,EAAI8B,EAAM3B,OAAQH,IAAK,CACnC,IAAIW,EAAImB,EAAM+M,OAAO7O,GACX,MAANW,GAAcs9C,EACdD,GAAiBA,EAEN,MAANr9C,GAAaq9C,IAClBC,GAAiBA,GAGzB,OAAOD,GAAiBC,EAcaF,CAAkBj8C,GAC5CA,GAEP41C,MACAuC,QAAQC,KAAK,0CAA4Cp4C,EAAQ,uCAE9D;;;;;;;OAuBX,SAASo8C,GAAaf,GAClB,IAAIp9C,EAAIkpB,KACR,OAAIlpB,EACOA,EAAEo+C,SAAShgD,EAAQ28C,gBAAgBsD,KAAMjB,IAAe,GAE/D/F,GAAwB+F,EAAY,QAC7BA,EAAWz4C,WAEfu4C,GAActiC,SAAUsB,GAAYkhC,IAe/C,SAASkB,GAAcC,GACnB,IAAIv+C,EAAIkpB,KACR,OAAIlpB,EACOA,EAAEo+C,SAAShgD,EAAQ28C,gBAAgByD,MAAOD,IAAgB,GAEjElH,GAAwBkH,EAAa,SAC9BA,EAAY55C,WAEhBm5C,GAAe5hC,GAAYqiC,IAgBtC,SAASE,GAAYC,GACjB,IAAI1+C,EAAIkpB,KACR,OAAIlpB,EACOA,EAAEo+C,SAAShgD,EAAQ28C,gBAAgB4D,IAAKD,IAAc,GAE7DrH,GAAwBqH,EAAW,OAC5BA,EAAU/5C,WAEdo1C,GAAa79B,GAAYwiC,IAWpC,SAASE,GAAoBC,GACzB,IAAI7+C,EAAIkpB,KACR,GAAIlpB,EACA,OAAOA,EAAEo+C,SAAShgD,EAAQ28C,gBAAgB+D,aAAcD,IAAsB,GAElF,GAAIxH,GAAwBwH,EAAmB,eAC3C,OAAOA,EAAkBl6C,WAE7B,MAAM,IAAIjC,MAAM,iFAyBpB,IAqBIq8C,IACAC,cAAejrC,GACfkrC,mBAAoBlvC,GACpBmvC,mBAAoBjrC,GACpBpQ,iBAAoBA,EACpBI,eAAkBA,EAClBk7C,kBAAmB7rC,GACnB8rC,cAAelrC,GACfmrC,mBAAoB9a,GACpB+a,gBAAiBvZ,GACjBwZ,uBAAwBtZ,GACxBl6B,OAAUA,GACVyzC,mBAAoB7a,GACpB8a,wBAAyBtI,GACzBuI,mBAAoBjb,GACpBkb,sBAAuBre,GACvBse,iBAAkB1Z,GAClB2Z,4BAA6BlgB,GAC7BmgB,oBAAqB5tB,GACrB6tB,QAASn6C,GACTo6C,aAAc9iC,GACd+iC,eAAgBxzB,GAChByzB,yBAA0BtnB,GAC1BunB,uBAAwBtnB,GACxBunB,iBAAkBviB,GAClBwiB,iBAAkBviB,GAClBwiB,iBAAkB9zB,GAClB+zB,mBAAoBnzB,GACpBozB,gBAAiBrzB,GACjBszB,kBAAmB5tB,GACnB6tB,mBAAoB5tB,GACpB6tB,gBAAiBtzB,GACjBuzB,cAAetzB,GACfuzB,WAAY98B,GACZ+8B,MA35MJ,SAASC,GAAsBv6C,EAAOoc,EAAOjL,GAGzC,IAAIR,EAASoD,GAASoe,cAA2C,IAGjEvX,GAAYjK,EADAsU,GAAkBjlB,EAAO,EAA0B2Q,EAAQ,KAAMyL,GAAS,KAAM,MACjEjD,IAC3B8N,GAA0B9V,IAq5M1BqpC,MAl5MJ,SAASC,KACDt4B,GACAA,IAAW,EAIXD,GAAwBA,GAAsB/c,OAGlDid,KACKA,GAAiBA,GAAeqJ,QAAQvJ,KAC7C/P,GAAoB+P,GAAsBza,MAAOuK,KAw4MjD0oC,iBAAkB7P,GAClB8P,iBAAkBzP,GAClB0P,iBAAkBxP,GAClByP,iBAAkBxP,GAClByP,iBAAkBxP,GAClByP,iBAAkBxP,GAClByP,iBAAkBvP,GAClBwP,iBAAkBtP,GAClBuP,iBAAkBrP,GAClBsP,iBAAkBpP,GAClBqP,kBAAmBz4B,GACnB04B,eAAgBz4B,GAChB04B,kBAAmB7lB,GACnB8lB,kBAAmB3lB,GACnB4lB,kBAAmBxlB,GACnBylB,kBAAmBrlB,GACnBslB,kBAAmBllB,GACnBmlB,kBAAmBhlB,GACnBilB,kBAAmB9kB,GACnB+kB,kBAAmB5kB,GACnB6kB,kBAAmBxmB,GACnBymB,oBAAqB7uB,GACrB8uB,YAAa5xB,GACb6xB,QAASntB,GACTotB,cAAetkC,GACfukC,mBAAoBpwB,GACpBqwB,aAAc/P,GACdgQ,aAAchQ,GACdiQ,aAAc9P,GACd+P,aAAc9P,GACd+P,aAAc9P,GACd+P,iBAAkBjpB,GAClBkpB,QAASzQ,GACT0Q,SAAUnO,GACVoO,gBAAiBlM,GACjBmM,wBAAyBxkB,GACzBykB,aAAc1lB,GACd2lB,kBAAmBxvB,GACnByvB,qBAAsBntB,GACtBotB,oBAAqBxtB,GACrBytB,uBAAwBruB,GACxBsuB,YAAa5yC,GACb6yC,QAASn7C,GACTo7C,eAAgBlsB,GAChBmsB,qBAAsB/qB,GACtBgrB,mBAAoBtqB,GACpBuqB,gBAAiB7F,GACjB8F,iBAAkB3F,GAClB4F,yBAzGwB,SAAU3+B,EAAMxjB,GACxC,YAAciC,IAAVjC,EACgB,qBAATwjB,GAAwC,eAATA,GAAkC,iBAATA,GAClD,WAATA,GAA8B,WAATA,GAA8B,eAATA,GACjC,qBAATA,EAED+4B,GAAcv8C,IAoGrBoiD,uBAAwBvF,GACxBwF,kBAzHJ,SAASC,GAAeC,GACpB,IAAItkD,EAAIkpB,KACR,GAAIlpB,EACA,OAAOA,EAAEo+C,SAAShgD,EAAQ28C,gBAAgBwJ,OAAQD,IAAiB,GAEvE,GAAIjN,GAAwBiN,EAAc,UACtC,OAAOA,EAAa3/C,WAExB,MAAM,IAAIjC,MAAM,0CAkHhB8hD,eAAgB/F,IAoBhBgG,GAAOC;;;;;;;OACX,SAASC,GAAO/1C,GACZ,MAAoB,mBAANA;;;;;;;OAalB,IAAIg2C,GAAgB,6DAChBC,GAAkB,uDAClBC,GAA4B,8EAC5BC,GAAwC,WACxC,SAASA,EAAuBC,GAC5BlmD,KAAKmmD,SAAWD,GAAWj8C,EAAiB,QAsMhD,OApMAg8C,EAAuBplD,UAAUulD,oBAAsB,WAAc,OAAO,GAC5EH,EAAuBplD,UAAUxB,QAAU,SAAU4B,GAAK,OAAO,WAE7D,IADA,IAAI0F,KACKC,EAAK,EAAGA,EAAKvF,UAAUC,OAAQsF,IACpCD,EAAKC,GAAMvF,UAAUuF,GAEzB,OAAO,IAAK3F,EAAE6F,KAAKtF,MAAMP,EAAGuC,QAAU,GAASmD,OAGnDs/C,EAAuBplD,UAAUwlD,wBAA0B,SAAUC,EAAYC,GAC7E,IAAIpQ,EAEAA,OADsB,IAAfmQ,EACE,IAAI/lD,MAAMgmD,EAAiBjlD,QAG3B,IAAIf,MAAM+lD,EAAWhlD,QAElC,IAAK,IAAIH,EAAI,EAAGA,EAAIg1C,EAAO70C,OAAQH,IAK3Bg1C,EAAOh1C,QADe,IAAfmlD,KAGFA,EAAWnlD,IAAMf,QACTkmD,EAAWnlD,OAKxBolD,GAA2C,MAAvBA,EAAiBplD,KACrCg1C,EAAOh1C,GAAKg1C,EAAOh1C,GAAGsC,OAAO8iD,EAAiBplD,KAGtD,OAAOg1C,GAEX8P,EAAuBplD,UAAU2lD,eAAiB,SAAUhhD,EAAMihD,GAC9D,IAAIC,EAAUlhD,EAAKK,WAQnB,GAAIigD,GAAca,KAAKD,IAClBX,GAAgBY,KAAKD,KAAaV,GAA0BW,KAAKD,GAClE,OAAO,KAGX,GAAIlhD,EAAKmC,YAAcnC,EAAKmC,aAAe8+C,EAAW9+C,WAClD,OAAOnC,EAAKmC,WAGhB,IAAIi/C,EAAoBphD,EAAKqhD,eAC7B,GAAID,GAAqBA,IAAsBH,EAAWI,eAAgB,CAGtE,IAAIA,EAA8C,mBAAtBD,EAAmCA,IAAsBA,EACjFE,EAAeD,EAAex7C,IAAI,SAAU07C,GAAa,OAAOA,GAAaA,EAAUvhD,OACvFwhD,EAAqBH,EAAex7C,IAAI,SAAU07C,GAClD,OAAOA,GAAaE,GAAoCF,EAAUrlD,cAEtE,OAAO1B,KAAKqmD,wBAAwBS,EAAcE,GAGtD,IAAIT,EAAmB/gD,EAAK/E,eAAesF,IAAeP,EAAKO,GAC3DugD,EAAatmD,KAAKmmD,UAAYnmD,KAAKmmD,SAASe,gBAC5ClnD,KAAKmmD,SAASe,eAAe,oBAAqB1hD,GACtD,OAAI8gD,GAAcC,EACPvmD,KAAKqmD,wBAAwBC,EAAYC,GAM7C,IAAIhmD,MAAMiF,EAAKlE,QAAQ2oB,UAAK/kB,IAEvC+gD,EAAuBplD,UAAU8G,WAAa,SAAUnC,GAGpD,IAAKqgD,GAAOrgD,GACR,SAEJ,IAAIihD,EAAaU,GAAc3hD,GAC3BmC,EAAa3H,KAAKwmD,eAAehhD,EAAMihD,GAI3C,OAHK9+C,GAAc8+C,IAAermD,SAC9BuH,EAAa3H,KAAK2H,WAAW8+C,IAE1B9+C,OAEXs+C,EAAuBplD,UAAUumD,gBAAkB,SAAUC,EAAYZ,GAErE,GAAIY,EAAW14C,aAAe04C,EAAW14C,cAAgB83C,EAAW93C,YAAa,CAC7E,IAAIA,EAAc04C,EAAW14C,YAI7B,MAH2B,mBAAhBA,GAA8BA,EAAYA,cACjDA,EAAcA,EAAYA,aAEvBA,EAGX,OAAI04C,EAAW3lD,YAAc2lD,EAAW3lD,aAAe+kD,EAAW/kD,WACvDulD,GAAoCI,EAAW3lD,YAGtD2lD,EAAW5mD,eAAeqF,GACnBuhD,EAAWvhD,GAEf,MAEXmgD,EAAuBplD,UAAU8N,YAAc,SAAU04C,GACrD,IAAKxB,GAAOwB,GACR,SAEJ,IAAIZ,EAAaU,GAAcE,GAC3BC,EAAiBtnD,KAAKonD,gBAAgBC,EAAYZ,OAEtD,OADwBA,IAAermD,OAASJ,KAAK2O,YAAY83C,OACxChjD,OAAO6jD,IAEpCrB,EAAuBplD,UAAU0mD,iBAAmB,SAAUF,EAAYZ,GAEtE,GAAIY,EAAWG,cACXH,EAAWG,eAAiBf,EAAWe,aAAc,CACrD,IAAIA,EAAeH,EAAWG,aAI9B,MAH4B,mBAAjBA,GAA+BA,EAAaA,eACnDA,EAAeA,EAAaA,cAEzBA,EAGX,GAAIH,EAAWI,gBACXJ,EAAWI,iBAAmBhB,EAAWgB,eAAgB,CACzD,IAAIC,EAAmBL,EAAWI,eAC9BE,KAIJ,OAHAvnD,OAAOoK,KAAKk9C,GAAkB73C,QAAQ,SAAU4W,GAC5CkhC,EAAelhC,GAAQwgC,GAAoCS,EAAiBjhC,MAEzEkhC,EAGX,OAAIN,EAAW5mD,eAAeuF,GACnBqhD,EAAWrhD,GAEf,MAEXigD,EAAuBplD,UAAU2mD,aAAe,SAAUH,GACtD,IAAKxB,GAAOwB,GACR,SAEJ,IAAIZ,EAAaU,GAAcE,GAC3BG,KACJ,GAAIf,IAAermD,OAAQ,CACvB,IAAIwnD,EAAuB5nD,KAAKwnD,aAAaf,GAC7CrmD,OAAOoK,KAAKo9C,GAAsB/3C,QAAQ,SAAUzI,GAChDogD,EAAapgD,GAAYwgD,EAAqBxgD,KAGtD,IAAIygD,EAAkB7nD,KAAKunD,iBAAiBF,EAAYZ,GAWxD,OAVIoB,GACAznD,OAAOoK,KAAKq9C,GAAiBh4C,QAAQ,SAAUzI,GAC3C,IAAI1F,KACA8lD,EAAa/mD,eAAe2G,IAC5B1F,EAAW4B,KAAK9B,MAAME,EAAY8B,EAASgkD,EAAapgD,KAE5D1F,EAAW4B,KAAK9B,MAAME,EAAY8B,EAASqkD,EAAgBzgD,KAC3DogD,EAAapgD,GAAY1F,IAG1B8lD,GAEXvB,EAAuBplD,UAAUinD,iBAAmB,SAAUtiD,EAAMuiD,GAChE,OAAOviD,aAAgBmgD,IAAQoC,KAAcviD,EAAK3E,WAEtDolD,EAAuBplD,UAAUmnD,OAAS,SAAUxiD,GAAQ,UAC5DygD,EAAuBplD,UAAUonD,OAAS,SAAU/hD,GAAQ,OAAO,IAAI0/C,SAAS,IAAK,YAAc1/C,EAAO,MAC1G+/C,EAAuBplD,UAAUqnD,OAAS,SAAUhiD,GAChD,OAAO,IAAI0/C,SAAS,IAAK,IAAK,YAAc1/C,EAAO,UAEvD+/C,EAAuBplD,UAAUsnD,OAAS,SAAUjiD,GAEhD,OAAO,IAAI0/C,SAAS,IAAK,OADN,UAAY1/C,EAAO,wBAA0BA,EAAO,wCAA0CA,EAAO,qBAI5H+/C,EAAuBplD,UAAUunD,UAAY,SAAU5iD,GAEnD,MAAoB,iBAATA,GAAqBA,EAAe,SACpCA,EAAe,SAGnB,KAAO2F,GAAU3F,IAE5BygD,EAAuBplD,UAAUwnD,YAAc,SAAU7iD,GAAQ,MAAO,KAAO2F,GAAU3F,IACzFygD,EAAuBplD,UAAUynD,kBAAoB,SAAUpiD,EAAMqiD,EAAWC,EAASC,GACrF,OAAOA,GAEXxC,EAAuBplD,UAAU6nD,YAAc,SAAUC,EAAgBziD,GAAQ,OAAOyiD,EAAeziD,IAChG+/C,EAxMgC,GA0M3C,SAASgB,GAAoC2B,GACzC,OAAKA,EAGEA,EAAqBv9C,IAAI,SAAUw9C,GACtC,IACI5hD,EADgB4hD,EAAoBrjD,KACNyB,cAElC,OAAO,IAAKA,EAAcH,KAAKtF,MAAMyF,EAAezD,QAAU,GADzCqlD,EAAoBliD,KAAOkiD,EAAoBliD,gBAI5E,SAASwgD,GAAcjgD,GACnB,IAAI4hD,EAAc5hD,EAAKrG,UAAYT,OAAO4gC,eAAe95B,EAAKrG,WAAa,KAI3E,OAHiBioD,EAAcA,EAAYloD,YAAc,OAGpCR;;;;;;;OAUzB,IAAI+lD,GAAW,KACf,SAAS4C,KACL,OAAQ5C,GAAWA,IAAY,IAAIF,GAEvC,SAAS+C,GAAoBxjD,GACzB,OAAOyjD,GAAoBF,KAAaphD,WAAWnC,IAEvD,SAASyjD,GAAoBh7C,GACzB,OAAOA,EAAK5C,IAAI,SAAU69C,GAAO,OAErC,SAASC,EAAkBD,GACvB,IAAIlhD,GACAoD,MAAO,IAAItL,EAASspD,YAAY,MAChCC,MAAM,EACNC,UAAU,EACVC,SAAUzpD,EAAS0pD,yBAAyBC,MAC5C1/C,MAAM,EACN2/C,UAAU,GAEd,SAASC,EAAwBv+C,GAEzBpD,EAAKuhD,SADLn+C,IAAUwB,GACM9M,EAAS0pD,yBAAyB58C,SAGlC9M,EAAS0pD,yBAAyBC,MAEtDzhD,EAAKoD,MAAQ,IAAItL,EAAS8pD,gBAAgBx+C,GAE9C,GAAI7K,MAAMuM,QAAQo8C,GAAM,CACpB,GAAmB,IAAfA,EAAI5nD,OACJ,MAAM,IAAIsC,MAAM,yCAEpB,IAAK,IAAI8K,EAAI,EAAGA,EAAIw6C,EAAI5nD,OAAQoN,IAAK,CACjC,IAAIm7C,EAAQX,EAAIx6C,GAChB,GAAIm7C,aAAiB59C,IAA+C,aAAnC49C,EAAMvpD,UAAUsF,eAC7CoC,EAAKshD,UAAW,OAEf,GAAIO,aAAiB19C,IAA+C,aAAnC09C,EAAMvpD,UAAUsF,eAClDoC,EAAK0hD,UAAW,OAEf,GAAIG,aAAiB39C,IAA2C,SAAnC29C,EAAMvpD,UAAUsF,eAC9CoC,EAAK+B,MAAO,OAEX,GAAI8/C,aAAiBz9C,IAA2C,SAAnCy9C,EAAMvpD,UAAUsF,eAC9CoC,EAAKqhD,MAAO,OAEX,GAAIQ,aAAiB79C,GACtBhE,EAAKoD,MAAQ,IAAItL,EAAS8pD,gBAAgBC,EAAMz+C,YAE/C,GAAIy+C,aAAiBvhD,EAAW,CACjC,QAA4BpD,IAAxB2kD,EAAMthD,cACN,MAAM,IAAI3E,MAAM,mCAEpBoE,EAAKoD,MAAQ,IAAItL,EAASspD,YAAYS,EAAMthD,eAC5CP,EAAKuhD,SAAWzpD,EAAS0pD,yBAAyBlhD,eAGlDqhD,EAAwBE,SAKhCF,EAAwBT,GAE5B,OAAOlhD;;;;;;;OAxDiCmhD,CAAkBD,KAkE9D,IAAIY,MAaJ,SAASC,GAAoBzX,EAAY/J,GACrC,IAAI7zB,EAAes1C,GAAUzhB,EAAS7zB,cAAgBo1C,IAClDplD,EAAc,KAClBtE,OAAO+B,eAAemwC,EAAY7tC,GAC9BiI,IAAK,WACD,GAAoB,OAAhBhI,EAAsB,CACtB,IAAIsD,GACAxC,KAAMmX,GAAK21B,GACX79B,UAAWu1C,GAAUzhB,EAAS9zB,WAAaq1C,IAAez+C,IAAI4+C,IAC9Dv1C,aAAcA,EAAarJ,IAAI4+C,IAC/B3kD,QAAS0kD,GAAUzhB,EAASjjC,SAAWwkD,IAClCz+C,IAAI6+C,IACJ7+C,IAAI4+C,IACT3qD,QAAS0qD,GAAUzhB,EAASjpC,SAAWwqD,IAClCz+C,IAAI6+C,IACJ7+C,IAAI4+C,IACTE,YAAY,GAEZ3+C,EAAM1L,EAASsqD,gBAAgBpiD,GACnCtD,EAAc5E,EAASuqD,cAAc7+C,EAAI8+C,WAAYrK,GAAgB,QAAU3N,EAAWpsC,KAAO,sBAErG,OAAOxB,GAGXw+B,cAAc,IAElB,IAAI5+B,EAAgB,KACpBlE,OAAO+B,eAAemwC,EAAYjuC,GAC9BqI,IAAK,WACD,GAAsB,OAAlBpI,EAAwB,CACxB,IAAI0D,GACA9B,KAAMosC,EAAWpsC,KACjBV,KAAMmX,GAAK21B,GACXrkC,KAAM+6C,GAAoB1W,GAC1BjtC,UAAW,IAAIvF,EAAS8pD,gBAAgBrhB,EAASljC,WAAaykD,IAC9DxkD,QAAS,IAAIxF,EAAS8pD,iBAClBrhB,EAASjjC,SAAWwkD,GACpBvhB,EAASjpC,SAAWwqD,MAGxBt+C,EAAM1L,EAASyqD,gBAAgBviD,GACnC1D,EAAgBxE,EAASuqD,cAAc7+C,EAAI8+C,WAAYrK,GAAgB,QAAU3N,EAAWpsC,KAAO,oBAAqBsF,EAAIg/C,YAEhI,OAAOlmD,GAGX4+B,cAAc,IA4BtB,SAASunB,GAA2BnqB,EAAcoqB,GAC9CpqB,EAAa3sB,cAAgB,WAAc,OAAOpT,MAAMoqD,KAAKD,EAAiBE,YAAYt5C,YACrFjG,IAAI,SAAUw/C,GAAO,OAAOv2C,GAAgBu2C,IAAQx2C,GAAgBw2C,KACpEtT,OAAO,SAAU3lC,GAAO,QAASA,KACtC0uB,EAAazsB,SAAW,WACpB,OAAOtT,MAAMoqD,KAAKD,EAAiBE,YAAYx5C,OAAO/F,IAAI,SAAUsoC,GAAQ,OAAOp/B,GAAWo/B,MAUtG,SAASmX,GAAoBxY,GACzB,IAAKyY,GAAWzY,GACZ,MAAM,IAAI1uC,MAAM0uC,EAAWpsC,KAAO,iCAEtC,IAAI0L,EAAM2D,GAAe+8B,GACzB,GAAoC,OAAhC1gC,EAAI+C,wBACJ,OAAO/C,EAAI+C,wBAEf,IAAIq2C,GACAJ,aACIt5C,WAAY,IAAIlI,IAChBgI,MAAO,IAAIhI,KAEf6hD,UACI35C,WAAY,IAAIlI,IAChBgI,MAAO,IAAIhI,MAmDnB,OAhDAwI,EAAI8C,aAAa7E,QAAQ,SAAUq7C,GAE3B32C,GADmB22C,GAEnBF,EAAOJ,YAAYx5C,MAAM6V,IAAIikC,GAM7BF,EAAOJ,YAAYt5C,WAAW2V,IAAIikC,KAG1Ct5C,EAAItM,QAAQuK,QAAQ,SAAUohC,GAC1B,IAAIka,EAAgBla,EACpB,IAAK8Z,GAAWI,GACZ,MAAM,IAAIvnD,MAAM,aAAeunD,EAAcjlD,KAAO,uCAIxD,IAAIklD,EAAgBN,GAAoBK,GACxCC,EAAcH,SAAS35C,WAAWzB,QAAQ,SAAUw7C,GAAS,OAAOL,EAAOJ,YAAYt5C,WAAW2V,IAAIokC,KACtGD,EAAcH,SAAS75C,MAAMvB,QAAQ,SAAUw7C,GAAS,OAAOL,EAAOJ,YAAYx5C,MAAM6V,IAAIokC,OAEhGz5C,EAAItS,QAAQuQ,QAAQ,SAAUo7C,GAC1B,IAAIK,EAAgBL,EAGpB,GAAIF,GAAWO,GAAgB,CAG3B,IAAIC,EAAgBT,GAAoBQ,GACxCC,EAAcN,SAAS35C,WAAWzB,QAAQ,SAAUw7C,GAChDL,EAAOJ,YAAYt5C,WAAW2V,IAAIokC,GAClCL,EAAOC,SAAS35C,WAAW2V,IAAIokC,KAEnCE,EAAcN,SAAS75C,MAAMvB,QAAQ,SAAUw7C,GAC3CL,EAAOJ,YAAYx5C,MAAM6V,IAAIokC,GAC7BL,EAAOC,SAAS75C,MAAM6V,IAAIokC,UAGzB91C,GAAe+1C,GACpBN,EAAOC,SAAS75C,MAAM6V,IAAIqkC,GAG1BN,EAAOC,SAAS35C,WAAW2V,IAAIqkC,KAGvC15C,EAAI+C,wBAA0Bq2C,EACvBA,EAEX,SAAShB,GAAU7iD,GACf,IAAIqkD,KASJ,OARArkD,EAAO0I,QAAQ,SAAU5M,GACjB1C,MAAMuM,QAAQ7J,GACduoD,EAAIloD,KAAK9B,MAAMgqD,EAAKhoD,EAASwmD,GAAU/mD,KAGvCuoD,EAAIloD,KAAKL,KAGVuoD,EAEX,SAAStB,GAA0BjnD,GAC/B,OAYJ,SAASwoD,EAAsBxoD,GAC3B,YAA0BiC,IAAnBjC,EAAMslC,SAbTkjB,CAAsBxoD,GACfA,EAAMslC,SAEVtlC,EAEX,SAAS0Z,GAAK1Z,GACV,OAAO,IAAInD,EAAS8pD,gBAAgB3mD,GAExC,SAASgnD,GAAchnD,GACnB,IAAIyZ,EAAUC,GAAK1Z,GACnB,OAASA,MAAOyZ,EAASlX,KAAMkX,GAKnC,SAASquC,GAAW9nD,GAChB,QAASsS,GAAetS;;;;;;;OAqG5B,SAASyoD,GAAkBlmD,EAAM9C,GAE7B,IAAI8kD,EAAeuB,KAAavB,aAAahiD,GACzC6jD,EAqCR,SAASsC,EAAoBjpD,EAAU8kD,GAEnC,IAAI9gD,EAAK5G,EAAS8rD,kBAAkBlpD,EAAS2mD,UAAah3C,EAAa3L,EAAG2L,WAAYw5C,EAAYnlD,EAAGmlD,UAAWC,EAAaplD,EAAGolD,WAChI,GAAI1rD,OAAOoK,KAD8I9D,EAAGiL,YAChIrQ,OAAS,EACjC,MAAM,IAAIsC,MAAM,uDAEpB,IAAImoD,EAAU,SAAUC,GAChBxE,EAAa/mD,eAAeurD,IAC5BxE,EAAawE,GAAOn8C,QAAQ,SAAUo8C,IAsBlD,SAASC,EAAcjpD,GACnB,MAAgC,gBAAzBA,EAAM2C,eAtBGsmD,CAAcD,GAwBlC,SAASE,EAAelpD,GACpB,MAAgC,iBAAzBA,EAAM2C,eAtBQumD,CAAeF,KACpBJ,EAAUI,EAAIl6B,WAAai6B,GAASA,EAAQ,KAAOC,EAAItlD,UAAY2E,KAAK,KAAO,KAH/EwgD,EAAWG,EAAIG,kBAAoBJ,GAASA,KAS5D,IAAK,IAAIA,KAASxE,EACduE,EAAQC,GAEZ,OAAS35C,WAAYA,EAAYw5C,UAAWA,EAAWC,WAAYA,GA3DxDH,CAAoBjpD,EAAU8kD,GACrC6E,EAAqBC,GAAkB5pD,EAAS4P,YAChDi6C,EAAsBD,GAAkB5pD,EAAS8P,aACjDg6C,KACAC,KACAxrB,EAAU,SAAU+qB,GAChBxE,EAAa/mD,eAAeurD,IAC5BxE,EAAawE,GAAOn8C,QAAQ,SAAUo8C,IAsDlD,SAASz3B,EAAQvxB,GACb,MAAgC,UAAzBA,EAAM2C,eAtDG4uB,CAAQy3B,GAwD5B,SAASS,EAASzpD,GACd,MAAgC,WAAzBA,EAAM2C,eAtDQ8mD,CAAST,KACdQ,EAAgBT,GAASC,EAAIU,qBAAuBX,GAHpDQ,EAAeR,GAASC,EAAIU,qBAAuBX,KAQnE,IAAK,IAAIA,KAASxE,EACdvmB,EAAQ+qB,GAEZ,OACI9lD,KAAMV,EAAKU,KACXV,KAAM,IAAI1F,EAAS8pD,gBAAgBpkD,GACnConD,kBAAmB,EACnBnkD,SAAU/F,EAAS+F,SACnBwF,KAAM+6C,GAAoBxjD,GAAO6jD,KAAMA,EACvC/2C,OAAQvR,KAAasrD,EAAoBG,GACzCh6C,QAASzR,KAAawrD,EAAqBE,GAC3CvhB,WACA2hB,WACIC,mBAA8C5nD,IAA/BM,EAAK3E,UAAUwiC,aAElC0pB,eAAgB,KAChBC,iBA3CR,SAASC,EAA0BznD,GAC/B,OAAOpF,OAAO4gC,eAAex7B,EAAK3E,aAAeT,OAAOS,UA0ClCosD,CAA0BznD,GAC5CiN,SAAU/P,EAAS+P,UAAY,MAuCvC,SAAS65C,GAAkBnlD,GACvB,OAAOA,EAAOswC,OAAO,SAAUpsC,EAAKpI,GAChC,IAAIyD,EAAKvD,EAAOF,EAAM40B,MAAM,KAAKxsB,IAAI,SAAU6hD,GAAS,OAAOA,EAAMtP,SAAY,GAAIoO,EAAQtlD,EAAG,GAEhG,OADA2E,EAAI2gD,GAD2GtlD,EAAG,IACzFslD,EAClB3gD;;;;;;;OAwFf,SAAS8hD,GAAmBnlD,GACxB,YAAyB9C,IAAlB8C,EAAK8G,SAEhB,IAAIs+C,GAAc1pD,GAAyB8J,QAASC,OAAQC,SAAUhK,IACtE,SAAS2pD,GAAmBrlD,GACxB,OAAOolD,MAAeplD,EAE1B,SAASslD,GAAqBtlD,GAC1B,YAA2B9C,IAApB8C,EAAK6G,WAEhB,SAAS0+C,GAAsBvlD,GAC3B,YAA4B9C,IAArB8C,EAAK4G;;;;;;;;;;;;;;;AAwChB,IAiRI4+C,GAhRAC,GA9SJ,SAASC,GAAiBloD,EAAM9C,GAC5B,IAAIsB,EAAiB,MA9qVzB,SAAS2pD,EAAyCjrD,GAC1C2G,EAAyB3G,IACzByG,EAAiC8d,IAAIvkB,GA8qVzCirD,CAAyCjrD,GACzCtC,OAAO+B,eAAeqD,EAAMzB,GACxB2I,IAAK,WACD,GAAuB,OAAnB1I,EAAyB,CACzB,GAAIqF,EAAyB3G,GAAW,CACpC,IAAIa,GAAS,cAAgB4H,GAAU3F,GAAQ,sBAQ/C,MAPI9C,EAAS6G,aACThG,EAAMD,KAAK,mBAAqB6H,GAAUzI,EAAS6G,cAEnD7G,EAAS8G,WAAa9G,EAAS8G,UAAUlI,QACzCiC,EAAMD,KAAK,iBAAmB8M,KAAKjF,UAAUzI,EAAS8G,YAE1DjG,EAAMD,KAAK,2DACL,IAAIM,MAAML,EAAM+H,KAAK,OAG/B,IAAIsiD,EAAe,IAAI9tD,EAAS+tD,aAE5B57C,EAAWnS,EAASguD,cAAcprD,EAASuP,SAAU,QAAU9G,GAAU3F,GAAQ,kBACjFuoD,oBAAqBrrD,EAASqrD,sBAAuB,GACtD,IACH,QAAwB7oD,IAApB+M,EAAS+7C,OAAsB,CAC/B,IAAIA,EAAS/7C,EAAS+7C,OAAO3iD,IAAI,SAAUwpC,GAAO,OAAOA,EAAIhvC,aAAeyF,KAAK,MACjF,MAAM,IAAI1H,MAAM,iDAAmDuH,GAAU3F,GAAQ,KAAOwoD,GAIhG,IAAIxiD,EAAM1L,EAASmuD,6BAA6BltD,KAAa2qD,GAAkBlmD,EAAM9C,IAAauP,SAAUA,EAAUX,WAAY,IAAI5G,IAAO0G,MAAO,IAAI1G,IAAOwjD,eAAiBC,yBAAyB,EAAOz8C,OAAQhP,EAASgP,WAAcF,cAAe9O,EAAS8O,eAAiBlS,EAAQ4J,kBAAkBuI,SAAUE,WAAYjP,EAASiP,YAAc,OAASi8C,EAAc9tD,EAASsuD,qBAC3XC,EAAgB7qD,EAASoqD,EAAapD,WAAYh/C,EAAIg/C,YAM1D,GALAxmD,EAAiBlE,EAASuqD,cAAc7+C,EAAI8+C,WAAYrK,GAAgB,QAAUz6C,EAAKU,KAAO,qBAAsBmoD,GAgBpI,SAASC,EAAiBhlD,GACtB,YAAqCpE,IAA9BoE,EAAUilD,gBAZDD,CAAiB9oD,GAAO,CACxB,IAAIwlD,EAASF,GAAoBtlD,EAAK+oD,iBACtC9D,GAA2BzmD,EAAgBgnD,IAGnD,OAAOhnD,GAGXk/B,cAAc,KAkQlBsrB,GArPJ,SAASC,GAAiBjpD,EAAMwzB,GAC5B,IAAI90B,EAAiB,KACrB9D,OAAO+B,eAAeqD,EAAMvB,GACxByI,IAAK,WACD,GAAuB,OAAnBxI,EAAyB,CACzB,IAAI0pD,EAAe,IAAI9tD,EAAS+tD,aAC5Ba,EAAe,SAAWlpD,GAAQA,EAAKU,MAAQ,qBAC/CsF,EAAM1L,EAAS6uD,6BAA6BjD,GAAkBlmD,EAAMwzB,GAAY40B,EAAc9tD,EAASsuD,qBACvGC,EAAgB7qD,EAASoqD,EAAapD,WAAYh/C,EAAIg/C,YAC1DtmD,EAAiBpE,EAASuqD,cAAc7+C,EAAI8+C,WAAYrK,GAAgByO,EAAcL,GAE1F,OAAOnqD,GAGXg/B,cAAc,KAwOlB0rB,GA/HJ,SAASC,GAAkBrpD,EAAMspD,GAE7B,IAAI9mD,EAAO8mD,IAAa7pD,WAAY,MAChC2M,EAAM,KACVxR,OAAO+B,eAAeqD,EAAMrB,GACxBuI,IAAK,WACD,GAAY,OAARkF,EAAc,CAEd,IAAIm9C,EAAe5B,GAAmBnlD,IAASslD,GAAqBtlD,IAChEqlD,GAAmBrlD,IAASulD,GAAsBvlD,GAClDgnD,EAAWhG,GAAoBxjD,GAC/BypD,OAAW/pD,GACVioD,GAAmBnlD,IAASslD,GAAqBtlD,UAAwB9C,IAAd8C,EAAKiG,OACjEghD,EAAWhG,GAAoBjhD,EAAKiG,OAIxC,IAAIa,OAAW5J,EACX2J,OAAa3J,EACbwI,OAAWxI,EACX0J,OAAc1J,EAClB,GAAK6pD,EAOA,GAAI5B,GAAmBnlD,GAExB8G,EAAW,IAAIhP,EAAS8pD,gBAAgB5hD,EAAK8G,eAE5C,GAAIu+C,GAAmBrlD,GAExB0F,EAAW,IAAI5N,EAAS8pD,gBAAgB5hD,EAAK0F,eAE5C,GAAI4/C,GAAqBtlD,GAE1B6G,EAAa,IAAI/O,EAAS8pD,gBAAgB5hD,EAAK6G,gBAE9C,CAAA,IAAI0+C,GAAsBvlD,GAM3B,MAAM,IAAIpE,MAAM,sBAJhBgL,EAAc,IAAI9O,EAAS8pD,gBAAgB5hD,EAAK4G,kBAhBhDE,EAAW,IAAIhP,EAAS8pD,gBAAgBpkD,GAsB5C,IAAIkB,EAAK5G,EAAS+uD,mBACd3oD,KAAMV,EAAKU,KACXV,KAAM,IAAI1F,EAAS8pD,gBAAgBpkD,GACnCP,WAcpB,SAASiqD,EAAkBjqD,GACvB,OAAkB,MAAdA,GAA4C,iBAAfA,EACtB,IAAInF,EAASspD,YAAYnkD,GAGzB,IAAInF,EAAS8pD,gBAAgB3kD,GAnBZiqD,CAAkBlnD,EAAK/C,YACnC6J,SAAUA,EACVD,WAAYA,EACZnB,SAAUA,EACVkB,YAAaA,EACbogD,SAAUA,EACVC,SAAUA,IAEdr9C,EAAM9R,EAASuqD,cADE3jD,EAAG4jD,WACqBrK,GAAgB,QAAUz6C,EAAKU,KAAO,sBADlCQ,EAAG8jD,YAGpD,OAAO54C,MAmEfu9C,GArgBJ,SAAS/E,GAAgB9X,EAAY/J,GACjCwhB,GAAoBzX,EAAY/J,GA4DpC,SAAS6mB,EAA6B9c,EAAY/J,GAC9C,IAAI7zB,EAAes1C,GAAUzhB,EAAS7zB,cAAgBo1C,IAClDY,EAAmBI,GAAoBxY,GAC3C59B,EAAa7E,QAAQ,SAAUw/C,GACvBA,EAAY5uD,eAAesD,GAI3B0mD,GADmBp2C,GADHg7C,GAEyB3E,GAEnC2E,EAAY5uD,eAAewD,IAAsBorD,EAAY5uD,eAAe8D,KAElF8qD,EAAYd,gBAAkBjc,KAvEtC8c,CAA6B9c,EAAY/J,IAogBzC+mB,GAnCJ,SAASC,GAAY/pD,EAAMwC,GACvB,IAAIxD,EAAY,KAChBpE,OAAO+B,eAAeqD,EAAMjB,GACxBmI,IAAK,WACD,GAAkB,OAAdlI,EAAoB,CACpB,IAAIkqD,EAAe,QAAUtxC,GAAY5X,GAAQ,gBAE7CgG,EAAM1L,EAAS0vD,yBACftpD,KAFSV,EAAKU,KAGdV,KAAM,IAAI1F,EAAS8pD,gBAAgBpkD,GACnCyI,KAAM+6C,GAAoBxjD,GAC1BouC,SAAU5rC,EAAK9B,KACfoP,UAAoBpQ,IAAd8C,EAAKsN,MAAqBtN,EAAKsN,OAEzC9Q,EAAY1E,EAASuqD,cAAc7+C,EAAI8+C,WAAYrK,GAAgByO,EAAcljD,EAAIg/C,YAEzF,OAAOhmD,GAGX0+B,cAAc,KAiBlBusB,GAA2B1F,GAC3B2F,GAAoCjF,GAoBpCkF,GAAY1pD,EAAc,YAAa,SAAU4kD,GAEjD,YADY,IAARA,IAAkBA,MACfA,QACR3lD,OAAWA,EAAW,SAAUM,EAAMwC,GAAQ,OAAOwmD,GAAqBhpD,EAAMwC,KAyF/E4nD,GAAY3pD,EAAc,YAAa,SAAUnE,GAEjD,YADU,IAANA,IAAgBA,MACZf,GAAW0S,gBAAiBnU,EAAQ4I,wBAAwB2nD,SAAW/tD,IAChF6tD,QAAWzqD,EAAW,SAAUM,EAAMwC,GAAQ,OAAOylD,GAAqBjoD,EAAMwC,KAM/E8nD,GAAO7pD,EAAc,OAAQ,SAAUzF,GAAK,OAAQO,GAAWuU,MAAM,GAAQ9U,SAAQ0E,OAAWA,EAAW,SAAUM,EAAMwC,GAAQ,OAAOsnD,GAAgB9pD,EAAMwC,KAmBhK+nD,GAA0B,SAAU1nC,GACpC,OAAO,SAAU1mB,EAAQuE,GAErB,IADA,IAAIS,KACKC,EAAK,EAAGA,EAAKvF,UAAUC,OAAQsF,IACpCD,EAAKC,EAAK,GAAKvF,UAAUuF,GAE7B,IAAIhG,EAAce,EAAOf,YACpBA,EAAYH,eAAekE,IAzBhB,SAAUhD,GAC9B,IAAIf,EAAce,EAAOf,YACrBovD,EAAmBpvD,EAAYgE,UAC/Bw8B,EAAUxgC,EAAYgE,WACtB0N,UACAE,WACAjB,mBAEAy+C,IACAnsD,EAAeu9B,EAAQ9uB,OAAQ09C,EAAiB19C,QAChDzO,EAAeu9B,EAAQ5uB,QAASw9C,EAAiBx9C,SACjD3O,EAAeu9B,EAAQ7vB,eAAgBy+C,EAAiBz+C,iBAepD0+C,CAAkBtuD,GAGR0mB,EADAznB,EAAYgE,WAElBsB,GAAQS,EAAK,KAOzBupD,GAAQtoD,EAAkB,QAAS,SAAU+kD,GAAuB,OAAUA,oBAAqBA,SAA2BznD,EAAW6qD,GAAwB,SAAU3uB,GAAW,OAAOA,EAAQ9uB,cAKrM69C,GAASvoD,EAAkB,SAAU,SAAU+kD,GAAuB,OAAUA,oBAAqBA,SAA2BznD,EAAW6qD,GAAwB,SAAU3uB,GAAW,OAAOA,EAAQ5uB,eAKvM49C,GAAcxoD,EAAkB,cAAe,SAAUwkD,GAAoB,OAAUA,iBAAkBA,KAgCzGiE,GAAezoD,EAAkB,eAAgB,SAAUmqB,EAAWprB,GAAQ,OAAUorB,UAAWA,EAAWprB,KAAMA,KA+BpH2pD,GAAWrqD,EAAc,WAAY,SAAUsiC,GAAY,OAAOA,QAAarjC,OAAWA,EAY9F,SAAUM,EAAMwC,GAAQ,OAAOmnD,GAAoB3pD,EAAMwC,KA+BrDuoD,GAAU,IATV/C,GACA,SAASA,GAAQgD,GACbxwD,KAAKwwD,KAAOA,EACZxwD,KAAKywD,MAAQD,EAAK34B,MAAM,KAAK,GAC7B73B,KAAK0wD,MAAQF,EAAK34B,MAAM,KAAK,GAC7B73B,KAAK2wD,MAAQH,EAAK34B,MAAM,KAAKvqB,MAAM,GAAGhC,KAAK,OAIzB,qBActBslD,GAAa3qD,EAAc,kBAAcf,OAAWA,OAAWA,EAAW,SAAUM,EAAMwC,GAAQ,OAAO4mD,GAAsBppD,EAAMwC,KASrI6oD,GAAsB,iBACtBC,GAAuB,kBACvBC,GAAe,gBACnB,SAASC,GAAgBztD,GACrB,OAAOA,EAAMstD,IAEjB,SAASI,GAAiB1tD,GACtB,OAAOA,EAAMutD,IAKjB,SAASI,GAAmB9V,GAExB,IADA,IAAIj0C,KACKP,EAAK,EAAGA,EAAKvF,UAAUC,OAAQsF,IACpCO,EAAOP,EAAK,GAAKvF,UAAUuF,GAE/Bw0C,EAAQ73C,MAAM/B,MAAM45C,EAAS53C,EAAS2D;;;;;;;OAiC1C,IAAIgqD,GAA8B,WAC9B,SAASA,IAILnxD,KAAKoxD,SAAWhW,QAgCpB,OA9BA+V,EAAatwD,UAAUwwD,YAAc,SAAU9tD,GAC3C,IAAI+tD,EAAgBtxD,KAAKuxD,mBAAmBhuD,GACxC2M,EAAUlQ,KAAKwxD,aAAajuD,GAG5BkuD,EArDZ,SAASC,EAAenuD,GACpB,OAAOA,EAAMwtD,KAAiBG,GAoDRQ,CAAenuD,GACjCkuD,EAAYzxD,KAAKoxD,SAAU,QAAS7tD,GAChC+tD,GACAG,EAAYzxD,KAAKoxD,SAAU,iBAAkBE,GAE7CphD,GACAuhD,EAAYzxD,KAAKoxD,SAAU,gBAAiBlhD,IAIpDihD,EAAatwD,UAAU2wD,aAAe,SAAUjuD,GAC5C,OAAIA,EACOytD,GAAgBztD,GAASytD,GAAgBztD,GAC5CvD,KAAKwxD,aAAaP,GAAiB1tD,IAEpC,MAGX4tD,EAAatwD,UAAU0wD,mBAAqB,SAAUhuD,GAElD,IADA,IAAIH,EAAI6tD,GAAiB1tD,GAClBH,GAAK6tD,GAAiB7tD,IACzBA,EAAI6tD,GAAiB7tD,GAEzB,OAAOA,GAEJ+tD,EArCsB,GAgEjC,SAASQ,GAAuBnnD,GAC5B,OAAIA,EAAKlJ,OAAS,EAGP;;;;;;;;AAff,SAASswD,EAAqBpnD,GAE1B,IADA,IAAIgB,KACKrK,EAAI,EAAGA,EAAIqJ,EAAKlJ,SAAUH,EAAG,CAClC,GAAIqK,EAAIE,QAAQlB,EAAKrJ,KAAO,EAExB,OADAqK,EAAIlI,KAAKkH,EAAKrJ,IACPqK,EAEXA,EAAIlI,KAAKkH,EAAKrJ,IAElB,OAAOqK,EAIYomD,CAAqBpnD,EAAK8C,QAAQukD,WACxBxmD,IAAI,SAAUymD,GAAK,OAAO3mD,GAAU2mD,EAAE1mD,SACvCE,KAAK,QAAU,IAEpC,GAEX,SAASymD,GAAevhD,EAAU5O,EAAKowD,EAA2BV,GAC9D,IAAI9mD,GAAQ5I,GACRqwD,EAASD,EAA0BxnD,GACnCjH,EAAS+tD,EApCjB,SAASY,EAAaxiD,EAAS4hD,GAC3B,IAAI9xB,EAAM9vB,EAAU,gBAAkB4hD,aAAyB1tD,MAAQ0tD,EAAc5hD,QAAU4hD,GAC3F/tD,EAAQK,MAAM47B,GAElB,OADAj8B,EAAMutD,IAAwBQ,EACvB/tD,EAgCsB2uD,CAAaD,EAAQX,GAAiB1tD,MAAMquD,GAMzE,OALA1uD,EAAM4uD,OAASA,GACf5uD,EAAMiH,KAAOA,EACbjH,EAAM6uD,WAAa5hD,GACnBjN,EAAMyuD,0BAA4BA,EAClCzuD,EAAMutD,IAAwBQ,EACvB/tD,EAEX,SAAS4uD,GAAO3hD,EAAU5O,GACtB5B,KAAKoyD,UAAU9uD,KAAKkN,GACpBxQ,KAAKwK,KAAKlH,KAAK1B,GAEf5B,KAAK0P,QAAU1P,KAAKgyD,0BAA0BhyD,KAAKwK,MA0HvD,SAAS6nD,GAAkBhL,EAAYiL,GAEnC,IADA,IAAIC,KACKpxD,EAAI,EAAGqxD,EAAKF,EAAOhxD,OAAQH,EAAIqxD,EAAIrxD,IAAK,CAC7C,IAAIsxD,EAAYH,EAAOnxD,GAKnBoxD,EAAUjvD,KAJTmvD,GAAiC,GAApBA,EAAUnxD,OAITmxD,EAAUpnD,IAAIF,IAAWG,KAAK,KAH9B,KAMvB,OAAO1H,MAAM,sCAAyCuH,GAAUk8C,GAAc,KAC1EkL,EAAUjnD,KAAK,MAAQ,2GAEvBH,GAAUk8C,GAAc;;;;;;;;AA6DhC,IAAIqL,GAA+B,WAI/B,SAASA,EAActnD,EAAO+I,GAG1B,GAFAnU,KAAKoL,MAAQA,EACbpL,KAAKmU,GAAKA,GACL/I,EACD,MAAM,IAAIxH,MAAM,0BAEpB5D,KAAK2yD,YAAcxnD,GAAUnL,KAAKoL,OAgBtC,OAXAsnD,EAAchmD,IAAM,SAAUtB,GAC1B,OAAOwnD,GAAmBlmD,IAAIX,GAAkBX,KAEpDhL,OAAO+B,eAAeuwD,EAAe,gBAIjChmD,IAAK,WAAc,OAAOkmD,GAAmBC,cAC7CvpB,YAAY,EACZpG,cAAc,IAEXwvB,EA1BuB,GAiD9BE,GAAqB,IArBQ,WAC7B,SAASE,IACL9yD,KAAK+yD,SAAW,IAAIroD,IAiBxB,OAfAooD,EAAYjyD,UAAU6L,IAAM,SAAUtB,GAClC,GAAIA,aAAiBsnD,GACjB,OAAOtnD,EACX,GAAIpL,KAAK+yD,SAASxiB,IAAInlC,GAClB,OAAOpL,KAAK+yD,SAASrmD,IAAItB,GAE7B,IAAI4nD,EAAS,IAAIN,GAActnD,EAAOsnD,GAAcG,cAEpD,OADA7yD,KAAK+yD,SAAS/kD,IAAI5C,EAAO4nD,GAClBA,GAEX5yD,OAAO+B,eAAe2wD,EAAYjyD,UAAW,gBACzC6L,IAAK,WAAc,OAAO1M,KAAK+yD,SAASE,MACxC3pB,YAAY,EACZpG,cAAc,IAEX4vB,EAnBqB,IA6E5BI,GAAY,IA3Ce,WAC3B,SAASC,EAAUC,GACfpzD,KAAKozD,uBAAyBA,EA2BlC,OAzBAD,EAAUtyD,UAAUwyD,mBAAqB,SAAUC,GAAQtzD,KAAKozD,uBAAyBE,GACzFH,EAAUtyD,UAAUxB,QAAU,SAAUmG,GAAQ,OAAOxF,KAAKozD,uBAAuB/zD,QAAQmG,IAC3F2tD,EAAUtyD,UAAU8G,WAAa,SAAU0/C,GACvC,OAAOrnD,KAAKozD,uBAAuBzrD,WAAW0/C,IAElD8L,EAAUtyD,UAAU8N,YAAc,SAAU04C,GACxC,OAAOrnD,KAAKozD,uBAAuBzkD,YAAY04C,IAEnD8L,EAAUtyD,UAAU2mD,aAAe,SAAUH,GACzC,OAAOrnD,KAAKozD,uBAAuB5L,aAAaH,IAEpD8L,EAAUtyD,UAAUinD,iBAAmB,SAAUtiD,EAAMuiD,GACnD,OAAO/nD,KAAKozD,uBAAuBtL,iBAAiBtiD,EAAMuiD,IAE9DoL,EAAUtyD,UAAUonD,OAAS,SAAU/hD,GAAQ,OAAOlG,KAAKozD,uBAAuBnL,OAAO/hD,IACzFitD,EAAUtyD,UAAUqnD,OAAS,SAAUhiD,GAAQ,OAAOlG,KAAKozD,uBAAuBlL,OAAOhiD,IACzFitD,EAAUtyD,UAAUsnD,OAAS,SAAUjiD,GAAQ,OAAOlG,KAAKozD,uBAAuBjL,OAAOjiD,IACzFitD,EAAUtyD,UAAUunD,UAAY,SAAU5iD,GAAQ,OAAOxF,KAAKozD,uBAAuBhL,UAAU5iD,IAC/F2tD,EAAUtyD,UAAUwnD,YAAc,SAAU7iD,GAAQ,OAAOxF,KAAKozD,uBAAuB/K,YAAY7iD,IACnG2tD,EAAUtyD,UAAUynD,kBAAoB,SAAUpiD,EAAMqiD,EAAWC,EAASC,GACxE,OAAOzoD,KAAKozD,uBAAuB9K,kBAAkBpiD,EAAMqiD,EAAWC,EAASC,IAEnF0K,EAAUtyD,UAAU6nD,YAAc,SAAU6K,EAAYrtD,GACpD,OAAOlG,KAAKozD,uBAAuB1K,YAAY6K,EAAYrtD,IAExDitD,EA7BmB,GA2Cd,CAAc,IAAIlN,IAa9BuN,GAAsC,WACtC,SAASA,EAAqB5xD,EAAK0nD,EAAUmK,GACzCzzD,KAAK4B,IAAMA,EACX5B,KAAKspD,SAAWA,EAChBtpD,KAAKyzD,WAAaA,EAKtB,OAHAD,EAAqBE,QAAU,SAAU9xD,GACrC,OAAO,IAAI4xD,EAAqB5xD,GAAK,EAAO,OAEzC4xD,EAT8B,GAWrCG,MACAC,GACA,SAASA,GAA4BhyD,EAAKiyD,EAAmB7kD,GACzDhP,KAAK4B,IAAMA,EACX5B,KAAK6zD,kBAAoBA,EACzB7zD,KAAKgP,cAAgBA,EACrBhP,KAAK8zD,gBAAkB9zD,KAAK6zD,kBAAkB,IAQlDE,GACA,SAASA,GAIT10D,EAIA20D,GACIh0D,KAAKX,QAAUA,EACfW,KAAKg0D,aAAeA,GAmC5B,SAASC,GAA0B7lD,GAC/B,OAAO,IAAIwlD,GAA4BlB,GAAchmD,IAAI0B,EAASZ,UA7BtE,SAAS0mD,EAAyB9lD,GAC9B,IAAIqoC,EACA0d,EACJ,GAAI/lD,EAASU,SAAU,CACnB,IAAIA,EAAW/C,GAAkBqC,EAASU,UAC1C2nC,EAAYyc,GAAU7zD,QAAQyP,GAC9BqlD,EAAeC,GAAiBtlD,QAE3BV,EAASQ,aACd6nC,EAAY,SAAU4d,GAAiB,OAAOA,GAC9CF,GAAgBX,GAAqBE,QAAQhB,GAAchmD,IAAI0B,EAASQ,gBAEnER,EAASS,YACd4nC,EAAYroC,EAASS,WACrBslD,EA6ER,SAASG,EAAsBjN,EAAY2M,GACvC,GAAKA,EAGA,CACD,IAAIO,EAAWP,EAAa3oD,IAAI,SAAUpK,GAAK,OAAQA,KACvD,OAAO+yD,EAAa3oD,IAAI,SAAUpK,GAAK,OAAOuzD,GAAcnN,EAAYpmD,EAAGszD,KAJ3E,OAAOH,GAAiB/M,GA/ETiN,CAAsBlmD,EAASS,WAAYT,EAASH,QAGnEwoC,EAAY,WAAc,OAAOroC,EAASV,UAC1CymD,EAAeR,IAEnB,OAAO,IAAII,GAA0Btd,EAAW0d,GAS6BD,CAAyB9lD,IAAYA,EAASW,QAAS,GAuExI,SAASqlD,GAAiB/M,GACtB,IAAIiL,EAASY,GAAUvrD,WAAW0/C,GAClC,IAAKiL,EACD,SACJ,GAAIA,EAAO3a,KAAK,SAAUn3C,GAAK,OAAY,MAALA,IAClC,MAAM6xD,GAAkBhL,EAAYiL,GAExC,OAAOA,EAAOjnD,IAAI,SAAU7K,GAAK,OAAOg0D,GAAcnN,EAAY7mD,EAAG8xD,KAEzE,SAASkC,GAAcnN,EAAY3kD,EAAU4vD,GACzC,IAAIlnD,EAAQ,KACRk+C,GAAW,EACf,IAAK/oD,MAAMuM,QAAQpK,GACf,OACW+xD,GADP/xD,aAAoBsJ,GACKtJ,EAAS0I,MAGT1I,EAHgB4mD,EAAU,MAO3D,IADA,IAAImK,EAAa,KACRtyD,EAAI,EAAGA,EAAIuB,EAASpB,SAAUH,EAAG,CACtC,IAAIuzD,EAAgBhyD,EAASvB,GACzBuzD,aAAyB/O,GACzBv6C,EAAQspD,EAEHA,aAAyB1oD,GAC9BZ,EAAQspD,EAActpD,MAEjBspD,aAAyBzoD,GAC9Bq9C,GAAW,EAENoL,aAAyBxoD,IAAQwoD,aAAyBvoD,GAC/DsnD,EAAaiB,EAERA,aAAyBhvD,IAC9B0F,EAAQspD,GAIhB,GAAa,OADbtpD,EAAQW,GAAkBX,IAEtB,OAAOqpD,GAAkBrpD,EAAOk+C,EAAUmK,GAG1C,MAAMpB,GAAkBhL,EAAYiL,GAG5C,SAASmC,GAAkBrpD,EAAOk+C,EAAUmK,GACxC,OAAO,IAAID,GAAqBd,GAAchmD,IAAItB,GAAQk+C,EAAUmK;;;;;;;OAWxE,IAAIkB,GAAY,IAAIv0D,OAqChBw0D,GAAoC,WACpC,SAASA,KA4FT,OAzDAA,EAAmBxqD,QAAU,SAAU/E,GACnC,OAvMR,SAASwvD,EAA2BxvD,GAChC,IAEIyvD,EAOR,SAASC,EAAiC1vD,EAAW2vD,GACjD,IAAK,IAAI7zD,EAAI,EAAGA,EAAIkE,EAAU/D,OAAQH,IAAK,CACvC,IAAIiN,EAAW/I,EAAUlE,GACrBuwC,EAAWsjB,EAAuBtoD,IAAI0B,EAASxM,IAAIuS,IACvD,GAAIu9B,EAAU,CACV,GAAItjC,EAASY,gBAAkB0iC,EAAS1iC,cACpC,MA7OLpL,MAAM,0DA6OmD8tC,EA7OqB,IA6OXtjC,GAElE,GAAIA,EAASY,cACT,IAAK,IAAIN,EAAI,EAAGA,EAAIN,EAASylD,kBAAkBvyD,OAAQoN,IACnDgjC,EAASmiB,kBAAkBvwD,KAAK8K,EAASylD,kBAAkBnlD,SAI/DsmD,EAAuBhnD,IAAII,EAASxM,IAAIuS,GAAI/F,OAG/C,CACD,IAAIE,EAEAA,EADAF,EAASY,cACU,IAAI4kD,GAA4BxlD,EAASxM,IAAKwM,EAASylD,kBAAkBvmD,QAASc,EAASY,eAG3FZ,EAEvB4mD,EAAuBhnD,IAAII,EAASxM,IAAIuS,GAAI7F,IAGpD,OAAO0mD,EAnCmBD,CAqC9B,SAASE,EAAoB5vD,EAAWmG,GAepC,OAdAnG,EAAUwK,QAAQ,SAAU1P,GACxB,GAAIA,aAAawlD,GACbn6C,EAAIlI,MAAOkK,QAASrN,EAAG2O,SAAU3O,SAEhC,GAAIA,GAAiB,iBAALA,QAA+B+E,IAAd/E,EAAEqN,QACpChC,EAAIlI,KAAKnD,OAER,CAAA,KAAIA,aAAaI,OAIlB,MAnWZ,SAAS20D,EAAqB9mD,GAC1B,OAAOxK,MAAM,4EAA8EwK,GAkW7E8mD,CAAqB/0D,GAH3B80D,EAAoB90D,EAAGqL,MAMxBA,EAtDUypD,CAAoB5vD,MACXgG,IAAI4oD,IACuC,IAAIvpD,KACzE,OAAOnK,MAAMoqD,KAAKmK,EAAoB3tD,UAmM3B0tD,CAA2BxvD,IAyBtCuvD,EAAmBO,iBAAmB,SAAU9vD,EAAWwH,GACvD,IAAIuoD,EAA8BR,EAAmBxqD,QAAQ/E,GAC7D,OAAOuvD,EAAmBS,sBAAsBD,EAA6BvoD,IA0BjF+nD,EAAmBS,sBAAwB,SAAUhwD,EAAWwH,GAC5D,OAAO,IAAIyoD,GAAoBjwD,EAAWwH,IAEvC+nD,EA7F4B,GA+FnCU,GAAqC,WAIrC,SAASA,EAAoBC,EAAYttB,GAErCjoC,KAAKw1D,qBAAuB,EAC5Bx1D,KAAKu1D,WAAaA,EAClBv1D,KAAK6M,OAASo7B,GAAW,KACzB,IAAIwtB,EAAMF,EAAWj0D,OACrBtB,KAAK01D,OAAS,IAAIn1D,MAAMk1D,GACxBz1D,KAAK21D,KAAO,IAAIp1D,MAAMk1D,GACtB,IAAK,IAAIt0D,EAAI,EAAGA,EAAIs0D,EAAKt0D,IACrBnB,KAAK01D,OAAOv0D,GAAKo0D,EAAWp0D,GAAGS,IAAIuS,GACnCnU,KAAK21D,KAAKx0D,GAAKwzD,GAgJvB,OA7IAW,EAAoBz0D,UAAU6L,IAAM,SAAUtB,EAAOuB,GAEjD,YADsB,IAAlBA,IAA4BA,EAAgBJ,IACzCvM,KAAK41D,UAAUlD,GAAchmD,IAAItB,GAAQ,KAAMuB,IAE1D2oD,EAAoBz0D,UAAUg1D,sBAAwB,SAAUxwD,GAC5D,IAAI+vD,EAA8BR,GAAmBxqD,QAAQ/E,GAC7D,OAAOrF,KAAK81D,wBAAwBV,IAExCE,EAAoBz0D,UAAUi1D,wBAA0B,SAAUzwD,GAC9D,IAAI0wD,EAAM,IAAIT,EAAoBjwD,GAElC,OADA0wD,EAAIlpD,OAAS7M,KACN+1D,GAEXT,EAAoBz0D,UAAUm1D,sBAAwB,SAAU5nD,GAC5D,OAAOpO,KAAKi2D,oBAAoBrB,GAAmBxqD,SAASgE,IAAW,KAE3EknD,EAAoBz0D,UAAUo1D,oBAAsB,SAAU7nD,GAC1D,OAAOpO,KAAKk2D,qBAAqB9nD,IAErCknD,EAAoBz0D,UAAUs1D,mBAAqB,SAAUzuD,GACzD,GAAIA,EAAQ,GAAKA,GAAS1H,KAAKu1D,WAAWj0D,OACtC,MAthBZ,SAAS80D,EAAiB1uD,GACtB,OAAO9D,MAAM,SAAW8D,EAAQ,sBAqhBlB0uD,CAAiB1uD,GAE3B,OAAO1H,KAAKu1D,WAAW7tD,IAG3B4tD,EAAoBz0D,UAAUw1D,KAAO,SAAUjoD,GAC3C,GAAIpO,KAAKw1D,uBAAyBx1D,KAAKs2D,yBACnC,MA9oBZ,SAASC,EAAsB/lD,EAAU5O,GACrC,OAAOmwD,GAAevhD,EAAU5O,EAAK,SAAU4I,GAC3C,MAAO,wCAA0CmnD,GAAuBnnD,KA4oB9D+rD,CAAsBv2D,KAAMoO,EAASxM,KAE/C,OAAO5B,KAAKk2D,qBAAqB9nD,IAErCknD,EAAoBz0D,UAAUy1D,uBAAyB,WAAc,OAAOt2D,KAAK21D,KAAKr0D,QACtFg0D,EAAoBz0D,UAAUq1D,qBAAuB,SAAU9nD,GAC3D,GAAIA,EAASY,cAAe,CAExB,IADA,IAAIxD,EAAM,IAAIjL,MAAM6N,EAASylD,kBAAkBvyD,QACtCH,EAAI,EAAGA,EAAIiN,EAASylD,kBAAkBvyD,SAAUH,EACrDqK,EAAIrK,GAAKnB,KAAKw2D,aAAapoD,EAAUA,EAASylD,kBAAkB1yD,IAEpE,OAAOqK,EAGP,OAAOxL,KAAKw2D,aAAapoD,EAAUA,EAASylD,kBAAkB,KAGtEyB,EAAoBz0D,UAAU21D,aAAe,SAAUpoD,EAAUqoD,GAC7D,IAEIxoD,EAWA8B,EAbAy4B,EAAQxoC,KACRX,EAAUo3D,EAA6Bp3D,QAE3C,IACI4O,EACIwoD,EAA6BzC,aAAa3oD,IAAI,SAAU69C,GAAO,OAAO1gB,EAAMkuB,2BAA2BxN,KAE/G,MAAO9lD,GAIH,MAHIA,EAAE+uD,QACF/uD,EAAE+uD,OAAOnyD,KAAMoO,EAASxM,KAEtBwB,EAGV,IACI2M,EAAM1Q,EAAQmC,WAAM,EAAQgC,EAASyK,IAEzC,MAAO7K,GACH,MAlpBZ,SAASuzD,EAAmBnmD,EAAUomD,EAAmBC,EAAej1D,GACpE,OAAOmwD,GAAevhD,EAAU5O,EAAK,SAAU4I,GAC3C,IAAI7B,EAAQwC,GAAUX,EAAK,GAAGY,OAC9B,OAAOwrD,EAAkBlnD,QAAU,mCAAqC/G,EAAQ,IAAMgpD,GAAuBnnD,GAAQ,KACtHosD,GA8oBWD,CAAmB32D,KAAMoD,EAAGA,EAASgL,EAASxM,KAExD,OAAOmO,GAEXulD,EAAoBz0D,UAAU61D,2BAA6B,SAAUxN,GACjE,OAAOlpD,KAAK41D,UAAU1M,EAAItnD,IAAKsnD,EAAIuK,WAAYvK,EAAII,SAAW,KAAO/8C,KAEzE+oD,EAAoBz0D,UAAU+0D,UAAY,SAAUh0D,EAAK6xD,EAAY9mD,GACjE,OAAI/K,IAAQ0zD,EAAoBwB,aACrB92D,KAEPyzD,aAAsBvnD,GACflM,KAAK+2D,cAAcn1D,EAAK+K,GAGxB3M,KAAKg3D,iBAAiBp1D,EAAK+K,EAAe8mD,IAGzD6B,EAAoBz0D,UAAUo2D,eAAiB,SAAUC,GACrD,IAAK,IAAI/1D,EAAI,EAAGA,EAAInB,KAAK01D,OAAOp0D,OAAQH,IACpC,GAAInB,KAAK01D,OAAOv0D,KAAO+1D,EAInB,OAHIl3D,KAAK21D,KAAKx0D,KAAOwzD,KACjB30D,KAAK21D,KAAKx0D,GAAKnB,KAAKq2D,KAAKr2D,KAAKu1D,WAAWp0D,KAEtCnB,KAAK21D,KAAKx0D,GAGzB,OAAOwzD,IAGXW,EAAoBz0D,UAAUs2D,aAAe,SAAUv1D,EAAK+K,GACxD,GAAIA,IAAkBJ,GAClB,OAAOI,EAGP,MA5uBZ,SAASyqD,EAAgB5mD,EAAU5O,GAC/B,OAAOmwD,GAAevhD,EAAU5O,EAAK,SAAU4I,GAE3C,MAAO,mBADKW,GAAUX,EAAK,GAAGY,OACM,IAAMumD,GAAuBnnD,KAyuBvD4sD,CAAgBp3D,KAAM4B,IAIpC0zD,EAAoBz0D,UAAUk2D,cAAgB,SAAUn1D,EAAK+K,GACzD,IAAIoD,EAAM/P,KAAKi3D,eAAer1D,EAAIuS,IAClC,OAAQpE,IAAQ4kD,GAAa5kD,EAAM/P,KAAKm3D,aAAav1D,EAAK+K,IAG9D2oD,EAAoBz0D,UAAUm2D,iBAAmB,SAAUp1D,EAAK+K,EAAe8mD,GAC3E,IAAIsC,EAOJ,IALIA,EADAtC,aAAsBtnD,GAChBnM,KAAK6M,OAGL7M,KAEH+1D,aAAeT,GAAqB,CACvC,IAAI+B,EAAOtB,EACPhmD,EAAMsnD,EAAKJ,eAAer1D,EAAIuS,IAClC,GAAIpE,IAAQ4kD,GACR,OAAO5kD,EACXgmD,EAAMsB,EAAKxqD,OAEf,OAAY,OAARkpD,EACOA,EAAIrpD,IAAI9K,EAAIwJ,MAAOuB,GAGnB3M,KAAKm3D,aAAav1D,EAAK+K,IAGtCvM,OAAO+B,eAAemzD,EAAoBz0D,UAAW,eACjD6L,IAAK,WAGD,MAAO,kCASnB,SAAS4qD,EAAc9mD,EAAU5F,GAE7B,IADA,IAAIY,EAAM,IAAIjL,MAAMiQ,EAAS+kD,WAAWj0D,QAC/BH,EAAI,EAAGA,EAAIqP,EAAS+kD,WAAWj0D,SAAUH,EAC9CqK,EAAIrK,GAAKyJ,EAAG4F,EAAS2lD,mBAAmBh1D,IAE5C,OAAOqK;;;;;;;;;;;;;;OAhBiB8rD,CAAct3D,KAAM,SAAUG,GAAK,MAAO,KAAOA,EAAEyB,IAAI+wD,YAAc,OAChFrnD,KAAK,MAC6C,MAE3Dg+B,YAAY,EACZpG,cAAc,IAElBoyB,EAAoBz0D,UAAUgF,SAAW,WAAc,OAAO7F,KAAK2yD,aACnE2C,EAAoBwB,aAAepE,GAAchmD,IAAIE,IAC9C0oD,EA9J6B,GA0LxC,SAASiC,GAAUxnD,GAGf,QAASA,GAA2B,mBAAbA,EAAIjF,KAK/B,SAAS0sD,GAAaznD,GAGlB,QAASA,GAAgC,mBAAlBA,EAAIijB;;;;;;;OAa/B,IAAIykC,GAAkB,IAAI/xD,EAAe,2BAIrCgyD,GAAuC,WACvC,SAASA,EAAsBC,GAC3B,IAAInvB,EAAQxoC,KACZA,KAAK23D,SAAWA,EAChB33D,KAAK43D,aAAc,EACnB53D,KAAKkD,MAAO,EACZlD,KAAK63D,YAAc,IAAI1tD,QAAQ,SAAUqB,EAAKssD,GAC1CtvB,EAAMp+B,QAAUoB,EAChBg9B,EAAMuvB,OAASD,IAiCvB,OA7BAJ,EAAsB72D,UAAUm3D,gBAAkB,WAC9C,IAAIxvB,EAAQxoC,KACZ,IAAIA,KAAK43D,YAAT,CAGA,IAAIK,KACAvjB,EAAW,WACXlM,EAAMtlC,MAAO,EACbslC,EAAMp+B,WAEV,GAAIpK,KAAK23D,SACL,IAAK,IAAIx2D,EAAI,EAAGA,EAAInB,KAAK23D,SAASr2D,OAAQH,IAAK,CAC3C,IAAI+2D,EAAal4D,KAAK23D,SAASx2D,KAC3Bo2D,GAAUW,IACVD,EAAkB30D,KAAK40D,GAInC/tD,QAAQguD,IAAIF,GAAmBntD,KAAK,WAAc4pC,MAAe0jB,MAAM,SAAUh1D,GAAKolC,EAAMuvB,OAAO30D,KAClE,IAA7B60D,EAAkB32D,QAClBozC,IAEJ10C,KAAK43D,aAAc,IAECn2D,GACpBmvD,KACAxuD,EAAQ,EAAG4J,GAAOyrD,KAAmBr1D,EAAQ,EAAG6J,MAChD1J,EAAW,qBAAsBhC,SAClCm3D,GAxCmC,GA6DtCW,GAAS,IAAI3yD,EAAe,SAQ5B4yD,IACA9qD,QAAS6qD,GACTxpD,WATJ,SAAS0pD,KACL,MAAO,GAAKC,KAAgBA,KAAgBA,MAS5CvqD,SAEJ,SAASuqD,KACL,OAAO/qD,OAAOgrD,aAAa,GAAKC,KAAKC,MAAsB,GAAhBD,KAAKE,WAMpD,IAAIC,GAAuB,IAAInzD,EAAe,wBAK1CozD,GAAc,IAAIpzD,EAAe,eASjCqzD,GAAyB,IAAIrzD,EAAe,wBAK5CszD,GAAmB,IAAItzD,EAAe,iCAStCuzD,GAAyB,WACzB,SAASA,KAcT,OAZAA,EAAQp4D,UAAUq4D,IAAM,SAAUxpD,GAE9B0rC,QAAQ8d,IAAIxpD,IAGhBupD,EAAQp4D,UAAUw6C,KAAO,SAAU3rC,GAE/B0rC,QAAQC,KAAK3rC,IAEPjO,GACNmvD,MACDqI,GAdqB,GA8BxBE,GACA,SAASA,GAA6BC,EAAiBC,GACnDr5D,KAAKo5D,gBAAkBA,EACvBp5D,KAAKq5D,mBAAqBA,GAIlC,SAASC,KACL,MAAM,IAAI11D,MAAM,kCAYpB,IAiEI21D,GACAC,GAlEAC,GAA0B,WAC1B,SAASA,KAsCT,OAhCAA,EAAS54D,UAAU64D,kBAAoB,SAAUpnB,GAAc,MAAMgnB,MAIrEG,EAAS54D,UAAU84D,mBAAqB,SAAUrnB,GAAc,MAAMgnB,MAItEG,EAAS54D,UAAU+4D,kCAAoC,SAAUtnB,GAC7D,MAAMgnB,MAKVG,EAAS54D,UAAUg5D,mCAAqC,SAAUvnB,GAC9D,MAAMgnB,MAKVG,EAAS54D,UAAUi5D,WAAa,aAIhCL,EAAS54D,UAAUk5D,cAAgB,SAAUv0D,KAI7Ci0D,EAAS54D,UAAUm5D,YAAc,SAAU1nB,KAChC7wC,GACPmvD,MACD6I,GAtCsB,GA8CzBQ,GAAmB,IAAIv0D,EAAe,mBAMtCw0D,GACA,SAASA,OAkDTC,GApCJ,SAASC,KACL,IAAIC,EAAMpwD,EAA+B,IACzC,SAAIowD,KACAd,GAAQc,EAAW,SAEfb,GAASD,GAAc,OAChB,IA8BFa,GACjB,SAASE,GAAUC,EAAMC,GACrB,OAAO,KAgCX,IAAIC,GAAiBN,GA3DrB,SAASO,GAAYnI,EAAWpjD,GAE5B,YADc,IAAVA,IAAoBA,EAAQ,MACzBqqD,GAAOkB,YAAYnI,EAAWpjD,IAyDO,SAAUojD,EAAWpjD,GAAS,OAAOmrD,IAUjFK,GAAWR,GAjEf,SAASS,GAAMC,EAAOpoC,GAElB,OADA8mC,GAAMuB,WAAWD,EAAOpoC,GACjBA,GA+DyB,SAAUvxB,EAAGa,GAAK,OAAOA,GAczDg5D,GAAoBZ,GA3ExB,SAASa,GAAeC,EAAWz8C,GAC/B,OAAO+6C,GAAM2B,eAAeD,EAAWz8C,IA0EW,SAAUy8C,EAAWz8C,GAAU,OAAO,MAOxF28C,GAAkBhB,GA/EtB,SAASiB,GAAaC,GAClB9B,GAAM6B,aAAaC;;;;;;;QA8E2B,SAAUt5D,GAAK,OAAO,MAmFpEu5D,GAAwB,WACxB,SAASA,EAAO50D,GACZ,IAAI80C,EAAK90C,EAAG60D,qBAAsBA,OAA8B,IAAP/f,GAAwBA,EA2BjF,GA1BAx7C,KAAKw7D,sBAAuB,EAC5Bx7D,KAAKy7D,sBAAuB,EAI5Bz7D,KAAK07D,UAAW,EAIhB17D,KAAK27D,WAAa,IAAItnB,IAAa,GAMnCr0C,KAAK47D,iBAAmB,IAAIvnB,IAAa,GAMzCr0C,KAAK67D,SAAW,IAAIxnB,IAAa,GAIjCr0C,KAAK87D,QAAU,IAAIznB,IAAa,GACb,oBAARxpC,KACP,MAAM,IAAIjH,MAAM,kDAEpBiH,KAAKkxD,oBACM/7D,KACNg8D,SAAW,EADLh8D,KAENi8D,OAFMj8D,KAEQk8D,OAASrxD,KAAKE,QAC7BF,KAAkB,cAHX7K,KAIFk8D,OAJEl8D,KAIYk8D,OAAOC,KAAKtxD,KAAkB,cAEjDA,KAA2B,uBANpB7K,KAOFk8D,OAPEl8D,KAOYk8D,OAAOC,KAAK,IAAItxD,KAA2B,uBAE9D0wD,GAAwB1wD,KAA6B,yBAT9C7K,KAUFk8D,OAVEl8D,KAUYk8D,OAAOC,KAAKtxD,KAA6B,yBAkGxE,SAASuxD,EAAiCC,GACtCA,EAAKH,OAASG,EAAKH,OAAOC,MACtBj2D,KAAM,UACN4lD,YAAcwQ,eAAiB,GAC/BC,aAAc,SAAUC,EAAUzxD,EAASpJ,EAAQ86D,EAAMC,EAAWC,GAChE,IAEI,OADAC,GAAQP,GACDG,EAASK,WAAWl7D,EAAQ86D,EAAMC,EAAWC,GAExD,QACIG,GAAQT,KAGhBU,SAAU,SAAUP,EAAUzxD,EAASpJ,EAAQ6nC,EAAUkzB,EAAWC,EAAW74D,GAC3E,IAEI,OADA84D,GAAQP,GACDG,EAASQ,OAAOr7D,EAAQ6nC,EAAUkzB,EAAWC,EAAW74D,GAEnE,QACIg5D,GAAQT,KAGhBY,UAAW,SAAUT,EAAUzxD,EAASpJ,EAAQu7D,GAC5CV,EAASW,QAAQx7D,EAAQu7D,GACrBnyD,IAAYpJ,IAGe,aAAvBu7D,EAAaE,QACbf,EAAKb,qBAAuB0B,EAAaG,UACzCC,GAAYjB,IAEgB,aAAvBa,EAAaE,SAClBf,EAAKZ,qBAAuByB,EAAaK,aAIrDC,cAAe,SAAUhB,EAAUzxD,EAASpJ,EAAQ4B,GAGhD,OAFAi5D,EAASnL,YAAY1vD,EAAQ4B,GAC7B84D,EAAKoB,kBAAkB,WAAc,OAAOpB,EAAKP,QAAQtnB,KAAKjxC,MACvD,KAvIX64D,CAZWp8D,MAqFf,OAvEAs7D,EAAOoC,gBAAkB,WAAc,OAA6C,IAAtC7yD,KAAKE,QAAQ2B,IAAI,kBAC/D4uD,EAAOqC,oBAAsB,WACzB,IAAKrC,EAAOoC,kBACR,MAAM,IAAI95D,MAAM,mDAGxB03D,EAAOsC,uBAAyB,WAC5B,GAAItC,EAAOoC,kBACP,MAAM,IAAI95D,MAAM,mDAexB03D,EAAOz6D,UAAUg9D,IAAM,SAAUjzD,EAAI8xD,EAAWC,GAC5C,OAAO38D,KAAKk8D,OAAO2B,IAAIjzD,EAAI8xD,EAAWC,IAc1CrB,EAAOz6D,UAAUi9D,QAAU,SAAUlzD,EAAI8xD,EAAWC,EAAWz2D,GAC3D,IAAIm2D,EAAOr8D,KAAKk8D,OACZO,EAAOJ,EAAK0B,kBAAkB,gBAAkB73D,EAAM0E,EAAIozD,GAAeC,GAAMA,IACnF,IACI,OAAO5B,EAAKyB,QAAQrB,EAAMC,EAAWC,GAEzC,QACIN,EAAK6B,WAAWzB,KAOxBnB,EAAOz6D,UAAUs9D,WAAa,SAAUvzD,EAAI8xD,EAAWC,GACnD,OAAO38D,KAAKk8D,OAAOiC,WAAWvzD,EAAI8xD,EAAWC,IAejDrB,EAAOz6D,UAAU48D,kBAAoB,SAAU7yD,GAC3C,OAAO5K,KAAKi8D,OAAO4B,IAAIjzD,IAEpB0wD,EAtHgB,GAwH3B,SAAS2C,MACT,IAAID,MACJ,SAASV,GAAYjB,GACjB,GAAqB,GAAjBA,EAAKL,WAAkBK,EAAKb,uBAAyBa,EAAKX,SAC1D,IACIW,EAAKL,WACLK,EAAKT,iBAAiBpnB,KAAK,MAE/B,QAEI,GADA6nB,EAAKL,YACAK,EAAKb,qBACN,IACIa,EAAKoB,kBAAkB,WAAc,OAAOpB,EAAKR,SAASrnB,KAAK,QAEnE,QACI6nB,EAAKX,UAAW,IAiDpC,SAASkB,GAAQP,GACbA,EAAKL,WACDK,EAAKX,WACLW,EAAKX,UAAW,EAChBW,EAAKV,WAAWnnB,KAAK,OAG7B,SAASsoB,GAAQT,GACbA,EAAKL,WACLsB,GAAYjB,GAMhB,IA6QI+B,GA7QAC,GAA4B,WAC5B,SAASA,IACLr+D,KAAKw7D,sBAAuB,EAC5Bx7D,KAAKy7D,sBAAuB,EAC5Bz7D,KAAK07D,UAAW,EAChB17D,KAAK27D,WAAa,IAAItnB,GACtBr0C,KAAK47D,iBAAmB,IAAIvnB,GAC5Br0C,KAAK67D,SAAW,IAAIxnB,GACpBr0C,KAAK87D,QAAU,IAAIznB,GAMvB,OAJAgqB,EAAWx9D,UAAUg9D,IAAM,SAAUjzD,GAAM,OAAOA,KAClDyzD,EAAWx9D,UAAUs9D,WAAa,SAAUvzD,GAAM,OAAOA,KACzDyzD,EAAWx9D,UAAU48D,kBAAoB,SAAU7yD,GAAM,OAAOA,KAChEyzD,EAAWx9D,UAAUi9D,QAAU,SAAUlzD,GAAM,OAAOA,KAC/CyzD,EAdoB,GA8B3BC,GAA6B,WAC7B,SAASA,EAAYC,GACjB,IAAI/1B,EAAQxoC,KACZA,KAAKu+D,QAAUA,EACfv+D,KAAKw+D,cAAgB,EACrBx+D,KAAKy+D,eAAgB,EAOrBz+D,KAAK0+D,UAAW,EAChB1+D,KAAK2+D,cACL3+D,KAAK4+D,sBACLL,EAAQV,IAAI,WAAcr1B,EAAMq2B,iBAAmBh0D,KAAKE,QAAQ2B,IAAI,sBA6IxE,OA3IA4xD,EAAYz9D,UAAU+9D,oBAAsB,WACxC,IAAIp2B,EAAQxoC,KACZA,KAAKu+D,QAAQ5C,WAAW3oC,WACpBhwB,KAAM,WACFwlC,EAAMk2B,UAAW,EACjBl2B,EAAMi2B,eAAgB,KAG9Bz+D,KAAKu+D,QAAQd,kBAAkB,WAC3Bj1B,EAAM+1B,QAAQ1C,SAAS7oC,WACnBhwB,KAAM,WACFs4D,GAAOsC,yBACPjzD,GAAkB,WACd69B,EAAMi2B,eAAgB,EACtBj2B,EAAMs2B,+BAU1BR,EAAYz9D,UAAUk+D,4BAA8B,WAGhD,OAFA/+D,KAAKw+D,eAAiB,EACtBx+D,KAAK0+D,UAAW,EACT1+D,KAAKw+D,eAMhBF,EAAYz9D,UAAUm+D,4BAA8B,WAEhD,GADAh/D,KAAKw+D,eAAiB,EAClBx+D,KAAKw+D,cAAgB,EACrB,MAAM,IAAI56D,MAAM,qCAGpB,OADA5D,KAAK8+D,uBACE9+D,KAAKw+D,eAKhBF,EAAYz9D,UAAU66D,SAAW,WAC7B,OAAO17D,KAAKy+D,eAAwC,IAAvBz+D,KAAKw+D,gBAAwBx+D,KAAKu+D,QAAQ9C,sBAE3E6C,EAAYz9D,UAAUi+D,qBAAuB,WACzC,IAAIt2B,EAAQxoC,KACZ,GAAIA,KAAK07D,WAEL/wD,GAAkB,WACd,KAAmC,IAA5B69B,EAAMm2B,WAAWr9D,QAAc,CAClC,IAAI29D,EAAKz2B,EAAMm2B,WAAWO,MAC1BC,aAAaF,EAAGG,WAChBH,EAAGI,OAAO72B,EAAMk2B,UAEpBl2B,EAAMk2B,UAAW,QAGpB,CAED,IAAIY,EAAYt/D,KAAKu/D,kBACrBv/D,KAAK2+D,WAAa3+D,KAAK2+D,WAAWpnB,OAAO,SAAU0nB,GAC/C,OAAIA,EAAGO,WAAYP,EAAGO,SAASF,KAC3BH,aAAaF,EAAGG,YACT,KAIfp/D,KAAK0+D,UAAW,IAGxBJ,EAAYz9D,UAAU0+D,gBAAkB,WACpC,OAAKv/D,KAAK6+D,iBAIH7+D,KAAK6+D,iBAAiBY,WAAWp0D,IAAI,SAAUpK,GAClD,OACI6C,OAAQ7C,EAAE6C,OAGV47D,iBAAkBz+D,EAAEy+D,iBACpBh3D,KAAMzH,EAAEyH,YAIpB41D,EAAYz9D,UAAU8+D,YAAc,SAAUV,EAAIW,EAASJ,GACvD,IAAIh3B,EAAQxoC,KACRo/D,GAAa,EACbQ,GAAWA,EAAU,IACrBR,EAAYhxB,WAAW,WACnB5F,EAAMm2B,WAAan2B,EAAMm2B,WAAWpnB,OAAO,SAAU0nB,GAAM,OAAOA,EAAGG,YAAcA,IACnFH,EAAGz2B,EAAMk2B,SAAUl2B,EAAM+2B,oBAC1BK,IAEP5/D,KAAK2+D,WAAWr7D,MAAO+7D,OAAQJ,EAAIG,UAAWA,EAAWI,SAAUA,KAcvElB,EAAYz9D,UAAUg/D,WAAa,SAAUR,EAAQO,EAASJ,GAC1D,GAAIA,IAAax/D,KAAK6+D,iBAClB,MAAM,IAAIj7D,MAAM,8HAIpB5D,KAAK2/D,YAAYN,EAAQO,EAASJ,GAClCx/D,KAAK8+D,wBAMTR,EAAYz9D,UAAUi/D,uBAAyB,WAAc,OAAO9/D,KAAKw+D,eAOzEF,EAAYz9D,UAAUk/D,cAAgB,SAAUC,EAAO5xD,EAAU6xD,GAE7D,UAEUx+D,GACVmvD,KACAruD,EAAW,qBAAsB+4D,MAClCgD,GA3JyB,GAkK5B4B,GAAqC,WACrC,SAASA,IAELlgE,KAAKmgE,cAAgB,IAAIz1D,IACzB01D,GAAmBC,YAAYrgE,MA8CnC,OAvCAkgE,EAAoBr/D,UAAUy/D,oBAAsB,SAAUl1D,EAAOm1D,GACjEvgE,KAAKmgE,cAAcnyD,IAAI5C,EAAOm1D,IAMlCL,EAAoBr/D,UAAU2/D,sBAAwB,SAAUp1D,GAASpL,KAAKmgE,cAAcjvB,OAAO9lC,IAInG80D,EAAoBr/D,UAAU4/D,0BAA4B,WAAczgE,KAAKmgE,cAAc5zB,SAK3F2zB,EAAoBr/D,UAAU6/D,eAAiB,SAAUC,GAAQ,OAAO3gE,KAAKmgE,cAAczzD,IAAIi0D,IAAS,MAIxGT,EAAoBr/D,UAAU+/D,oBAAsB,WAAc,OAAOrgE,MAAMoqD,KAAK3qD,KAAKmgE,cAAch5D,WAIvG+4D,EAAoBr/D,UAAUggE,mBAAqB,WAAc,OAAOtgE,MAAMoqD,KAAK3qD,KAAKmgE,cAAc31D,SAOtG01D,EAAoBr/D,UAAUigE,sBAAwB,SAAUH,EAAMI,GAElE,YADwB,IAApBA,IAA8BA,GAAkB,GAC7CX,GAAmBU,sBAAsB9gE,KAAM2gE,EAAMI,IAE1Ct/D,GAClBmvD,KACAruD,EAAW,yBACZ29D,GAjDiC,GAoEpCE,GAAqB,IAhBgB,WACrC,SAASY,KAMT,OAJAA,EAAoBngE,UAAUw/D,YAAc,SAAUjwC,KACtD4wC,EAAoBngE,UAAUigE,sBAAwB,SAAU1wC,EAAUuwC,EAAMI,GAC5E,OAAO,MAEJC,EAP6B,IAoCpCC,GAA2B,IAAIv7D,EAAe,sBAM9Cw7D,GACA,SAASA,GAAah7D,EAAMkF,GACxBpL,KAAKkG,KAAOA,EACZlG,KAAKoL,MAAQA;;;;;;;OAUrB,SAAS+1D,GAAe3wD,GACpB,GAAI4tD,KAAcA,GAAUlxB,YACvBkxB,GAAU5tD,SAAS9D,IAAIu0D,IAA0B,GAClD,MAAM,IAAIr9D,MAAM,iFAEpBw6D,GAAY5tD,EAAS9D,IAAI00D,IACzB,IAAIC,EAAQ7wD,EAAS9D,IAAImsD,GAAsB,MAG/C,OAFIwI,GACAA,EAAMxxD,QAAQ,SAAU6nC,GAAQ,OAAOA,MACpC0mB,GAOX,SAASkD,GAAsBC,EAAuBr7D,EAAMb,QACtC,IAAdA,IAAwBA,MAC5B,IAAIxD,EAAO,aAAeqE,EACtBs7D,EAAS,IAAI97D,EAAe7D,GAChC,OAAO,SAAU4/D,QACU,IAAnBA,IAA6BA,MACjC,IAAIC,EAAWC,KACf,IAAKD,GAAYA,EAASlxD,SAAS9D,IAAIu0D,IAA0B,GAC7D,GAAIM,EACAA,EAAsBl8D,EAAU5B,OAAOg+D,GAAgBh+D,QAAS+J,QAASg0D,EAAQ9zD,UAAU,SAE1F,CACD,IAAIk0D,EAAoBv8D,EAAU5B,OAAOg+D,GAAgBh+D,QAAS+J,QAASg0D,EAAQ9zD,UAAU,IAC7FyzD,GAAev0D,GAAS9L,QAASuE,UAAWu8D,EAAmB17D,KAAMrE,KAG7E,OAAOggE,GAAeL,IAQ9B,SAASK,GAAeC,GACpB,IAAIJ,EAAWC,KACf,IAAKD,EACD,MAAM,IAAI99D,MAAM,uBAEpB,IAAK89D,EAASlxD,SAAS9D,IAAIo1D,EAAe,MACtC,MAAM,IAAIl+D,MAAM,wFAEpB,OAAO89D,EAiBX,SAASC,KACL,OAAOvD,KAAcA,GAAUlxB,UAAYkxB,GAAY,KAU3D,IAAIgD,GAA6B,WAE7B,SAASA,EAAYW,GACjB/hE,KAAK+hE,UAAYA,EACjB/hE,KAAKgiE,YACLhiE,KAAKiiE,qBACLjiE,KAAKkiE,YAAa,EA8HtB,OApGAd,EAAYvgE,UAAUshE,uBAAyB,SAAUC,EAAeh9D,GACpE,IAAIojC,EAAQxoC,KAMRqiE,EA+FZ,SAASC,EAAUC,GASf,MAPqB,SAAjBA,EACS,IAAIlE,IAGc,YAAjBkE,OAA6Br9D,EAAYq9D,IAC/C,IAAIjH,IAASC,qBAAsB1iB,OAtG1BypB,CADMl9D,EAAUA,EAAQi9D,YAASn9D,GAE1CG,IAAemI,QAAS8tD,GAAQ5tD,SAAU20D,IAG9C,OAAOA,EAAOxE,IAAI,WACd,IAAI2E,EAAiB51D,GAAS9L,QAASuE,UAAWA,EAAWwH,OAAQ27B,EAAMh4B,SAAUtK,KAAMk8D,EAAc9vB,WAAWpsC,OAChHu8D,EAAYL,EAActhE,OAAO0hE,GACjCE,EAAmBD,EAAUjyD,SAAS9D,IAAIykD,GAAc,MAC5D,IAAKuR,EACD,MAAM,IAAI9+D,MAAM,iEAIpB,OAFA6+D,EAAUnvD,UAAU,WAAc,OAAO8T,GAAOohB,EAAMw5B,SAAUS,KAChEJ,EAAO5E,kBAAkB,WAAc,OAAO4E,EAAOvG,QAAQ9oC,WAAYhwB,KAAM,SAAUO,GAASm/D,EAAiBrR,YAAY9tD,QA8F3I,SAASo/D,EAA6BC,EAAcP,EAAQ74B,GACxD,IACI,IAAI2M,EAAS3M,IACb,OAAI+tB,GAAUphB,GACHA,EAAOiiB,MAAM,SAAUh1D,GAG1B,MAFAi/D,EAAO5E,kBAAkB,WAAc,OAAOmF,EAAavR,YAAYjuD,KAEjEA,IAGP+yC,EAEX,MAAO/yC,GAGH,MAFAi/D,EAAO5E,kBAAkB,WAAc,OAAOmF,EAAavR,YAAYjuD,KAEjEA,GA5GKu/D,CAA6BD,EAAkBL,EAAQ,WAC1D,IAAIQ,EAAaJ,EAAUjyD,SAAS9D,IAAIgrD,IAExC,OADAmL,EAAW7K,kBACJ6K,EAAWhL,YAAY/sD,KAAK,WAE/B,OADA09B,EAAMs6B,mBAAmBL,GAClBA,SAqBvBrB,EAAYvgE,UAAUkiE,gBAAkB,SAAUzwB,EAAY0wB,GAC1D,IAAIx6B,EAAQxoC,UACY,IAApBgjE,IAA8BA,MAClC,IAAI59D,EAAU69D,MAAmBD,GACjC,OA1LR,SAASE,EAAmC1yD,EAAUpL,EAASktC,GAG3D,OAFsB9hC,EAAS9D,IAAIwtD,IACDiJ,gBAAgB/9D,IAC/Bu0D,mBAAmBrnB,GAuL3B8wB,CAAuBpjE,KAAKwQ,SAAUpL,EAASktC,GACjDxnC,KAAK,SAAUs3D,GAAiB,OAAO55B,EAAM25B,uBAAuBC,EAAeh9D,MAE5Fg8D,EAAYvgE,UAAUiiE,mBAAqB,SAAUL,GACjD,IAAIz4B,EAASy4B,EAAUjyD,SAAS9D,IAAI22D,IACpC,GAAIZ,EAAUvwB,qBAAqB5wC,OAAS,EACxCmhE,EAAUvwB,qBAAqBriC,QAAQ,SAAUyzD,GAAK,OAAOt5B,EAAOv1B,UAAU6uD,SAE7E,CAAA,IAAIb,EAAUxrD,SAASssD,cAIxB,MAAM,IAAI3/D,MAAM,cAAgBuH,GAAUs3D,EAAUxrD,SAASrW,aAAe,yIAH5E6hE,EAAUxrD,SAASssD,cAAcv5B,GAMrChqC,KAAKgiE,SAAS1+D,KAAKm/D,IAKvBrB,EAAYvgE,UAAUyS,UAAY,SAAUk2B,GAAYxpC,KAAKiiE,kBAAkB3+D,KAAKkmC,IACpFppC,OAAO+B,eAAei/D,EAAYvgE,UAAW,YAKzC6L,IAAK,WAAc,OAAO1M,KAAK+hE,WAC/Bz4B,YAAY,EACZpG,cAAc,IAKlBk+B,EAAYvgE,UAAUghB,QAAU,WAC5B,GAAI7hB,KAAKkiE,WACL,MAAM,IAAIt+D,MAAM,4CAEpB5D,KAAKgiE,SAAS10D,QAAQuC,QAAQ,SAAUtQ,GAAU,OAAOA,EAAOsiB,YAChE7hB,KAAKiiE,kBAAkBpyD,QAAQ,SAAUiiB,GAAY,OAAOA,MAC5D9xB,KAAKkiE,YAAa,GAEtB9hE,OAAO+B,eAAei/D,EAAYvgE,UAAW,aACzC6L,IAAK,WAAc,OAAO1M,KAAKkiE,YAC/B54B,YAAY,EACZpG,cAAc,IAEJzhC,GACVmvD,KACAruD,EAAW,qBAAsBqK,MAClCw0D,GAnIyB,GAmKhC,SAAS6B,GAAeO,EAAK7N,GAOzB,OANIp1D,MAAMuM,QAAQ6oD,GACRA,EAAKle,OAAOwrB,GAAgBO,GAG5BziE,KAAayiE,EAAK7N,GAOhC,IAAI0N,GAAgC,WAEhC,SAASA,EAAeI,EAAOrS,EAAU2Q,EAAW2B,EAAmBC,EAA2BC,GAC9F,IAAIp7B,EAAQxoC,KACZA,KAAKyjE,MAAQA,EACbzjE,KAAKoxD,SAAWA,EAChBpxD,KAAK+hE,UAAYA,EACjB/hE,KAAK0jE,kBAAoBA,EACzB1jE,KAAK2jE,0BAA4BA,EACjC3jE,KAAK4jE,YAAcA,EACnB5jE,KAAK6jE,uBACL7jE,KAAK8jE,UACL9jE,KAAK+jE,cAAe,EACpB/jE,KAAKgkE,sBAAuB,EAC5BhkE,KAAKikE,SAAU,EAKfjkE,KAAKkkE,kBAILlkE,KAAKoZ,cACLpZ,KAAKgkE,qBAAuBnrB,KAC5B74C,KAAKyjE,MAAM7H,iBAAiB5oC,WAAYhwB,KAAM,WAAcwlC,EAAMi7B,MAAM5F,IAAI,WAAcr1B,EAAM27B,YAChG,IAAIC,EAAoB,IAAIvkE,EAAKwkE,WAAW,SAAUC,GAClD97B,EAAMy7B,QAAUz7B,EAAMi7B,MAAM/H,WAAalzB,EAAMi7B,MAAMhI,uBAChDjzB,EAAMi7B,MAAMjI,qBACjBhzB,EAAMi7B,MAAMhG,kBAAkB,WAC1B6G,EAASthE,KAAKwlC,EAAMy7B,SACpBK,EAAS5vB,eAGbgnB,EAAW,IAAI77D,EAAKwkE,WAAW,SAAUC,GAGzC,IAAIC,EACJ/7B,EAAMi7B,MAAMhG,kBAAkB,WAC1B8G,EAAY/7B,EAAMi7B,MAAM5H,SAAS7oC,UAAU,WACvCsoC,GAAOsC,yBAGPjzD,GAAkB,WACT69B,EAAMy7B,SAAYz7B,EAAMi7B,MAAMhI,sBAC9BjzB,EAAMi7B,MAAMjI,uBACbhzB,EAAMy7B,SAAU,EAChBK,EAASthE,MAAK,UAK9B,IAAIwhE,EAAch8B,EAAMi7B,MAAM9H,WAAW3oC,UAAU,WAC/CsoC,GAAOqC,sBACHn1B,EAAMy7B,UACNz7B,EAAMy7B,SAAU,EAChBz7B,EAAMi7B,MAAMhG,kBAAkB,WAAc6G,EAASthE,MAAK,QAGlE,OAAO,WACHuhE,EAAUrxC,cACVsxC,EAAYtxC,iBAGpBlzB,KAAK07D,SACD77D,EAAK67C,MAAM0oB,EAAmB1I,EAAS/nB,KAAK5zC,EAAU0kE,UA8H9D,IAAIC,EAUJ,OAtIAA,EAAmBrB,EAiBnBA,EAAexiE,UAAU4T,UAAY,SAAUkwD,EAAoBh8B,GAC/D,IAIIiE,EAJApE,EAAQxoC,KACZ,IAAKA,KAAK4jE,YAAY1gE,KAClB,MAAM,IAAIU,MAAM,iJAIhBgpC,EADA+3B,aAA8Br9B,GACXq9B,EAIf3kE,KAAK2jE,0BAA0B97B,wBAAwB88B,GAE/D3kE,KAAKkkE,eAAe5gE,KAAKspC,EAAiBxE,eAE1C,IAAIG,EAAWqE,aAA4BvE,GACvC,KACAroC,KAAK+hE,UAAUr1D,IAAIk8B,IAEnBg8B,EAAUh4B,EAAiB9rC,OAAO8L,GAASI,QAD1B27B,GAAsBiE,EAAiBnkC,SACa8/B,GACzEq8B,EAAQtxD,UAAU,WAAck1B,EAAMq8B,iBAAiBD,KACvD,IAAIrE,EAAcqE,EAAQp0D,SAAS9D,IAAI4xD,GAAa,MASpD,OARIiC,GACAqE,EAAQp0D,SAAS9D,IAAIwzD,IAChBI,oBAAoBsE,EAAQ3/B,SAASwI,cAAe8yB,GAE7DvgE,KAAK8kE,eAAeF,GAChB/rB,MACA74C,KAAKoxD,SAAS8H,IAAI,oGAEf0L,GAYXvB,EAAexiE,UAAUsjE,KAAO,WAC5B,IAAI37B,EAAQxoC,KACZ,GAAIA,KAAK+jE,aACL,MAAM,IAAIngE,MAAM,6CAEpB,IAAIi3D,EAAQ6J,EAAiBK,aAC7B,IACI/kE,KAAK+jE,cAAe,EACpB/jE,KAAK8jE,OAAOj0D,QAAQ,SAAUsO,GAAQ,OAAOA,EAAKue,kBAC9C18B,KAAKgkE,sBACLhkE,KAAK8jE,OAAOj0D,QAAQ,SAAUsO,GAAQ,OAAOA,EAAKwrB,mBAG1D,MAAOvmC,GAEHpD,KAAKyjE,MAAMhG,kBAAkB,WAAc,OAAOj1B,EAAMk7B,kBAAkBrS,YAAYjuD,KAE1F,QACIpD,KAAK+jE,cAAe,EACpBpJ,GAASE,KAQjBwI,EAAexiE,UAAUmkE,WAAa,SAAU75B,GAC5C,IAAIhtB,EAAOgtB,EACXnrC,KAAK8jE,OAAOxgE,KAAK6a,GACjBA,EAAK4rB,eAAe/pC,OAKxBqjE,EAAexiE,UAAUwf,WAAa,SAAU8qB,GAC5C,IAAIhtB,EAAOgtB,EACX/jB,GAAOpnB,KAAK8jE,OAAQ3lD,GACpBA,EAAK2rB,oBAETu5B,EAAexiE,UAAUikE,eAAiB,SAAU93B,GAChDhtC,KAAKglE,WAAWh4B,EAAazvB,UAC7Bvd,KAAKmkE,OACLnkE,KAAKoZ,WAAW9V,KAAK0pC,GAELhtC,KAAK+hE,UAAUr1D,IAAIqsD,OAA4Bt1D,OAAOzD,KAAK6jE,qBACjEh0D,QAAQ,SAAUiiB,GAAY,OAAOA,EAASkb,MAE5Dq2B,EAAexiE,UAAUgkE,iBAAmB,SAAU73B,GAClDhtC,KAAKqgB,WAAW2sB,EAAazvB,UAC7B6J,GAAOpnB,KAAKoZ,WAAY4zB,IAG5Bq2B,EAAexiE,UAAU0S,YAAc,WAEnCvT,KAAK8jE,OAAOx2D,QAAQuC,QAAQ,SAAUsO,GAAQ,OAAOA,EAAK0D,aAE9DzhB,OAAO+B,eAAekhE,EAAexiE,UAAW,aAI5C6L,IAAK,WAAc,OAAO1M,KAAK8jE,OAAOxiE,QACtCgoC,YAAY,EACZpG,cAAc,IAIlBmgC,EAAe0B,WAAatK,GAAe,yBAC1BiK,EAAmBjjE,GAChCmvD,KACAruD,EAAW,qBAAsB+4D,GAAQrC,GAASrsD,GAC9CukD,GACArpB,GACA4vB,MACL2L,GAxM4B,GA2MnC,SAASj8C,GAAOivB,EAAMmE,GAClB,IAAI9yC,EAAQ2uC,EAAK3qC,QAAQ8uC,GACrB9yC,GAAS,GACT2uC,EAAKj2B,OAAO1Y,EAAO;;;;;;;;;;;;;;OAuB3B,IAAIu9D,GACA,SAASA,OAITC,GAAkB,IAAIx6D,IAwDtBy6D,GAA6B,WAC7B,SAAShuB,IACLn3C,KAAK+3B,OAAQ,EACb/3B,KAAKolE,YACLplE,KAAKq3C,QAAU,IAAIhD,GACnBr0C,KAAKsB,OAAS,EA0DlB,OApDA61C,EAAUt2C,UAAUwK,IAAM,SAAUT,GAAM,OAAO5K,KAAKolE,SAAS/5D,IAAIT,IAKnEusC,EAAUt2C,UAAU02C,OAAS,SAAU3sC,GACnC,OAAO5K,KAAKolE,SAAS7tB,OAAO3sC,IAMhCusC,EAAUt2C,UAAU22C,KAAO,SAAU5sC,GACjC,OAAO5K,KAAKolE,SAAS5tB,KAAK5sC,IAM9BusC,EAAUt2C,UAAU42C,OAAS,SAAU7sC,EAAI8sC,GACvC,OAAO13C,KAAKolE,SAAS3tB,OAAO7sC,EAAI8sC,IAMpCP,EAAUt2C,UAAUgP,QAAU,SAAUjF,GAAM5K,KAAKolE,SAASv1D,QAAQjF,IAKpEusC,EAAUt2C,UAAU82C,KAAO,SAAU/sC,GACjC,OAAO5K,KAAKolE,SAASztB,KAAK/sC,IAE9BusC,EAAUt2C,UAAU+2C,QAAU,WAAc,OAAO53C,KAAKolE,SAAS93D,SACjE6pC,EAAUt2C,UAAUyJ,KAAuB,WAAc,OAAOtK,KAAKolE,SAAS96D,QAC9E6sC,EAAUt2C,UAAUgF,SAAW,WAAc,OAAO7F,KAAKolE,SAASv/D,YAClEsxC,EAAUt2C,UAAUg3C,MAAQ,SAAUrsC,GAClCxL,KAAKolE,SAgBb,SAASC,EAAUhvB,GACf,OAAOA,EAAKoB,OAAO,SAAU6tB,EAAMvtB,GAC/B,IAAIwtB,EAAWhlE,MAAMuM,QAAQirC,GAAQstB,EAAUttB,GAAQA,EACvD,OAAOutB,EAAK7hE,OAAO8hE;;;;;;;OAnBHF,CAAU75D,GAC1BxL,KAAK+3B,OAAQ,EACb/3B,KAAKsB,OAAStB,KAAKolE,SAAS9jE,OAC5BtB,KAAKwlE,KAAOxlE,KAAKolE,SAASplE,KAAKsB,OAAS,GACxCtB,KAAK2I,MAAQ3I,KAAKolE,SAAS,IAE/BjuB,EAAUt2C,UAAUm3C,gBAAkB,WAAch4C,KAAKq3C,QAAQ7C,KAAKx0C,OAEtEm3C,EAAUt2C,UAAUylB,SAAW,WAActmB,KAAK+3B,OAAQ,GAE1Dof,EAAUt2C,UAAUghB,QAAU,WAC1B7hB,KAAKq3C,QAAQ3C,WACb10C,KAAKq3C,QAAQnkB,eAEVikB,EA/DqB,GAuF5BsuB,GACA,SAASA,OAITC,IACAC,kBAAmB,GACnBC,kBAAmB,cAMnBC,GAAwC,WACxC,SAASA,EAAuBC,EAAWC,GACvC/lE,KAAK8lE,UAAYA,EACjB9lE,KAAKgmE,QAAUD,GAAUL,GAiC7B,OA/BAG,EAAuBhlE,UAAU21B,KAAO,SAAUyvC,GAE9C,OADkBjmE,KAAK8lE,qBAAqBrM,GACvBz5D,KAAKkmE,YAAYD,GAAQjmE,KAAKmmE,eAAeF,IAEtEJ,EAAuBhlE,UAAUslE,eAAiB,SAAUF,GACxD,IAAIz9B,EAAQxoC,KACR0G,EAAKvD,EAAO8iE,EAAKpuC,MAhCZ,KAgC+B,GAAIt4B,EAASmH,EAAG,GAAI0/D,EAAa1/D,EAAG,GAI5E,YAHmBxB,IAAfkhE,IACAA,EAAa,WAEVC,OAAOC,OAAO/mE,GAChBuL,KAAK,SAAUvL,GAAU,OAAOA,EAAO6mE,KACvCt7D,KAAK,SAAUtF,GAAQ,OAAO+gE,GAAc/gE,EAAMjG,EAAQ6mE,KAC1Dt7D,KAAK,SAAUtF,GAAQ,OAAOgjC,EAAMs9B,UAAUnM,mBAAmBn0D,MAE1EqgE,EAAuBhlE,UAAUqlE,YAAc,SAAUD,GACrD,IAAIv/D,EAAKvD,EAAO8iE,EAAKpuC,MA1CZ,KA0C+B,GAAIt4B,EAASmH,EAAG,GAAI0/D,EAAa1/D,EAAG,GACxE8/D,EA1Ce,YA+CnB,YAJmBthE,IAAfkhE,IACAA,EAAa,UACbI,EAAqB,IAElBH,OAAOC,OAAOtmE,KAAKgmE,QAAQL,kBAAoBpmE,EAASS,KAAKgmE,QAAQJ,mBACvE96D,KAAK,SAAUvL,GAAU,OAAOA,EAAO6mE,EAAaI,KACpD17D,KAAK,SAAUzL,GAAW,OAAOknE,GAAclnE,EAASE,EAAQ6mE,MAEhD3kE,GACrBmvD,KACAxuD,EAAQ,EAAG6J,MACX1J,EAAW,qBAAsBk3D,GAAUgM,MAC5CI,GAnCoC,GAsC3C,SAASU,GAActjE,EAAOwjE,EAAYL,GACtC,IAAKnjE,EACD,MAAM,IAAIW,MAAM,gBAAkBwiE,EAAa,SAAWK,EAAa,KAE3E,OAAOxjE;;;;;;;OAwBX,IAAIyjE,GAAkC,WAClC,SAASA,KAIT,OADAA,EAAiB5hE,kBAAoB,WAAc,OAAOgnC,GAA8B46B,EAAkBl5B,KACnGk5B,EAL0B,GAwDjCC,GAAmC,WACnC,SAASA,KAIT,OADAA,EAAkB7hE,kBAAoB,WAAc,OAAO0mC,MACpDm7B,EAL2B,GAuBlCC,GAA2B,SAAUt+B,GAErC,SAASQ,IACL,OAAkB,OAAXR,GAAmBA,EAAO9mC,MAAMxB,KAAMqB,YAAcrB,KAE/D,OAJAU,EAAUooC,EAASR,GAIZQ,EALmB,CAM5B69B,IAsDEE,GAAiC,SAAUv+B,GAE3C,SAASu+B,IACL,OAAkB,OAAXv+B,GAAmBA,EAAO9mC,MAAMxB,KAAMqB,YAAcrB,KAE/D,OAJAU,EAAUmmE,EAAiBv+B,GAIpBu+B,EALyB,CAMlCD,IAiBEE,GACA,SAASA,GAAc5gE,EAAMsjC,GACzBxpC,KAAKkG,KAAOA,EACZlG,KAAKwpC,SAAWA,GAOpBu9B,GAA2B,WAC3B,SAASA,EAAUC,EAAYn6D,EAAQo6D,GACnCjnE,KAAKgnE,WAAaA,EAClBhnE,KAAKinE,cAAgBA,EACrBjnE,KAAK6rD,aACL7rD,KAAK6M,OAAS,KACVA,GAAUA,aAAkBq6D,IAC5Br6D,EAAOs6D,SAASnnE,MA4BxB,OAzBAI,OAAO+B,eAAe4kE,EAAUlmE,UAAW,YACvC6L,IAAK,WAAc,OAAO1M,KAAKinE,cAAcz2D,UAC7C84B,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAe4kE,EAAUlmE,UAAW,qBACvC6L,IAAK,WAAc,OAAO1M,KAAKinE,cAAc39D,WAC7CggC,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAe4kE,EAAUlmE,UAAW,WACvC6L,IAAK,WAAc,OAAO1M,KAAKinE,cAAc/2D,SAC7Co5B,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAe4kE,EAAUlmE,UAAW,cACvC6L,IAAK,WAAc,OAAO1M,KAAKinE,cAAcG,YAC7C99B,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAe4kE,EAAUlmE,UAAW,kBACvC6L,IAAK,WAAc,OAAO1M,KAAKinE,cAAcI,gBAC7C/9B,YAAY,EACZpG,cAAc,IAEX6jC,EAnCmB,GAwC1BG,GAA8B,SAAU5+B,GAExC,SAAS4+B,EAAaF,EAAYn6D,EAAQo6D,GACtC,IAAIz+B,EAAQF,EAAO/mC,KAAKvB,KAAMgnE,EAAYn6D,EAAQo6D,IAAkBjnE,KAOpE,OANAwoC,EAAMsjB,cACNtjB,EAAMn2B,cACNm2B,EAAMhR,WACNgR,EAAM92B,UACN82B,EAAM8+B,cACN9+B,EAAMiF,cAAgBu5B,EACfx+B,EAsEX,OA/EA9nC,EAAUwmE,EAAc5+B,GAWxB4+B,EAAarmE,UAAUsmE,SAAW,SAAUjuD,GACpCA,IACAlZ,KAAKsnE,WAAWhkE,KAAK4V,GACrBA,EAAMrM,OAAS7M,OAGvBknE,EAAarmE,UAAU2e,YAAc,SAAUtG,GAC3C,IAAI4H,EAAa9gB,KAAKsnE,WAAW57D,QAAQwN,IACrB,IAAhB4H,IACA5H,EAAMrM,OAAS,KACf7M,KAAKsnE,WAAWlnD,OAAOU,EAAY,KAG3ComD,EAAarmE,UAAU0mE,oBAAsB,SAAUruD,EAAOsuD,GAC1D,IACI9gE,EADA8hC,EAAQxoC,KAERynE,EAAeznE,KAAKsnE,WAAW57D,QAAQwN,IACrB,IAAlBuuD,KACC/gE,EAAK1G,KAAKsnE,YAAYlnD,OAAO5e,MAAMkF,EAAIlD,GAAUikE,EAAe,EAAG,GAAID,IACxEA,EAAY33D,QAAQ,SAAU/N,GACtBA,EAAE+K,QACF/K,EAAE+K,OAAO2S,YAAY1d,GAEzBA,EAAE+K,OAAS27B,MAIvB0+B,EAAarmE,UAAU0e,aAAe,SAAUmoD,EAAUC,GACtD,IAAIC,EAAW5nE,KAAKsnE,WAAW57D,QAAQg8D,IACrB,IAAdE,EACA5nE,KAAKmnE,SAASQ,IAGVA,EAAS96D,QACT86D,EAAS96D,OAAO2S,YAAYmoD,GAEhCA,EAAS96D,OAAS7M,KAClBA,KAAKsnE,WAAWlnD,OAAOwnD,EAAU,EAAGD,KAG5CT,EAAarmE,UAAUq1C,MAAQ,SAAUX,GAErC,OADcv1C,KAAK6nE,SAAStyB,GACb,IAAM,MAEzB2xB,EAAarmE,UAAUgnE,SAAW,SAAUtyB,GACxC,IAAIlmB,KAEJ,OADAy4C,GAAsB9nE,KAAMu1C,EAAWlmB,GAChCA,GAEX63C,EAAarmE,UAAUknE,cAAgB,SAAUxyB,GAC7C,IAAIlmB,KAEJ,OADA24C,GAAmBhoE,KAAMu1C,EAAWlmB,GAC7BA,GAEXjvB,OAAO+B,eAAe+kE,EAAarmE,UAAW,YAC1C6L,IAAK,WACD,OAAO1M,KAAKsnE,WAAW/vB,OAAO,SAAU34B,GAAQ,OAAOA,aAAgBsoD,KAE3E59B,YAAY,EACZpG,cAAc,IAElBgkC,EAAarmE,UAAUonE,oBAAsB,SAAUl2C,EAAWm2C,GAC9DloE,KAAK6rD,UAAUh8C,QAAQ,SAAUiiB,GACzBA,EAAS5rB,MAAQ6rB,GACjBD,EAAS0X,SAAS0+B,MAIvBhB,EAhFsB,CAiF/BH;;;;;;;OAOF,SAASe,GAAsB7iD,EAASswB,EAAWlmB,GAC/CpK,EAAQqiD,WAAWz3D,QAAQ,SAAU+O,GAC7BA,aAAgBsoD,KACZ3xB,EAAU32B,IACVyQ,EAAQ/rB,KAAKsb,GAEjBkpD,GAAsBlpD,EAAM22B,EAAWlmB,MAInD,SAAS24C,GAAmBtvD,EAAY68B,EAAWlmB,GAC3C3W,aAAsBwuD,IACtBxuD,EAAW4uD,WAAWz3D,QAAQ,SAAU+O,GAChC22B,EAAU32B,IACVyQ,EAAQ/rB,KAAKsb,GAEbA,aAAgBsoD,IAChBc,GAAmBppD,EAAM22B,EAAWlmB,KAMpD,IAAI84C,GAAyB,IAAIz9D,IAIjC,SAAS09D,GAAapB,GAClB,OAAOmB,GAAuBz7D,IAAIs6D,IAAe,KAErD,SAASqB,GAAezpD,GACpBupD,GAAuBn6D,IAAI4Q,EAAKooD,WAAYpoD;;;;;;;;AAahD,IAAI0pD,GAA8C,WAC9C,SAASA,KAMT,OAJAA,EAA6BznE,UAAU0nE,SAAW,SAAUx4D,GAAO,OAAOkM,GAAmBlM,IAC7Fu4D,EAA6BznE,UAAUC,OAAS,SAAU0nE,GACtD,OAAO,IAAIC,GAAsBD,IAE9BF,EAPsC,GAS7CI,GAAkB,SAAUhhE,EAAOqwC,GAAQ,OAAOA,GAIlD0wB,GAAuC,WACvC,SAASA,EAAsBD,GAC3BxoE,KAAKsB,OAAS,EAEdtB,KAAK2oE,eAAiB,KAEtB3oE,KAAK4oE,iBAAmB,KACxB5oE,KAAK6oE,gBAAkB,KACvB7oE,KAAK8oE,QAAU,KACf9oE,KAAK+oE,QAAU,KACf/oE,KAAKgpE,eAAiB,KACtBhpE,KAAKipE,eAAiB,KACtBjpE,KAAKkpE,WAAa,KAClBlpE,KAAKmpE,WAAa,KAClBnpE,KAAKopE,cAAgB,KACrBppE,KAAKqpE,cAAgB,KAErBrpE,KAAKspE,qBAAuB,KAC5BtpE,KAAKupE,qBAAuB,KAC5BvpE,KAAKwpE,WAAahB,GAAaE,GAwdnC,OAtdAD,EAAsB5nE,UAAU4oE,YAAc,SAAU7+D,GACpD,IAAIsE,EACJ,IAAKA,EAASlP,KAAK8oE,QAAoB,OAAX55D,EAAiBA,EAASA,EAAOw6D,MACzD9+D,EAAGsE,IAGXu5D,EAAsB5nE,UAAU8oE,iBAAmB,SAAU/+D,GAKzD,IAJA,IAAIg/D,EAAS5pE,KAAK8oE,QACde,EAAa7pE,KAAKopE,cAClBU,EAAkB,EAClBC,EAAc,KACXH,GAAUC,GAAY,CAGzB,IAAI36D,GAAU26D,GACVD,GACIA,EAAOI,aACHC,GAAiBJ,EAAYC,EAAiBC,GACtDH,EACAC,EACAK,EAAmBD,GAAiB/6D,EAAQ46D,EAAiBC,GAC7DC,EAAe96D,EAAO86D,aAE1B,GAAI96D,IAAW26D,EACXC,IACAD,EAAaA,EAAWM,kBAIxB,GADAP,EAASA,EAAOF,MACY,MAAxBx6D,EAAOk7D,cACPN,QAEC,CAEIC,IACDA,MACJ,IAAIM,EAAyBH,EAAmBJ,EAC5CQ,EAAoBN,EAAeF,EACvC,GAAIO,GAA0BC,EAAmB,CAC7C,IAAK,IAAInpE,EAAI,EAAGA,EAAIkpE,EAAwBlpE,IAAK,CAC7C,IAAIopE,EAASppE,EAAI4oE,EAAYzoE,OAASyoE,EAAY5oE,GAAM4oE,EAAY5oE,GAAK,EACrEuG,EAAQ6iE,EAASppE,EACjBmpE,GAAqB5iE,GAASA,EAAQ2iE,IACtCN,EAAY5oE,GAAKopE,EAAS,GAIlCR,EADoB76D,EAAOk7D,eACEE,EAAoBD,GAIzDH,IAAqBF,GACrBp/D,EAAGsE,EAAQg7D,EAAkBF,KAIzCvB,EAAsB5nE,UAAU2pE,oBAAsB,SAAU5/D,GAC5D,IAAIsE,EACJ,IAAKA,EAASlP,KAAK6oE,gBAA4B,OAAX35D,EAAiBA,EAASA,EAAOu7D,cACjE7/D,EAAGsE,IAGXu5D,EAAsB5nE,UAAU6pE,iBAAmB,SAAU9/D,GACzD,IAAIsE,EACJ,IAAKA,EAASlP,KAAKgpE,eAA2B,OAAX95D,EAAiBA,EAASA,EAAOy7D,WAChE//D,EAAGsE,IAGXu5D,EAAsB5nE,UAAU+pE,iBAAmB,SAAUhgE,GACzD,IAAIsE,EACJ,IAAKA,EAASlP,KAAKkpE,WAAuB,OAAXh6D,EAAiBA,EAASA,EAAO27D,WAC5DjgE,EAAGsE,IAGXu5D,EAAsB5nE,UAAUiqE,mBAAqB,SAAUlgE,GAC3D,IAAIsE,EACJ,IAAKA,EAASlP,KAAKopE,cAA0B,OAAXl6D,EAAiBA,EAASA,EAAOi7D,aAC/Dv/D,EAAGsE,IAGXu5D,EAAsB5nE,UAAUkqE,sBAAwB,SAAUngE,GAC9D,IAAIsE,EACJ,IAAKA,EAASlP,KAAKspE,qBAAiC,OAAXp6D,EAAiBA,EAASA,EAAO87D,oBACtEpgE,EAAGsE,IAGXu5D,EAAsB5nE,UAAUoqE,KAAO,SAAUC,GAG7C,GAFkB,MAAdA,IACAA,OACCjvD,GAAmBivD,GACpB,MAAM,IAAItnE,MAAM,yBAA2BuH,GAAU+/D,GAAc,4CAEvE,OAAIlrE,KAAKmrE,MAAMD,GACJlrE,KAGA,MAGfyoE,EAAsB5nE,UAAUyS,UAAY,aAC5Cm1D,EAAsB5nE,UAAUsqE,MAAQ,SAAUD,GAC9C,IAAI1iC,EAAQxoC,KACZA,KAAKorE,SACL,IAEI1jE,EACAqwC,EACAszB,EAJAn8D,EAASlP,KAAK8oE,QACdwC,GAAa,EAIjB,GAAI/qE,MAAMuM,QAAQo+D,GAAa,CAC3BlrE,KAAKsB,OAAS4pE,EAAW5pE,OACzB,IAAK,IAAIiqE,EAAU,EAAGA,EAAUvrE,KAAKsB,OAAQiqE,IAEzCF,EAAcrrE,KAAKwpE,WAAW+B,EAD9BxzB,EAAOmzB,EAAWK,IAEH,OAAXr8D,GAAoBlE,GAAekE,EAAOs8D,UAAWH,IAKjDC,IAEAp8D,EAASlP,KAAKyrE,mBAAmBv8D,EAAQ6oC,EAAMszB,EAAaE,IAE3DvgE,GAAekE,EAAO6oC,KAAMA,IAC7B/3C,KAAK0rE,mBAAmBx8D,EAAQ6oC,KATpC7oC,EAASlP,KAAK2rE,UAAUz8D,EAAQ6oC,EAAMszB,EAAaE,GACnDD,GAAa,GAUjBp8D,EAASA,EAAOw6D,WAIpBhiE,EAAQ,EAjuZpB,SAASkkE,EAAgB77D,EAAKnF,GAC1B,GAAIrK,MAAMuM,QAAQiD,GACd,IAAK,IAAI5O,EAAI,EAAGA,EAAI4O,EAAIzO,OAAQH,IAC5ByJ,EAAGmF,EAAI5O,SAMX,IAFA,IAAI4B,EAAWgN,EAAIzF,OACfytC,OAAO,IACDA,EAAOh1C,EAASC,QAAY,MAClC4H,EAAGmtC,EAAK90C,OAwtZR2oE,CAAgBV,EAAY,SAAUnzB,GAClCszB,EAAc7iC,EAAMghC,WAAW9hE,EAAOqwC,GACvB,OAAX7oC,GAAoBlE,GAAekE,EAAOs8D,UAAWH,IAKjDC,IAEAp8D,EAASs5B,EAAMijC,mBAAmBv8D,EAAQ6oC,EAAMszB,EAAa3jE,IAE5DsD,GAAekE,EAAO6oC,KAAMA,IAC7BvP,EAAMkjC,mBAAmBx8D,EAAQ6oC,KATrC7oC,EAASs5B,EAAMmjC,UAAUz8D,EAAQ6oC,EAAMszB,EAAa3jE,GACpD4jE,GAAa,GAUjBp8D,EAASA,EAAOw6D,MAChBhiE,MAEJ1H,KAAKsB,OAASoG,EAIlB,OAFA1H,KAAK6rE,UAAU38D,GACflP,KAAKkrE,WAAaA,EACXlrE,KAAKunB,SAEhBnnB,OAAO+B,eAAesmE,EAAsB5nE,UAAW,WAInD6L,IAAK,WACD,OAA+B,OAAxB1M,KAAKgpE,gBAA+C,OAApBhpE,KAAKkpE,YACjB,OAAvBlpE,KAAKopE,eAAwD,OAA9BppE,KAAKspE,sBAE5ChgC,YAAY,EACZpG,cAAc,IAUlBulC,EAAsB5nE,UAAUuqE,OAAS,WACrC,GAAIprE,KAAKunB,QAAS,CACd,IAAIrY,OAAS,EACT48D,OAAa,EACjB,IAAK58D,EAASlP,KAAK6oE,gBAAkB7oE,KAAK8oE,QAAoB,OAAX55D,EAAiBA,EAASA,EAAOw6D,MAChFx6D,EAAOu7D,cAAgBv7D,EAAOw6D,MAElC,IAAKx6D,EAASlP,KAAKgpE,eAA2B,OAAX95D,EAAiBA,EAASA,EAAOy7D,WAChEz7D,EAAOk7D,cAAgBl7D,EAAO86D,aAGlC,IADAhqE,KAAKgpE,eAAiBhpE,KAAKipE,eAAiB,KACvC/5D,EAASlP,KAAKkpE,WAAuB,OAAXh6D,EAAiBA,EAAS48D,EACrD58D,EAAOk7D,cAAgBl7D,EAAO86D,aAC9B8B,EAAa58D,EAAO27D,WAExB7qE,KAAKkpE,WAAalpE,KAAKmpE,WAAa,KACpCnpE,KAAKopE,cAAgBppE,KAAKqpE,cAAgB,KAC1CrpE,KAAKspE,qBAAuBtpE,KAAKupE,qBAAuB,OAehEd,EAAsB5nE,UAAU8qE,UAAY,SAAUz8D,EAAQ6oC,EAAMszB,EAAa3jE,GAE7E,IAAIqkE,EAkCJ,OAjCe,OAAX78D,EACA68D,EAAiB/rE,KAAK+oE,SAGtBgD,EAAiB78D,EAAO88D,MAExBhsE,KAAKisE,QAAQ/8D,IAIF,QADfA,EAAiC,OAAxBlP,KAAK2oE,eAA0B,KAAO3oE,KAAK2oE,eAAej8D,IAAI2+D,EAAa3jE,KAI3EsD,GAAekE,EAAO6oC,KAAMA,IAC7B/3C,KAAK0rE,mBAAmBx8D,EAAQ6oC,GACpC/3C,KAAKksE,WAAWh9D,EAAQ68D,EAAgBrkE,IAKzB,QADfwH,EAAmC,OAA1BlP,KAAK4oE,iBAA4B,KAAO5oE,KAAK4oE,iBAAiBl8D,IAAI2+D,EAAa,QAI/ErgE,GAAekE,EAAO6oC,KAAMA,IAC7B/3C,KAAK0rE,mBAAmBx8D,EAAQ6oC,GACpC/3C,KAAKmsE,eAAej9D,EAAQ68D,EAAgBrkE,IAI5CwH,EACIlP,KAAKosE,UAAU,IAAIC,GAAsBt0B,EAAMszB,GAAcU,EAAgBrkE,GAGlFwH,GA6BXu5D,EAAsB5nE,UAAU4qE,mBAAqB,SAAUv8D,EAAQ6oC,EAAMszB,EAAa3jE,GACtF,IAAI4kE,EAA2C,OAA1BtsE,KAAK4oE,iBAA4B,KAAO5oE,KAAK4oE,iBAAiBl8D,IAAI2+D,EAAa,MAQpG,OAPuB,OAAnBiB,EACAp9D,EAASlP,KAAKmsE,eAAeG,EAAgBp9D,EAAO88D,MAAOtkE,GAEtDwH,EAAO86D,cAAgBtiE,IAC5BwH,EAAO86D,aAAetiE,EACtB1H,KAAKusE,YAAYr9D,EAAQxH,IAEtBwH,GASXu5D,EAAsB5nE,UAAUgrE,UAAY,SAAU38D,GAElD,KAAkB,OAAXA,GAAiB,CACpB,IAAI48D,EAAa58D,EAAOw6D,MACxB1pE,KAAKwsE,eAAexsE,KAAKysE,QAAQv9D,IACjCA,EAAS48D,EAEiB,OAA1B9rE,KAAK4oE,kBACL5oE,KAAK4oE,iBAAiBr8B,QAEE,OAAxBvsC,KAAKipE,iBACLjpE,KAAKipE,eAAe0B,WAAa,MAEb,OAApB3qE,KAAKmpE,aACLnpE,KAAKmpE,WAAW0B,WAAa,MAEZ,OAAjB7qE,KAAK+oE,UACL/oE,KAAK+oE,QAAQW,MAAQ,MAEE,OAAvB1pE,KAAKqpE,gBACLrpE,KAAKqpE,cAAcc,aAAe,MAEJ,OAA9BnqE,KAAKupE,uBACLvpE,KAAKupE,qBAAqByB,oBAAsB,OAIxDvC,EAAsB5nE,UAAUsrE,eAAiB,SAAUj9D,EAAQw9D,EAAYhlE,GAC7C,OAA1B1H,KAAK4oE,kBACL5oE,KAAK4oE,iBAAiBxhD,OAAOlY,GAEjC,IAAIy9D,EAAOz9D,EAAO09D,aACd5pE,EAAOkM,EAAOi7D,aAelB,OAda,OAATwC,EACA3sE,KAAKopE,cAAgBpmE,EAGrB2pE,EAAKxC,aAAennE,EAEX,OAATA,EACAhD,KAAKqpE,cAAgBsD,EAGrB3pE,EAAK4pE,aAAeD,EAExB3sE,KAAK6sE,aAAa39D,EAAQw9D,EAAYhlE,GACtC1H,KAAKusE,YAAYr9D,EAAQxH,GAClBwH,GAGXu5D,EAAsB5nE,UAAUqrE,WAAa,SAAUh9D,EAAQw9D,EAAYhlE,GAIvE,OAHA1H,KAAKysE,QAAQv9D,GACblP,KAAK6sE,aAAa39D,EAAQw9D,EAAYhlE,GACtC1H,KAAKusE,YAAYr9D,EAAQxH,GAClBwH,GAGXu5D,EAAsB5nE,UAAUurE,UAAY,SAAUl9D,EAAQw9D,EAAYhlE,GAatE,OAZA1H,KAAK6sE,aAAa39D,EAAQw9D,EAAYhlE,GAIlC1H,KAAKipE,eAHmB,OAAxBjpE,KAAKipE,eAGiBjpE,KAAKgpE,eAAiB95D,EAMtBlP,KAAKipE,eAAe0B,WAAaz7D,EAEpDA,GAGXu5D,EAAsB5nE,UAAUgsE,aAAe,SAAU39D,EAAQw9D,EAAYhlE,GAKzE,IAAI1E,EAAsB,OAAf0pE,EAAsB1sE,KAAK8oE,QAAU4D,EAAWhD,MAuB3D,OAnBAx6D,EAAOw6D,MAAQ1mE,EACfkM,EAAO88D,MAAQU,EACF,OAAT1pE,EACAhD,KAAK+oE,QAAU75D,EAGflM,EAAKgpE,MAAQ98D,EAEE,OAAfw9D,EACA1sE,KAAK8oE,QAAU55D,EAGfw9D,EAAWhD,MAAQx6D,EAEK,OAAxBlP,KAAK2oE,iBACL3oE,KAAK2oE,eAAiB,IAAImE,IAE9B9sE,KAAK2oE,eAAeoE,IAAI79D,GACxBA,EAAO86D,aAAetiE,EACfwH,GAGXu5D,EAAsB5nE,UAAUorE,QAAU,SAAU/8D,GAChD,OAAOlP,KAAKwsE,eAAexsE,KAAKysE,QAAQv9D,KAG5Cu5D,EAAsB5nE,UAAU4rE,QAAU,SAAUv9D,GACpB,OAAxBlP,KAAK2oE,gBACL3oE,KAAK2oE,eAAevhD,OAAOlY,GAE/B,IAAIy9D,EAAOz9D,EAAO88D,MACdhpE,EAAOkM,EAAOw6D,MAgBlB,OAZa,OAATiD,EACA3sE,KAAK8oE,QAAU9lE,EAGf2pE,EAAKjD,MAAQ1mE,EAEJ,OAATA,EACAhD,KAAK+oE,QAAU4D,EAGf3pE,EAAKgpE,MAAQW,EAEVz9D,GAGXu5D,EAAsB5nE,UAAU0rE,YAAc,SAAUr9D,EAAQ89D,GAG5D,OAAI99D,EAAOk7D,gBAAkB4C,EAClB99D,GAKPlP,KAAKmpE,WAHe,OAApBnpE,KAAKmpE,WAGanpE,KAAKkpE,WAAah6D,EAKlBlP,KAAKmpE,WAAW0B,WAAa37D,EAE5CA,IAEXu5D,EAAsB5nE,UAAU2rE,eAAiB,SAAUt9D,GAoBvD,OAnB8B,OAA1BlP,KAAK4oE,mBACL5oE,KAAK4oE,iBAAmB,IAAIkE,IAEhC9sE,KAAK4oE,iBAAiBmE,IAAI79D,GAC1BA,EAAO86D,aAAe,KACtB96D,EAAOi7D,aAAe,KACK,OAAvBnqE,KAAKqpE,eAGLrpE,KAAKqpE,cAAgBrpE,KAAKopE,cAAgBl6D,EAC1CA,EAAO09D,aAAe,OAMtB19D,EAAO09D,aAAe5sE,KAAKqpE,cAC3BrpE,KAAKqpE,cAAgBrpE,KAAKqpE,cAAcc,aAAej7D,GAEpDA,GAGXu5D,EAAsB5nE,UAAU6qE,mBAAqB,SAAUx8D,EAAQ6oC,GAQnE,OAPA7oC,EAAO6oC,KAAOA,EAEV/3C,KAAKupE,qBADyB,OAA9BvpE,KAAKupE,qBACuBvpE,KAAKspE,qBAAuBp6D,EAG5BlP,KAAKupE,qBAAqByB,oBAAsB97D,EAEzEA,GAEJu5D,EA3e+B,GA6etC4D,GACA,SAASA,GAAsBt0B,EAAMyzB,GACjCxrE,KAAK+3C,KAAOA,EACZ/3C,KAAKwrE,UAAYA,EACjBxrE,KAAKgqE,aAAe,KACpBhqE,KAAKoqE,cAAgB,KAErBpqE,KAAKyqE,cAAgB,KAErBzqE,KAAKgsE,MAAQ,KAEbhsE,KAAK0pE,MAAQ,KAEb1pE,KAAKitE,SAAW,KAEhBjtE,KAAKktE,SAAW,KAEhBltE,KAAK4sE,aAAe,KAEpB5sE,KAAKmqE,aAAe,KAEpBnqE,KAAK2qE,WAAa,KAElB3qE,KAAK6qE,WAAa,KAElB7qE,KAAKgrE,oBAAsB,MAK/BmC,GAA0C,WAC1C,SAASA,IAELntE,KAAKotE,MAAQ,KAEbptE,KAAKqtE,MAAQ,KAiEjB,OA1DAF,EAAyBtsE,UAAUomB,IAAM,SAAU/X,GAC5B,OAAflP,KAAKotE,OACLptE,KAAKotE,MAAQptE,KAAKqtE,MAAQn+D,EAC1BA,EAAOg+D,SAAW,KAClBh+D,EAAO+9D,SAAW,OAMlBjtE,KAAKqtE,MAAMH,SAAWh+D,EACtBA,EAAO+9D,SAAWjtE,KAAKqtE,MACvBn+D,EAAOg+D,SAAW,KAClBltE,KAAKqtE,MAAQn+D,IAKrBi+D,EAAyBtsE,UAAU6L,IAAM,SAAU8+D,EAAW8B,GAC1D,IAAIp+D,EACJ,IAAKA,EAASlP,KAAKotE,MAAkB,OAAXl+D,EAAiBA,EAASA,EAAOg+D,SACvD,IAAwB,OAAnBI,GAA2BA,GAAkBp+D,EAAO86D,eACrDh/D,GAAekE,EAAOs8D,UAAWA,GACjC,OAAOt8D,EAGf,OAAO,MAOXi+D,EAAyBtsE,UAAUumB,OAAS,SAAUlY,GASlD,IAAIy9D,EAAOz9D,EAAO+9D,SACdjqE,EAAOkM,EAAOg+D,SAalB,OAZa,OAATP,EACA3sE,KAAKotE,MAAQpqE,EAGb2pE,EAAKO,SAAWlqE,EAEP,OAATA,EACAhD,KAAKqtE,MAAQV,EAGb3pE,EAAKiqE,SAAWN,EAEE,OAAf3sE,KAAKotE,OAETD,EAtEkC,GAwEzCL,GAA+B,WAC/B,SAASA,IACL9sE,KAAKqL,IAAM,IAAIX,IA2CnB,OAzCAoiE,EAAcjsE,UAAUksE,IAAM,SAAU79D,GACpC,IAAItN,EAAMsN,EAAOs8D,UACb+B,EAAavtE,KAAKqL,IAAIqB,IAAI9K,GACzB2rE,IACDA,EAAa,IAAIJ,GACjBntE,KAAKqL,IAAI2C,IAAIpM,EAAK2rE,IAEtBA,EAAWtmD,IAAI/X,IASnB49D,EAAcjsE,UAAU6L,IAAM,SAAU8+D,EAAW8B,GAC/C,IACIE,EAAaxtE,KAAKqL,IAAIqB,IADhB8+D,GAEV,OAAOgC,EAAaA,EAAW9gE,IAAI8+D,EAAW8B,GAAkB,MAOpER,EAAcjsE,UAAUumB,OAAS,SAAUlY,GACvC,IAAItN,EAAMsN,EAAOs8D,UAMjB,OALiBxrE,KAAKqL,IAAIqB,IAAI9K,GAEfwlB,OAAOlY,IAClBlP,KAAKqL,IAAI6lC,OAAOtvC,GAEbsN,GAEX9O,OAAO+B,eAAe2qE,EAAcjsE,UAAW,WAC3C6L,IAAK,WAAc,OAAyB,IAAlB1M,KAAKqL,IAAI4nD,MACnC3pB,YAAY,EACZpG,cAAc,IAElB4pC,EAAcjsE,UAAU0rC,MAAQ,WAAcvsC,KAAKqL,IAAIkhC,SAChDugC,EA7CuB,GA+ClC,SAAS7C,GAAiBlyB,EAAM+xB,EAAiBC,GAC7C,IAAIK,EAAgBryB,EAAKqyB,cACzB,GAAsB,OAAlBA,EACA,OAAOA,EACX,IAAIqD,EAAa,EAIjB,OAHI1D,GAAeK,EAAgBL,EAAYzoE,SAC3CmsE,EAAa1D,EAAYK,IAEtBA,EAAgBN,EAAkB2D;;;;;;;OAU7C,IAqgBWC,GArgBPC,GAA8C,WAC9C,SAASA,KAIT,OAFAA,EAA6B9sE,UAAU0nE,SAAW,SAAUx4D,GAAO,OAAOA,aAAerF,KAAOyS,GAAWpN,IAC3G49D,EAA6B9sE,UAAUC,OAAS,WAAc,OAAO,IAAI8sE,IAClED,EALsC,GAO7CC,GAAuC,WACvC,SAASA,IACL5tE,KAAK+N,SAAW,IAAIrD,IACpB1K,KAAK6tE,SAAW,KAEhB7tE,KAAK8tE,aAAe,KACpB9tE,KAAK+tE,iBAAmB,KACxB/tE,KAAKguE,aAAe,KACpBhuE,KAAKiuE,aAAe,KACpBjuE,KAAKgpE,eAAiB,KACtBhpE,KAAKipE,eAAiB,KACtBjpE,KAAKopE,cAAgB,KACrBppE,KAAKqpE,cAAgB,KA+MzB,OA7MAjpE,OAAO+B,eAAeyrE,EAAsB/sE,UAAW,WACnD6L,IAAK,WACD,OAA+B,OAAxB1M,KAAKgpE,gBAAiD,OAAtBhpE,KAAKguE,cACjB,OAAvBhuE,KAAKopE,eAEb9/B,YAAY,EACZpG,cAAc,IAElB0qC,EAAsB/sE,UAAU4oE,YAAc,SAAU7+D,GACpD,IAAIsE,EACJ,IAAKA,EAASlP,KAAK6tE,SAAqB,OAAX3+D,EAAiBA,EAASA,EAAOw6D,MAC1D9+D,EAAGsE,IAGX0+D,EAAsB/sE,UAAU2pE,oBAAsB,SAAU5/D,GAC5D,IAAIsE,EACJ,IAAKA,EAASlP,KAAK+tE,iBAA6B,OAAX7+D,EAAiBA,EAASA,EAAOu7D,cAClE7/D,EAAGsE,IAGX0+D,EAAsB/sE,UAAUqtE,mBAAqB,SAAUtjE,GAC3D,IAAIsE,EACJ,IAAKA,EAASlP,KAAKguE,aAAyB,OAAX9+D,EAAiBA,EAASA,EAAOi/D,aAC9DvjE,EAAGsE,IAGX0+D,EAAsB/sE,UAAU6pE,iBAAmB,SAAU9/D,GACzD,IAAIsE,EACJ,IAAKA,EAASlP,KAAKgpE,eAA2B,OAAX95D,EAAiBA,EAASA,EAAOy7D,WAChE//D,EAAGsE,IAGX0+D,EAAsB/sE,UAAUiqE,mBAAqB,SAAUlgE,GAC3D,IAAIsE,EACJ,IAAKA,EAASlP,KAAKopE,cAA0B,OAAXl6D,EAAiBA,EAASA,EAAOi7D,aAC/Dv/D,EAAGsE,IAGX0+D,EAAsB/sE,UAAUoqE,KAAO,SAAU5/D,GAC7C,GAAKA,GAGA,KAAMA,aAAeX,KAAOyS,GAAW9R,IACxC,MAAM,IAAIzH,MAAM,yBAA2BuH,GAAUE,GAAO,6CAH5DA,EAAM,IAAIX,IAKd,OAAO1K,KAAKmrE,MAAM9/D,GAAOrL,KAAO,MAEpC4tE,EAAsB/sE,UAAUyS,UAAY,aAK5Cs6D,EAAsB/sE,UAAUsqE,MAAQ,SAAU9/D,GAC9C,IAAIm9B,EAAQxoC,KACZA,KAAKorE,SACL,IAAI7rD,EAAevf,KAAK6tE,SAcxB,GAbA7tE,KAAK8tE,aAAe,KACpB9tE,KAAKouE,SAAS/iE,EAAK,SAAUpI,EAAOrB,GAChC,GAAI2d,GAAgBA,EAAa3d,MAAQA,EACrC4mC,EAAM6lC,mBAAmB9uD,EAActc,GACvCulC,EAAMslC,aAAevuD,EACrBA,EAAeA,EAAamqD,UAE3B,CACD,IAAIx6D,EAASs5B,EAAM8lC,yBAAyB1sE,EAAKqB,GACjDsc,EAAeipB,EAAM+lC,sBAAsBhvD,EAAcrQ,MAI7DqQ,EAAc,CACVA,EAAaysD,QACbzsD,EAAaysD,MAAMtC,MAAQ,MAE/B1pE,KAAKopE,cAAgB7pD,EACrB,IAAK,IAAIrQ,EAASqQ,EAAyB,OAAXrQ,EAAiBA,EAASA,EAAOi7D,aACzDj7D,IAAWlP,KAAK6tE,WAChB7tE,KAAK6tE,SAAW,MAEpB7tE,KAAK+N,SAASmjC,OAAOhiC,EAAOtN,KAC5BsN,EAAOi7D,aAAej7D,EAAOw6D,MAC7Bx6D,EAAO6N,cAAgB7N,EAAO8N,aAC9B9N,EAAO8N,aAAe,KACtB9N,EAAO88D,MAAQ,KACf98D,EAAOw6D,MAAQ,KAQvB,OAJI1pE,KAAKiuE,eACLjuE,KAAKiuE,aAAaE,aAAe,MACjCnuE,KAAKipE,iBACLjpE,KAAKipE,eAAe0B,WAAa,MAC9B3qE,KAAKunB,SAUhBqmD,EAAsB/sE,UAAU0tE,sBAAwB,SAAUC,EAAQt/D,GACtE,GAAIs/D,EAAQ,CACR,IAAI7B,EAAO6B,EAAOxC,MAWlB,OAVA98D,EAAOw6D,MAAQ8E,EACft/D,EAAO88D,MAAQW,EACf6B,EAAOxC,MAAQ98D,EACXy9D,IACAA,EAAKjD,MAAQx6D,GAEbs/D,IAAWxuE,KAAK6tE,WAChB7tE,KAAK6tE,SAAW3+D,GAEpBlP,KAAK8tE,aAAeU,EACbA,EAUX,OARIxuE,KAAK8tE,cACL9tE,KAAK8tE,aAAapE,MAAQx6D,EAC1BA,EAAO88D,MAAQhsE,KAAK8tE,cAGpB9tE,KAAK6tE,SAAW3+D,EAEpBlP,KAAK8tE,aAAe5+D,EACb,MAEX0+D,EAAsB/sE,UAAUytE,yBAA2B,SAAU1sE,EAAKqB,GACtE,GAAIjD,KAAK+N,SAASwiC,IAAI3uC,GAAM,CACxB,IAAI6sE,EAAWzuE,KAAK+N,SAASrB,IAAI9K,GACjC5B,KAAKquE,mBAAmBI,EAAUxrE,GAClC,IAAI0pE,EAAO8B,EAASzC,MAChBhpE,EAAOyrE,EAAS/E,MASpB,OARIiD,IACAA,EAAKjD,MAAQ1mE,GAEbA,IACAA,EAAKgpE,MAAQW,GAEjB8B,EAAS/E,MAAQ,KACjB+E,EAASzC,MAAQ,KACVyC,EAEX,IAAIv/D,EAAS,IAAIw/D,GAAsB9sE,GAIvC,OAHA5B,KAAK+N,SAASC,IAAIpM,EAAKsN,GACvBA,EAAO8N,aAAe/Z,EACtBjD,KAAK2uE,gBAAgBz/D,GACdA,GAGX0+D,EAAsB/sE,UAAUuqE,OAAS,WACrC,GAAIprE,KAAKunB,QAAS,CACd,IAAIrY,OAAS,EAGb,IADAlP,KAAK+tE,iBAAmB/tE,KAAK6tE,SACxB3+D,EAASlP,KAAK+tE,iBAA6B,OAAX7+D,EAAiBA,EAASA,EAAOw6D,MAClEx6D,EAAOu7D,cAAgBv7D,EAAOw6D,MAIlC,IAAKx6D,EAASlP,KAAKguE,aAAyB,OAAX9+D,EAAiBA,EAASA,EAAOi/D,aAC9Dj/D,EAAO6N,cAAgB7N,EAAO8N,aAElC,IAAK9N,EAASlP,KAAKgpE,eAA0B,MAAV95D,EAAgBA,EAASA,EAAOy7D,WAC/Dz7D,EAAO6N,cAAgB7N,EAAO8N,aAElChd,KAAKguE,aAAehuE,KAAKiuE,aAAe,KACxCjuE,KAAKgpE,eAAiBhpE,KAAKipE,eAAiB,KAC5CjpE,KAAKopE,cAAgB,OAI7BwE,EAAsB/sE,UAAUwtE,mBAAqB,SAAUn/D,EAAQopB,GAC9DttB,GAAestB,EAAUppB,EAAO8N,gBACjC9N,EAAO6N,cAAgB7N,EAAO8N,aAC9B9N,EAAO8N,aAAesb,EACtBt4B,KAAK4uE,cAAc1/D,KAG3B0+D,EAAsB/sE,UAAU8tE,gBAAkB,SAAUz/D,GAC5B,OAAxBlP,KAAKgpE,eACLhpE,KAAKgpE,eAAiBhpE,KAAKipE,eAAiB/5D,GAG5ClP,KAAKipE,eAAe0B,WAAaz7D,EACjClP,KAAKipE,eAAiB/5D,IAG9B0+D,EAAsB/sE,UAAU+tE,cAAgB,SAAU1/D,GAC5B,OAAtBlP,KAAKguE,aACLhuE,KAAKguE,aAAehuE,KAAKiuE,aAAe/+D,GAGxClP,KAAKiuE,aAAaE,aAAej/D,EACjClP,KAAKiuE,aAAe/+D,IAI5B0+D,EAAsB/sE,UAAUutE,SAAW,SAAUr+D,EAAKnF,GAClDmF,aAAerF,IACfqF,EAAIF,QAAQjF,GAGZxK,OAAOoK,KAAKuF,GAAKF,QAAQ,SAAUiiD,GAAK,OAAOlnD,EAAGmF,EAAI+hD,GAAIA,MAG3D8b,EA3N+B,GA6NtCc,GACA,SAASA,GAAsB9sE,GAC3B5B,KAAK4B,IAAMA,EACX5B,KAAK+c,cAAgB,KACrB/c,KAAKgd,aAAe,KAEpBhd,KAAKyqE,cAAgB,KAErBzqE,KAAK0pE,MAAQ,KAEb1pE,KAAKgsE,MAAQ,KAEbhsE,KAAK2qE,WAAa,KAElB3qE,KAAKmqE,aAAe,KAEpBnqE,KAAKmuE,aAAe,MAgBxBU,GAAiC,WACjC,SAASA,EAAgB7mC,GACrBhoC,KAAKgoC,UAAYA,EA0DrB,OAxDA6mC,EAAgB/tE,OAAS,SAAUknC,EAAWn7B,GAC1C,GAAc,MAAVA,EAAgB,CAChB,IAAIiiE,EAASjiE,EAAOm7B,UAAU16B,QAC9B06B,EAAYA,EAAUvkC,OAAOqrE,GAEjC,OAAO,IAAID,EAAgB7mC,IAsB/B6mC,EAAgBE,OAAS,SAAU/mC,GAC/B,OACIx6B,QAASqhE,EACThgE,WAAY,SAAUhC,GAClB,IAAKA,EAID,MAAM,IAAIjJ,MAAM,2DAEpB,OAAOirE,EAAgB/tE,OAAOknC,EAAWn7B,IAG7CoB,OAAQ4gE,EAAiB,IAAI1iE,GAAY,IAAIF,OAGrD4iE,EAAgBhuE,UAAU22C,KAAO,SAAUw3B,GACvC,IAAI3vE,EAAUW,KAAKgoC,UAAUwP,KAAK,SAAU8rB,GAAK,OAAOA,EAAEiF,SAASyG,KACnE,GAAe,MAAX3vE,EACA,OAAOA,EAGP,MAAM,IAAIuE,MAAM,2CAA6CorE,EAAW,cASpF,SAASC,EAAwBzpE,GAC7B,OAAOA,EAAW,aAAYA;;;;;;;OAVkEypE,CAAwBD,GAAY,MAGpIH,EAAgBzqE,gBAAkBW,GAC9BE,WAAY,OACZ5F,QAAS,WAAc,OAAO,IAAIwvE,GAAiB,IAAIvG,QAEpDuG,EA5DyB,GA6EhCK,GAAiC,WACjC,SAASA,EAAgBlnC,GACrBhoC,KAAKgoC,UAAYA,EAmDrB,OAjDAknC,EAAgBpuE,OAAS,SAAUknC,EAAWn7B,GAC1C,GAAIA,EAAQ,CACR,IAAIiiE,EAASjiE,EAAOm7B,UAAU16B,QAC9B06B,EAAYA,EAAUvkC,OAAOqrE,GAEjC,OAAO,IAAII,EAAgBlnC,IAsB/BknC,EAAgBH,OAAS,SAAU/mC,GAC/B,OACIx6B,QAAS0hE,EACTrgE,WAAY,SAAUhC,GAClB,IAAKA,EAGD,MAAM,IAAIjJ,MAAM,2DAEpB,OAAOsrE,EAAgBpuE,OAAOknC,EAAWn7B,IAG7CoB,OAAQihE,EAAiB,IAAI/iE,GAAY,IAAIF,OAGrDijE,EAAgBruE,UAAU22C,KAAO,SAAU23B,GACvC,IAAI9vE,EAAUW,KAAKgoC,UAAUwP,KAAK,SAAU8rB,GAAK,OAAOA,EAAEiF,SAAS4G,KACnE,GAAI9vE,EACA,OAAOA,EAEX,MAAM,IAAIuE,MAAM,2CAA6CurE,EAAK,MAE/DD,EArDyB,GAkEhCE,IAAc,IAAIzB,IAKlB0B,GAAyB,IAAIR,IADb,IAAIvG,KAEpBgH,GAAyB,IAAIJ,GAAgBE,IA6B7CG,GAAejO,GAAsB,KAAM,SAVzC9zD,QAASsrD,GAAaprD,SAAU,YAChCF,QAAS4zD,GAAanzD,MAAOrB,MAC7BY,QAAS0yD,GAAqBjyD,UAC9BT,QAASyrD,GAAShrD,WAsCpBuhE,GAAY,IAAI9pE,EAAe,YAyB/B+pE,GAAe,IAAI/pE,EAAe,gBAsBlCgqE,GAAsB,IAAIhqE,EAAe,uBAClCgoE,GAIRpuE,EAAQouE,6BAA+BpuE,EAAQouE,gCAHnBA,GAAkC,MAAI,GAAK,QACtEA,GAA2BA,GAAoC,QAAI,GAAK,UACxEA,GAA2BA,GAAmC,OAAI,GAAK,SAuB3E,IAAIiC,KAEIniE,QAAS61D,GACTv0D,SAAUu0D,GACVp1D,MAAOqtD,GAAQrC,GAASrsD,GAAUukD,GAAcrpB,GAA0B4vB,MAG1ElqD,QAASkqD,GACT5oD,SAAU4oD,GACVzpD,OAAQ,IAAIhC,GAAYwrD,OAE1BjqD,QAASisD,GAAU3qD,SAAU2qD,GAAUxrD,SACzCqqD,IACE9qD,QAASqhE,GAAiBhgE;;;;;;;;AA1BhC,SAAS+gE,KACL,OAAOP,IAyB0DphE,UAC/DT,QAAS0hE,GAAiBrgE,WAxBhC,SAASghE,KACL,OAAOP,IAuB0DrhE,UAE7DT,QAASgiE,GACT3gE,WAxBR,SAASihE,GAAeC,GACpB,OAAOA,GAAU,SAwBb9hE,OAAQ,IAAIjC,GAAOwjE,IAAY,IAAIvjE,GAAY,IAAIE,OAavD6jE,GAAmC,WAQnC,OAJoBvuE,GAChB6uD,IAAWjrD,UAAWsqE,KACtBptE,EAAW,qBAAsB8gE,MAJrC,SAAS2M,EAAkBhmC,MAFO;;;;;;;;AAsBtC,SAASimC,GAAe9xD,EAAM+xD,EAAgBC,GAU1C,IAAI9uD,EAAQlD,EAAKkD,MACb+uD,EAAoB,KAAR/uD,EAChB,OAAI+uD,IAAcF,GACd/xD,EAAKkD,OAAiB,KAARA,EAAsC8uD,EACpDhyD,EAAKkyD,WAAa,GACX,GAEJD,IAAcD,EAIzB,SAASG,GAA4BnyD,EAAMiyD,EAAW1oE,GAClD,OAAkB,KAAbyW,EAAKkD,SAAuC+uD,GAAajyD,EAAKkyD,WAAa3oE,IAC5EyW,EAAKkyD,UAAY3oE,EAAQ,GAClB,GAOf,SAAS6oE,GAAWpyD,EAAMzW,GACtB,OAAOyW,EAAKqyD,MAAM9oE,GAKtB,SAAS+oE,GAActyD,EAAMzW,GACzB,OAAOyW,EAAKqyD,MAAM9oE,GAKtB,SAASgpE,GAAevyD,EAAMzW,GAC1B,OAAOyW,EAAKqyD,MAAM9oE,GAKtB,SAASipE,GAAqBxyD,EAAMzW,GAChC,OAAOyW,EAAKqyD,MAAM9oE,GAKtB,SAASkpE,GAAYzyD,EAAMzW,GACvB,OAAOyW,EAAKqyD,MAAM9oE,GAMtB,IAAImpE,IACAC,oBAAgB5rE,EAChB6rE,oBAAgB7rE,EAChB4lC,wBAAoB5lC,EACpB8rE,yBAAqB9rE,EACrB+rE,uBAAmB/rE,EACnBgsE,sBAAkBhsE,EAClBisE,2BAAuBjsE,EACvBksE,oBAAgBlsE,EAChBmsE,wBAAoBnsE,EACpBosE,wBAAoBpsE,EACpBqsE,iBAAarsE,EACbssE,gBAAYtsE,EACZusE,wBAAoBvsE,EACpBwsE,iBAAaxsE,EACbysE,sBAAkBzsE,EAClB0sE,oBAAgB1sE,EAChB2sE,wBAAoB3sE;;;;;;;OAUxB,SAAS4sE,GAA4C5hE,EAASqvB,EAAU9Z,EAAWssD,GAC/E,IAAIvyC,EAAM,8GAAgHD,EAAW,sBAAwB9Z,EAAY,KAMzK,OALIssD,IACAvyC,GACI,wJAcZ,SAASwyC,EAAexyC,EAAKtvB,GACzB,IAAI2kC,EAAM,IAAIjxC,MAAM47B,GAEpB,OADAyyC,GAAiBp9B,EAAK3kC,GACf2kC,EAdAm9B,CAAexyC,EAAKtvB,GAgB/B,SAAS+hE,GAAiBp9B,EAAK3kC,GAC3B2kC,EAAIgc,IAAuB3gD,EAC3B2kC,EAAIkc,IAAgB7gD,EAAQgiE,SAASprE,KAAKoJ,GAK9C,SAASiiE,GAAmB3zD,GACxB,OAAO,IAAI5a,MAAM,wDAA0D4a;;;;;;;OAU/E,IAAI4zD,GAAO,aACPC,GAAiB,IAAI3nE,IACzB,SAAS4nE,GAASlnE,GACd,IAAIxJ,EAAMywE,GAAe3lE,IAAItB,GAK7B,OAJKxJ,IACDA,EAAMuJ,GAAUC,GAAS,IAAMinE,GAAepf,KAC9Cof,GAAerkE,IAAI5C,EAAOxJ,IAEvBA,EAWX,IAYI2wE,GAAqB,EAkBzB,SAASC,GAAar0D,EAAMvM,EAAK6gE,EAAYxvE,GAEzC,UAAkB,EAAbkb,EAAKkD,QACLrW,GAFWmT,EAAKu0D,UAES9gE,EAAIwtB,aAAeqzC,GAAaxvE,IAKlE,SAAS0vE,GAAsBx0D,EAAMvM,EAAK6gE,EAAYxvE,GAClD,QAAIuvE,GAAar0D,EAAMvM,EAAK6gE,EAAYxvE,KACpCkb,EAAKu0D,UAAU9gE,EAAIwtB,aAAeqzC,GAAcxvE,GACzC,GAIf,SAAS2vE,GAAsBz0D,EAAMvM,EAAK6gE,EAAYxvE,GAClD,IAAIs8B,EAAWphB,EAAKu0D,UAAU9gE,EAAIwtB,aAAeqzC,GACjD,GAAkB,EAAbt0D,EAAKkD,QAAsCtF,GAAawjB,EAAUt8B,GAAQ,CAC3E,IAAI4vE,EAAcjhE,EAAIqa,SAASwmD,GAAYvsE,KAC3C,MAAM4rE,GAA4CjB,GAASY,mBAAmBtzD,EAAMvM,EAAImF,WAAY87D,EAAc,KAAOtzC,EAAUszC,EAAc,KAAO5vE,EAAmD,IAA9B,EAAbkb,EAAKkD,SAG7K,SAASyxD,GAAwB30D,GAE7B,IADA,IAAI40D,EAAW50D,EACR40D,GACsB,EAArBA,EAASnhE,IAAIzC,QACb4jE,EAAS1xD,OAAS,GAEtB0xD,EAAWA,EAASC,qBAAuBD,EAASlmE,OAG5D,SAASomE,GAAsC90D,EAAM+0D,GAEjD,IADA,IAAIH,EAAW50D,EACR40D,GAAYA,IAAaG,GAC5BH,EAAS1xD,OAAS,GAClB0xD,EAAWA,EAASC,qBAAuBD,EAASlmE,OAG5D,SAASsmE,GAAch1D,EAAMpH,EAAWgb,EAAWqhD,GAC/C,IAMI,OADAN,GAHgC,SADlB30D,EAAKvM,IAAI4+D,MAAMz5D,GACL5H,MACpBshE,GAActyD,EAAMpH,GAAWoI,cAC/BhB,GAEG0yD,GAASa,YAAYvzD,EAAMpH,EAAWgb,EAAWqhD,GAE5D,MAAOhwE,GAEH+a,EAAKk1D,KAAKzQ,aAAavR,YAAYjuD,IAG3C,SAASkwE,GAAsBn1D,GAC3B,OAAIA,EAAKtR,OAEE4jE,GADUtyD,EAAKtR,OACWsR,EAAKo1D,cAAcx8D,WAEjD,KAOX,SAASy8D,GAAar1D,GAElB,OADiBA,EAAKtR,OAEXsR,EAAKo1D,cAAc1mE,OAGnB,KAGf,SAAS4mE,GAAWt1D,EAAMvM,GACtB,OAAoB,UAAZA,EAAIzC,OACR,KAAK,EACD,OAAOshE,GAActyD,EAAMvM,EAAImF,WAAW28D,cAC9C,KAAK,EACD,OAAOnD,GAAWpyD,EAAMvM,EAAImF,WAAW48D,YAGnD,SAASC,GAAqBjyE,EAAQuE,GAClC,OAAOvE,EAASA,EAAS,IAAMuE,EAAOA,EAE1C,SAAS2tE,GAAgB11D,GACrB,QAASA,EAAKtR,WAAwC,MAA3BsR,EAAKo1D,cAAcpkE,OAElD,SAAS2kE,GAAe31D,GACpB,SAASA,EAAKtR,QAAuC,MAA3BsR,EAAKo1D,cAAcpkE,OAEjD,SAAS4kE,GAAcC,GACnB,OAAO,GAAMA,EAAU,GAE3B,SAASC,GAAuBC,GAC5B,IAAIC,KACAC,EAAkB,EAClBhN,KAaJ,OAZI8M,GACAA,EAAkBrkE,QAAQ,SAAUnJ,GAChC,IAAI80C,EAAKr4C,EAAOuD,EAAI,GAAIstE,EAAUx4B,EAAG,GAAI64B,EAAY74B,EAAG,GACjC,iBAAZw4B,GACPG,EAAeH,GAAWK,EAC1BD,GAAmBL,GAAcC,IAGjC5M,EAAW4M,GAAWK,KAIzBF,eAAgBA,EAAgB/M,WAAYA,EAAYgN,gBAAiBA,GAEtF,SAASE,GAAarmE,EAAMsmE,GACxB,OAAOtmE,EAAK5C,IAAI,SAAUpI,GACtB,IAAIyD,EACA0E,EACA+D,EAWJ,OAVI5O,MAAMuM,QAAQ7J,IACSkM,GAAvBzI,EAAKvD,EAAOF,EAAO,IAAe,GAAImI,EAAQ1E,EAAG,KAGjDyI,EAAQ,EACR/D,EAAQnI,GAERmI,IAA2B,mBAAVA,GAAyC,iBAAVA,IAAuBmpE,GACvEn0E,OAAO+B,eAAeiJ,EAAOiB,IAAUpJ,MAAOsxE,EAAYrxC,cAAc,KAEnE/zB,MAAOA,EAAO/D,MAAOA,EAAOknE,SAAUA,GAASlnE,MAGhE,SAASopE,GAAuBr2D,EAAMs2D,EAAY7iE,GAC9C,IAAIgR,EAAehR,EAAIgR,aACvB,OAAIA,EACmD,IAAzB,EAArBA,EAAazT,QAC0C,IAAlC,SAArByT,EAAazT,QACbyT,EAAaqC,QAAQyvD,uBAClB9xD,EAAaqC,QAAQyvD,sBAAsBljE,gBACvClS,EAAQ4J,kBAAkByrE,OAG3BlE,GAActyD,EAAMvM,EAAIgR,aAAa7L,WAAW28D,mBAP3D,EAWOe,EAGf,IAAIG,GAAmB,IAAIC,QAC3B,SAASC,GAAkBz1E,GACvB,IAAI4D,EAAQ2xE,GAAiBloE,IAAIrN,GAMjC,OALK4D,KACDA,EAAQ5D,EAAQ,WAAc,OAAO+yE,MAC/B/yE,QAAUA,EAChBu1E,GAAiB5mE,IAAI3O,EAAS4D,IAE3BA,EAOX,SAAS8xE,GAAqB52D,EAAMK,EAAQ9F,EAAYoiC,EAAan5C,GAElD,IAAX6c,IACA9F,EAAayF,EAAK1C,SAAS/C,WAAW+6D,GAAWt1D,EAAMA,EAAKvM,IAAIojE,sBAEpEC,GAAwB92D,EAAMK,EAAQ,EAAGL,EAAKvM,IAAI4+D,MAAMlvE,OAAS,EAAGoX,EAAYoiC,EAAan5C,GAEjG,SAASszE,GAAwB92D,EAAMK,EAAQjF,EAAY27D,EAAUx8D,EAAYoiC,EAAan5C,GAC1F,IAAK,IAAIR,EAAIoY,EAAYpY,GAAK+zE,EAAU/zE,IAAK,CACzC,IAAIg0E,EAAUh3D,EAAKvM,IAAI4+D,MAAMrvE,GACT,GAAhBg0E,EAAQhmE,OACRimE,GAAgBj3D,EAAMg3D,EAAS32D,EAAQ9F,EAAYoiC,EAAan5C,GAGpER,GAAKg0E,EAAQE,YAGrB,SAASC,GAA0Bn3D,EAAMo3D,EAAgB/2D,EAAQ9F,EAAYoiC,EAAan5C,GAEtF,IADA,IAAI6zE,EAAWr3D,EACRq3D,IAAa3B,GAAgB2B,IAChCA,EAAWA,EAAS3oE,OAMxB,IAJA,IAAI0Q,EAAWi4D,EAAS3oE,OACpB4oE,EAAYjC,GAAagC,GAEzBN,EAAWO,EAAU1+D,UAAY0+D,EAAUJ,WACtCl0E,EAFQs0E,EAAU1+D,UAAY,EAEd5V,GAAK+zE,EAAU/zE,IAAK,CACzC,IAAIg0E,EAAU53D,EAAS3L,IAAI4+D,MAAMrvE,GAC7Bg0E,EAAQI,iBAAmBA,GAC3BH,GAAgB73D,EAAU43D,EAAS32D,EAAQ9F,EAAYoiC,EAAan5C,GAGxER,GAAKg0E,EAAQE,WAEjB,IAAK93D,EAAS1Q,OAAQ,CAElB,IAAI6oE,EAAiBv3D,EAAKk1D,KAAK3qC,iBAAiB6sC,GAChD,GAAIG,EACA,IAASv0E,EAAI,EAAGA,EAAIu0E,EAAep0E,OAAQH,IACvCw0E,GAAqBx3D,EAAMu3D,EAAev0E,GAAIqd,EAAQ9F,EAAYoiC,EAAan5C,IAK/F,SAASyzE,GAAgBj3D,EAAMg3D,EAAS32D,EAAQ9F,EAAYoiC,EAAan5C,GACrE,GAAoB,EAAhBwzE,EAAQhmE,MACRmmE,GAA0Bn3D,EAAMg3D,EAAQS,UAAUluE,MAAO8W,EAAQ9F,EAAYoiC,EAAan5C,OAEzF,CACD,IAAIk0E,EAAKpC,GAAWt1D,EAAMg3D,GAe1B,GAde,IAAX32D,GAAmD,SAAhB22D,EAAQhmE,OACnB,GAAvBgmE,EAAQW,cAEkB,GAAvBX,EAAQW,cACRH,GAAqBx3D,EAAM03D,EAAIr3D,EAAQ9F,EAAYoiC,EAAan5C,GAEzC,GAAvBwzE,EAAQW,cAERH,GADelF,GAActyD,EAAMg3D,EAAQp+D,WAAWoI,cACvB02D,EAAIr3D,EAAQ9F,EAAYoiC,EAAan5C,IAIxEg0E,GAAqBx3D,EAAM03D,EAAIr3D,EAAQ9F,EAAYoiC,EAAan5C,GAEhD,SAAhBwzE,EAAQhmE,MAER,IADA,IAAI4mE,EAAgBtF,GAActyD,EAAMg3D,EAAQp+D,WAAWi/D,cAAcC,eAChEnkB,EAAI,EAAGA,EAAIikB,EAAcz0E,OAAQwwD,IACtCijB,GAAqBgB,EAAcjkB,GAAItzC,EAAQ9F,EAAYoiC,EAAan5C,GAG5D,EAAhBwzE,EAAQhmE,QAAgCgmE,EAAQlwD,QAAQ/e,MACxD+uE,GAAwB92D,EAAMK,EAAQ22D,EAAQp+D,UAAY,EAAGo+D,EAAQp+D,UAAYo+D,EAAQE,WAAY38D,EAAYoiC,EAAan5C,IAI1I,SAASg0E,GAAqBx3D,EAAMs1D,EAAYj1D,EAAQ9F,EAAYoiC,EAAan5C,GAC7E,IAAI8Z,EAAW0C,EAAK1C,SACpB,OAAQ+C,GACJ,KAAK,EACD/C,EAAS6G,YAAY5J,EAAY+6D,GACjC,MACJ,KAAK,EACDh4D,EAAS8D,aAAa7G,EAAY+6D,EAAY34B,GAC9C,MACJ,KAAK,EACDr/B,EAAS+D,YAAY9G,EAAY+6D,GACjC,MACJ,KAAK,EACD9xE,EAAO2B,KAAKmwE,IAIxB,IAAIyC,GAAe,kBACnB,SAASC,GAAejwE,GACpB,GAAgB,MAAZA,EAAK,GAAY,CACjB,IAAIi1C,EAAQj1C,EAAKi1C,MAAM+6B,IACvB,OAAQ/6B,EAAM,GAAIA,EAAM,IAE5B,OAAQ,GAAIj1C,GAEhB,SAASkwE,GAAiBnqD,GAEtB,IADA,IAAI9c,EAAQ,EACHhO,EAAI,EAAGA,EAAI8qB,EAAS3qB,OAAQH,IACjCgO,GAAS8c,EAAS9qB,GAAGgO,MAEzB,OAAOA,EA2CX,SAASknE,GAAkBvmE,GACvB,OAAY,MAALA,EAAYA,EAAEjK,WAAa,GAwItC,SAASipB,GAAc3Q,EAAMs2D,EAAY7iE,GACrC,IAGI4oC,EAHA87B,EAAQ1kE,EAAIqT,QACZ0jB,EAAqBxqB,EAAKk1D,KAAKkD,eAC/B96D,EAAW0C,EAAK1C,SAEpB,GAAI0C,EAAKtR,SAAW87B,EAAoB,CAEhC6R,EADA87B,EAAMpwE,KACDuV,EAASqT,cAAcwnD,EAAMpwE,KAAMowE,EAAME,IAGzC/6D,EAASoe,cAAc,IAEhC,IAAInX,EAAW8xD,GAAuBr2D,EAAMs2D,EAAY7iE,GACpD8Q,GACAjH,EAAS6G,YAAYI,EAAU83B,QAOnCA,EAAK/+B,EAASiW,kBAAkBiX,IAFP2tC,EAAM5B,uBAC3B4B,EAAM5B,sBAAsBljE,gBAAkBlS,EAAQ4J,kBAAkButE,WAGhF,GAAIH,EAAMxyD,MACN,IAAK,IAAI3iB,EAAI,EAAGA,EAAIm1E,EAAMxyD,MAAMxiB,OAAQH,IAAK,CACzC,IAAIuF,EAAKvD,EAAOmzE,EAAMxyD,MAAM3iB,GAAI,GAChCsa,EAAS4V,aAAampB,EADmC9zC,EAAG,GAAYA,EAAG,GAAlCA,EAAG,IAIpD,OAAO8zC,EAEX,SAASk8B,GAAuBv4D,EAAMq3D,EAAU5jE,EAAK4oC,GACjD,IAAK,IAAIr5C,EAAI,EAAGA,EAAIyQ,EAAIY,QAAQlR,OAAQH,IAAK,CACzC,IAAIw1E,EAAS/kE,EAAIY,QAAQrR,GACrBy1E,EAAqBC,GAA0B14D,EAAMvM,EAAImF,UAAW68D,GAAqB+C,EAAOh1E,OAAQg1E,EAAO5kD,YAC/G+kD,EAAeH,EAAOh1E,OACtBo1E,EAAe54D,EACG,cAAlBw4D,EAAOh1E,SACPm1E,EAAe,KACfC,EAAevB,GAEnB,IAAIwB,EAAaD,EAAat7D,SAAS0W,OAAO2kD,GAAgBt8B,EAAIm8B,EAAO5kD,UAAW6kD,GACpFz4D,EAAK84D,YAAYrlE,EAAIslE,YAAc/1E,GAAK61E,GAGhD,SAASH,GAA0B14D,EAAMzW,EAAOqqB,GAC5C,OAAO,SAAUqhD,GAAS,OAAOD,GAAch1D,EAAMzW,EAAOqqB,EAAWqhD,IAmC3E,SAAS+D,GAA2Bh5D,EAAMvM,EAAK6gE,EAAYxvE,GACvD,IAAK0vE,GAAsBx0D,EAAMvM,EAAK6gE,EAAYxvE,GAC9C,OAAO,EAEX,IAAIm0E,EAAUxlE,EAAIqa,SAASwmD,GACvB4E,EAAS5G,GAActyD,EAAMvM,EAAImF,WACjCugE,EAAgBD,EAAO3D,cACvBxtE,EAAOkxE,EAAQlxE,KACnB,OAAwB,GAAhBkxE,EAAQjoE,OACZ,KAAK,GAmBb,SAASooE,EAAoBp5D,EAAMi5D,EAASE,EAAed,EAAItwE,EAAMjD,GACjE,IAAIu0E,EAAkBJ,EAAQI,gBAC1BC,EAAcD,EAAkBr5D,EAAKk1D,KAAKnuD,UAAUo6B,SAASk4B,EAAiBv0E,GAASA,EAC3Fw0E,EAA6B,MAAfA,EAAsBA,EAAY5xE,WAAa,KAC7D,IAAI4V,EAAW0C,EAAK1C,SACP,MAATxY,EACAwY,EAAS4V,aAAaimD,EAAepxE,EAAMuxE,EAAajB,GAGxD/6D,EAAS8X,gBAAgB+jD,EAAepxE,EAAMswE,GA3B1Ce,CAAoBp5D,EAAMi5D,EAASE,EAAeF,EAAQZ,GAAItwE,EAAMjD,GACpE,MACJ,KAAK,GA4Bb,SAASy0E,EAAgBv5D,EAAMm5D,EAAepxE,EAAMjD,GAChD,IAAIwY,EAAW0C,EAAK1C,SAChBxY,EACAwY,EAASyL,SAASowD,EAAepxE,GAGjCuV,EAAS0L,YAAYmwD,EAAepxE,GAjChCwxE,CAAgBv5D,EAAMm5D,EAAepxE,EAAMjD,GAC3C,MACJ,KAAK,GAkCb,SAAS00E,EAAgBx5D,EAAMi5D,EAASE,EAAepxE,EAAMjD,GACzD,IAAIw0E,EAAct5D,EAAKk1D,KAAKnuD,UAAUo6B,SAAShgD,EAAQ28C,gBAAgByD,MAAOz8C,GAC9E,GAAmB,MAAfw0E,EAAqB,CACrBA,EAAcA,EAAY5xE,WAC1B,IAAI+xE,EAAOR,EAAQ//C,OACP,MAARugD,IACAH,GAA4BG,QAIhCH,EAAc,KAElB,IAAIh8D,EAAW0C,EAAK1C,SACD,MAAfg8D,EACAh8D,EAAS+K,SAAS8wD,EAAepxE,EAAMuxE,GAGvCh8D,EAASoL,YAAYywD,EAAepxE,GAlDhCyxE,CAAgBx5D,EAAMi5D,EAASE,EAAepxE,EAAMjD,GACpD,MACJ,KAAK,GAmDb,SAAS40E,EAAmB15D,EAAMi5D,EAASE,EAAepxE,EAAMjD,GAC5D,IAAIu0E,EAAkBJ,EAAQI,gBAC1BC,EAAcD,EAAkBr5D,EAAKk1D,KAAKnuD,UAAUo6B,SAASk4B,EAAiBv0E,GAASA,EAC3Fkb,EAAK1C,SAASmL,YAAY0wD,EAAepxE,EAAMuxE;;;;;;;OAjDvCI,CAJ4B,SAAZjmE,EAAIzC,OACA,GAAhBioE,EAAQjoE,MACRkoE,EAAOl4D,cACPhB,EACyBi5D,EAASE,EAAepxE,EAAMjD,GAGnE,OAAO,EAwDX,IAAI60E,GAAkB,IAAI13E,OACtB23E,GAAsBzF,GAAS1lE,IAC/BorE,GAAsB1F,GAAS9lE,IAC/ByrE,GAAsB3F,GAAS1pC,IAkDnC,SAASsvC,GAAmBxvE,EAAMyvE,EAAQxrE,QAChB,IAAlBA,IAA4BA,EAAgBC,GAASL,oBACzD,IAAIkE,EAASF,GAAmB7H,GAChC,IACI,GAAmB,EAAfyvE,EAAOhpE,MACP,OAAOgpE,EAAO/sE,MAKlB,GAHmB,EAAf+sE,EAAOhpE,QACPxC,EAAgB,MAED,EAAfwrE,EAAOhpE,MACP,OAAOzG,EAAKu/B,QAAQv7B,IAAIyrE,EAAO/sE,MAAOuB,GAE1C,IAAIyrE,EAAaD,EAAO7F,SACxB,OAAQ8F,GACJ,KAAKL,GACL,KAAKC,GACL,KAAKC,GACD,OAAOvvE,EAEf,IACIgI,EADA2nE,EAAc3vE,EAAK4vE,KAAKC,eAAeH,GAE3C,GAAIC,EAAa,CACb,IAAIG,EAAmB9vE,EAAK6sD,WAAW8iB,EAAY3wE,OAKnD,YAJyBxC,IAArBszE,IACAA,EAAmB9vE,EAAK6sD,WAAW8iB,EAAY3wE,OAC3C+wE,GAAwB/vE,EAAM2vE,IAE/BG,IAAqBV,QAAkB5yE,EAAYszE,EAEzD,IAAK9nE,EAAgBnL,EAAiB4yE,EAAO/sE,SAwB1D,SAASstE,EAAcnwC,EAAU32B,GAC7B,OAAyB,MAAlBA,EAAI3M,aAJf,SAAS0zE,EAA0BpwC,EAAUsyB,GACzC,OAAOtyB,EAAS+vC,KAAKM,QAAQltE,QAAQmvD,IAAU,EAGb8d,CAA0BpwC,EAAU32B,EAAI3M,aACnD,SAAnB2M,EAAI3M,YAAyBsjC,EAAS+vC,KAAKO,QA1BkBH,CAAchwE,EAAMgI,GAAgB,CAC7F,IAAIhJ,EAAQgB,EAAK6sD,WAAWj0D,OAQ5B,OAPAoH,EAAK4vE,KAAKC,eAAeJ,EAAO7F,WAC5BnjE,MAAO,KACPlM,MAAOyN,EAAcrR,QACrB4O,QAAUvG,MAAOA,EACjB0D,MAAO+sE,EAAO/sE,OAElB1C,EAAK6sD,WAAW7tD,GAASowE,GACjBpvE,EAAK6sD,WAAW7tD,GACpB+wE,GAAwB/vE,EAAMA,EAAK4vE,KAAKC,eAAeJ,EAAO7F,WAEjE,OAAmB,EAAf6F,EAAOhpE,MACLxC,EAEJjE,EAAKu/B,QAAQv7B,IAAIyrE,EAAO/sE,MAAOuB,GAE1C,QACI4D,GAAmBE,IAU3B,SAASgoE,GAAwBlwC,EAAU8vC,GACvC,IAAIS,EACJ,OAA4B,UAApBT,EAAYlpE,OAChB,KAAK,IACD2pE,EAsBZ,SAASC,EAAaxwC,EAAUrhC,EAAM+G,GAClC,IAAIwnD,EAAMxnD,EAAK3M,OACf,OAAQm0D,GACJ,KAAK,EACD,OAAO,IAAIvuD,EACf,KAAK,EACD,OAAO,IAAIA,EAAKgxE,GAAmB3vC,EAAUt6B,EAAK,KACtD,KAAK,EACD,OAAO,IAAI/G,EAAKgxE,GAAmB3vC,EAAUt6B,EAAK,IAAKiqE,GAAmB3vC,EAAUt6B,EAAK,KAC7F,KAAK,EACD,OAAO,IAAI/G,EAAKgxE,GAAmB3vC,EAAUt6B,EAAK,IAAKiqE,GAAmB3vC,EAAUt6B,EAAK,IAAKiqE,GAAmB3vC,EAAUt6B,EAAK,KACpI,QAEI,IADA,IAAI+qE,EAAY,IAAIz4E,MAAMk1D,GACjBt0D,EAAI,EAAGA,EAAIs0D,EAAKt0D,IACrB63E,EAAU73E,GAAK+2E,GAAmB3vC,EAAUt6B,EAAK9M,IAErD,OAAO,IAAK+F,EAAKJ,KAAKtF,MAAM0F,EAAM1D,QAAU,GAASw1E,MAtCxCD,CAAaxwC,EAAU8vC,EAAYp1E,MAAOo1E,EAAYpqE,MACnE,MACJ,KAAK,KACD6qE,EAsCZ,SAASG,EAAa1wC,EAAUlpC,EAAS4O,GACrC,IAAIwnD,EAAMxnD,EAAK3M,OACf,OAAQm0D,GACJ,KAAK,EACD,OAAOp2D,IACX,KAAK,EACD,OAAOA,EAAQ64E,GAAmB3vC,EAAUt6B,EAAK,KACrD,KAAK,EACD,OAAO5O,EAAQ64E,GAAmB3vC,EAAUt6B,EAAK,IAAKiqE,GAAmB3vC,EAAUt6B,EAAK,KAC5F,KAAK,EACD,OAAO5O,EAAQ64E,GAAmB3vC,EAAUt6B,EAAK,IAAKiqE,GAAmB3vC,EAAUt6B,EAAK,IAAKiqE,GAAmB3vC,EAAUt6B,EAAK,KACnI,QAEI,IADA,IAAI+qE,EAAYz4E,MAAMk1D,GACbt0D,EAAI,EAAGA,EAAIs0D,EAAKt0D,IACrB63E,EAAU73E,GAAK+2E,GAAmB3vC,EAAUt6B,EAAK9M,IAErD,OAAO9B,EAAQmC,WAAM,EAAQgC,EAASw1E,KAtDzBC,CAAa1wC,EAAU8vC,EAAYp1E,MAAOo1E,EAAYpqE,MACnE,MACJ,KAAK,KACD6qE,EAAaZ,GAAmB3vC,EAAU8vC,EAAYpqE,KAAK,IAC3D,MACJ,KAAK,IACD6qE,EAAaT,EAAYp1E,MAWjC,OAJI61E,IAAehB,IAAiC,MAAdgB,GAA4C,iBAAfA,GACzC,OAApBT,EAAYlpE,OAAqE,mBAA3B2pE,EAAWvlE,cACnE8kE,EAAYlpE,OAAS,aAEHjK,IAAf4zE,EAA2BhB,GAAkBgB,EAgHxD,SAASI,GAAmBC,EAAavoD,GACrC,IAAImlD,EAAgBoD,EAAYnD,cAAcC,eAI9C,IAHiB,MAAbrlD,GAAqBA,GAAamlD,EAAcz0E,UAChDsvB,EAAYmlD,EAAcz0E,OAAS,GAEnCsvB,EAAY,EACZ,OAAO,KAEX,IAAIzS,EAAO43D,EAAcnlD,GAMzB,OALAzS,EAAK60D,oBAAsB,KAC3BoG,GAAgBrD,EAAenlD,GAE/BigD,GAASgB,mBAAmB1zD,GAC5Bk7D,GAAiBl7D,GACVA,EA+BX,SAASm7D,GAAyBH,EAAaI,EAAUp7D,GACrD,IAAIq7D,EAAiBD,EAAW9F,GAAW8F,EAAUA,EAAS3nE,IAAIojE,oBAC9DmE,EAAYzF,cAKhBqB,GAAqB52D,EAAM,EAJVA,EAAK1C,SAAS/C,WAAW8gE,GACxBr7D,EAAK1C,SAASq/B,YAAY0+B,QAG8Bt0E,GAE9E,SAASm0E,GAAiBl7D,GACtB42D,GAAqB52D,EAAM,EAAqB,KAAM,UAAMjZ,GAEhE,SAASu0E,GAAWz+D,EAAKtT,EAAOzE,GAExByE,GAASsT,EAAI1Z,OACb0Z,EAAI1X,KAAKL,GAGT+X,EAAIoF,OAAO1Y,EAAO,EAAGzE,GAG7B,SAASm2E,GAAgBp+D,EAAKtT,GAEtBA,GAASsT,EAAI1Z,OAAS,EACtB0Z,EAAIkkD,MAGJlkD,EAAIoF,OAAO1Y,EAAO;;;;;;;OAW1B,IAAIgyE,GAAgB,IAAIt5E,OAMxB,SAASu5E,GAAkC/sC,GACvC,OAAOA,EAAiBgtC,eAE5B,IAAIC,GAAmC,SAAUvxC,GAE7C,SAASuxC,EAAkBpxE,EAAU2/B,EAAewxC,EAAgBE,EAASC,EAAUtxC,GACnF,IAAID,EAGJF,EAAO/mC,KAAKvB,OAASA,KAOrB,OANAwoC,EAAM//B,SAAWA,EACjB+/B,EAAMJ,cAAgBA,EACtBI,EAAMsxC,QAAUA,EAChBtxC,EAAMuxC,SAAWA,EACjBvxC,EAAMC,mBAAqBA,EAC3BD,EAAMoxC,eAAiBA,EAChBpxC,EA2CX,OAvDA9nC,EAAUm5E,EAAmBvxC,GAc7BloC,OAAO+B,eAAe03E,EAAkBh5E,UAAW,UAC/C6L,IAAK,WACD,IAAIstE,KACA1nE,EAAStS,KAAK85E,QAClB,IAAK,IAAI1yE,KAAYkL,EAEjB0nE,EAAU12E,MAAO8D,SAAUA,EAAU4mC,aADlB17B,EAAOlL,KAG9B,OAAO4yE,GAEX1wC,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAe03E,EAAkBh5E,UAAW,WAC/C6L,IAAK,WACD,IAAIutE,KACJ,IAAK,IAAI7yE,KAAYpH,KAAK+5E,SAEtBE,EAAW32E,MAAO8D,SAAUA,EAAU4mC,aADnBhuC,KAAK+5E,SAAS3yE,KAGrC,OAAO6yE,GAEX3wC,YAAY,EACZpG,cAAc,IAKlB22C,EAAkBh5E,UAAUC,OAAS,SAAU0P,EAAUk4B,EAAkBC,EAAoBJ,GAC3F,IAAKA,EACD,MAAM,IAAI3kC,MAAM,+BAEpB,IAAIs2E,EAAUpF,GAAkB90E,KAAK45E,gBACjCO,EAAqBD,EAAQ1J,MAAM,GAAGvrD,QAAQm1D,kBAAkBrjE,UAChEoH,EAAO0yD,GAASE,eAAevgE,EAAUk4B,MAAwBC,EAAoBuxC,EAAS3xC,EAAUmxC,IACxGpwE,EAAYonE,GAAevyD,EAAMg8D,GAAoBljE,SAIzD,OAHI0xB,GACAxqB,EAAK1C,SAAS4V,aAAao/C,GAActyD,EAAM,GAAGu1D,cAAe,aAAcnjB,GAAQC,MAEpF,IAAI6pB,GAAcl8D,EAAM,IAAIm8D,GAASn8D,GAAO7U,IAEhDuwE,EAxD2B,CAyDpCvyC,IACE+yC,GAA+B,SAAU/xC,GAEzC,SAAS+xC,EAActxC,EAAOwxC,EAAUC,GACpC,IAAIhyC,EAAQF,EAAO/mC,KAAKvB,OAASA,KAQjC,OAPAwoC,EAAMO,MAAQA,EACdP,EAAM+xC,SAAWA,EACjB/xC,EAAMgyC,WAAaA,EACnBhyC,EAAMiyC,OAASjyC,EAAMO,MAAMn3B,IAAI4+D,MAAM,GACrChoC,EAAMjrB,SAAWg9D,EACjB/xC,EAAM2G,kBAAoBorC,EAC1B/xC,EAAMvxB,SAAWujE,EACVhyC,EAqBX,OA/BA9nC,EAAU25E,EAAe/xC,GAYzBloC,OAAO+B,eAAek4E,EAAcx5E,UAAW,YAC3C6L,IAAK,WACD,OAAO,IAAI8gC,GAAWijC,GAAczwE,KAAK+oC,MAAO/oC,KAAKy6E,OAAO1jE,WAAW28D,gBAE3EpqC,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAek4E,EAAcx5E,UAAW,YAC3C6L,IAAK,WAAc,OAAO,IAAIguE,GAAU16E,KAAK+oC,MAAO/oC,KAAKy6E,SACzDnxC,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAek4E,EAAcx5E,UAAW,iBAC3C6L,IAAK,WAAc,OAAO1M,KAAKw6E,WAAW55E,aAC1C0oC,YAAY,EACZpG,cAAc,IAElBm3C,EAAcx5E,UAAUghB,QAAU,WAAc7hB,KAAKu6E,SAAS14D,WAC9Dw4D,EAAcx5E,UAAUyS,UAAY,SAAUk2B,GAAYxpC,KAAKu6E,SAASjnE,UAAUk2B,IAC3E6wC,EAhCuB,CAiChChzC,IACF,SAASszC,GAAwBx8D,EAAMm4D,EAAOe,GAC1C,OAAO,IAAInrC,GAAkB/tB,EAAMm4D,EAAOe,GAE9C,IAAInrC,GAAmC,WACnC,SAASA,EAAkBnD,EAAO0xC,EAAQG,GACtC56E,KAAK+oC,MAAQA,EACb/oC,KAAKy6E,OAASA,EACdz6E,KAAK46E,MAAQA,EAIb56E,KAAKi2E,kBA4FT,OA1FA71E,OAAO+B,eAAe+pC,EAAkBrrC,UAAW,WAC/C6L,IAAK,WAAc,OAAO,IAAI8gC,GAAWxtC,KAAK46E,MAAMlH,gBACpDpqC,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAe+pC,EAAkBrrC,UAAW,YAC/C6L,IAAK,WAAc,OAAO,IAAIguE,GAAU16E,KAAK+oC,MAAO/oC,KAAKy6E,SACzDnxC,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAe+pC,EAAkBrrC,UAAW,kBAE/C6L,IAAK,WAGD,IAFA,IAAIyR,EAAOne,KAAK+oC,MACZutC,EAAQt2E,KAAKy6E,OAAO5tE,QAChBypE,GAASn4D,GACbm4D,EAAQ9C,GAAar1D,GACrBA,EAAOA,EAAKtR,OAEhB,OAAOsR,EAAO,IAAIu8D,GAAUv8D,EAAMm4D,GAAS,IAAIoE,GAAU16E,KAAK+oC,MAAO,OAEzEO,YAAY,EACZpG,cAAc,IAElBgJ,EAAkBrrC,UAAU0rC,MAAQ,WAEhC,IADA,IACSprC,EADCnB,KAAKi2E,eAAe30E,OACX,EAAGH,GAAK,EAAGA,IAAK,CAC/B,IAAIgd,EAAO+6D,GAAmBl5E,KAAK46E,MAAOz5E,GAC1C0vE,GAASU,YAAYpzD,KAG7B+tB,EAAkBrrC,UAAU6L,IAAM,SAAUhF,GACxC,IAAIyW,EAAOne,KAAKi2E,eAAevuE,GAC/B,GAAIyW,EAAM,CACN,IAAI08D,EAAM,IAAIP,GAASn8D,GAEvB,OADA08D,EAAIjxC,yBAAyB5pC,MACtB66E,EAEX,OAAO,MAEXz6E,OAAO+B,eAAe+pC,EAAkBrrC,UAAW,UAC/C6L,IAAK,WAAc,OAAO1M,KAAKi2E,eAAe30E,QAC9CgoC,YAAY,EACZpG,cAAc,IAElBgJ,EAAkBrrC,UAAUiqC,mBAAqB,SAAU0B,EAAat8B,EAASxI,GAC7E,IAAIyjC,EAAUqB,EAAY1B,mBAAmB56B,OAE7C,OADAlQ,KAAKitC,OAAO9B,EAASzjC,GACdyjC,GAEXe,EAAkBrrC,UAAU8rC,gBAAkB,SAAUC,EAAkBllC,EAAO8I,EAAUk4B,EAAkBmE,GACzG,IAAIC,EAAkBt8B,GAAYxQ,KAAK+sC,eAClCF,GAAiBD,aAA4BvE,KAC9CwE,EAAcC,EAAgBpgC,IAAIk8B,KAEtC,IAAIoE,EAAeJ,EAAiB9rC,OAAOgsC,EAAiBpE,OAAkBxjC,EAAW2nC,GAEzF,OADA7sC,KAAKitC,OAAOD,EAAazvB,SAAU7V,GAC5BslC,GAEXd,EAAkBrrC,UAAUosC,OAAS,SAAU9B,EAASzjC,GACpD,GAAIyjC,EAAQ+B,UACR,MAAM,IAAItpC,MAAM,sDAEpB,IAAIk3E,EAAW3vC;;;;;;;;AAIf,OAvTR,SAAS4vC,EAAmB96D,EAAYk5D,EAAavoD,EAAWzS,GAC5D,IAAI43D,EAAgBoD,EAAYnD,cAAcC,eAC5B,OAAdrlD,QAAoC1rB,IAAd0rB,IACtBA,EAAYmlD,EAAcz0E,QAE9B6c,EAAK60D,oBAAsB/yD,EAC3Bw5D,GAAW1D,EAAenlD,EAAWzS,GAMzC,SAAS68D,EAAoBC,EAAe98D,GACxC,IAAI+8D,EAAiB5H,GAAsBn1D,GAC3C,GAAK+8D,GAAkBA,IAAmBD,KACzB,GAAb98D,EAAKkD,OADT,CAWAlD,EAAKkD,OAAS,GACd,IAAI85D,EAAiBD,EAAejpE,SAASmpE,gBACxCD,IACDA,EAAiBD,EAAejpE,SAASmpE,oBAE7CD,EAAe73E,KAAK6a,GAKxB,SAASk9D,EAA4BnB,EAAS/E,GAC1C,KAAoB,EAAhBA,EAAQhmE,OAAZ,CAGA+qE,EAAQvzC,WAAa,EACrBwuC,EAAQhmE,OAAS,EAEjB,IADA,IAAIokE,EAAgB4B,EAAQtoE,OACrB0mE,GACHA,EAAc+H,YAAc,EAC5B/H,EAAgBA,EAAc1mE,QAXlCwuE,CAA4Bl9D,EAAKtR,OAAO+E,IAAKuM,EAAKo1D,gBA1BlDyH,CAAoB7B,EAAah7D,GACjC0yD,GAASgB,mBAAmB1zD,GAE5Bm7D,GAAyBH,EADVvoD,EAAY,EAAImlD,EAAcnlD,EAAY,GAAK,KACdzS,GA2S5C48D,CAAmB/6E,KAAK+oC,MAAO/oC,KAAK46E,MAAOlzE,EAD5BozE,EAAS/xC,OAExB+xC,EAASlxC,yBAAyB5pC,MAC3BmrC,GAEXe,EAAkBrrC,UAAUusC,KAAO,SAAUjC,EAAS6+B,GAClD,GAAI7+B,EAAQ+B,UACR,MAAM,IAAItpC,MAAM,oDAEpB,IAAIwmE,EAAgBpqE,KAAKi2E,eAAevqE,QAAQy/B,EAAQpC,OAExD,OAnPR,SAASwyC,EAAiBpC,EAAaqC,EAAcC,GACjD,IAAI1F,EAAgBoD,EAAYnD,cAAcC,eAC1C93D,EAAO43D,EAAcyF,GACzBpC,GAAgBrD,EAAeyF,GACX,MAAhBC,IACAA,EAAe1F,EAAcz0E,QAEjCm4E,GAAW1D,EAAe0F,EAAct9D,GAGxC0yD,GAASgB,mBAAmB1zD,GAC5Bk7D,GAAiBl7D,GAEjBm7D,GAAyBH,EADVsC,EAAe,EAAI1F,EAAc0F,EAAe,GAAK,KACpBt9D,GAqO5Co9D,CAAiBv7E,KAAK46E,MAAOxQ,EAAeJ,GACrC7+B,GAEXe,EAAkBrrC,UAAU6K,QAAU,SAAUy/B,GAC5C,OAAOnrC,KAAKi2E,eAAevqE,QAAQy/B,EAAQpC,QAE/CmD,EAAkBrrC,UAAUumB,OAAS,SAAU1f,GAC3C,IAAImZ,EAAWq4D,GAAmBl5E,KAAK46E,MAAOlzE,GAC1CmZ,GACAgwD,GAASU,YAAY1wD,IAG7BqrB,EAAkBrrC,UAAU0oC,OAAS,SAAU7hC,GAC3C,IAAIyW,EAAO+6D,GAAmBl5E,KAAK46E,MAAOlzE,GAC1C,OAAOyW,EAAO,IAAIm8D,GAASn8D,GAAQ,MAEhC+tB,EApG2B,GAsGtC,SAASwvC,GAAwBv9D,GAC7B,OAAO,IAAIm8D,GAASn8D,GAExB,IAAIm8D,GAA0B,WAC1B,SAASA,EAASvxC,GACd/oC,KAAK+oC,MAAQA,EACb/oC,KAAKmpC,kBAAoB,KACzBnpC,KAAKkpC,QAAU,KAmEnB,OAjEA9oC,OAAO+B,eAAem4E,EAASz5E,UAAW,aACtC6L,IAAK,WAAc,OAv+B3B,SAASivE,EAAgBx9D,GACrB,IAAIy9D,KAEJ,OADA7G,GAAqB52D,EAAM,OAAiBjZ,OAAWA,EAAW02E,GAC3DA,EAo+BuBD,CAAgB37E,KAAK+oC,QAC/CO,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAem4E,EAASz5E,UAAW,WACtC6L,IAAK,WAAc,OAAO1M,KAAK+oC,MAAM74B,SACrCo5B,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAem4E,EAASz5E,UAAW,aACtC6L,IAAK,WAAc,OAAoD,IAAzB,IAAnB1M,KAAK+oC,MAAM1nB,QACtCioB,YAAY,EACZpG,cAAc,IAElBo3C,EAASz5E,UAAU4oC,aAAe,WAAcqpC,GAAwB9yE,KAAK+oC,QAC7EuxC,EAASz5E,UAAU0oC,OAAS,WAAcvpC,KAAK+oC,MAAM1nB,QAAS,GAC9Di5D,EAASz5E,UAAU67B,cAAgB,WAC/B,IAAIm/C,EAAK77E,KAAK+oC,MAAMsqC,KAAK5pD,gBACrBoyD,EAAG3tD,OACH2tD,EAAG3tD,QAEP,IACI2iD,GAASQ,mBAAmBrxE,KAAK+oC,OAErC,QACQ8yC,EAAG7hE,KACH6hE,EAAG7hE,QAIfsgE,EAASz5E,UAAU8oC,eAAiB,WAAcknC,GAASS,mBAAmBtxE,KAAK+oC,QACnFuxC,EAASz5E,UAAU6oC,SAAW,WAAc1pC,KAAK+oC,MAAM1nB,OAAS,GAChEi5D,EAASz5E,UAAUyS,UAAY,SAAUk2B,GAChCxpC,KAAK+oC,MAAMkuC,cACZj3E,KAAK+oC,MAAMkuC,gBAEfj3E,KAAK+oC,MAAMkuC,YAAY3zE,KAAKkmC,IAEhC8wC,EAASz5E,UAAUghB,QAAU,WACrB7hB,KAAKkpC,QACLlpC,KAAKkpC,QAAQ7oB,WAAWrgB,MAEnBA,KAAKmpC,mBACVnpC,KAAKmpC,kBAAkBI,OAAOvpC,KAAKmpC,kBAAkBz9B,QAAQ1L,OAEjE6wE,GAASU,YAAYvxE,KAAK+oC,QAE9BuxC,EAASz5E,UAAUipC,iBAAmB,WAClC9pC,KAAKkpC,QAAU,KACfmwC,GAAiBr5E,KAAK+oC,OACtB8nC,GAASgB,mBAAmB7xE,KAAK+oC,QAErCuxC,EAASz5E,UAAUkpC,eAAiB,SAAUC,GAC1C,GAAIhqC,KAAKmpC,kBACL,MAAM,IAAIvlC,MAAM,qDAEpB5D,KAAKkpC,QAAUc,GAEnBswC,EAASz5E,UAAU+oC,yBAA2B,SAAUC,GACpD,GAAI7pC,KAAKkpC,QACL,MAAM,IAAItlC,MAAM,iEAEpB5D,KAAKmpC,kBAAoBU,GAEtBywC,EAvEkB,GAyE7B,SAASwB,GAAmB39D,EAAMvM,GAC9B,OAAO,IAAI44B,GAAarsB,EAAMvM,GAElC,IAAI44B,GAA8B,SAAUlC,GAExC,SAASkC,EAAauxC,EAAazD,GAC/B,IAAI9vC,EAAQF,EAAO/mC,KAAKvB,OAASA,KAGjC,OAFAwoC,EAAMuzC,YAAcA,EACpBvzC,EAAM8vC,KAAOA,EACN9vC,EAYX,OAjBA9nC,EAAU8pC,EAAclC,GAOxBkC,EAAa3pC,UAAUiqC,mBAAqB,SAAU56B,GAClD,OAAO,IAAIoqE,GAASzJ,GAAS/lC,mBAAmB9qC,KAAK+7E,YAAa/7E,KAAKs4E,KAAMt4E,KAAKs4E,KAAKrzD,QAAQhT,SAAU/B,KAE7G9P,OAAO+B,eAAeqoC,EAAa3pC,UAAW,cAC1C6L,IAAK,WACD,OAAO,IAAI8gC,GAAWijC,GAAczwE,KAAK+7E,YAAa/7E,KAAKs4E,KAAKvhE,WAAW28D,gBAE/EpqC,YAAY,EACZpG,cAAc,IAEXsH,EAlBsB,CAmB/B0K,IACF,SAAS8mC,GAAiB79D,EAAMm4D,GAC5B,OAAO,IAAIoE,GAAUv8D,EAAMm4D,GAE/B,IAAIoE,GAA2B,WAC3B,SAASA,EAAUv8D,EAAMm4D,GACrBt2E,KAAKme,KAAOA,EACZne,KAAKs2E,MAAQA,EAOjB,OALAoE,EAAU75E,UAAU6L,IAAM,SAAUtB,EAAOuB,GAGvC,YAFsB,IAAlBA,IAA4BA,EAAgBC,GAASL,oBAElDskE,GAASW,WAAWxxE,KAAKme,KAAMne,KAAKs2E,QADhBt2E,KAAKs2E,OAA8D,IAAlC,SAAnBt2E,KAAKs2E,MAAMnnE,QACsBA,MAAO,EAAc/D,MAAOA,EAAOknE,SAAUA,GAASlnE,IAAUuB,IAEvI+tE,EAVmB,GA0B9B,SAASuB,GAAiB99D,GACtB,OAAO,IAAI+9D,GAAgB/9D,EAAK1C,UAEpC,IAAIygE,GAAiC,WACjC,SAASA,EAAgB1f,GACrBx8D,KAAKw8D,SAAWA,EA4FpB,OA1FA0f,EAAgBr7E,UAAU6wB,kBAAoB,SAAU6kD,GACpD,OAAOv2E,KAAKw8D,SAAS9qC,kBAAkB6kD,IAE3C2F,EAAgBr7E,UAAUiuB,cAAgB,SAAUjiB,EAAQsvE,GACxD,IAAIz1E,EAAKvD,EAAOgzE,GAAegG,GAAmB,GAC9C3hC,EAAKx6C,KAAKw8D,SAAS1tC,cADkDpoB,EAAG,GAAjBA,EAAG,IAK9D,OAHImG,GACA7M,KAAKw8D,SAASl6C,YAAYzV,EAAQ2tC,GAE/BA,GAEX0hC,EAAgBr7E,UAAUu7E,eAAiB,SAAUxgE,GAAe,OAAOA,GAC3EsgE,EAAgBr7E,UAAUw7E,qBAAuB,SAAUC,GACvD,IAAI1iD,EAAU55B,KAAKw8D,SAAS3iC,cAAc,IAI1C,OAHIyiD,GACAt8E,KAAKw8D,SAASl6C,YAAYg6D,EAAe1iD,GAEtCA,GAEXsiD,EAAgBr7E,UAAU8e,WAAa,SAAU28D,EAAer5E,GAC5D,IAAI2b,EAAO5e,KAAKw8D,SAAS78C,WAAW1c,GAIpC,OAHIq5E,GACAt8E,KAAKw8D,SAASl6C,YAAYg6D,EAAe19D,GAEtCA,GAEXs9D,EAAgBr7E,UAAU07E,aAAe,SAAUD,EAAe9L,GAC9D,IAAK,IAAIrvE,EAAI,EAAGA,EAAIqvE,EAAMlvE,OAAQH,IAC9BnB,KAAKw8D,SAASl6C,YAAYg6D,EAAe9L,EAAMrvE,KAGvD+6E,EAAgBr7E,UAAU27E,gBAAkB,SAAU59D,EAAM69D,GAGxD,IAFA,IAAIH,EAAgBt8E,KAAKw8D,SAAS9jD,WAAWkG,GACzCk8B,EAAc96C,KAAKw8D,SAAS1hB,YAAYl8B,GACnCzd,EAAI,EAAGA,EAAIs7E,EAAcn7E,OAAQH,IACtCnB,KAAKw8D,SAASj9C,aAAa+8D,EAAeG,EAAct7E,GAAI25C,IAGpEohC,EAAgBr7E,UAAUwf,WAAa,SAAUo8D,GAC7C,IAAK,IAAIt7E,EAAI,EAAGA,EAAIs7E,EAAcn7E,OAAQH,IAAK,CAC3C,IAAIyd,EAAO69D,EAAct7E,GACrBm7E,EAAgBt8E,KAAKw8D,SAAS9jD,WAAWkG,GAC7C5e,KAAKw8D,SAASh9C,YAAY88D,EAAe19D,KAGjDs9D,EAAgBr7E,UAAU0wE,YAAc,SAAU31D,EAAa8gE,GAC3D,IAAK,IAAIv7E,EAAI,EAAGA,EAAIu7E,EAAap7E,OAAQH,IACrCnB,KAAKw8D,SAAS/8C,YAAYi9D,EAAav7E,KAG/C+6E,EAAgBr7E,UAAUsxB,OAAS,SAAUuhD,EAAextE,EAAMsjC,GAC9D,OAAOxpC,KAAKw8D,SAASrqC,OAAOuhD,EAAextE,EAAMsjC,IAErD0yC,EAAgBr7E,UAAU87E,aAAe,SAAUh7E,EAAQuE,EAAMsjC,GAC7D,OAAOxpC,KAAKw8D,SAASrqC,OAAOxwB,EAAQuE,EAAMsjC,IAE9C0yC,EAAgBr7E,UAAUg3E,mBAAqB,SAAUnE,EAAekJ,EAAcC,GAClF78E,KAAKw8D,SAAS51C,YAAY8sD,EAAekJ,EAAcC,IAE3DX,EAAgBr7E,UAAU02E,oBAAsB,SAAU7D,EAAeyI,EAAkBW,GACvF,IAAIp2E,EAAKvD,EAAOgzE,GAAegG,GAAmB,GAAI3F,EAAK9vE,EAAG,GAAIR,EAAOQ,EAAG,GACtD,MAAlBo2E,EACA98E,KAAKw8D,SAASnrC,aAAaqiD,EAAextE,EAAM42E,EAAgBtG,GAGhEx2E,KAAKw8D,SAASjpC,gBAAgBmgD,EAAextE,EAAMswE,IAG3D0F,EAAgBr7E,UAAUk8E,oBAAsB,SAAUrJ,EAAekJ,EAAcC,KACvFX,EAAgBr7E,UAAU62E,gBAAkB,SAAUhE,EAAe1sD,EAAWg2D,GACxEA,EACAh9E,KAAKw8D,SAASt1C,SAASwsD,EAAe1sD,GAGtChnB,KAAKw8D,SAASr1C,YAAYusD,EAAe1sD,IAGjDk1D,EAAgBr7E,UAAU82E,gBAAkB,SAAUjE,EAAeuJ,EAAWC,GAC1D,MAAdA,EACAl9E,KAAKw8D,SAASh2C,SAASktD,EAAeuJ,EAAWC,GAGjDl9E,KAAKw8D,SAAS31C,YAAY6sD,EAAeuJ,IAGjDf,EAAgBr7E,UAAUs8E,oBAAsB,SAAUzJ,EAAe0J,EAAYz2E,GACjF+sE,EAAc0J,GAAY57E,MAAMkyE,EAAe/sE,IAEnDu1E,EAAgBr7E,UAAUw8E,QAAU,SAAU/F,EAAe3tE,GAAQ3J,KAAKw8D,SAAS12C,SAASwxD,EAAe3tE,IAC3GuyE,EAAgBr7E,UAAUy8E,QAAU,WAAc,MAAM,IAAI15E,MAAM,6CAC3Ds4E,EA9FyB,GAgGpC,SAASjL,GAAkB3+B,EAAYzlC,EAAQ0wE,EAAqB3rE,GAChE,OAAO,IAAI4rE,GAAalrC,EAAYzlC,EAAQ0wE,EAAqB3rE,GAErE,IAAI4rE,GAA8B,WAC9B,SAASA,EAAaC,EAAax1C,EAASiK,EAAsBomC,GAC9Dt4E,KAAKy9E,YAAcA,EACnBz9E,KAAKioC,QAAUA,EACfjoC,KAAKkyC,qBAAuBA,EAC5BlyC,KAAKs4E,KAAOA,EACZt4E,KAAKiiE,qBACLjiE,KAAKkiE,YAAa,EAClBliE,KAAKwQ,SAAWxQ,KA9tBxB,SAAS09E,EAAah1E,GAGlB,IAFA,IAAIkJ,EAAMlJ,EAAK4vE,KACXjzE,EAAYqD,EAAK6sD,WAAa,IAAIh1D,MAAMqR,EAAIvM,UAAU/D,QACjDH,EAAI,EAAGA,EAAIyQ,EAAIvM,UAAU/D,OAAQH,IAAK,CAC3C,IAAIw8E,EAAU/rE,EAAIvM,UAAUlE,GACN,KAAhBw8E,EAAQxuE,YAEWjK,IAAjBG,EAAUlE,KACVkE,EAAUlE,GAAKs3E,GAAwB/vE,EAAMi1E,KAutBrDD,CAAa19E,MAiCjB,OA/BAw9E,EAAa38E,UAAU6L,IAAM,SAAUtB,EAAOuB,EAAeixE,QACnC,IAAlBjxE,IAA4BA,EAAgBC,GAASL,yBACrC,IAAhBqxE,IAA0BA,EAAc,GAC5C,IAAIzuE,EAAQ,EAOZ,OANkB,EAAdyuE,EACAzuE,GAAS,EAEU,EAAdyuE,IACLzuE,GAAS,GAEN+oE,GAAmBl4E,MAAQoL,MAAOA,EAAOknE,SAAUA,GAASlnE,GAAQ+D,MAAOA,GAASxC,IAE/FvM,OAAO+B,eAAeq7E,EAAa38E,UAAW,YAC1C6L,IAAK,WAAc,OAAO1M,KAAK0M,IAAI1M,KAAKy9E,cACxCn0C,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAeq7E,EAAa38E,UAAW,4BAC1C6L,IAAK,WAAc,OAAO1M,KAAK0M,IAAIo7B,KACnCwB,YAAY,EACZpG,cAAc,IAElBs6C,EAAa38E,UAAUghB,QAAU,WAC7B,GAAI7hB,KAAKkiE,WACL,MAAM,IAAIt+D,MAAM,iBAAmBuH,GAAUnL,KAAKiX,SAASrW,aAAe,gCAE9EZ,KAAKkiE,YAAa,EApnB1B,SAAS2b,EAAsBt1C,EAAUu1C,GAGrC,IAFA,IAAIlsE,EAAM22B,EAAS+vC,KACfprC,EAAY,IAAI9jC,IACXjI,EAAI,EAAGA,EAAIyQ,EAAIvM,UAAU/D,OAAQH,IAEtC,GAAoB,OADNyQ,EAAIvM,UAAUlE,GAChBgO,MAAgC,CACxC,IAAI8H,EAAWsxB,EAASgtB,WAAWp0D,GACnC,GAAI8V,GAAYA,IAAa6gE,GAAiB,CAC1C,IAAIxkE,EAAY2D,EAAS1D,YACA,mBAAdD,GAA6B45B,EAAUqD,IAAIt5B,KAClD3D,EAAU9R,MAAMyV,GAChBi2B,EAAUjmB,IAAIhQ,MA0mB1B4mE,CAAsB79E,MACtBA,KAAKiiE,kBAAkBpyD,QAAQ,SAAUiiB,GAAY,OAAOA,OAEhE0rD,EAAa38E,UAAUyS,UAAY,SAAUk2B,GAAYxpC,KAAKiiE,kBAAkB3+D,KAAKkmC,IAC9Eg0C,EA1CsB,GAoD7BO,GAAqBzL,GAAS5uC,IAC9Bs6C,GAAoB1L,GAASzuC,IAC7Bo6C,GAAqB3L,GAAS9kC,IAC9B0wC,GAA2B5L,GAAS5L,IACpCyX,GAAsB7L,GAASp9B,IAC/BkpC,GAA4B9L,GAAS3L,IACrC0X,GAAwB/L,GAAS1lE,IACjC0xE,GAAwBhM,GAAS9lE;;;;;;;OA+BrC,SAAS8rE,GAAKiG,EAAYpvE,EAAO+kE,EAAmBmB,EAAYjqE,EAAOnI,EAAOgL,EAAMge,EAAUzZ,GAC1F,IAAI9L,EAAKutE,GAAuBC,GAAoBC,EAAiBztE,EAAGytE,eAAgB/M,EAAa1gE,EAAG0gE,WAAYgN,EAAkB1tE,EAAG0tE,gBACpI5hE,IACDA,MAECyZ,IACDA,MAKJhpB,EAAQ8I,GAAkB9I,GAC1B,IAAIu7E,EAAUlK,GAAarmE,EAAM9C,GAAUC,IAC3C,OAEI2L,WAAY,EACZlK,OAAQ,KACR+V,aAAc,KACdwc,cAAe,EACf83C,aAAc,EAEdqH,WAAYA,EACZpvE,MAAOA,EACPmsE,WAAY,EACZmD,iBAAkB,EAClBC,oBAAqB,EAAGvK,eAAgBA,EAAgBC,gBAAiBA,EAAiBhN,WAAYA,EACtGmO,gBAAiB,EAAGF,WAAYA,EAAYppD,SAAUA,EACtD6pD,aAAcM,GAAiBnqD,GAAWzZ,QAASA,EACnDyS,QAAS,KACT7W,UAAYhD,MAAOA,EAAOnI,MAAOA,EAAOgL,KAAMuwE,GAC9C70E,KAAM,KACNusC,MAAO,KACP0/B,UAAW,MAGnB,SAAS+I,GAAuBxgE,EAAMvM,GAClC,OAAOgtE,GAA0BzgE,EAAMvM,GAE3C,SAASitE,GAAmB1gE,EAAMvM,GAG9B,IADA,IAAI4jE,EAAWr3D,EACRq3D,EAAS3oE,SAAWgnE,GAAgB2B,IACvCA,EAAWA,EAAS3oE,OAKxB,OAAOiyE,GAAYtJ,EAAS3oE,OAAQ2mE,GAAagC,IAFtB,EAEuD5jE,EAAIxD,SAASnL,MAAO2O,EAAIxD,SAASH,MAEvH,SAAS8wE,GAAwB5gE,EAAMvM,GAEnC,IAEIqF,EAAW6nE,GAAY3gE,EAAMvM,EAAI/E,QAFG,MAAZ+E,EAAIzC,OAAiC,EAEEyC,EAAIxD,SAASnL,MAAO2O,EAAIxD,SAASH,MACpG,GAAI2D,EAAIY,QAAQlR,OACZ,IAAK,IAAIH,EAAI,EAAGA,EAAIyQ,EAAIY,QAAQlR,OAAQH,IAAK,CACzC,IAAIw1E,EAAS/kE,EAAIY,QAAQrR,GACrB69E,EAAmB/nE,EAAS0/D,EAAOvvE,UACvC,IAAIowD,GAAawnB,GAKb,MAAM,IAAIp7E,MAAM,WAAa+yE,EAAOvvE,SAAW,wBAA0B6P,EAASrW,YAAYsF,KAAO,MAJrG,IAAI6sB,EAAeisD,EAAiBhsD,UAAUisD,GAAoB9gE,EAAMvM,EAAI/E,OAAOkK,UAAW4/D,EAAO5kD,YACrG5T,EAAK84D,YAAYrlE,EAAIslE,YAAc/1E,GAAK4xB,EAAaG,YAAYpsB,KAAKisB,GAOlF,OAAO9b,EAEX,SAASgoE,GAAoB9gE,EAAMzW,EAAOqqB,GACtC,OAAO,SAAUqhD,GAAS,OAAOD,GAAch1D,EAAMzW,EAAOqqB,EAAWqhD,IAmF3E,SAASwL,GAA0BzgE,EAAMvM,GAErC,IAAIstE,GAAoC,KAAZttE,EAAIzC,OAAsC,EAClEkpE,EAAczmE,EAAIxD,SACtB,OAAoB,UAAZwD,EAAIzC,OACR,KAAK,IACD,OAAO2vE,GAAY3gE,EAAMvM,EAAI/E,OAAQqyE,EAAsB7G,EAAYp1E,MAAOo1E,EAAYpqE,MAC9F,KAAK,KACD,OA0BZ,SAASkxE,EAAYhhE,EAAMm4D,EAAO4I,EAAsB7/E,EAAS4O,GAC7D,IAAIwnD,EAAMxnD,EAAK3M,OACf,OAAQm0D,GACJ,KAAK,EACD,OAAOp2D,IACX,KAAK,EACD,OAAOA,EAAQmyE,GAAWrzD,EAAMm4D,EAAO4I,EAAsBjxE,EAAK,KACtE,KAAK,EACD,OAAO5O,EAAQmyE,GAAWrzD,EAAMm4D,EAAO4I,EAAsBjxE,EAAK,IAAKujE,GAAWrzD,EAAMm4D,EAAO4I,EAAsBjxE,EAAK,KAC9H,KAAK,EACD,OAAO5O,EAAQmyE,GAAWrzD,EAAMm4D,EAAO4I,EAAsBjxE,EAAK,IAAKujE,GAAWrzD,EAAMm4D,EAAO4I,EAAsBjxE,EAAK,IAAKujE,GAAWrzD,EAAMm4D,EAAO4I,EAAsBjxE,EAAK,KACtL,QAEI,IADA,IAAI+qE,EAAYz4E,MAAMk1D,GACbt0D,EAAI,EAAGA,EAAIs0D,EAAKt0D,IACrB63E,EAAU73E,GAAKqwE,GAAWrzD,EAAMm4D,EAAO4I,EAAsBjxE,EAAK9M,IAEtE,OAAO9B,EAAQmC,WAAM,EAAQgC,EAASw1E,KA1C/BmG,CAAYhhE,EAAMvM,EAAI/E,OAAQqyE,EAAsB7G,EAAYp1E,MAAOo1E,EAAYpqE,MAC9F,KAAK,KACD,OAAOujE,GAAWrzD,EAAMvM,EAAI/E,OAAQqyE,EAAsB7G,EAAYpqE,KAAK,IAC/E,KAAK,IACD,OAAOoqE,EAAYp1E,OAG/B,SAAS67E,GAAY3gE,EAAMm4D,EAAO4I,EAAsBh4E,EAAM+G,GAC1D,IAAIwnD,EAAMxnD,EAAK3M,OACf,OAAQm0D,GACJ,KAAK,EACD,OAAO,IAAIvuD,EACf,KAAK,EACD,OAAO,IAAIA,EAAKsqE,GAAWrzD,EAAMm4D,EAAO4I,EAAsBjxE,EAAK,KACvE,KAAK,EACD,OAAO,IAAI/G,EAAKsqE,GAAWrzD,EAAMm4D,EAAO4I,EAAsBjxE,EAAK,IAAKujE,GAAWrzD,EAAMm4D,EAAO4I,EAAsBjxE,EAAK,KAC/H,KAAK,EACD,OAAO,IAAI/G,EAAKsqE,GAAWrzD,EAAMm4D,EAAO4I,EAAsBjxE,EAAK,IAAKujE,GAAWrzD,EAAMm4D,EAAO4I,EAAsBjxE,EAAK,IAAKujE,GAAWrzD,EAAMm4D,EAAO4I,EAAsBjxE,EAAK,KACvL,QAEI,IADA,IAAI+qE,EAAY,IAAIz4E,MAAMk1D,GACjBt0D,EAAI,EAAGA,EAAIs0D,EAAKt0D,IACrB63E,EAAU73E,GAAKqwE,GAAWrzD,EAAMm4D,EAAO4I,EAAsBjxE,EAAK9M,IAEtE,OAAO,IAAK+F,EAAKJ,KAAKtF,MAAM0F,EAAM1D,QAAU,GAASw1E,MAuCjE,IAyvCIoG,GAzvCAC,MACJ,SAAS7N,GAAWrzD,EAAMm4D,EAAO4I,EAAsB/G,EAAQxrE,GAE3D,QADsB,IAAlBA,IAA4BA,EAAgBC,GAASL,oBACtC,EAAf4rE,EAAOhpE,MACP,OAAOgpE,EAAO/sE,MAElB,IAAI85B,EAAY/mB,EACG,EAAfg6D,EAAOhpE,QACPxC,EAAgB,MAEpB,IAAI2yE,EAAcnH,EAAO7F,SACrBgN,IAAgBlB,KAGhBc,KAA0B5I,IAASA,EAAMrxD,QAAQ9F,gBAEjDm3D,GAAyB,EAAf6B,EAAOhpE,QACjB+vE,GAAuB,EACvB5I,EAAQA,EAAMzpE,QAGlB,IADA,IAAI0yE,EAAaphE,EACVohE,GAAY,CACf,GAAIjJ,EACA,OAAQgJ,GACJ,KAAKvB,GAED,OAAO9B,GADQuD,GAAaD,EAAYjJ,EAAO4I,IAGnD,KAAKlB,GAED,OADewB,GAAaD,EAAYjJ,EAAO4I,GAC/BzjE,SAEpB,KAAKwiE,GACD,OAAO,IAAIzwC,GAAWijC,GAAc8O,EAAYjJ,EAAMv/D,WAAW28D,eACrE,KAAKwK,GACD,OAAOzN,GAAc8O,EAAYjJ,EAAMv/D,WAAWi/D,cACtD,KAAKmI,GACD,GAAI7H,EAAMrxD,QAAQhT,SACd,OAAOw+D,GAAc8O,EAAYjJ,EAAMv/D,WAAW9E,SAEtD,MAEJ,KAAKmsE,GAED,OAAO1C,GADM8D,GAAaD,EAAYjJ,EAAO4I,IAGjD,KAAKb,GACL,KAAKC,GACD,OAAOtC,GAAiBuD,EAAYjJ,GACxC,QACI,IAAImJ,GAAiBP,EAAuB5I,EAAMrxD,QAAQy6D,aACtDpJ,EAAMrxD,QAAQ06D,iBAAiBL,GACnC,GAAIG,EAAe,CACf,IAAIG,EAAelP,GAAe6O,EAAYE,EAAc1oE,WAK5D,OAJK6oE,IACDA,GAAiB3oE,SAAU2nE,GAA0BW,EAAYE,IACjEF,EAAW/O,MAAMiP,EAAc1oE,WAAa6oE,GAEzCA,EAAa3oE,UAIpCioE,EAAuBrL,GAAgB0L,GACvCjJ,EAAQ9C,GAAa+L,GACrBA,EAAaA,EAAW1yE,OACL,EAAfsrE,EAAOhpE,QACPowE,EAAa,MAGrB,IAAIt8E,EAAQiiC,EAAUmuC,KAAK7iE,SAAS9D,IAAIyrE,EAAO/sE,MAAOi0E,IACtD,OAAIp8E,IAAUo8E,IACV1yE,IAAkB0yE,GAMXp8E,EAEJiiC,EAAUmuC,KAAK9qC,SAAS/3B,SAAS9D,IAAIyrE,EAAO/sE,MAAOuB,GAE9D,SAAS6yE,GAAarhE,EAAMm4D,EAAO4I,GAC/B,IAAI1J,EACJ,GAAI0J,EACA1J,EAAW/E,GAActyD,EAAMm4D,EAAMv/D,WAAWoI,mBAIhD,IADAq2D,EAAWr3D,EACJq3D,EAAS3oE,SAAWgnE,GAAgB2B,IACvCA,EAAWA,EAAS3oE,OAG5B,OAAO2oE,EAEX,SAASqK,GAAW1hE,EAAMyhE,EAAchuE,EAAK6gE,EAAYxvE,EAAOo0C,GAC5D,GAAgB,MAAZzlC,EAAIzC,MAA+B,CACnC,IAAIqmE,EAAW/E,GAActyD,EAAMvM,EAAI/E,OAAOkK,WAAWoI,cAChC,EAArBq2D,EAAS5jE,IAAIzC,QACbqmE,EAASn0D,OAAS,GAS1B,GADAu+D,EAAa3oE,SALCrF,EAAIqa,SAASwmD,GACJvsE,MAIWjD,EAClB,OAAZ2O,EAAIzC,MAAgC,CACpCkoC,EAAUA,MACV,IAAI9X,EAAW9iB,GAAaG,OAAOuB,EAAKu0D,UAAU9gE,EAAIwtB,aAAeqzC,IAErEp7B,EADgBzlC,EAAIqa,SAASwmD,GACXqN,iBACd,IAAIhjE,GAAayiB,EAAUt8B,EAA6C,IAAxB,EAAbkb,EAAKkD,QAGhD,OADAlD,EAAKu0D,UAAU9gE,EAAIwtB,aAAeqzC,GAAcxvE,EACzCo0C,EA6CX,SAAS0oC,GAAgC5hE,EAAM2/D,GAC3C,GAAM3/D,EAAKvM,IAAI+0B,UAAYm3C,EAK3B,IAFA,IAAItN,EAAQryD,EAAKvM,IAAI4+D,MACjBH,EAAY,EACPlvE,EAAI,EAAGA,EAAIqvE,EAAMlvE,OAAQH,IAAK,CACnC,IAAIg0E,EAAU3E,EAAMrvE,GAChBsX,EAAW08D,EAAQtoE,OASvB,KARK4L,GAAY08D,EAAQhmE,MAAQ2uE,GAE7BkC,GAAuB7hE,EAAMhd,EAAGg0E,EAAQhmE,MAAQ2uE,EAAYzN,KAEtB,IAArC8E,EAAQmG,WAAawC,KAEtB38E,GAAKg0E,EAAQE,YAEV58D,GAA8B,EAAjBA,EAAStJ,OACzBhO,IAAMsX,EAAS1B,UAAY0B,EAAS48D,YAEhC58D,EAASgmE,iBAAmBX,IAC5BzN,EAAY4P,GAA+B9hE,EAAM1F,EAAUqlE,EAAYzN,IAE3E53D,EAAWA,EAAS5L,QAIhC,SAASozE,GAA+B9hE,EAAMm4D,EAAOwH,EAAYzN,GAC7D,IAAK,IAAIlvE,EAAIm1E,EAAMv/D,UAAY,EAAG5V,GAAKm1E,EAAMv/D,UAAYu/D,EAAMjB,WAAYl0E,IAAK,CAC5E,IAAIg0E,EAAUh3D,EAAKvM,IAAI4+D,MAAMrvE,GACzBg0E,EAAQhmE,MAAQ2uE,GAChBkC,GAAuB7hE,EAAMhd,EAAGg0E,EAAQhmE,MAAQ2uE,EAAYzN,KAGhElvE,GAAKg0E,EAAQE,WAEjB,OAAOhF,EAEX,SAAS2P,GAAuB7hE,EAAMzW,EAAOo2E,EAAYzN,GACrD,IAAIuP,EAAelP,GAAevyD,EAAMzW,GACxC,GAAKk4E,EAAL,CAGA,IAAIxxE,EAAWwxE,EAAa3oE,SACvB7I,IAGLyiE,GAASC,eAAe3yD,EAAMzW,GACb,QAAbo2E,GACAxN,GAA4BnyD,EAAM,IAA6CkyD,IAC/EjiE,EAAS2E,qBAEI,QAAb+qE,GACA1vE,EAAS6E,wBAEI,QAAb6qE,GACAxN,GAA4BnyD,EAAM,IAA0CkyD,IAC5EjiE,EAAS+E,kBAEI,QAAb2qE,GACA1vE,EAASiF,qBAEI,OAAbyqE,GACA1vE,EAASmF;;;;;;;OAgDjB,SAASs+D,GAAmB1zD,GAExB,IADA,IAAI+hE,EAAW/hE,EAAKvM,IAAIuuE,mBACjBhiE,EAAKtR,QAAUinE,GAAe31D,IAAO,CACxC,IAAIiiE,EAASjiE,EAAKo1D,cAClBp1D,EAAOA,EAAKtR,OAGZ,IADA,IAAImN,EAAMomE,EAAOrpE,UAAYqpE,EAAO/K,WAC3Bl0E,EAAI,EAAGA,GAAK6Y,EAAK7Y,IAED,UADjBg0E,EAAUh3D,EAAKvM,IAAI4+D,MAAMrvE,IAChBgO,OACQ,UAAhBgmE,EAAQhmE,QACRgmE,EAAQj/B,MAAMmqC,SAAWH,KAAc/K,EAAQj/B,MAAMmqC,UACtDzP,GAAYzyD,EAAMhd,GAAGmlB,aAEJ,EAAhB6uD,EAAQhmE,OAA+BhO,EAAIg0E,EAAQE,WAAa+K,EAAOrpE,YACjD,SAArBo+D,EAAQmG,YACa,UAArBnG,EAAQmG,aAEVn6E,GAAKg0E,EAAQE,YAKzB,GAAyB,UAArBl3D,EAAKvM,IAAI+0B,UACT,IAASxlC,EAAI,EAAGA,EAAIgd,EAAKvM,IAAI4+D,MAAMlvE,OAAQH,IAAK,CAC5C,IAAIg0E,EACiB,WADjBA,EAAUh3D,EAAKvM,IAAI4+D,MAAMrvE,IAChBgO,OAA2D,UAAhBgmE,EAAQhmE,OAC5DyhE,GAAYzyD,EAAMhd,GAAGmlB,WAGzBnlB,GAAKg0E,EAAQE,YAIzB,SAASiL,GAAoBniE,EAAMg3D,GAC/B,IAAIn1C,EAAY4wC,GAAYzyD,EAAMg3D,EAAQp+D,WAC1C,GAAKipB,EAAUjI,MAAf,CAGA,IAAI1gB,EACAkpE,OAAYr7E,EAChB,GAAoB,SAAhBiwE,EAAQhmE,MAAyC,CACjD,IAAIqxE,EAAarL,EAAQtoE,OAAOA,OAChC0zE,EAAYE,GAAgBtiE,EAAMqiE,EAAWzpE,UAAWypE,EAAWzpE,UAAYypE,EAAWnL,WAAYF,EAAQj/B,UAC9G7+B,EAAoBq5D,GAAevyD,EAAMg3D,EAAQtoE,OAAOkK,WAAWE,cAE9C,UAAhBk+D,EAAQhmE,QACboxE,EAAYE,GAAgBtiE,EAAM,EAAGA,EAAKvM,IAAI4+D,MAAMlvE,OAAS,EAAG6zE,EAAQj/B,UACxE7+B,EAAoB8G,EAAK7U,WAE7B02B,EAAU6X,MAAM0oC,GAGhB,IAFA,IAAIt0D,EAAWkpD,EAAQj/B,MAAMjqB,SACzBy0D,GAAS,EACJv/E,EAAI,EAAGA,EAAI8qB,EAAS3qB,OAAQH,IAAK,CACtC,IAAIi2E,EAAUnrD,EAAS9qB,GACnBw/E,OAAa,EACjB,OAAQvJ,EAAQwJ,aACZ,KAAK,EACDD,EAAa3gD,EAAUr3B,MACvB,MACJ,KAAK,EACDg4E,EAAa3gD,EACb0gD,GAAS,EAGjBrpE,EAAkB+/D,EAAQhwE,UAAYu5E,EAEtCD,GACA1gD,EAAUgY,mBAGlB,SAASyoC,GAAgBtiE,EAAM5E,EAAY27D,EAAU2L,EAAU15E,GAC3D,IAAK,IAAIhG,EAAIoY,EAAYpY,GAAK+zE,EAAU/zE,IAAK,CACzC,IAAIg0E,EAAUh3D,EAAKvM,IAAI4+D,MAAMrvE,GACzBkzE,EAAYc,EAAQhB,eAAe0M,EAAS1sE,IAIhD,GAHiB,MAAbkgE,GACAltE,EAAO7D,KAAKw9E,GAAc3iE,EAAMg3D,EAASd,IAEzB,EAAhBc,EAAQhmE,OAA+BgmE,EAAQlwD,QAAQhT,WACtDkjE,EAAQlwD,QAAQhT,SAASkuE,mBAAqBU,EAASR,YACpDQ,EAASR,SAAU,CACvB,IAAIlH,EAAc1I,GAActyD,EAAMhd,GAOtC,IAJKg0E,EAAQuJ,oBAAsBmC,EAASR,YAAcQ,EAASR,WAC/DI,GAAgBtiE,EAAMhd,EAAI,EAAGA,EAAIg0E,EAAQE,WAAYwL,EAAU15E,GAC/DhG,GAAKg0E,EAAQE,YAEG,SAAhBF,EAAQhmE,MAER,IADA,IAAI4mE,EAAgBoD,EAAYnD,cAAcC,eACrCnkB,EAAI,EAAGA,EAAIikB,EAAcz0E,OAAQwwD,IAAK,CAC3C,IAAIh0C,EAAei4D,EAAcjkB,GAC7BivB,EAAMzN,GAAsBx1D,GAC5BijE,GAAOA,IAAQ5H,GACfsH,GAAgB3iE,EAAc,EAAGA,EAAalM,IAAI4+D,MAAMlvE,OAAS,EAAGu/E,EAAU15E,GAI1F,IAAIg0E,EAAiBhC,EAAYlnE,SAASmpE,gBAC1C,GAAID,EACA,IAASrpB,EAAI,EAAGA,EAAIqpB,EAAe75E,OAAQwwD,IAAK,CAC5C,IAAIl2B,EAAgBu/C,EAAerpB,GACnC2uB,GAAgB7kD,EAAe,EAAGA,EAAchqB,IAAI4+D,MAAMlvE,OAAS,EAAGu/E,EAAU15E,KAIvFguE,EAAQuJ,oBAAsBmC,EAASR,YAAcQ,EAASR,WAE/Dl/E,GAAKg0E,EAAQE,YAGrB,OAAOluE,EAEX,SAAS25E,GAAc3iE,EAAMg3D,EAAS6L,GAClC,GAAsB,MAAlBA,EAEA,OAAQA,GACJ,KAAK,EACD,OAAOvQ,GAActyD,EAAMg3D,EAAQp+D,WAAW28D,cAClD,KAAK,EACD,OAAO,IAAIlmC,GAAWijC,GAActyD,EAAMg3D,EAAQp+D,WAAW28D,eACjE,KAAK,EACD,OAAOjD,GAActyD,EAAMg3D,EAAQp+D,WAAW9E,SAClD,KAAK,EACD,OAAOw+D,GAActyD,EAAMg3D,EAAQp+D,WAAWi/D,cAClD,KAAK,EACD,OAAOtF,GAAevyD,EAAMg3D,EAAQp+D,WAAWE;;;;;;;OAwC/D,SAASgqE,GAAgB9iE,EAAMs2D,EAAY7iE,GACvC,IAAI8Q,EAAW8xD,GAAuBr2D,EAAMs2D,EAAY7iE,GACnD8Q,GAKL4yD,GAA0Bn3D,EADLvM,EAAIgkE,UAAUluE,MACa,EAAqBgb,EAAU,UAAMxd;;;;;;;OA4BzF,SAASg8E,GAAmB/xE,EAAOovE,EAAY4C,GAE3C,IADA,IAAIl1D,EAAW,IAAI1rB,MAAM4gF,EAAc7/E,QAC9BH,EAAI,EAAGA,EAAIggF,EAAc7/E,OAAQH,IAAK,CAC3C,IAAIslB,EAAO06D,EAAchgF,GACzB8qB,EAAS9qB,IACLgO,MAAO,EACPjJ,KAAMugB,EACN+vD,GAAI,KACJsJ,gBAAiBr5D,EACjB+wD,gBAAiB,KACjBngD,OAAQ,MAGhB,OAEItgB,WAAY,EACZlK,OAAQ,KACR+V,aAAc,KACdwc,cAAe,EACf83C,aAAc,EAEdqH,WAAYA,EACZpvE,MAAOA,EACPmsE,WAAY,EACZmD,iBAAkB,EAClBC,oBAAqB,EACrBvK,kBACAC,gBAAiB,EACjBhN,cACAmO,gBAAiB,EACjBF,WAAY,EAAGppD,SAAUA,EACzB6pD,aAAcM,GAAiBnqD,GAC/BzZ,WACAyS,QAAS,KACT7W,SAAU,KACVzE,KAAM,KACNusC,MAAO,KACP0/B,UAAW,MAuMnB,SAASj2D,GAAWxB,EAAMs2D,EAAY7iE,GAClC,IAAI0lE,EACA77D,EAAW0C,EAAK1C,SACpB67D,EAAgB77D,EAASkE,WAAW/N,EAAIjI,KAAKyzB,QAC7C,IAAI1a,EAAW8xD,GAAuBr2D,EAAMs2D,EAAY7iE,GAIxD,OAHI8Q,GACAjH,EAAS6G,YAAYI,EAAU40D,IAE1B3D,WAAY2D,GA0EzB,SAAS8J,GAAsBn+E,EAAOm0E,GAElC,OADwB,MAATn0E,EAAgBA,EAAM4C,WAAa,IAChCuxE,EAAQ//C;;;;;;;OAmI9B,SAASgqD,GAAcziE,GACnB,OAA8C,IAAzB,EAAbA,EAAKzP,QAA4D,OAAtByP,EAAKqG,QAAQ/e,KAEpE,SAASo7E,GAAaz0E,EAAQ+R,EAAM2iE,GAChC,IAAItvE,EAAW2M,EAAKqG,SAAWrG,EAAKqG,QAAQhT,SAC5C,GAAIA,EAAU,CACV,IAAKA,EAAS+iE,mBACV,MAAM,IAAIpxE,MAAM,oEAEpB,GAAIqO,EAAS+iE,oBAC2B,SAApC/iE,EAAS+iE,mBAAmB7lE,MAC5B,MAAM,IAAIvL,MAAM,mFAAqFgb,EAAK7H,UAAY,KAG9H,GAAiB,MAAb6H,EAAKzP,OAEuC,IAAzB,GADDtC,EAASA,EAAOsC,MAAQ,IAEtC,MAAM,IAAIvL,MAAM,sGAAwGgb,EAAK7H,UAAY,KAGjJ,GAAI6H,EAAKs3B,MAAO,CACZ,GAAiB,SAAbt3B,EAAKzP,SACHtC,GAAyD,IAA/B,MAAfA,EAAOsC,QACpB,MAAM,IAAIvL,MAAM,kFAAoFgb,EAAK7H,UAAY,KAEzH,GAAiB,UAAb6H,EAAKzP,OAAyCtC,EAC9C,MAAM,IAAIjJ,MAAM,wEAA0Egb,EAAK7H,UAAY,KAGnH,GAAI6H,EAAKy2D,WAAY,CACjB,IAAImM,EAAY30E,EAASA,EAAOkK,UAAYlK,EAAOwoE,WAAakM,EAAY,EAC5E,GAAI3iE,EAAK7H,WAAayqE,GAAa5iE,EAAK7H,UAAY6H,EAAKy2D,WAAamM,EAClE,MAAM,IAAI59E,MAAM,uEAAyEgb,EAAK7H,UAAY,MAItH,SAAS+zB,GAAmBj+B,EAAQ40E,EAAcvH,EAAShqE,GAGvD,IAAIiO,EAAOuc,GAAW7tB,EAAOwmE,KAAMxmE,EAAO4O,SAAU5O,EAAQ40E,EAAcvH,GAG1E,OAFAwH,GAASvjE,EAAMtR,EAAOvD,UAAW4G,GACjCyxE,GAAgBxjE,GACTA,EAEX,SAAS4yD,GAAesC,EAAMzhE,EAAK1B,GAC/B,IAAIiO,EAAOuc,GAAW24C,EAAMA,EAAK53D,SAAU,KAAM,KAAM7J,GAGvD,OAFA8vE,GAASvjE,EAAMjO,EAASA,GACxByxE,GAAgBxjE,GACTA,EAEX,SAAS6yD,GAAoB/wD,EAAYk1D,EAAS+E,EAASt+D,GACvD,IACIgmE,EADA/lE,EAAes5D,EAAQlwD,QAAQyvD,sBAQnC,OAFIkN,EAJC/lE,EAIcoE,EAAWozD,KAAK5pD,gBAAgB9N,eAAeC,EAAaC,GAH5DoE,EAAWozD,KAAK53D,SAK5Bif,GAAWza,EAAWozD,KAAMuO,EAAc3hE,EAAYk1D,EAAQlwD,QAAQm1D,kBAAmBF,GAEpG,SAASx/C,GAAW24C,EAAM53D,EAAU5O,EAAQ0mE,EAAe3hE,GACvD,IAAI4+D,EAAQ,IAAIjwE,MAAMqR,EAAI4+D,MAAMlvE,QAC5B21E,EAAcrlE,EAAIiwE,YAAc,IAAIthF,MAAMqR,EAAIiwE,aAAe,KAWjE,OATIjwE,IAAKA,EACL/E,OAAQA,EACRmmE,oBAAqB,KAAMO,cAAeA,EAC1CrjE,QAAS,KACT5G,UAAW,KAAMknE,MAAOA,EACxBnvD,MAAO,GAAkBgyD,KAAMA,EAAM53D,SAAUA,EAC/Ci3D,UAAW,IAAInyE,MAAMqR,EAAIkwE,cAAe7K,YAAaA,EACrD5G,WAAY,GAIpB,SAASqR,GAASvjE,EAAM7U,EAAW4G,GAC/BiO,EAAK7U,UAAYA,EACjB6U,EAAKjO,QAAUA,EAEnB,SAASyxE,GAAgBxjE,GACrB,IAAIs2D,EACAZ,GAAgB11D,KAEhBs2D,EAAahE,GAActyD,EAAKtR,OADlBsR,EAAKo1D,cAC6B1mE,OAAOkK,WAAW28D,eAItE,IAFA,IAAI9hE,EAAMuM,EAAKvM,IACX4+D,EAAQryD,EAAKqyD,MACRrvE,EAAI,EAAGA,EAAIyQ,EAAI4+D,MAAMlvE,OAAQH,IAAK,CACvC,IAAIg0E,EAAUvjE,EAAI4+D,MAAMrvE,GACxB0vE,GAASC,eAAe3yD,EAAMhd,GAC9B,IAAI4gF,OAAW,EACf,OAAwB,UAAhB5M,EAAQhmE,OACZ,KAAK,EACD,IAAIqrC,EAAK1rB,GAAc3Q,EAAMs2D,EAAYU,GACrCh2D,OAAgBja,EACpB,GAAoB,SAAhBiwE,EAAQhmE,MAAsC,CAC9C,IAAI6yE,EAAclN,GAAkBK,EAAQlwD,QAAQ9F,eACpDA,EAAgB0xD,GAASG,oBAAoB7yD,EAAMg3D,EAAS6M,EAAaxnC,GAE7Ek8B,GAAuBv4D,EAAMgB,EAAeg2D,EAAS36B,GACrDunC,GACIrO,cAAel5B,EACfr7B,cAAeA,EACf62D,cAAe,KACf/jE,SAAUkjE,EAAQlwD,QAAQhT,SAAW6pE,GAAmB39D,EAAMg3D,QAAWjwE,GAEzD,SAAhBiwE,EAAQhmE,QACR4yE,EAAS/L,cAAgB2E,GAAwBx8D,EAAMg3D,EAAS4M,IAEpE,MACJ,KAAK,EACDA,EAAWpiE,GAAWxB,EAAMs2D,EAAYU,GACxC,MACJ,KAAK,IACL,KAAK,KACL,KAAK,KACL,KAAK,KACD4M,EAAWvR,EAAMrvE,KACkB,KAAhBg0E,EAAQhmE,QAEvB4yE,GAAa9qE,SADE0nE,GAAuBxgE,EAAMg3D,KAGhD,MAEJ,KAAK,GAED4M,GAAa9qE,SADE4nE,GAAmB1gE,EAAMg3D,IAExC,MAEJ,KAAK,OACD4M,EAAWvR,EAAMrvE,MAGb4gF,GAAa9qE,SADE8nE,GAAwB5gE,EAAMg3D,KAG7B,MAAhBA,EAAQhmE,OAERuyE,GADejR,GAActyD,EAAMg3D,EAAQtoE,OAAOkK,WAAWoI,cAC1C4iE,EAAS9qE,SAAU8qE,EAAS9qE,UAEnD,MAEJ,KAAK,GACL,KAAK,GACL,KAAK,IACD8qE,GA3iBH9+E,WAAOiC,GA4iBJ,MACJ,KAAK,SACL,KAAK,UACD68E,EAnyBL,IAAI5c,GAoyBC,MACJ,KAAK,EACD8b,GAAgB9iE,EAAMs2D,EAAYU,GAElC4M,OAAW78E,EAGnBsrE,EAAMrvE,GAAK4gF,EAIfE,GAAyB9jE,EAAMihE,GAAW8C,iBAE1CC,GAAkBhkE,EAAM,UAAiE,UAA6B,GAE1H,SAASmzD,GAAmBnzD,GACxBikE,GAA2BjkE,GAC3B0yD,GAASc,iBAAiBxzD,EAAM,GAChCkkE,GAAwBlkE,EAAMihE,GAAWkD,gBACzCzR,GAASe,eAAezzD,EAAM,GAC9B8jE,GAAyB9jE,EAAMihE,GAAWkD,gBAG1CnkE,EAAKkD,QAAS,GAElB,SAASgwD,GAAmBlzD,GACP,EAAbA,EAAKkD,OACLlD,EAAKkD,QAAS,EACdlD,EAAKkD,OAAS,GAGdlD,EAAKkD,QAAS,EAElB4uD,GAAe9xD,EAAM,EAA8B,KACnDikE,GAA2BjkE,GAC3B0yD,GAASc,iBAAiBxzD,EAAM,GAChCkkE,GAAwBlkE,EAAMihE,GAAWmD,gBACzCJ,GAAkBhkE,EAAM,SAAiC,UAA8B,GACvF,IAAIqkE,EAAWvS,GAAe9xD,EAAM,IAAmC,KACvE4hE,GAAgC5hE,EAAM,SAAqCqkE,EAAW,QAAiC,IACvH3R,GAASe,eAAezzD,EAAM,GAC9B8jE,GAAyB9jE,EAAMihE,GAAWmD,gBAC1CJ,GAAkBhkE,EAAM,UAA+B,UAA8B,GAErF4hE,GAAgC5hE,EAAM,UADtCqkE,EAAWvS,GAAe9xD,EAAM,IAA6C,MACM,QAA8B,IAC5F,EAAjBA,EAAKvM,IAAIzC,QACTgP,EAAKkD,QAAS,GAElBlD,EAAKkD,QAAS,GACd4uD,GAAe9xD,EAAM,IAA0C,MAEnE,SAASskE,GAAmBtkE,EAAMg3D,EAASuN,EAAUrlD,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAI8jD,EAAIC,GACrF,OAAiB,IAAbF,EAgCR,SAASG,EAAyB1kE,EAAMg3D,EAAS93C,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAI8jD,EAAIC,GACjF,OAAwB,UAAhBzN,EAAQhmE,OACZ,KAAK,EACD,OAlzEZ,SAAS2zE,EAA4B3kE,EAAMvM,EAAKyrB,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAI8jD,EAAIC,GAChF,IAAIG,EAAUnxE,EAAIqa,SAAS3qB,OACvB0hF,GAAU,EAqBd,OApBID,EAAU,GAAK5L,GAA2Bh5D,EAAMvM,EAAK,EAAGyrB,KACxD2lD,GAAU,GACVD,EAAU,GAAK5L,GAA2Bh5D,EAAMvM,EAAK,EAAG4rB,KACxDwlD,GAAU,GACVD,EAAU,GAAK5L,GAA2Bh5D,EAAMvM,EAAK,EAAGgsB,KACxDolD,GAAU,GACVD,EAAU,GAAK5L,GAA2Bh5D,EAAMvM,EAAK,EAAGosB,KACxDglD,GAAU,GACVD,EAAU,GAAK5L,GAA2Bh5D,EAAMvM,EAAK,EAAGwsB,KACxD4kD,GAAU,GACVD,EAAU,GAAK5L,GAA2Bh5D,EAAMvM,EAAK,EAAG2sB,KACxDykD,GAAU,GACVD,EAAU,GAAK5L,GAA2Bh5D,EAAMvM,EAAK,EAAG8sB,KACxDskD,GAAU,GACVD,EAAU,GAAK5L,GAA2Bh5D,EAAMvM,EAAK,EAAGitB,KACxDmkD,GAAU,GACVD,EAAU,GAAK5L,GAA2Bh5D,EAAMvM,EAAK,EAAG+wE,KACxDK,GAAU,GACVD,EAAU,GAAK5L,GAA2Bh5D,EAAMvM,EAAK,EAAGgxE,KACxDI,GAAU,GACPA,EA2xEQF,CAA4B3kE,EAAMg3D,EAAS93C,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAI8jD,EAAIC,GAC1F,KAAK,EACD,OA5bZ,SAASK,EAAyB9kE,EAAMvM,EAAKyrB,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAI8jD,EAAIC,GAC7E,IAAII,GAAU,EACV/2D,EAAWra,EAAIqa,SACf82D,EAAU92D,EAAS3qB,OAqBvB,GApBIyhF,EAAU,GAAKpQ,GAAsBx0D,EAAMvM,EAAK,EAAGyrB,KACnD2lD,GAAU,GACVD,EAAU,GAAKpQ,GAAsBx0D,EAAMvM,EAAK,EAAG4rB,KACnDwlD,GAAU,GACVD,EAAU,GAAKpQ,GAAsBx0D,EAAMvM,EAAK,EAAGgsB,KACnDolD,GAAU,GACVD,EAAU,GAAKpQ,GAAsBx0D,EAAMvM,EAAK,EAAGosB,KACnDglD,GAAU,GACVD,EAAU,GAAKpQ,GAAsBx0D,EAAMvM,EAAK,EAAGwsB,KACnD4kD,GAAU,GACVD,EAAU,GAAKpQ,GAAsBx0D,EAAMvM,EAAK,EAAG2sB,KACnDykD,GAAU,GACVD,EAAU,GAAKpQ,GAAsBx0D,EAAMvM,EAAK,EAAG8sB,KACnDskD,GAAU,GACVD,EAAU,GAAKpQ,GAAsBx0D,EAAMvM,EAAK,EAAGitB,KACnDmkD,GAAU,GACVD,EAAU,GAAKpQ,GAAsBx0D,EAAMvM,EAAK,EAAG+wE,KACnDK,GAAU,GACVD,EAAU,GAAKpQ,GAAsBx0D,EAAMvM,EAAK,EAAGgxE,KACnDI,GAAU,GACVA,EAAS,CACT,IAAI//E,EAAQ2O,EAAIjI,KAAKyzB,OACjB2lD,EAAU,IACV9/E,GAASm+E,GAAsB/jD,EAAIpR,EAAS,KAC5C82D,EAAU,IACV9/E,GAASm+E,GAAsB5jD,EAAIvR,EAAS,KAC5C82D,EAAU,IACV9/E,GAASm+E,GAAsBxjD,EAAI3R,EAAS,KAC5C82D,EAAU,IACV9/E,GAASm+E,GAAsBpjD,EAAI/R,EAAS,KAC5C82D,EAAU,IACV9/E,GAASm+E,GAAsBhjD,EAAInS,EAAS,KAC5C82D,EAAU,IACV9/E,GAASm+E,GAAsB7iD,EAAItS,EAAS,KAC5C82D,EAAU,IACV9/E,GAASm+E,GAAsB1iD,EAAIzS,EAAS,KAC5C82D,EAAU,IACV9/E,GAASm+E,GAAsBviD,EAAI5S,EAAS,KAC5C82D,EAAU,IACV9/E,GAASm+E,GAAsBuB,EAAI12D,EAAS,KAC5C82D,EAAU,IACV9/E,GAASm+E,GAAsBwB,EAAI32D,EAAS,KAChD,IAAIqrD,EAAgB/G,GAAWpyD,EAAMvM,EAAImF,WAAW48D,WACpDx1D,EAAK1C,SAASqK,SAASwxD,EAAer0E,GAE1C,OAAO+/E,EA2YQC,CAAyB9kE,EAAMg3D,EAAS93C,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAI8jD,EAAIC,GACvF,KAAK,MACD,OAnyCZ,SAASM,EAA8B/kE,EAAMvM,EAAKyrB,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAI8jD,EAAIC,GAClF,IAAIhD,EAAelP,GAAevyD,EAAMvM,EAAImF,WACxCiiB,EAAY4mD,EAAa3oE,SACzB+rE,GAAU,EACV3rC,OAAUnyC,EACV69E,EAAUnxE,EAAIqa,SAAS3qB,OAmD3B,OAlDIyhF,EAAU,GAAKvQ,GAAar0D,EAAMvM,EAAK,EAAGyrB,KAC1C2lD,GAAU,EACV3rC,EAAUwoC,GAAW1hE,EAAMyhE,EAAchuE,EAAK,EAAGyrB,EAAIga,IAErD0rC,EAAU,GAAKvQ,GAAar0D,EAAMvM,EAAK,EAAG4rB,KAC1CwlD,GAAU,EACV3rC,EAAUwoC,GAAW1hE,EAAMyhE,EAAchuE,EAAK,EAAG4rB,EAAI6Z,IAErD0rC,EAAU,GAAKvQ,GAAar0D,EAAMvM,EAAK,EAAGgsB,KAC1ColD,GAAU,EACV3rC,EAAUwoC,GAAW1hE,EAAMyhE,EAAchuE,EAAK,EAAGgsB,EAAIyZ,IAErD0rC,EAAU,GAAKvQ,GAAar0D,EAAMvM,EAAK,EAAGosB,KAC1CglD,GAAU,EACV3rC,EAAUwoC,GAAW1hE,EAAMyhE,EAAchuE,EAAK,EAAGosB,EAAIqZ,IAErD0rC,EAAU,GAAKvQ,GAAar0D,EAAMvM,EAAK,EAAGwsB,KAC1C4kD,GAAU,EACV3rC,EAAUwoC,GAAW1hE,EAAMyhE,EAAchuE,EAAK,EAAGwsB,EAAIiZ,IAErD0rC,EAAU,GAAKvQ,GAAar0D,EAAMvM,EAAK,EAAG2sB,KAC1CykD,GAAU,EACV3rC,EAAUwoC,GAAW1hE,EAAMyhE,EAAchuE,EAAK,EAAG2sB,EAAI8Y,IAErD0rC,EAAU,GAAKvQ,GAAar0D,EAAMvM,EAAK,EAAG8sB,KAC1CskD,GAAU,EACV3rC,EAAUwoC,GAAW1hE,EAAMyhE,EAAchuE,EAAK,EAAG8sB,EAAI2Y,IAErD0rC,EAAU,GAAKvQ,GAAar0D,EAAMvM,EAAK,EAAGitB,KAC1CmkD,GAAU,EACV3rC,EAAUwoC,GAAW1hE,EAAMyhE,EAAchuE,EAAK,EAAGitB,EAAIwY,IAErD0rC,EAAU,GAAKvQ,GAAar0D,EAAMvM,EAAK,EAAG+wE,KAC1CK,GAAU,EACV3rC,EAAUwoC,GAAW1hE,EAAMyhE,EAAchuE,EAAK,EAAG+wE,EAAItrC,IAErD0rC,EAAU,GAAKvQ,GAAar0D,EAAMvM,EAAK,EAAGgxE,KAC1CI,GAAU,EACV3rC,EAAUwoC,GAAW1hE,EAAMyhE,EAAchuE,EAAK,EAAGgxE,EAAIvrC,IAErDA,GACAre,EAAUqK,YAAYgU,GAET,MAAZzlC,EAAIzC,OACLmhE,GAA4BnyD,EAAM,IAAmCvM,EAAImF,YACzEiiB,EAAUrmB,WAEE,OAAZf,EAAIzC,OACJ6pB,EAAUnmB,YAEPmwE,EA2uCQE,CAA8B/kE,EAAMg3D,EAAS93C,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAI8jD,EAAIC,GAC5F,KAAK,GACL,KAAK,GACL,KAAK,IACD,OA7oBZ,SAASO,EAAmChlE,EAAMvM,EAAKyrB,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAI8jD,EAAIC,GACvF,IAAI32D,EAAWra,EAAIqa,SACf+2D,GAAU,EACVD,EAAU92D,EAAS3qB,OAqBvB,GApBIyhF,EAAU,GAAKpQ,GAAsBx0D,EAAMvM,EAAK,EAAGyrB,KACnD2lD,GAAU,GACVD,EAAU,GAAKpQ,GAAsBx0D,EAAMvM,EAAK,EAAG4rB,KACnDwlD,GAAU,GACVD,EAAU,GAAKpQ,GAAsBx0D,EAAMvM,EAAK,EAAGgsB,KACnDolD,GAAU,GACVD,EAAU,GAAKpQ,GAAsBx0D,EAAMvM,EAAK,EAAGosB,KACnDglD,GAAU,GACVD,EAAU,GAAKpQ,GAAsBx0D,EAAMvM,EAAK,EAAGwsB,KACnD4kD,GAAU,GACVD,EAAU,GAAKpQ,GAAsBx0D,EAAMvM,EAAK,EAAG2sB,KACnDykD,GAAU,GACVD,EAAU,GAAKpQ,GAAsBx0D,EAAMvM,EAAK,EAAG8sB,KACnDskD,GAAU,GACVD,EAAU,GAAKpQ,GAAsBx0D,EAAMvM,EAAK,EAAGitB,KACnDmkD,GAAU,GACVD,EAAU,GAAKpQ,GAAsBx0D,EAAMvM,EAAK,EAAG+wE,KACnDK,GAAU,GACVD,EAAU,GAAKpQ,GAAsBx0D,EAAMvM,EAAK,EAAGgxE,KACnDI,GAAU,GACVA,EAAS,CACT,IAAIt6E,EAAOioE,GAAqBxyD,EAAMvM,EAAImF,WACtC9T,OAAQ,EACZ,OAAoB,UAAZ2O,EAAIzC,OACR,KAAK,GACDlM,EAAQ,IAAI1C,MAAM0rB,EAAS3qB,QACvByhF,EAAU,IACV9/E,EAAM,GAAKo6B,GACX0lD,EAAU,IACV9/E,EAAM,GAAKu6B,GACXulD,EAAU,IACV9/E,EAAM,GAAK26B,GACXmlD,EAAU,IACV9/E,EAAM,GAAK+6B,GACX+kD,EAAU,IACV9/E,EAAM,GAAKm7B,GACX2kD,EAAU,IACV9/E,EAAM,GAAKs7B,GACXwkD,EAAU,IACV9/E,EAAM,GAAKy7B,GACXqkD,EAAU,IACV9/E,EAAM,GAAK47B,GACXkkD,EAAU,IACV9/E,EAAM,GAAK0/E,GACXI,EAAU,IACV9/E,EAAM,GAAK2/E,GACf,MACJ,KAAK,GACD3/E,KACI8/E,EAAU,IACV9/E,EAAMgpB,EAAS,GAAG/lB,MAAQm3B,GAC1B0lD,EAAU,IACV9/E,EAAMgpB,EAAS,GAAG/lB,MAAQs3B,GAC1BulD,EAAU,IACV9/E,EAAMgpB,EAAS,GAAG/lB,MAAQ03B,GAC1BmlD,EAAU,IACV9/E,EAAMgpB,EAAS,GAAG/lB,MAAQ83B,GAC1B+kD,EAAU,IACV9/E,EAAMgpB,EAAS,GAAG/lB,MAAQk4B,GAC1B2kD,EAAU,IACV9/E,EAAMgpB,EAAS,GAAG/lB,MAAQq4B,GAC1BwkD,EAAU,IACV9/E,EAAMgpB,EAAS,GAAG/lB,MAAQw4B,GAC1BqkD,EAAU,IACV9/E,EAAMgpB,EAAS,GAAG/lB,MAAQ24B,GAC1BkkD,EAAU,IACV9/E,EAAMgpB,EAAS,GAAG/lB,MAAQy8E,GAC1BI,EAAU,IACV9/E,EAAMgpB,EAAS,GAAG/lB,MAAQ08E,GAC9B,MACJ,KAAK,IACD,IAAIjvC,EAAOtW,EACX,OAAQ0lD,GACJ,KAAK,EACD9/E,EAAQ0wC,EAAKM,UAAU5W,GACvB,MACJ,KAAK,EACDp6B,EAAQ0wC,EAAKM,UAAUzW,GACvB,MACJ,KAAK,EACDv6B,EAAQ0wC,EAAKM,UAAUzW,EAAII,GAC3B,MACJ,KAAK,EACD36B,EAAQ0wC,EAAKM,UAAUzW,EAAII,EAAII,GAC/B,MACJ,KAAK,EACD/6B,EAAQ0wC,EAAKM,UAAUzW,EAAII,EAAII,EAAII,GACnC,MACJ,KAAK,EACDn7B,EAAQ0wC,EAAKM,UAAUzW,EAAII,EAAII,EAAII,EAAIG,GACvC,MACJ,KAAK,EACDt7B,EAAQ0wC,EAAKM,UAAUzW,EAAII,EAAII,EAAII,EAAIG,EAAIG,GAC3C,MACJ,KAAK,EACDz7B,EAAQ0wC,EAAKM,UAAUzW,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,GAC/C,MACJ,KAAK,EACD57B,EAAQ0wC,EAAKM,UAAUzW,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAI8jD,GACnD,MACJ,KAAK,GACD1/E,EAAQ0wC,EAAKM,UAAUzW,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAI8jD,EAAIC,IAKvEl6E,EAAKzF,MAAQA,EAEjB,OAAO+/E,EA6hBQG,CAAmChlE,EAAMg3D,EAAS93C,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAI8jD,EAAIC,GACjG,QACI,KAAM,eA5CHC,CAAyB1kE,EAAMg3D,EAAS93C,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAI8jD,EAAIC,GA+C3F,SAASQ,EAA0BjlE,EAAMg3D,EAAShuE,GAC9C,OAAwB,UAAhBguE,EAAQhmE,OACZ,KAAK,EACD,OAzyEZ,SAASk0E,EAA6BllE,EAAMvM,EAAKzK,GAE7C,IADA,IAAI67E,GAAU,EACL7hF,EAAI,EAAGA,EAAIgG,EAAO7F,OAAQH,IAC3Bg2E,GAA2Bh5D,EAAMvM,EAAKzQ,EAAGgG,EAAOhG,MAChD6hF,GAAU,GAElB,OAAOA,EAmyEQK,CAA6BllE,EAAMg3D,EAAShuE,GACvD,KAAK,EACD,OAzZZ,SAASm8E,EAA0BnlE,EAAMvM,EAAKzK,GAG1C,IAFA,IAAI8kB,EAAWra,EAAIqa,SACf+2D,GAAU,EACL7hF,EAAI,EAAGA,EAAIgG,EAAO7F,OAAQH,IAG3BwxE,GAAsBx0D,EAAMvM,EAAKzQ,EAAGgG,EAAOhG,MAC3C6hF,GAAU,GAGlB,GAAIA,EAAS,CACT,IAAI//E,EAAQ,GACZ,IAAS9B,EAAI,EAAGA,EAAIgG,EAAO7F,OAAQH,IAC/B8B,GAAgBm+E,GAAsBj6E,EAAOhG,GAAI8qB,EAAS9qB,IAE9D8B,EAAQ2O,EAAIjI,KAAKyzB,OAASn6B,EAC1B,IAAIq0E,EAAgB/G,GAAWpyD,EAAMvM,EAAImF,WAAW48D,WACpDx1D,EAAK1C,SAASqK,SAASwxD,EAAer0E,GAE1C,OAAO+/E,EAsYQM,CAA0BnlE,EAAMg3D,EAAShuE,GACpD,KAAK,MACD,OAzvCZ,SAASo8E,EAA+BplE,EAAMvM,EAAKzK,GAK/C,IAJA,IAAIy4E,EAAelP,GAAevyD,EAAMvM,EAAImF,WACxCiiB,EAAY4mD,EAAa3oE,SACzB+rE,GAAU,EACV3rC,OAAUnyC,EACL/D,EAAI,EAAGA,EAAIgG,EAAO7F,OAAQH,IAC3BqxE,GAAar0D,EAAMvM,EAAKzQ,EAAGgG,EAAOhG,MAClC6hF,GAAU,EACV3rC,EAAUwoC,GAAW1hE,EAAMyhE,EAAchuE,EAAKzQ,EAAGgG,EAAOhG,GAAIk2C,IAapE,OAVIA,GACAre,EAAUqK,YAAYgU,GAET,MAAZzlC,EAAIzC,OACLmhE,GAA4BnyD,EAAM,IAAmCvM,EAAImF,YACzEiiB,EAAUrmB,WAEE,OAAZf,EAAIzC,OACJ6pB,EAAUnmB,YAEPmwE,EAouCQO,CAA+BplE,EAAMg3D,EAAShuE,GACzD,KAAK,GACL,KAAK,GACL,KAAK,IACD,OA3iBZ,SAASq8E,EAAoCrlE,EAAMvM,EAAKzK,GAGpD,IAFA,IAAI8kB,EAAWra,EAAIqa,SACf+2D,GAAU,EACL7hF,EAAI,EAAGA,EAAIgG,EAAO7F,OAAQH,IAG3BwxE,GAAsBx0D,EAAMvM,EAAKzQ,EAAGgG,EAAOhG,MAC3C6hF,GAAU,GAGlB,GAAIA,EAAS,CACT,IAAIt6E,EAAOioE,GAAqBxyD,EAAMvM,EAAImF,WACtC9T,OAAQ,EACZ,OAAoB,UAAZ2O,EAAIzC,OACR,KAAK,GACDlM,EAAQkE,EACR,MACJ,KAAK,GAED,IADAlE,KACS9B,EAAI,EAAGA,EAAIgG,EAAO7F,OAAQH,IAC/B8B,EAAMgpB,EAAS9qB,GAAG+E,MAAQiB,EAAOhG,GAErC,MACJ,KAAK,IACD,IAAIwyC,EAAOxsC,EAAO,GACdmrD,EAASnrD,EAAOmG,MAAM,GAC1BrK,EAAQ0wC,EAAKM,UAAUzyC,MAAMmyC,EAAMnwC,EAAS8uD,IAGpD5pD,EAAKzF,MAAQA,EAEjB,OAAO+/E;;;;;;;OA4gBQQ,CAAoCrlE,EAAMg3D,EAAShuE,GAC9D,QACI,KAAM,eAzDHi8E,CAA0BjlE,EAAMg3D,EAAS93C,GAGxD,SAAS+kD,GAA2BjkE,GAChC,IAAIvM,EAAMuM,EAAKvM,IACf,GAAsB,EAAhBA,EAAI+0B,UAGV,IAAK,IAAIxlC,EAAI,EAAGA,EAAIyQ,EAAI4+D,MAAMlvE,OAAQH,IAAK,CACvC,IAAIg0E,EAAUvjE,EAAI4+D,MAAMrvE,GACxB,GAAoB,EAAhBg0E,EAAQhmE,MAAmC,CAC3C,IAAIgsE,EAAiB1K,GAActyD,EAAMhd,GAAG8Q,SAASmpE,gBACrD,GAAID,EACA,IAAK,IAAI9uD,EAAM,EAAGA,EAAM8uD,EAAe75E,OAAQ+qB,IAAO,CAClD,IAAIuP,EAAgBu/C,EAAe9uD,GACnCuP,EAAcva,OAAS,GACvB4xD,GAAsCr3C,EAAezd,SAIH,IAA/B,EAArBg3D,EAAQmG,cAIdn6E,GAAKg0E,EAAQE,aAoCzB,SAASoO,GAAmBtlE,EAAMg3D,EAASuN,EAAUrlD,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAI8jD,EAAIC,GAQrF,OAPiB,IAAbF,EASR,SAASgB,EAAyBvlE,EAAMg3D,EAAS93C,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAI8jD,EAAIC,GACjF,IAAIG,EAAU5N,EAAQlpD,SAAS3qB,OAC3ByhF,EAAU,GACVnQ,GAAsBz0D,EAAMg3D,EAAS,EAAG93C,GACxC0lD,EAAU,GACVnQ,GAAsBz0D,EAAMg3D,EAAS,EAAG33C,GACxCulD,EAAU,GACVnQ,GAAsBz0D,EAAMg3D,EAAS,EAAGv3C,GACxCmlD,EAAU,GACVnQ,GAAsBz0D,EAAMg3D,EAAS,EAAGn3C,GACxC+kD,EAAU,GACVnQ,GAAsBz0D,EAAMg3D,EAAS,EAAG/2C,GACxC2kD,EAAU,GACVnQ,GAAsBz0D,EAAMg3D,EAAS,EAAG52C,GACxCwkD,EAAU,GACVnQ,GAAsBz0D,EAAMg3D,EAAS,EAAGz2C,GACxCqkD,EAAU,GACVnQ,GAAsBz0D,EAAMg3D,EAAS,EAAGt2C,GACxCkkD,EAAU,GACVnQ,GAAsBz0D,EAAMg3D,EAAS,EAAGwN,GACxCI,EAAU,GACVnQ,GAAsBz0D,EAAMg3D,EAAS,EAAGyN,GA7BxCc,CAAyBvlE,EAAMg3D,EAAS93C,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAI8jD,EAAIC,GA+BpF,SAASe,EAA0BxlE,EAAMg3D,EAAShuE,GAC9C,IAAK,IAAIhG,EAAI,EAAGA,EAAIgG,EAAO7F,OAAQH,IAC/ByxE,GAAsBz0D,EAAMg3D,EAASh0E,EAAGgG,EAAOhG,IA9B/CwiF,CAA0BxlE,EAAMg3D,EAAS93C,IAGtC,EAkCX,SAASumD,GAAoBzlE,EAAMg3D,GAE/B,GADgBvE,GAAYzyD,EAAMg3D,EAAQp+D,WAC5BghB,MACV,MAAM+5C,GAA4CjB,GAASY,mBAAmBtzD,EAAMg3D,EAAQp+D,WAAY,SAAWo+D,EAAQj/B,MAAM/hC,GAAK,aAAc,SAAWghE,EAAQj/B,MAAM/hC,GAAK,SAAsD,IAA9B,EAAbgK,EAAKkD,QAG1M,SAASkwD,GAAYpzD,GACjB,KAAiB,IAAbA,EAAKkD,OAAT,CAMA,GAHAghE,GAAwBlkE,EAAMihE,GAAWyE,SACzC5B,GAAyB9jE,EAAMihE,GAAWyE,SAC1C9D,GAAgC5hE,EAAM,QAClCA,EAAK84D,YACL,IAAK,IAAI91E,EAAI,EAAGA,EAAIgd,EAAK84D,YAAY31E,OAAQH,IACzCgd,EAAK84D,YAAY91E,MA9gE7B,SAAS2iF,EAAoB3lE,GACzB,GAAmB,GAAbA,EAAKkD,MAAX,CAGA,IAAI65D,EAAiB5H,GAAsBn1D,GAC3C,GAAI+8D,EAAgB,CAChB,IAAIC,EAAiBD,EAAejpE,SAASmpE,gBACzCD,IACA/B,GAAgB+B,EAAgBA,EAAezvE,QAAQyS,IACvD0yD,GAASgB,mBAAmB1zD,MAwgEpC2lE,CAAoB3lE,GAChBA,EAAK1C,SAASgE,aAQtB,SAASskE,EAAiB5lE,GAEtB,IADA,IAAIs3C,EAAMt3C,EAAKvM,IAAI4+D,MAAMlvE,OAChBH,EAAI,EAAGA,EAAIs0D,EAAKt0D,IAAK,CAC1B,IAAIyQ,EAAMuM,EAAKvM,IAAI4+D,MAAMrvE,GACT,EAAZyQ,EAAIzC,MACJgP,EAAK1C,SAASgE,YAAYgxD,GAActyD,EAAMhd,GAAGuyE,eAEhC,EAAZ9hE,EAAIzC,MACTgP,EAAK1C,SAASgE,YAAY8wD,GAAWpyD,EAAMhd,GAAGwyE,aAE7B,SAAZ/hE,EAAIzC,OAAuD,UAAZyC,EAAIzC,QACxDyhE,GAAYzyD,EAAMhd,GAAG0gB,WAlBzBkiE,CAAiB5lE,GAEjB01D,GAAgB11D,IAChBA,EAAK1C,SAASoG,UAElB1D,EAAKkD,OAAS,KA0BlB,SAAS4gE,GAAyB9jE,EAAMK,GACpC,IAAI5M,EAAMuM,EAAKvM,IACf,GAAsB,SAAhBA,EAAI+0B,UAGV,IAAK,IAAIxlC,EAAI,EAAGA,EAAIyQ,EAAI4+D,MAAMlvE,OAAQH,IAAK,CACvC,IAAIg0E,EAAUvjE,EAAI4+D,MAAMrvE,GACJ,SAAhBg0E,EAAQhmE,MAER60E,GAAevT,GAActyD,EAAMhd,GAAGge,cAAeX,GAEQ,IAAlC,SAArB22D,EAAQmG,cAIdn6E,GAAKg0E,EAAQE,aAIzB,SAASgN,GAAwBlkE,EAAMK,GACnC,IAAI5M,EAAMuM,EAAKvM,IACf,GAAsB,SAAhBA,EAAI+0B,UAGV,IAAK,IAAIxlC,EAAI,EAAGA,EAAIyQ,EAAI4+D,MAAMlvE,OAAQH,IAAK,CACvC,IAAIg0E,EAAUvjE,EAAI4+D,MAAMrvE,GACxB,GAAoB,SAAhBg0E,EAAQhmE,MAGR,IADA,IAAI4mE,EAAgBtF,GAActyD,EAAMhd,GAAG60E,cAAcC,eAChDnkB,EAAI,EAAGA,EAAIikB,EAAcz0E,OAAQwwD,IACtCkyB,GAAejO,EAAcjkB,GAAItzC,QAGwB,IAAlC,SAArB22D,EAAQmG,cAIdn6E,GAAKg0E,EAAQE,aAIzB,SAAS2O,GAAe7lE,EAAMK,GAC1B,IAAIylE,EAAY9lE,EAAKkD,MACrB,OAAQ7C,GACJ,KAAK4gE,GAAWkD,eAC8B,IAAzB,IAAZ2B,KAC+C,KAA/B,GAAZA,GACD3S,GAAmBnzD,GAEF,GAAZ8lE,GACLC,GAAyB/lE,EAAMihE,GAAW+E,+BAGlD,MACJ,KAAK/E,GAAW+E,6BAC8B,IAAzB,IAAZF,KACe,GAAZA,EACA3S,GAAmBnzD,GAEF,GAAZ8lE,GACLC,GAAyB/lE,EAAMK,IAGvC,MACJ,KAAK4gE,GAAWmD,eAC8B,IAAzB,IAAZ0B,KAC+C,KAA/B,GAAZA,GACD5S,GAAmBlzD,GAEF,GAAZ8lE,GACLC,GAAyB/lE,EAAMihE,GAAWgF,+BAGlD,MACJ,KAAKhF,GAAWgF,6BAC8B,IAAzB,IAAZH,KACe,GAAZA,EACA5S,GAAmBlzD,GAEF,GAAZ8lE,GACLC,GAAyB/lE,EAAMK,IAGvC,MACJ,KAAK4gE,GAAWyE,QAGZtS,GAAYpzD,GACZ,MACJ,KAAKihE,GAAW8C,gBACZP,GAAgBxjE,IAI5B,SAAS+lE,GAAyB/lE,EAAMK,GACpC6jE,GAAwBlkE,EAAMK,GAC9ByjE,GAAyB9jE,EAAMK,GAEnC,SAAS2jE,GAAkBhkE,EAAMkmE,EAAYC,EAAwBC,GACjE,GAAMpmE,EAAKvM,IAAI+0B,UAAY09C,GAAiBlmE,EAAKvM,IAAI+0B,UAAY29C,EAIjE,IADA,IAAI/C,EAAYpjE,EAAKvM,IAAI4+D,MAAMlvE,OACtBH,EAAI,EAAGA,EAAIogF,EAAWpgF,IAAK,CAChC,IAAIg0E,EAAUh3D,EAAKvM,IAAI4+D,MAAMrvE,GAC7B,GAAKg0E,EAAQhmE,MAAQk1E,GAAgBlP,EAAQhmE,MAAQm1E,EAEjD,OADAzT,GAASC,eAAe3yD,EAAMg3D,EAAQp+D,WAC9BwtE,GACJ,KAAK,EACDjE,GAAoBniE,EAAMg3D,GAC1B,MACJ,KAAK,EACDyO,GAAoBzlE,EAAMg3D,GAIhCA,EAAQmG,WAAa+I,GAAiBlP,EAAQmG,WAAagJ,IAG7DnjF,GAAKg0E,EAAQE;;;;;;;QA/HzB,SAAW+J,GACPA,EAAWA,EAA4B,gBAAI,GAAK,kBAChDA,EAAWA,EAA2B,eAAI,GAAK,iBAC/CA,EAAWA,EAAyC,6BAAI,GAAK,+BAC7DA,EAAWA,EAA2B,eAAI,GAAK,iBAC/CA,EAAWA,EAAyC,6BAAI,GAAK,+BAC7DA,EAAWA,EAAoB,QAAI,GAAK,UAN5C,CAOGA,KAAeA,QAoIlB,IAAIxnB,IAAc,EAClB,SAAS4sB,KACL,IAAI5sB,GAAJ,CAGAA,IAAc,EACd,IAAI6sB,EAAW5rC,KA0CnB,SAAS6rC,IACL,OACI5T,eAAgB6T,GAChB5T,eAAgB6T,GAChB95C,mBAAoB+5C,GACpB7T,oBAAqB8T,GACrB7T,kBAAmB8T,GACnB7T,iBAAkB8T,GAClB7T,sBAAuB8T,GACvB7T,eAAgB8T,GAChB7T,mBAAoB8T,GACpB7T,mBAAoB8T,GACpB7T,YAAa8T,GACb5T,mBAAoB,SAAUtzD,EAAMpH,GAAa,OAAO,IAAIuuE,GAAcnnE,EAAMpH,IAChF26D,YAAa6T,GACb5T,iBAAkB6T,GAClB5T,eAAgB6T,IA1DSf,GAmBjC,SAASgB,IACL,OACI5U,eAAgB,aAChBC,eAAgB4U,GAChB76C,mBAAoBA,GACpBkmC,oBAAqBA,GACrBC,kBAAmBA,GACnBC,iBAAkBkB,GAClBjB,sBAAuBiB,GACvBhB,eAAgBgB,GAChBf,mBAAoBA,GACpBC,mBAAoBA,GACpBC,YAAaA,GACbE,mBAAoB,SAAUtzD,EAAMpH,GAAa,OAAO,IAAIuuE,GAAcnnE,EAAMpH,IAChF26D,YAAa,SAAUvzD,EAAMpH,EAAWgb,EAAWqhD,GAC/C,OAAOj1D,EAAKvM,IAAI8/D,YAAYvzD,EAAMpH,EAAWgb,EAAWqhD,IAE5DzB,iBAAkB,SAAUxzD,EAAMomE,GAAa,OAAOpmE,EAAKvM,IAAI+/D,iBAA+B,IAAd4S,EAAuCqB,GACnHC,GAAwB1nE,IAC5ByzD,eAAgB,SAAUzzD,EAAMomE,GAAa,OAAOpmE,EAAKvM,IAAIggE,eAA6B,IAAd2S,EAAuCqB,GAC/GC,GAAwB1nE,KAvCqBunE,GACrD7U,GAASC,eAAiB2T,EAAS3T,eACnCD,GAASE,eAAiB0T,EAAS1T,eACnCF,GAAS/lC,mBAAqB25C,EAAS35C,mBACvC+lC,GAASG,oBAAsByT,EAASzT,oBACxCH,GAASI,kBAAoBwT,EAASxT,kBACtCJ,GAASK,iBAAmBuT,EAASvT,iBACrCL,GAASM,sBAAwBsT,EAAStT,sBAC1CN,GAASO,eAAiBqT,EAASrT,eACnCP,GAASQ,mBAAqBoT,EAASpT,mBACvCR,GAASS,mBAAqBmT,EAASnT,mBACvCT,GAASU,YAAckT,EAASlT,YAChCV,GAASW,WAAaA,GACtBX,GAASY,mBAAqBgT,EAAShT,mBACvCZ,GAASa,YAAc+S,EAAS/S,YAChCb,GAASc,iBAAmB8S,EAAS9S,iBACrCd,GAASe,eAAiB6S,EAAS7S,eACnCf,GAASgB,mBAAqBA,IA4ClC,SAAS8T,GAAmBG,EAAYp9C,EAAkBC,EAAoB/2B,EAAK22B,EAAUr4B,GAEzF,OAAO6gE,GAAegV,GAAeD,EAAYv9C,EAD3BA,EAAS/3B,SAAS9D,IAAIk3B,IACgC8E,EAAkBC,GAAqB/2B,EAAK1B,GAE5H,SAAS00E,GAAoBkB,EAAYp9C,EAAkBC,EAAoB/2B,EAAK22B,EAAUr4B,GAC1F,IAAIuZ,EAAkB8e,EAAS/3B,SAAS9D,IAAIk3B,IACxCyvC,EAAO0S,GAAeD,EAAYv9C,EAAU,IAAIy9C,GAAsBv8D,GAAkBif,EAAkBC,GAC1Gs9C,EAAkBC,GAA6Bt0E,GACnD,OAAOu0E,GAAqBC,GAAYtlF,OAAQiwE,GAAgB,MAAOsC,EAAM4S,EAAiB/1E,IAElG,SAAS61E,GAAeD,EAAYv9C,EAAU9e,EAAiBif,EAAkBC,GAC7E,IAAIzjB,EAAYqjB,EAAS/3B,SAAS9D,IAAIkyC,IAClCgkB,EAAer6B,EAAS/3B,SAAS9D,IAAIykD,IAEzC,OACI5oB,SAAUA,EACV/3B,SAAUs1E,EAAYp9C,iBAAkBA,EACxC6tC,eAAgB5tC,EAAoBzjB,UAAWA,EAAWuE,gBAAiBA,EAAiBhO,SAJjFgO,EAAgB9N,eAAe,KAAM,MAIgEinD,aAAcA,GAGtI,SAASiiB,GAAwB5kE,EAAYomE,EAAWC,EAAYp2E,GAChE,IAAI+1E,EAAkBC,GAA6BI,GACnD,OAAOH,GAAqBC,GAAYtlF,OAAQgqC,GAAoB,MAAO7qB,EAAYomE,EAAWJ,EAAiB/1E,IAEvH,SAAS40E,GAAyB7kE,EAAYk1D,EAASmR,EAAY1qE,GAQ/D,OALI0qE,EAFwBC,GAAiB75E,IAAIyoE,EAAQlwD,QAAQm1D,kBAAkBhsE,SAAShD,QAK3E86E,GAA6BI,GAEvCH,GAAqBC,GAAYtlF,OAAQkwE,GAAqB,MAAO/wD,EAAYk1D,EAASmR,EAAY1qE,IAEjH,SAASmpE,GAAuBzyC,EAAYvF,EAAgBwwC,EAAqB3rE,GAE7E,OAAOq/D,GAAkB3+B,EAAYvF,EAAgBwwC,EAkFzD,SAASiJ,EAAiC50E,GACtC,IAAIlL,EASJ,SAAS+/E,EAAiB70E,GACtB,IAAI80E,GAAe,EACfC,GAAyB,EAC7B,OAA+B,IAA3BC,GAAkB3zB,MACTyzB,aAAcA,EAAcC,uBAAwBA,IAEjE/0E,EAAIvM,UAAUwK,QAAQ,SAAU+O,GAC5B,IAAIioE,EAAWD,GAAkBl6E,IAAIkS,EAAKxT,OACxB,KAAbwT,EAAKzP,OAA8C03E,IACpDH,GAAe,EACfC,EAAyBA,GAA0BE,EAASC,sBAGpEl1E,EAAIgnE,QAAQ/oE,QAAQ,SAAUtQ,GAC1BwnF,GAA2Bl3E,QAAQ,SAAUg3E,EAAUz7E,GAC/C7F,EAAiB6F,GAAOnG,aAAe1F,IACvCmnF,GAAe,EACfC,EAAyBA,GAA0BE,EAASC,yBAI/DJ,aAAcA,EAAcC,uBAAwBA,IA9BxDF,CAAiB70E,GAAsC+0E,EAAyBjgF,EAAGigF,uBAC5F,OAD+CjgF,EAAGggF,cAgClD,SAASM,EAAuBp1E,GAC5B,IAAK,IAAIzQ,EAAI,EAAGA,EAAIyQ,EAAIvM,UAAU/D,OAAQH,IAAK,CAC3C,IAAIiN,EAAWwD,EAAIvM,UAAUlE,GACzBwlF,IAIAv4E,EAASe,OAAS,MAEtB,IAAI03E,EAAWD,GAAkBl6E,IAAI0B,EAAShD,OAC1Cy7E,IACAz4E,EAASe,OAA0B,KAAjBf,EAASe,MAA8C03E,EAAS13E,MAClFf,EAASH,KAAOqmE,GAAauS,EAAS54E,MACtCG,EAASnL,MAAQ4jF,EAAS5jF,OAGlC,GAAI8jF,GAA2B9zB,KAAO,EAAG,CACrC,IAAIg0B,EAAc,IAAI79E,IAAIwI,EAAIgnE,SAC9BmO,GAA2Bl3E,QAAQ,SAAUg3E,EAAUz7E,GACnD,GAAI67E,EAAY12C,IAAIhrC,EAAiB6F,GAAOnG,YAAa,CACrD,IAAImJ,GACAhD,MAAOA,EACP+D,MAAO03E,EAAS13E,OAASw3E,EAAyB,KAA0B,GAC5E14E,KAAMqmE,GAAauS,EAAS54E,MAC5BhL,MAAO4jF,EAAS5jF,MAChByE,MAAOkK,EAAIvM,UAAU/D,QAEzBsQ,EAAIvM,UAAU/B,KAAK8K,GACnBwD,EAAI2mE,eAAejG,GAASlnE,IAAUgD,MArDtD44E,CADAp1E,EAAMA,EAAIvS,QAAQ,WAAc,OAAO+yE,MAEhCxgE,GANIA,EAtFW40E,CAAiC50E,IAG3D,IA0KIw0E,GAQAc,GACAC,GACAC,GApLAR,GAAoB,IAAIl8E,IACxBq8E,GAA6B,IAAIr8E,IACjC67E,GAAmB,IAAI77E,IAC3B,SAASs6E,GAAsB6B,GAE3B,IAAIn2E,EADJk2E,GAAkB54E,IAAI64E,EAASz7E,MAAOy7E,GAER,mBAAnBA,EAASz7E,QAAyBsF,EAAgBnL,EAAiBshF,EAASz7E,SAC/C,mBAA7BsF,EAAczL,YACrB8hF,GAA2B/4E,IAAI64E,EAASz7E,MAAOy7E,GAGvD,SAAS5B,GAA2BoC,EAAMC,GACtC,IACItF,EAAclN,GADAA,GAAkB6E,GAAkC2N,IACtB9W,MAAM,GAAGvrD,QAAQ9F,eACjEonE,GAAiBv4E,IAAIq5E,EAAMrF,GAE/B,SAASkD,KACL0B,GAAkBr6C,QAClBw6C,GAA2Bx6C,QAC3Bg6C,GAAiBh6C,QAQrB,SAAS25C,GAA6Bt0E,GAClC,GAA+B,IAA3Bg1E,GAAkB3zB,KAClB,OAAOrhD,EAEX,IAAI21E,EAWJ,SAASC,EAA2C51E,GAGhD,IAFA,IAAI61E,KACAC,EAAiB,KACZvmF,EAAI,EAAGA,EAAIyQ,EAAI4+D,MAAMlvE,OAAQH,IAAK,CACvC,IAAIg0E,EAAUvjE,EAAI4+D,MAAMrvE,GACJ,EAAhBg0E,EAAQhmE,QACRu4E,EAAiBvS,GAEjBuS,GAAkC,KAAhBvS,EAAQhmE,OAC1By3E,GAAkBr2C,IAAI4kC,EAAQ/mE,SAAShD,SACvCq8E,EAAkCnkF,KAAKokF,EAAe3wE,WACtD2wE,EAAiB,MAGzB,OAAOD,EAzBkCD,CAA2C51E,GACxF,GAAsD,IAAlD21E,EAAuCjmF,OACvC,OAAOsQ,EAIXA,EAAMA,EAAIvS,QAAQ,WAAc,OAAO+yE,KACvC,IAAK,IAAIjxE,EAAI,EAAGA,EAAIomF,EAAuCjmF,OAAQH,IAC/DwmF,EAAgC/1E,EAAK21E,EAAuCpmF,IAEhF,OAAOyQ,EAiBP,SAAS+1E,EAAgCrB,EAAYsB,GACjD,IAAK,IAAIzmF,EAAIymF,EAAU,EAAGzmF,EAAImlF,EAAW9V,MAAMlvE,OAAQH,IAAK,CACxD,IAAIg0E,EAAUmR,EAAW9V,MAAMrvE,GAC/B,GAAoB,EAAhBg0E,EAAQhmE,MAER,OAEJ,GAAoB,KAAhBgmE,EAAQhmE,MAA2C,CACnD,IAAIf,EAAW+mE,EAAQ/mE,SACnBy4E,EAAWD,GAAkBl6E,IAAI0B,EAAShD,OAC1Cy7E,IACA1R,EAAQhmE,OAAyB,KAAhBgmE,EAAQhmE,MAA8C03E,EAAS13E,MAChFf,EAASH,KAAOqmE,GAAauS,EAAS54E,MACtCG,EAASnL,MAAQ4jF,EAAS5jF,UA4E9C,SAAS2iF,GAAuBznE,EAAMogE,EAAYmE,EAAUrlD,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAI8jD,EAAIC,GAC5F,IAAIzN,EAAUh3D,EAAKvM,IAAI4+D,MAAM+N,GAE7B,OADAkE,GAAmBtkE,EAAMg3D,EAASuN,EAAUrlD,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAI8jD,EAAIC,GACxD,IAAhBzN,EAAQhmE,MACZwhE,GAAqBxyD,EAAMogE,GAAYt7E,WACvCiC,EAER,SAAS2gF,GAAuB1nE,EAAMogE,EAAYmE,EAAUrlD,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAI8jD,EAAIC,GAC5F,IAAIzN,EAAUh3D,EAAKvM,IAAI4+D,MAAM+N,GAE7B,OADAkF,GAAmBtlE,EAAMg3D,EAASuN,EAAUrlD,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,EAAI8jD,EAAIC,GACxD,IAAhBzN,EAAQhmE,MACZwhE,GAAqBxyD,EAAMogE,GAAYt7E,WACvCiC,EAER,SAASigF,GAAwBhnE,GAC7B,OAAOgoE,GAAqBC,GAAY1pD,cAAe20C,GAAoB,MAAOlzD,IAEtF,SAASinE,GAAwBjnE,GAC7B,OAAOgoE,GAAqBC,GAAYz8C,eAAgB2nC,GAAoB,MAAOnzD,IAEvF,SAASknE,GAAiBlnE,GACtB,OAAOgoE,GAAqBC,GAAYvkE,QAAS0vD,GAAa,MAAOpzD,IAazE,SAASwmE,GAAoBxmE,EAAMpH,GAC/BowE,GAAehpE,EACfipE,GAAoBrwE,EAExB,SAASwuE,GAAiBpnE,EAAMpH,EAAWgb,EAAWqhD,GAElD,OADAuR,GAAoBxmE,EAAMpH,GACnBovE,GAAqBC,GAAY1U,YAAavzD,EAAKvM,IAAI8/D,YAAa,MAAOvzD,EAAMpH,EAAWgb,EAAWqhD,IAElH,SAASoS,GAAsBrnE,EAAMomE,GACjC,GAAiB,IAAbpmE,EAAKkD,MACL,MAAM8wD,GAAmBiU,GAAYc,KAGzC,OADAvC,GAAoBxmE,EAAM0pE,GAAyB1pE,EAAM,IAClDA,EAAKvM,IAAI+/D,iBAChB,SAASmW,EAAuB3pE,EAAMpH,EAAW2rE,GAE7C,IADA,IAAIv7E,KACKP,EAAK,EAAGA,EAAKvF,UAAUC,OAAQsF,IACpCO,EAAOP,EAAK,GAAKvF,UAAUuF,GAE/B,IAAIuuE,EAAUh3D,EAAKvM,IAAI4+D,MAAMz5D,GAU7B,OATkB,IAAdwtE,EACAwD,GAAwB5pE,EAAMg3D,EAASuN,EAAUv7E,GAGjD6gF,GAAwB7pE,EAAMg3D,EAASuN,EAAUv7E,GAEjC,MAAhBguE,EAAQhmE,OACRw1E,GAAoBxmE,EAAM0pE,GAAyB1pE,EAAMpH,IAErC,IAAhBo+D,EAAQhmE,MACZwhE,GAAqBxyD,EAAMg3D,EAAQp+D,WAAW9T,WAC9CiC,GAlBiDiZ,GAqB7D,SAASsnE,GAAoBtnE,EAAMomE,GAC/B,GAAiB,IAAbpmE,EAAKkD,MACL,MAAM8wD,GAAmBiU,GAAYc,KAGzC,OADAvC,GAAoBxmE,EAAM8pE,GAA0B9pE,EAAM,IACnDA,EAAKvM,IAAIggE,eAChB,SAASsW,EAAuB/pE,EAAMpH,EAAW2rE,GAE7C,IADA,IAAIv7E,KACKP,EAAK,EAAGA,EAAKvF,UAAUC,OAAQsF,IACpCO,EAAOP,EAAK,GAAKvF,UAAUuF,GAE/B,IAAIuuE,EAAUh3D,EAAKvM,IAAI4+D,MAAMz5D,GAU7B,OATkB,IAAdwtE,EACAwD,GAAwB5pE,EAAMg3D,EAASuN,EAAUv7E,GAGjD6gF,GAAwB7pE,EAAMg3D,EAASuN,EAAUv7E,GAEjC,EAAhBguE,EAAQhmE,OACRw1E,GAAoBxmE,EAAM8pE,GAA0B9pE,EAAMpH,IAEtC,IAAhBo+D,EAAQhmE,MACZwhE,GAAqBxyD,EAAMg3D,EAAQp+D,WAAW9T,WAC9CiC,GAlB+CiZ,GAqB3D,SAAS4pE,GAAwB5pE,EAAMg3D,EAASuN,EAAUyF,GAEtD,GADc1F,GAAmBjhF,WAAM,EAAQgC,GAAU2a,EAAMg3D,EAASuN,GAAWyF,IACtE,CACT,IAAIhhF,EAAsB,IAAbu7E,EAA+ByF,EAAY,GAAKA,EAC7D,GAAoB,MAAhBhT,EAAQhmE,MAAmC,CAE3C,IADA,IAAIi5E,KACKjnF,EAAI,EAAGA,EAAIg0E,EAAQlpD,SAAS3qB,OAAQH,IAAK,CAC9C,IAAIi2E,EAAUjC,EAAQlpD,SAAS9qB,GAC3B8B,EAAQkE,EAAOhG,GACC,EAAhBi2E,EAAQjoE,QACRi5E,GA4BeliF,EA5ByBkxE,EAAQ0I,gBA+BzD,eADP55E,EAIJ,SAASmiF,EAAoBx2C,GACzB,OAAOA,EAAMxhC,QAAQi4E,GAAmB,WAEpC,IADA,IAAIzlF,KACK+D,EAAK,EAAGA,EAAKvF,UAAUC,OAAQsF,IACpC/D,EAAE+D,GAAMvF,UAAUuF,GAEtB,MAAO,IAAM/D,EAAE,GAAG26C,gBAVf6qC,CAAoBniF,EAAKmK,QAAQ,QAAS,SA7B7Bk4E,GAA2BtlF,IAGvC,IAAIqzE,EAAQnB,EAAQtoE,OAChB2tC,EAAKi2B,GAActyD,EAAMm4D,EAAMv/D,WAAW28D,cAC9C,GAAK4C,EAAMrxD,QAAQ/e,KAMf,IAAK,IAAIsiF,KAAQJ,EAEA,OADTnlF,EAAQmlF,EAAcI,IAEtBrqE,EAAK1C,SAAS4V,aAAampB,EAAIguC,EAAMvlF,GAGrCkb,EAAK1C,SAAS8X,gBAAgBinB,EAAIguC,QAV1CrqE,EAAK1C,SAASqK,SAAS00B,EAAI,YAAcpqC,KAAKjF,UAAUi9E,EAAe,KAAM,KAoB7F,IAAmCliF,EAHnC,SAAS8hF,GAAwB7pE,EAAMg3D,EAASuN,EAAUv7E,GACtDs8E,GAAmBjiF,WAAM,EAAQgC,GAAU2a,EAAMg3D,EAASuN,GAAWv7E,KA1GzE,SAAWi/E,GACPA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAA2B,cAAI,GAAK,gBAChDA,EAAYA,EAA4B,eAAI,GAAK,iBACjDA,EAAYA,EAAqB,QAAI,GAAK,UAC1CA,EAAYA,EAAyB,YAAI,GAAK,cALlD,CAMGA,KAAgBA,QA2GnB,IAAIkC,GAAoB,WAUxB,SAASC,GAA2BtlF,GAChC,IAEI,OAAgB,MAATA,EAAgBA,EAAM4C,WAAWyH,MAAM,EAAG,IAAMrK,EAE3D,MAAOG,GACH,MAAO,yDAGf,SAASykF,GAAyB1pE,EAAMpH,GACpC,IAAK,IAAI5V,EAAI4V,EAAW5V,EAAIgd,EAAKvM,IAAI4+D,MAAMlvE,OAAQH,IAAK,CACpD,IAAIg0E,EAAUh3D,EAAKvM,IAAI4+D,MAAMrvE,GAC7B,GAAoB,MAAhBg0E,EAAQhmE,OAAqCgmE,EAAQlpD,UAAYkpD,EAAQlpD,SAAS3qB,OAClF,OAAOH,EAGf,OAAO,KAEX,SAAS8mF,GAA0B9pE,EAAMpH,GACrC,IAAK,IAAI5V,EAAI4V,EAAW5V,EAAIgd,EAAKvM,IAAI4+D,MAAMlvE,OAAQH,IAAK,CACpD,IAAIg0E,EAAUh3D,EAAKvM,IAAI4+D,MAAMrvE,GAC7B,GAAqB,EAAhBg0E,EAAQhmE,OAAkCgmE,EAAQlpD,UAAYkpD,EAAQlpD,SAAS3qB,OAChF,OAAOH,EAGf,OAAO,KAEX,IAAImkF,GAA+B,WAC/B,SAASA,EAAcnnE,EAAMpH,GACzB/W,KAAKme,KAAOA,EACZne,KAAK+W,UAAYA,EACA,MAAbA,IACA/W,KAAK+W,UAAYA,EAAY,GAEjC/W,KAAKm1E,QAAUh3D,EAAKvM,IAAI4+D,MAAMz5D,GAG9B,IAFA,IAAIu/D,EAAQt2E,KAAKm1E,QACbsT,EAAStqE,EACNm4D,GAAiD,IAAzB,EAAdA,EAAMnnE,QACnBmnE,EAAQA,EAAMzpE,OAElB,IAAKypE,EACD,MAAQA,GAASmS,GACbnS,EAAQ9C,GAAaiV,GACrBA,EAASA,EAAO57E,OAGxB7M,KAAKs2E,MAAQA,EACbt2E,KAAKyoF,OAASA,EA+GlB,OA7GAroF,OAAO+B,eAAemjF,EAAczkF,UAAW,gBAC3C6L,IAAK,WAED,OAAO+jE,GAAczwE,KAAKyoF,OAAQzoF,KAAKs2E,MAAMv/D,WAAWoI,eAAiBnf,KAAKme,MAElFmrB,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAemjF,EAAczkF,UAAW,YAC3C6L,IAAK,WAAc,OAAOsvE,GAAiBh8E,KAAKyoF,OAAQzoF,KAAKs2E,QAC7DhtC,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAemjF,EAAczkF,UAAW,aAC3C6L,IAAK,WAAc,OAAO1M,KAAK0oF,aAAap/E,WAC5CggC,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAemjF,EAAczkF,UAAW,WAC3C6L,IAAK,WAAc,OAAO1M,KAAK0oF,aAAax4E,SAC5Co5B,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAemjF,EAAczkF,UAAW,kBAC3C6L,IAAK,WACD,IAAIkD,KACJ,GAAI5P,KAAKs2E,MACL,IAAK,IAAIn1E,EAAInB,KAAKs2E,MAAMv/D,UAAY,EAAG5V,GAAKnB,KAAKs2E,MAAMv/D,UAAY/W,KAAKs2E,MAAMjB,WAAYl0E,IAAK,CAC3F,IAAIwnF,EAAW3oF,KAAKyoF,OAAO72E,IAAI4+D,MAAMrvE,GAChB,MAAjBwnF,EAASx5E,OACTS,EAAOtM,KAAKqlF,EAASv6E,SAAShD,OAElCjK,GAAKwnF,EAAStT,WAGtB,OAAOzlE,GAEX05B,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAemjF,EAAczkF,UAAW,cAC3C6L,IAAK,WACD,IAAI06D,KACJ,GAAIpnE,KAAKs2E,MAAO,CACZsS,GAAkB5oF,KAAKyoF,OAAQzoF,KAAKs2E,MAAOlP,GAC3C,IAAK,IAAIjmE,EAAInB,KAAKs2E,MAAMv/D,UAAY,EAAG5V,GAAKnB,KAAKs2E,MAAMv/D,UAAY/W,KAAKs2E,MAAMjB,WAAYl0E,IAAK,CAC3F,IAAIwnF,EAAW3oF,KAAKyoF,OAAO72E,IAAI4+D,MAAMrvE,GAChB,MAAjBwnF,EAASx5E,OACTy5E,GAAkB5oF,KAAKyoF,OAAQE,EAAUvhB,GAE7CjmE,GAAKwnF,EAAStT,YAGtB,OAAOjO,GAEX99B,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAemjF,EAAczkF,UAAW,0BAC3C6L,IAAK,WACD,IAAI2qE,EA6DhB,SAASwR,EAAgB1qE,GACrB,KAAOA,IAAS01D,GAAgB11D,IAC5BA,EAAOA,EAAKtR,OAEhB,OAAIsR,EAAKtR,OACE4jE,GAActyD,EAAKtR,OAAQ2mE,GAAar1D,GAAMpH,WAElD,KApEc8xE,CAAgB7oF,KAAK0oF,cAClC,OAAOrR,EAASA,EAAO3D,mBAAgBxuE,GAE3CokC,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAemjF,EAAczkF,UAAW,cAC3C6L,IAAK,WACD,OAA4B,EAArB1M,KAAKm1E,QAAQhmE,MAA2BskE,GAAWzzE,KAAKme,KAAMne,KAAKm1E,SACtE1B,GAAWzzE,KAAKyoF,OAAQzoF,KAAKs2E,QAErChtC,YAAY,EACZpG,cAAc,IAElBoiD,EAAczkF,UAAUqxE,SAAW,SAAU92B,GAEzC,IADA,IAII0tC,EACAC,EALA5hF,KACKP,EAAK,EAAGA,EAAKvF,UAAUC,OAAQsF,IACpCO,EAAOP,EAAK,GAAKvF,UAAUuF,GAIN,EAArB5G,KAAKm1E,QAAQhmE,OACb25E,EAAa9oF,KAAKme,KAAKvM,IACvBm3E,EAAe/oF,KAAKm1E,QAAQp+D,YAG5B+xE,EAAa9oF,KAAKyoF,OAAO72E,IACzBm3E,EAAe/oF,KAAKs2E,MAAMv/D,WAI9B,IAAIiyE,EAoBZ,SAASC,EAAmB3C,EAAYvvE,GAEpC,IADA,IAAIiyE,GAAmB,EACd7nF,EAAI,EAAGA,GAAK4V,EAAW5V,IAER,EADNmlF,EAAW9V,MAAMrvE,GACnBgO,OACR65E,IAGR,OAAOA,EA5BmBC,CAAmBH,EAAYC,GACjDG,GAAuB,EAW3BJ,EAAWzpF,QAVM,WACb,IAAIqH,EAEJ,QADAwiF,IAC4BF,GAChBtiF,EAAK00C,EAAQ73C,OAAOuD,KAAKtF,MAAMkF,EAAIlD,GAAU43C,GAAUj0C,IAGxDirE,KAIX8W,EAAsBF,IACtB5tC,EAAQ73C,MAAM,qEACd63C,EAAQ73C,MAAM/B,MAAM45C,EAAS53C,EAAS2D,MAGvCm+E,EAnIuB,GAwJlC,SAASsD,GAAkBzqE,EAAMg3D,EAAS/N,GACtC,IAAK,IAAI+hB,KAAWhU,EAAQ/N,WACxBA,EAAW+hB,GAAWrI,GAAc3iE,EAAMg3D,EAASA,EAAQ/N,WAAW+hB,IAG9E,SAAShD,GAAqB3nE,EAAQ5T,EAAIb,EAAMpD,GAC5C,IAAIyiF,EAAYlC,GACZh8D,EAAUi8D,GACVkC,EAAejC,GACnB,IACIF,GAAiB1oE,EACjB,IAAI23B,EAASvrC,EAAGpJ,MAAMuI,EAAMpD,GAI5B,OAHAwgF,GAAej8D,EACfk8D,GAAoBiC,EACpBnC,GAAiBkC,EACVjzC,EAEX,MAAO/yC,GACH,GAhrHR,SAASkmF,EAAiBz0C,GACtB,QAASmc,GAAgBnc,GA+qHjBy0C,CAAiBlmF,KAAO+jF,GACxB,MAAM/jF,EAEV,MArsHR,SAASmmF,EAAsB10C,EAAK3kC,GAOhC,OANM2kC,aAAejxC,QAGjBixC,EAAM,IAAIjxC,MAAMixC,EAAIhvC,aAExBosE,GAAiBp9B,EAAK3kC,GACf2kC,EA8rHG00C,CAAsBnmF,EAAGomF,OAGvC,SAASA,KACL,OAAOrC,GAAe,IAAI7B,GAAc6B,GAAcC,IAAqB,KAE/E,IAAIpB,GAAuC,WACvC,SAASA,EAAsBxpB,GAC3Bx8D,KAAKw8D,SAAWA,EAqBpB,OAnBAwpB,EAAsBnlF,UAAU8a,eAAiB,SAAUsJ,EAASwkE,GAChE,OAAO,IAAIC,GAAe1pF,KAAKw8D,SAAS7gD,eAAesJ,EAASwkE,KAEpEzD,EAAsBnlF,UAAUqtB,MAAQ,WAChCluB,KAAKw8D,SAAStuC,OACdluB,KAAKw8D,SAAStuC,SAGtB83D,EAAsBnlF,UAAUmZ,IAAM,WAC9Bha,KAAKw8D,SAASxiD,KACdha,KAAKw8D,SAASxiD,OAGtBgsE,EAAsBnlF,UAAU8oF,kBAAoB,WAChD,OAAI3pF,KAAKw8D,SAASmtB,kBACP3pF,KAAKw8D,SAASmtB,oBAElBx/E,QAAQC,QAAQ,OAEpB47E,EAvB+B,GAyBtC0D,GAAgC,WAChC,SAASA,EAAeltB,GACpBx8D,KAAKw8D,SAAWA,EAShBx8D,KAAK4pF,oBAAsBJ,GAC3BxpF,KAAK0I,KAAO1I,KAAKw8D,SAAS9zD,KAwI9B,OAtIAtI,OAAO+B,eAAeunF,EAAe7oF,UAAW,gBAC5C6L,IAAK,WAAc,OAAO1M,KAAK4pF,uBAC/BtgD,YAAY,EACZpG,cAAc,IAElBwmD,EAAe7oF,UAAU4e,YAAc,SAAUb,IAzlKrD,SAASirE,EAAyBjrE,GAC9BupD,GAAuBj3B,OAAOtyB,EAAKooD,YAylK/B6iB,CAAyBzhB,GAAaxpD,IAClC5e,KAAKw8D,SAAS/8C,aACdzf,KAAKw8D,SAAS/8C,YAAYb,IAGlC8qE,EAAe7oF,UAAUghB,QAAU,WAAc7hB,KAAKw8D,SAAS36C,WAC/D6nE,EAAe7oF,UAAUiuB,cAAgB,SAAU5oB,EAAM4jF,GACrD,IAAItvC,EAAKx6C,KAAKw8D,SAAS1tC,cAAc5oB,EAAM4jF,GACvCC,EAAW/pF,KAAKgqF,aACpB,GAAID,EAAU,CACV,IAAIE,EAAU,IAAI/iB,GAAa1sB,EAAI,KAAMuvC,GACzCE,EAAQ/jF,KAAOA,EACfmiE,GAAe4hB,GAEnB,OAAOzvC,GAEXkvC,EAAe7oF,UAAUg5B,cAAgB,SAAU52B,GAC/C,IAAI22B,EAAU55B,KAAKw8D,SAAS3iC,cAAc52B,GACtC8mF,EAAW/pF,KAAKgqF,aAIpB,OAHID,GACA1hB,GAAe,IAAItB,GAAUntC,EAAS,KAAMmwD,IAEzCnwD,GAEX8vD,EAAe7oF,UAAU8e,WAAa,SAAU1c,GAC5C,IAAI0G,EAAO3J,KAAKw8D,SAAS78C,WAAW1c,GAChC8mF,EAAW/pF,KAAKgqF,aAIpB,OAHID,GACA1hB,GAAe,IAAItB,GAAUp9D,EAAM,KAAMogF,IAEtCpgF,GAEX+/E,EAAe7oF,UAAUyhB,YAAc,SAAUzV,EAAQ86D,GACrD,IAAIsiB,EAAU7hB,GAAav7D,GACvBq9E,EAAe9hB,GAAaT,GAC5BsiB,GAAWC,GAAgBD,aAAmB/iB,IAC9C+iB,EAAQ9iB,SAAS+iB,GAErBlqF,KAAKw8D,SAASl6C,YAAYzV,EAAQ86D,IAEtC+hB,EAAe7oF,UAAU0e,aAAe,SAAU1S,EAAQ86D,EAAUD,GAChE,IAAIuiB,EAAU7hB,GAAav7D,GACvBq9E,EAAe9hB,GAAaT,GAC5BwiB,EAAa/hB,GAAaV,GAC1BuiB,GAAWC,GAAgBD,aAAmB/iB,IAC9C+iB,EAAQ1qE,aAAa4qE,EAAYD,GAErClqF,KAAKw8D,SAASj9C,aAAa1S,EAAQ86D,EAAUD,IAEjDgiB,EAAe7oF,UAAU2e,YAAc,SAAU3S,EAAQu9E,GACrD,IAAIH,EAAU7hB,GAAav7D,GACvBq9E,EAAe9hB,GAAagiB,GAC5BH,GAAWC,GAAgBD,aAAmB/iB,IAC9C+iB,EAAQzqE,YAAY0qE,GAExBlqF,KAAKw8D,SAASh9C,YAAY3S,EAAQu9E,IAEtCV,EAAe7oF,UAAU6wB,kBAAoB,SAAU6kD,EAAgB8T,GACnE,IAAI7vC,EAAKx6C,KAAKw8D,SAAS9qC,kBAAkB6kD,EAAgB8T,GACrDN,EAAWP,KAIf,OAHIO,GACA1hB,GAAe,IAAInB,GAAa1sB,EAAI,KAAMuvC,IAEvCvvC,GAEXkvC,EAAe7oF,UAAUwwB,aAAe,SAAUmpB,EAAIt0C,EAAMjD,EAAO6mF,GAC/D,IAAIG,EAAU7hB,GAAa5tB,GACvByvC,GAAWA,aAAmB/iB,KAE9B+iB,EAAQ53E,WADOy3E,EAAYA,EAAY,IAAM5jF,EAAOA,GACrBjD,GAEnCjD,KAAKw8D,SAASnrC,aAAampB,EAAIt0C,EAAMjD,EAAO6mF,IAEhDJ,EAAe7oF,UAAU0yB,gBAAkB,SAAUinB,EAAIt0C,EAAM4jF,GAC3D,IAAIG,EAAU7hB,GAAa5tB,GACvByvC,GAAWA,aAAmB/iB,KAE9B+iB,EAAQ53E,WADOy3E,EAAYA,EAAY,IAAM5jF,EAAOA,GACrB,MAEnClG,KAAKw8D,SAASjpC,gBAAgBinB,EAAIt0C,EAAM4jF,IAE5CJ,EAAe7oF,UAAUqmB,SAAW,SAAUszB,EAAIt0C,GAC9C,IAAI+jF,EAAU7hB,GAAa5tB,GACvByvC,GAAWA,aAAmB/iB,KAC9B+iB,EAAQzyD,QAAQtxB,IAAQ,GAE5BlG,KAAKw8D,SAASt1C,SAASszB,EAAIt0C,IAE/BwjF,EAAe7oF,UAAUsmB,YAAc,SAAUqzB,EAAIt0C,GACjD,IAAI+jF,EAAU7hB,GAAa5tB,GACvByvC,GAAWA,aAAmB/iB,KAC9B+iB,EAAQzyD,QAAQtxB,IAAQ,GAE5BlG,KAAKw8D,SAASr1C,YAAYqzB,EAAIt0C,IAElCwjF,EAAe7oF,UAAU2lB,SAAW,SAAUg0B,EAAI8vC,EAAOrnF,EAAOkM,GAC5D,IAAI86E,EAAU7hB,GAAa5tB,GACvByvC,GAAWA,aAAmB/iB,KAC9B+iB,EAAQv4E,OAAO44E,GAASrnF,GAE5BjD,KAAKw8D,SAASh2C,SAASg0B,EAAI8vC,EAAOrnF,EAAOkM,IAE7Cu6E,EAAe7oF,UAAUgmB,YAAc,SAAU2zB,EAAI8vC,EAAOn7E,GACxD,IAAI86E,EAAU7hB,GAAa5tB,GACvByvC,GAAWA,aAAmB/iB,KAC9B+iB,EAAQv4E,OAAO44E,GAAS,MAE5BtqF,KAAKw8D,SAAS31C,YAAY2zB,EAAI8vC,EAAOn7E,IAEzCu6E,EAAe7oF,UAAU+lB,YAAc,SAAU4zB,EAAIt0C,EAAMjD,GACvD,IAAIgnF,EAAU7hB,GAAa5tB,GACvByvC,GAAWA,aAAmB/iB,KAC9B+iB,EAAQn+B,WAAW5lD,GAAQjD,GAE/BjD,KAAKw8D,SAAS51C,YAAY4zB,EAAIt0C,EAAMjD,IAExCymF,EAAe7oF,UAAUsxB,OAAS,SAAUxwB,EAAQowB,EAAWyX,GAC3D,GAAsB,iBAAX7nC,EAAqB,CAC5B,IAAIsoF,EAAU7hB,GAAazmE,GACvBsoF,GACAA,EAAQp+B,UAAUvoD,KAAK,IAAIwjE,GAAc/0C,EAAWyX,IAG5D,OAAOxpC,KAAKw8D,SAASrqC,OAAOxwB,EAAQowB,EAAWyX,IAEnDkgD,EAAe7oF,UAAU6X,WAAa,SAAUkG,GAAQ,OAAO5e,KAAKw8D,SAAS9jD,WAAWkG,IACxF8qE,EAAe7oF,UAAUi6C,YAAc,SAAUl8B,GAAQ,OAAO5e,KAAKw8D,SAAS1hB,YAAYl8B,IAC1F8qE,EAAe7oF,UAAUilB,SAAW,SAAUlH,EAAM3b,GAAS,OAAOjD,KAAKw8D,SAAS12C,SAASlH,EAAM3b,IAC1FymF,EApJwB,GA2L/Ba,GAAkC,SAAUjiD,GAE5C,SAASiiD,EAAiBj4C,EAAYJ,EAAsBs4C,GACxD,IAAIhiD,EAGJF,EAAO/mC,KAAKvB,OAASA,KAIrB,OAHAwoC,EAAM8J,WAAaA,EACnB9J,EAAM0J,qBAAuBA,EAC7B1J,EAAMgiD,oBAAsBA,EACrBhiD,EAUX,OAnBA9nC,EAAU6pF,EAAkBjiD,GAW5BiiD,EAAiB1pF,UAAUC,OAAS,SAAUisC,GAC1Cy3C,KAIA,IAAI5yE,EA7BZ,SAAS64E,EAAwB74E,GAC7B,IAAIvM,EAAY9E,MAAMoqD,KAAK/4C,EAAIvM,WAC3BuzE,EAAUr4E,MAAMoqD,KAAK/4C,EAAIgnE,SACzBL,KACJ,IAAK,IAAI32E,KAAOgQ,EAAI2mE,eAChBA,EAAe32E,GAAOgQ,EAAI2mE,eAAe32E,GAE7C,OACIvC,QAASuS,EAAIvS,QACbw5E,OAAQjnE,EAAIinE,OAAQxzE,UAAWA,EAAWuzE,QAASA,EAASL,eAAgBA,GAoBlEkS,CAAwB3V,GAAkB90E,KAAKwqF,sBACzD,OAAO3Z,GAASI,kBAAkBjxE,KAAKsyC,WAAYvF,GAAkBngC,GAASI,KAAMhN,KAAKkyC,qBAAsBtgC,IAE5G24E,EApB0B,CAqBnC1hD,IA8BE6hD,GAA8C,SAAUpiD,GAExD,SAASoiD,IACL,OAAkB,OAAXpiD,GAAmBA,EAAO9mC,MAAMxB,KAAMqB,YAAcrB,KAO/D,OATAU,EAAUgqF,EAA8BpiD,GAIxCoiD,EAA6B7pF,UAAU8a,eAAiB,SAAUgvE,EAAYlB,GAC1E,IAAIhuE,EAAW6sB,EAAOznC,UAAU8a,eAAepa,KAAKvB,KAAM2qF,EAAYlB,GAEtE,OADAhuE,EAASmuE,oBAAsB,WAAc,OAAO,IAAIgB,GAAoBlgE,OACrEjP,GAEJivE,EAVsC,CAW/C1E,IAME4E,GAAqC,WACrC,SAASA,EAAoB/pE,GACzB7gB,KAAK6gB,SAAWA,EAEhB7gB,KAAK+W,UAAY8J,EAAWA,EAASvf,OAAS,KAsFlD,OApFAlB,OAAO+B,eAAeyoF,EAAoB/pF,UAAW,QACjD6L,IAAK,WAAc,OAAO1M,KAAK6gB,UAC/ByoB,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAeyoF,EAAoB/pF,UAAW,YACjD6L,IAAK,WACD,OAAuB,OAAnB1M,KAAK+W,UAEE,IAAI6vB,GADC5mC,KAAKme,KAAK1I,IAAO/M,KAAK1I,KAAK+W,WACR/W,KAAKme,MAEjCvR,GAASI,MAEpBs8B,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAeyoF,EAAoB/pF,UAAW,aACjD6L,IAAK,WAED,GAAuB,OAAnB1M,KAAK+W,UACL,OAAO,KAEX,IACIqC,EADQpZ,KAAKme,KAAK1I,IACC2D,WACvB,OAAQA,IAAqD,GAAvCA,EAAW1N,QAAQ1L,KAAK+W,WAC1C,KACA/W,KAAKme,KAAKne,KAAK+W,WAAWrO,KAAKwN,KAEvCozB,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAeyoF,EAAoB/pF,UAAW,kBAEjD6L,IAAK,WAED,IAAIiH,EAAgB3T,KAAKme,KAAK1I,IAAOnE,WACrC,GAAuB,OAAnBtR,KAAK+W,WAAuC,MAAjBpD,EAC3B,SAEJ,IAAIk3E,EAAe7qF,KAAKme,KAAK1I,IAAO/M,KAAK1I,KAAK+W,WAC1C+zE,EAAWD,GAAgB,GAE/B,OAAOl3E,EAAcrG,MAAMw9E,EADdA,GAA2B,KAAfD,KAG7BvhD,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAeyoF,EAAoB/pF,UAAW,cACjD6L,IAAK,WAED,MAAM,IAAI9I,MAAM,+BAEpB0lC,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAeyoF,EAAoB/pF,UAAW,WACjD6L,IAAK,WACD,OAAuB,OAAnB1M,KAAK+W,UACE,KAEC/W,KAAKme,KAAKne,KAAK+W,WACdoH,KAAKjI,KAEtBozB,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAeyoF,EAAoB/pF,UAAW,0BACjD6L,IAAK,WAAc,MAAM,IAAI9I,MAAM,2BACnC0lC,YAAY,EACZpG,cAAc,IAElB9iC,OAAO+B,eAAeyoF,EAAoB/pF,UAAW,cACjD6L,IAAK,WAAc,MAAM,IAAI9I,MAAM,2BACnC0lC,YAAY,EACZpG,cAAc,IAGlB0nD,EAAoB/pF,UAAUqxE,SAAW,SAAU92B,GAE/C,IADA,IAAIj0C,KACKP,EAAK,EAAGA,EAAKvF,UAAUC,OAAQsF,IACpCO,EAAOP,EAAK,GAAKvF,UAAUuF,GAE/Bw0C,EAAQ73C,MAAM/B,MAAM45C,EAAS53C,EAAS2D,KAEnCyjF,EA1F6B,GA6FpCG,GAAmC,WACnC,SAASA,IACL/qF,KAAKgrF,YAYT,OAVAD,EAAkBlqF,UAAU27B,aAAe,WACvC,IAAK,IAAIr7B,EAAI,EAAGA,EAAInB,KAAKgrF,SAAS1pF,OAAQH,IAAK,CAC3C,IAAI8pF,EAASjrF,KAAKgrF,SAAS7pF,GACtB8pF,EAAOp+E,QACRo+E,EAAOC,OAGflrF,KAAKgrF,SAAS1pF,OAAS,GAE3BypF,EAAkBlqF,UAAUsqF,YAAc,SAAUF,GAAUjrF,KAAKgrF,SAAS1nF,KAAK2nF,IAC1EF,EAd2B,GAyDlCK,GAAoC39B,GACpC49B,GAAoC78B,GACpC88B,GAAqC18B,GACrC28B,GAAmCp8B,GACnCq8B,GAA+Bl8B,GAW/Bm8B,IATc/nF,GAAyB8J,QAASC,OAAQC,SAAUhK,IAS5B0nC,IACtCsgD,GAAuCpgD,GACvCqgD,GAA8CngD,GAC9CogD,GAA6C9/C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CjDxsC,EAAQ6hE,eAAiBA,GACzB7hE,EAAQuiE,eAAiBA,GACzBviE,EAAQusF,gBAp/MR,SAASA,KACDztB,KAAcA,GAAUlxB,WACxBkxB,GAAUv8C,WAm/MlBviB,EAAQqiE,YAAcA,GACtBriE,EAAQ8hE,YAAcA,GACtB9hE,EAAQ+jE,eAAiBA,GACzB/jE,EAAQgiE,sBAAwBA,GAChChiE,EAAQ4hE,aAAeA,GACvB5hE,EAAQwsF,eA71UR,SAASA,KACL,GAAIlzC,GACA,MAAM,IAAIh1C,MAAM,iDAEpB+0C,IAAW,GA01Ufr5C,EAAQu5C,UAAYA,GACpBv5C,EAAQ+4D,OAASA,GACjB/4D,EAAQ05D,iBAAmBA,GAC3B15D,EAAQu5D,qBAAuBA,GAC/Bv5D,EAAQw5D,YAAcA,GACtBx5D,EAAQy5D,uBAAyBA,GACjCz5D,EAAQm4D,gBAAkBA,GAC1Bn4D,EAAQo4D,sBAAwBA,GAChCp4D,EAAQ4nE,aAAeA,GACvB5nE,EAAQynE,UAAYA,GACpBznE,EAAQysF,iBAhlLR,SAASA,GAAiBC,GACtB,OAAOA,EAAS3gF,IAAI,SAAUmvC,GAAM,OAAOA,EAAG/M,iBAglLlDnuC,EAAQ8oE,aAAeA,GACvB9oE,EAAQg/D,YAAcA,GACtBh/D,EAAQ4gE,oBAAsBA,GAC9B5gE,EAAQ2sF,qBA1mNR,SAASA,GAAqBhkC,GAC1BmY,GAAqBnY,GA0mNzB3oD,EAAQmwE,aAAeA,GACvBnwE,EAAQowE,oBAAsBA,GAC9BpwE,EAAQkwE,UAAYA,GACpBlwE,EAAQ0wE,kBAAoBA,GAC5B1wE,EAAQm7D,eAAiBA,GACzBn7D,EAAQq7D,SAAWA,GACnBr7D,EAAQy7D,kBAAoBA,GAC5Bz7D,EAAQ67D,gBAAkBA,GAC1B77D,EAAQqmD,KAAOA,GACfrmD,EAAQ+0C,aAAeA,GACvB/0C,EAAQ6xD,aAAeA,GACvB7xD,EAAQs/C,UAAYA,GACpBt/C,EAAQ+I,6BAA+BA,EACvC/I,EAAQgJ,UAAYA,EACpBhJ,EAAQwJ,aAAeA,EACvBxJ,EAAQkJ,gBAAkBA,EAC1BlJ,EAAQ8I,MAAQA,EAChB9I,EAAQ0J,UAAYA,EACpB1J,EAAQyJ,aAAeA,EACvBzJ,EAAQswD,UAAYA,GACpBtwD,EAAQqwD,UAAYA,GACpBrwD,EAAQ8wD,YAAcA,GACtB9wD,EAAQ+wD,aAAeA,GACvB/wD,EAAQ4wD,MAAQA,GAChB5wD,EAAQ6wD,OAASA,GACjB7wD,EAAQwwD,KAAOA,GACfxwD,EAAQ4sF,wBA9hRJhmF,KAAM,mBA+hRV5G,EAAQ6sF,kBAvhRJjmF,KAAM,oBAwhRV5G,EAAQgxD,SAAWA,GACnBhxD,EAAQkuD,QAAUA,GAClBluD,EAAQixD,QAAUA,GAClBjxD,EAAQyF,iBAAmBA,EAC3BzF,EAAQ6F,eAAiBA,EACzB7F,EAAQsM,WAAaA,GACrBtM,EAAQyM,kBAAoBA,GAC5BzM,EAAQsxD,WAAaA,GACrBtxD,EAAQ2N,OAASA,GACjB3N,EAAQkN,SAAWA,GACnBlN,EAAQsN,SAAWA,GACnBtN,EAAQs1D,mBAAqBA,GAC7Bt1D,EAAQswC,eAAiBA,GACzBtwC,EAAQy0D,0BAA4BA,GACpCz0D,EAAQozD,cAAgBA,GACxBpzD,EAAQoG,eAAiBA,EACzBpG,EAAQ0M,OAASA,GACjB1M,EAAQ2M,SAAWA,GACnB3M,EAAQ4M,KAAOA,GACf5M,EAAQ6M,SAAWA,GACnB7M,EAAQ8M,KAAOA,GACf9M,EAAQg8D,OAASA,GACjBh8D,EAAQ8sF,YAAc/tB,GACtB/+D,EAAQikC,oBAAsBA,GAC9BjkC,EAAQokC,SAAWA,GACnBpkC,EAAQukC,UAAYA,GACpBvkC,EAAQskC,iBAAmBA,GAC3BtkC,EAAQqkC,aAAeA,GACvBrkC,EAAQ26D,iBAAmBA,GAC3B36D,EAAQm6D,SAAWA,GACnBn6D,EAAQ46D,gBAAkBA,GAC1B56D,EAAQ65D,6BAA+BA,GACvC75D,EAAQgoC,iBAAmBA,GAC3BhoC,EAAQ+nC,aAAeA,GACvB/nC,EAAQwoC,yBAA2BA,GACnCxoC,EAAQkuC,WAAaA,GACrBluC,EAAQupC,gBAAkBA,GAC1BvpC,EAAQspC,YAAcA,GACtBtpC,EAAQ2lE,sBAAwBA,GAChC3lE,EAAQ+sF,iBA7oMR,SAASA,GAAiBl4E,GACtB,IAAI9U,EAAU6lE,GAAgBx4D,IAAIyH,GAClC,IAAK9U,EACD,MAAM,IAAIuE,MAAM,qBAAuBuQ,EAAK,WAChD,OAAO9U;;;;;;;QA0oMXC,EAAQ63C,UAAYguB,GACpB7lE,EAAQumE,uBAAyBA,GACjCvmE,EAAQmmE,6BAA+BA,GACvCnmE,EAAQ41C,YAAcA,GACtB51C,EAAQonE,iBAAmBA,GAC3BpnE,EAAQunE,gBAAkBA,GAC1BvnE,EAAQwpC,QAAU89B,GAClBtnE,EAAQqnE,kBAAoBA,GAC5BrnE,EAAQmpE,sBAAwBA,GAChCnpE,EAAQuvE,gBAAkBA,GAC1BvvE,EAAQ4vE,gBAAkBA,GAC1B5vE,EAAQwd,aAAeA,GACvBxd,EAAQmd,aAAeA,GACvBnd,EAAQiwE,aAAeA,GACvBjwE,EAAQgtF,0BAA4BrrB,GACpC3hE,EAAQitF,wBAA0Bj0B,GAClCh5D,EAAQktF,wBAA0Bnd,GAClC/vE,EAAQmtF,wBAA0Bnd,GAClChwE,EAAQotF,cAAgB3wE,GACxBzc,EAAQqtF,oBAAsB1wE,GAC9B3c,EAAQstF,kCA32nBR,SAASC,GAAiCC,GACtC,OAAkC,MAA3BA,GACHA,IAA4BxtF,EAAQ4I,wBAAwB2nD;;;;;;;QA02nBpEvwD,EAAQytF,SAAW9zB,GACnB35D,EAAQ0tF,kBAAoBznF,EAC5BjG,EAAQ2tF,QAAUhgF,GAClB3N,EAAQ4tF,oBAAsB38E,GAC9BjR,EAAQ6tF,UAAY79C,GACpBhwC,EAAQ8tF,aAp0RS,EAq0RjB9tF,EAAQ+tF,kBAAoB/lD,GAC5BhoC,EAAQguF,iCAAmCvlD,GAC3CzoC,EAAQiuF,2BAx0nBR,SAASC,GAA0BC,GAE/B,IAAIC,KAEAC,EAAS,IAAIjjF,IACjB,SAASkjF,EAAsB1yC,GAC3B,IAAIhxC,EAAUyjF,EAAOjhF,IAAIwuC,GACzB,IAAKhxC,EAAS,CACV,IAAI2jF,EAAOJ,EAAiBvyC,GAC5ByyC,EAAO3/E,IAAIktC,EAAKhxC,EAAU2jF,EAAK/iF,KAAKrB,IACpCikF,EAAWpqF,KAAK4G,GAEpB,OAAOA,EAwBX,OAtBAf,EAAiC0G,QAAQ,SAAUvG,GAC3CA,EAAUC,aACVqkF,EAAsBtkF,EAAUC,aAAauB,KAAK,SAAUmH,GACxD3I,EAAU2I,SAAWA,EACrB3I,EAAUC,iBAAcrE,IAGhC,IAAIsE,EAAYF,EAAUE,UACtBkI,EAASpI,EAAUoI,SAAWpI,EAAUoI,WACxCo8E,EAAcxkF,EAAUoI,OAAOpQ,OACnCkI,GAAaA,EAAUqG,QAAQ,SAAUk+E,EAAUrmF,GAC/CgK,EAAOpO,KAAK,IACZsqF,EAAsBG,GAAUjjF,KAAK,SAAUw/E,GAC3C54E,EAAOo8E,EAAcpmF,GAAS4iF,EAC9B9gF,EAAU4W,OAAO5W,EAAUkC,QAAQqiF,GAAW,GACtB,GAApBvkF,EAAUlI,SACVgI,EAAUE,eAAYtE,SAKtCiE,EAAiCojC,QAC1BpiC,QAAQguD,IAAIu1B,GAAY5iF,KAAK,WAAc,OAAO,QAqynB7DxL,EAAQ0uF,wBAA0B/nC,GAClC3mD,EAAQ2uF,iBAAmBxqD,GAC3BnkC,EAAQ4uF,eAAiB9vC,GACzB9+C,EAAQ6uF,gBAAkBnvC,GAC1B1/C,EAAQ8uF,cAAgBnzC,GACxB37C,EAAQ+uF,QAAUpkF,EAClB3K,EAAQgvF,gBAAkBtjF,GAC1B1L,EAAQivF,WAAapjF,GACrB7L,EAAQkvF,eAAiBvoF,EACzB3G,EAAQmvF,cAAgBj3B,GACxBl4D,EAAQovF,WAAan3B,GACrBj4D,EAAQqvF,gBAlbR,SAASvd,KAEL,OADAoT,KACO3T,GAASO,kBAibpB9xE,EAAQsvF,sBAAwBpK,GAChCllF,EAAQuvF,uBAxbR,SAAS1d,GAAsBkW,EAAMz6C,GAEjC,OADA43C,KACO3T,GAASM,sBAAsBkW,EAAMz6C,IAubhDttC,EAAQwvF;;;;;;;;AA7bR,SAAS5d,GAAiB2V,GAEtB,OADArC,KACO3T,GAASK,iBAAiB2V,IA4brCvnF,EAAQyvF,uCAAyC1P,GACjD//E,EAAQ4gD,YAAcjrC,GACtB3V,EAAQ6gD,iBAAmBlvC,GAC3B3R,EAAQ8gD,iBAAmBjrC,GAC3B7V,EAAQghD,YAAclrC,GACtB9V,EAAQ+gD,gBAAkB7rC,GAC1BlV,EAAQ0vF,eAAiBtyD,GACzBp9B,EAAQ2vF,iBA7ycR,SAASC,GAAgB9mD,EAA8EpjC,QACtF,IAATA,IAAmBA,MAEvB,IAAIykB,EAAkBzkB,EAAKykB,iBAAmB/N,GAC1CwJ,EAAYlgB,EAAKkgB,WAAa,KAC9Bob,EAAejsB,GAAgB+zB,GAC/B9H,EAAa96B,MAAQ4iC,IACrB9H,EAAa96B,KAAO4iC,GAExB,IACIrnB,EAAWwQ,GAAkB9H,EAAiBzkB,EAAKqkD,MADpC/oB,EAAavsB,UAAU,GAAG,IAEzC06B,EAAYnO,EAAa9sB,OAAS,GAClC,GACAyoB,EAAcuE,GAAkBx7B,EAAKs3B,WAAa6R,sBAAsBrnC,KAAK+C,QAAS7E,EAAKu3B,eAAiB,MAC5Gtb,EAAWwL,GAAgBhD,EAAgB9N,eAAeoF,EAAUuf,GAAe3P,IAAa,EAAG,KAAM,EAAG,EAAG,KAAM,KAAM,MAAOsL,EAAawS,GACnJxtB,EAAS9K,IAAcnR,EAAKwL,UAAY,KACxC,IACIuO,EACAzV,EAFA4hB,EAAUF,GAAU/J,EAAU,MAGlC,IACQwI,EAAgByE,OAChBzE,EAAgByE,QAGpB5kB,EAAY+2B,GADZthB,EAAcnD,GAAY+yB,EAAc5tB,EAAUuf,EAAcpb,GACnBob,EAAcrf,EAAUgb,EAAaj3B,EAAKu7B,cAAgB,MACvG/T,KACAyO,GAAsBlc,EAAYrW,KAAMY,GAE5C,QACI8hB,GAAUF,GACNzB,EAAgBzP,KAChByP,EAAgBzP,MAExB,OAAO1Q,GA6wcXhK,EAAQ6vF,yBAA2BvhD,GACnCtuC,EAAQ8vF,qBAAuBpgD,GAC/B1vC,EAAQihD,iBAAmB9a,GAC3BnmC,EAAQshD,iBAAmBjb,GAC3BrmC,EAAQohD,iBAAmB7a,GAC3BvmC,EAAQkhD,cAAgBvZ,GACxB3nC,EAAQmhD,qBAAuBtZ,GAC/B7nC,EAAQqhD,sBAAwBtI,GAChC/4C,EAAQwhD,eAAiB1Z,GACzB9nC,EAAQyhD,0BAA4BlgB,GACpCvhC,EAAQuhD,oBAAsBre,GAC9BljC,EAAQ+vF,oBAAsBt9C,GAC9BzyC,EAAQgwF,WApkdR,SAASC,GAAUjmF,GAGf0yB,GADkBljB,GAAyBxP,GACjBZ,OAkkd9BpJ,EAAQkwF,iBAAmBp9C,GAC3B9yC,EAAQmwF,WAAaljE,GACrBjtB,EAAQ4hD,WAAa9iC,GACrB9e,EAAQ6hD,aAAexzB,GACvBruB,EAAQuiD,cAAgBtzB,GACxBjvB,EAAQkiD,eAAiB9zB,GACzBpuB,EAAQmiD,iBAAmBnzB,GAC3BhvB,EAAQoiD,cAAgBrzB,GACxB/uB,EAAQyiD,SAAW98B,GACnB3lB,EAAQokD,UAAY5xB,GACpBxyB,EAAQwlD,MAAQn7C,GAChBrK,EAAQ0lD,mBAAqB/qB,GAC7B36B,EAAQ+kD,OAASnO,GACjB52C,EAAQilD,sBAAwBxkB,GAChCzgC,EAAQgiD,eAAiBviB,GACzBz/B,EAAQskD,YAActkC,GACtBhgB,EAAQ2hD,MAAQn6C,GAChBxH,EAAQ0jD,gBAAkB7lB,GAC1B79B,EAAQ2jD,gBAAkB3lB,GAC1Bh+B,EAAQ4jD,gBAAkBxlB,GAC1Bp+B,EAAQ6jD,gBAAkBrlB,GAC1Bx+B,EAAQ8jD,gBAAkBllB,GAC1B5+B,EAAQ+jD,gBAAkBhlB,GAC1B/+B,EAAQgkD,gBAAkB9kB,GAC1Bl/B,EAAQikD,gBAAkB5kB,GAC1Br/B,EAAQkkD,gBAAkBxmB,GAC1B19B,EAAQwkD,WAAa/P,GACrBz0C,EAAQykD,WAzuWR,SAAS2rC,GAAUhoF,EAAO8qC,EAAYhV,EAAII,GACtC,IAAIkW,EAAetd,GAAK9uB,GACxB,OAAOssC,GAAOtsC,GAASorC,GAAcN,EAAYsB,EAAaG,UAAWzW,EAAII,EAAIkW,GAC7EA,EAAaG,UAAUzW,EAAII,IAuuWnCt+B,EAAQ0kD,WAAa9P,GACrB50C,EAAQ2kD,WAAa9P,GACrB70C,EAAQ4kD,WAAa9P,GACrB90C,EAAQ8iD,eAAiB7P,GACzBjzC,EAAQ+iD,eAAiBzP,GACzBtzC,EAAQgjD,eAAiBxP,GACzBxzC,EAAQijD,eAAiBxP,GACzBzzC,EAAQkjD,eAAiBxP,GACzB1zC,EAAQmjD,eAAiBxP,GACzB3zC,EAAQojD,eAAiBvP,GACzB7zC,EAAQqjD,eAAiBtP,GACzB/zC,EAAQsjD,eAAiBrP,GACzBj0C,EAAQujD,eAAiBpP,GACzBn0C,EAAQwjD,gBAAkBz4B,GAC1B/qB,EAAQyjD,aAAez4B,GACvBhrB,EAAQ8hD,uBAAyBtnB,GACjCx6B,EAAQ+hD,qBAAuBtnB,GAC/Bz6B,EAAQglD,cAAgBlM,GACxB94C,EAAQiiD,eAAiBviB,GACzB1/B,EAAQwiD,YAActzB,GACtBlvB,EAAQukD,iBAAmBpwB,GAC3Bn0B,EAAQ6kD,eAAiBjpB,GACzB57B,EAAQklD,WAAa1lB,GACrBx/B,EAAQqiD,gBAAkB5tB,GAC1Bz0B,EAAQsiD,iBAAmB5tB,GAC3B10B,EAAQ0hD,kBAAoB5tB,GAC5B9zB,EAAQmlD,gBAAkBxvB,GAC1B31B,EAAQolD,mBAAqBntB,GAC7Bj4B,EAAQqlD,kBAAoBxtB,GAC5B73B,EAAQslD,qBAAuBruB,GAC/Bj3B,EAAQmkD,kBAAoB7uB,GAC5Bt1B,EAAQylD,aAAelsB,GACvBv5B,EAAQulD,UAAY5yC,GACpB3S,EAAQ2lD,iBAAmBtqB,GAC3Br7B,EAAQqwF,OAASjpE,GACjBpnB,EAAQqkD,MAAQntB,GAChBl3B,EAAQ8kD,MAAQzQ,GAChBr0C,EAAQswF,cAlxcR,SAASC,GAAavmF,GAClB,OAtBJ,SAASwmF,EAAiBxmF,GAGtB,OAFkBmU,GAAYnU,GAAW4M,IAqBlC45E,CAAiBxmF,GAAW+yB,OAkxcvC/8B,EAAQywF,WA53YR,SAASC,GAAUz2E,EAAY02E,GAC3B,IAAIpvE,EAAW6J,KAIf,GAAKulE,EAAL,CAGA,IAAIx0E,EAAWyO,KAEXgmE,EADax8D,GAASna,GACQ1M,QAAUgU,EAAS/K,IACjDq6E,EAAqBD,EACzB9iE,KACA,IAAK,IAAIjsB,EAAI,EAAGA,EAAI8uF,EAAa3uF,OAAQH,IAAK,CAC1C,IAAIivF,EAAcH,EAAa9uF,GAC/B,QAAuB,UAAfivF,GACJ,KAAK,WACD,IAAI3uD,EAA6B,UAAd2uD,EACfzF,EAAan0D,GAAKiL,GAClB4uD,EAAe38D,GAAS+N,GAC5B0uD,EACI9gD,GAAes7C,EAAY0F,EAAcH,EAAkBC,GAC/DD,EAAmBG,EACnB,MACJ,KAAK,WACL,KAAM,WACN,KAAM,WACF,IAAIt5E,EAA0B,UAAdq5E,EAEhBD,EACI9gD,GAFO7Y,GAAKzf,GAES2c,GAAS3c,GAAYm5E,EAAkBC,GAChE,MACJ,KAAK,UAID,IACIG,EAAY5wE,GADJuwE,IAAe9uF,GACWsa,GAItC0R,GAA0BtM,GAC1B,IAAI0vE,EAAgB1vE,EAASvf,OAAS,EAAIkU,GACtCg7E,EAAY7jE,GAAkB4jE,EAAe,EAAiBD,EAAW,KAAM,MACnFH,EAAqB9gD,GAAe/b,GAAYi9D,GAAgBC,EAAWN,EAAkBC,GAC7F/iE,KACA,MACJ,KAAM,WACF+iE,EAAqBD,EACrBA,EAAmBA,EAAiBrjF,QAAUgU,EAAS/K,IACvD,MACJ,KAAM,UAIF,IAAIwK,EAA4B,UAAd8vE,EACdK,EAAcj6D,GAAKlW,GACnBowE,EAAeh9D,GAASpT,GAC5Bd,GAAYkxE,EAAcD,EAAYp4E,QAAU,KAAMwI,GAE5B,IAAtB6vE,EAAalrF,MAA8BirF,EAAYzyE,wBACvDwB,GAAYkxE,EAAcD,EAAYzyE,sBAAsB3F,QAAU,KAAMwI,GAC5E6vE,EAAaxjE,qBAAqB3M,UAAW,EAC7CkwE,EAAYzyE,sBAAsBtV,KAAK4S,IAAiB,UA8zY5Ehc,EAAQqxF,gBAlzYR,SAASC,GAAeC,EAAaC,GAGjC,IAFA,IAAIC,EAAaF,EAAYh5D,MAAMuX,IAE1BjuC,EAAI,EAAGA,EAAI4vF,EAAWzvF,OAAQH,GAAK,EACxC4vF,EAAW5vF,GAAK2vF,EAAaC,EAAW5vF,IAE5C,OAAO4vF,GA6yYXzxF,EAAQ0xF,oBAlyYR,SAASC,GAAmBhB,EAAc5yD,GAEtC,IADgBN,GAAerS,KAAe3U,MAAkBsnB,GAE5D,OAAO9Q,GAGX,IADA,IAAI/gB,EAAM,GACDrK,EAAI,EAAGA,EAAI8uF,EAAa3uF,OAAQH,IAGjCqK,GADI,EAAJrK,EACOic,GAAYigB,GAGZ4yD,EAAa9uF,GAG5B,OAAOqK,GAoxYXlM,EAAQ4xF,oBAxwYR,SAASC,GAAmBlB,EAAc5yD,EAAIG,GAC1C,IAAI3c,EAAW6J,KACXuS,EAAYQ,GAAgB5c,EAAS9K,IAAgBsnB,EAAIG,GAE7D,GADA3c,EAAS9K,KAAkB,GACtBknB,EACD,OAAO1Q,GAGX,IADA,IAAI/gB,EAAM,GACDrK,EAAI,EAAGA,EAAI8uF,EAAa3uF,OAAQH,IAQjCqK,GANI,EAAJrK,EAMOic,GAHQ,EADL6yE,EAAa9uF,GAGNq8B,EAAKH,GAIf4yD,EAAa9uF,GAG5B,OAAOqK,GAmvYXlM,EAAQ8xF,oBAtuYR,SAASC,GAAmBpB,EAAc5yD,EAAIG,EAAII,GAC9C,IAAI/c,EAAW6J,KACXuS,EAAYY,GAAgBhd,EAAS9K,IAAgBsnB,EAAIG,EAAII,GAEjE,GADA/c,EAAS9K,KAAkB,GACtBknB,EACD,OAAO1Q,GAGX,IADA,IAAI/gB,EAAM,GACDrK,EAAI,EAAGA,EAAI8uF,EAAa3uF,OAAQH,IAErC,GAAQ,EAAJA,EAAO,CAEP,IAAImwF,EAAMrB,EAAa9uF,GAKvBqK,GAAO4R,GAJQ,EAANk0E,EAGQ1zD,EAFF,EAAN0zD,EAEmB9zD,EAAKH,QAIjC7xB,GAAOykF,EAAa9uF,GAG5B,OAAOqK,GAgtYXlM,EAAQiyF,oBAlsYR,SAASC,GAAmBvB,EAAc5yD,EAAIG,EAAII,EAAII,GAClD,IAAInd,EAAW6J,KACXuS,EAAYgB,GAAgBpd,EAAS9K,IAAgBsnB,EAAIG,EAAII,EAAII,GAErE,GADAnd,EAAS9K,KAAkB,GACtBknB,EACD,OAAO1Q,GAGX,IADA,IAAI/gB,EAAM,GACDrK,EAAI,EAAGA,EAAI8uF,EAAa3uF,OAAQH,IAErC,GAAQ,EAAJA,EAAO,CAEP,IAAImwF,EAAMrB,EAAa9uF,GAEnBswF,EAAW,EAANH,EAGT9lF,GAAO4R,GAJQ,EAANk0E,EAGSG,EAAKzzD,EAAKJ,EAAO6zD,EAAKj0D,EAAKH,QAI7C7xB,GAAOykF,EAAa9uF,GAG5B,OAAOqK,GA4qYXlM,EAAQoyF,oBA7pYR,SAASC,GAAmB1B,EAAc5yD,EAAIG,EAAII,EAAII,EAAII,GACtD,IAAIvd,EAAW6J,KACXuS,EAAYgB,GAAgBpd,EAAS9K,IAAgBsnB,EAAIG,EAAII,EAAII,GAGrE,GAFAf,EAAYF,GAAelc,EAAS9K,IAAiB,EAAGqoB,IAAOnB,EAC/Dpc,EAAS9K,KAAkB,GACtBknB,EACD,OAAO1Q,GAGX,IADA,IAAI/gB,EAAM,GACDrK,EAAI,EAAGA,EAAI8uF,EAAa3uF,OAAQH,IAErC,GAAQ,EAAJA,EAAO,CAEP,IAAImwF,EAAMrB,EAAa9uF,GAGnBswF,EAAW,EAANH,EAGT9lF,GAAO4R,GALQ,EAANk0E,EAIQlzD,EAHF,EAANkzD,EAGoBG,EAAKzzD,EAAKJ,EAAO6zD,EAAKj0D,EAAKH,QAIxD7xB,GAAOykF,EAAa9uF,GAG5B,OAAOqK,GAqoYXlM,EAAQsyF,oBAtnYJ,SAASC,GAAmB5B,EAAc5yD,EAAIG,EAAII,EAAII,EAAII,EAAIG,GAC9D,IAAI1d,EAAW6J,KACXuS,EAAYgB,GAAgBpd,EAAS9K,IAAgBsnB,EAAIG,EAAII,EAAII,GAGrE,GAFAf,EAAYQ,GAAgB5c,EAAS9K,IAAiB,EAAGqoB,EAAIG,IAAOtB,EACpEpc,EAAS9K,KAAkB,GACtBknB,EACD,OAAO1Q,GAGX,IADA,IAAI/gB,EAAM,GACDrK,EAAI,EAAGA,EAAI8uF,EAAa3uF,OAAQH,IAErC,GAAQ,EAAJA,EAAO,CAEP,IAAImwF,EAAMrB,EAAa9uF,GAGnBswF,EAAW,EAANH,EAGT9lF,GAAO4R,GALQ,EAANk0E,EAISG,EAAKlzD,EAAKH,EAHb,EAANkzD,EAGgCG,EAAKzzD,EAAKJ,EAAO6zD,EAAKj0D,EAAKH,QAIpE7xB,GAAOykF,EAAa9uF,GAG5B,OAAOqK,GA8lYXlM,EAAQwyF,oBA7kYR,SAASC,GAAmB9B,EAAc5yD,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,GAC9D,IAAI7d,EAAW6J,KACXuS,EAAYgB,GAAgBpd,EAAS9K,IAAgBsnB,EAAIG,EAAII,EAAII,GAGrE,GAFAf,EAAYY,GAAgBhd,EAAS9K,IAAiB,EAAGqoB,EAAIG,EAAIG,IAAOzB,EACxEpc,EAAS9K,KAAkB,GACtBknB,EACD,OAAO1Q,GAGX,IADA,IAAI/gB,EAAM,GACDrK,EAAI,EAAGA,EAAI8uF,EAAa3uF,OAAQH,IAErC,GAAQ,EAAJA,EAAO,CAEP,IAAImwF,EAAMrB,EAAa9uF,GAEnB6wF,EAAW,EAANV,EACLG,EAAW,EAANH,EAGT9lF,GAAO4R,GALQ,EAANk0E,EAISU,EAAKtzD,EAAM+yD,EAAKlzD,EAAKH,EAAQ4zD,EAAMP,EAAKzzD,EAAKJ,EAAO6zD,EAAKj0D,EAAKH,QAIhF7xB,GAAOykF,EAAa9uF,GAG5B,OAAOqK,GAqjYXlM,EAAQ2yF,oBAniYR,SAASC,GAAmBjC,EAAc5yD,EAAIG,EAAII,EAAII,EAAII,EAAIG,EAAIG,EAAIG,GAClE,IAAIhe,EAAW6J,KACXuS,EAAYgB,GAAgBpd,EAAS9K,IAAgBsnB,EAAIG,EAAII,EAAII,GAGrE,GAFAf,EAAYgB,GAAgBpd,EAAS9K,IAAiB,EAAGqoB,EAAIG,EAAIG,EAAIG,IAAO5B,EAC5Epc,EAAS9K,KAAkB,GACtBknB,EACD,OAAO1Q,GAGX,IADA,IAAI/gB,EAAM,GACDrK,EAAI,EAAGA,EAAI8uF,EAAa3uF,OAAQH,IAErC,GAAQ,EAAJA,EAAO,CAEP,IAAImwF,EAAMrB,EAAa9uF,GAEnB6wF,EAAW,EAANV,EACLG,EAAW,EAANH,EAGT9lF,GAAO4R,GALQ,EAANk0E,EAISU,EAAMP,EAAK5yD,EAAKH,EAAO+yD,EAAKlzD,EAAKH,EAAQ4zD,EAAMP,EAAKzzD,EAAKJ,EAAO6zD,EAAKj0D,EAAKH,QAI5F7xB,GAAOykF,EAAa9uF,GAG5B,OAAOqK,GA2gYXlM,EAAQ6yF,oBAjgYR,SAASC,GAAmBnC,EAAc9oF,GAGtC,IAFA,IAAI0Z,EAAW6J,KACXuS,GAAY,EACP97B,EAAI,EAAGA,EAAIgG,EAAO7F,OAAQH,IAE/B47B,GAAelc,EAAS9K,MAAkB5O,EAAOhG,MAAQ87B,GAAY,GAEzE,IAAKA,EACD,OAAO1Q,GAEX,IAAI/gB,EAAM,GACV,IAASrK,EAAI,EAAGA,EAAI8uF,EAAa3uF,OAAQH,IAGjCqK,GADI,EAAJrK,EACOic,GAAYjW,EAAO8oF,EAAa9uF,KAGhC8uF,EAAa9uF,GAG5B,OAAOqK,GA8+XXlM,EAAQ+yF,aA3jZR,SAASC,GAAYzB,EAAa0B,EAAUC,EAAaC,EAAeC,GACpE,IAAIC,EAAmB9B,EAAYh5D,MAAMuX,IAErC6gD,EAAe,IAAK1vF,MADNkyF,EAAgBA,EAAcnxF,OAAS,EAAI,GACjB2oB,UAAK/kB,GAEjD,OAyBJ,SAAS0tF,EAA4BC,EAAWC,EAAWH,EAAkB1C,EAAcsC,EAAUC,EAAaC,EAAeC,GAC7H,IAAIK,KACAC,KACAC,EAAiB,EACjBC,EAAW,EACXC,EAAkBZ,GAAYA,EAASM,GAAaN,EAASM,GAAa,KAC1EO,EAAqBZ,GAAeA,EAAYK,GAAaL,EAAYK,GAAa,KAE1F,IADA5C,EAAa4C,GAAaE,EACnBD,EAAYH,EAAiBrxF,OAAQwxF,IAAa,CAErD,IAAI7vF,EAAQ0vF,EAAiBG,GAE7B,GAAgB,EAAZA,EAAe,CACf,IAAIO,OAAU,EACd,GAAIF,QAA8CjuF,IAA3BiuF,EAAgBlwF,GAAsB,CACzDowF,EAAUF,EAAgBlwF,GAE1B,IAAIqwF,EAAoBb,EAAgBA,EAAc/mF,QAAQzI,IAAU,GAC7C,IAAvBqwF,GAA6BA,EAAoB,IAAOT,EAExDE,EAAiBzvF,MAAgB,WAAX+vF,IAGtBN,EAAiBzvF,KAAe,WAAV+vF,GACtBJ,KAEJD,EAAU1vF,KAAKL,QAEd,GAAImwF,QAAoDluF,IAA9BkuF,EAAmBnwF,GAG9C8vF,EAAiBzvF,KAAe,YAFhC+vF,EAAUD,EAAmBnwF,KAG7B+vF,EAAU1vF,KAAKL,QAKf,GADA8vF,EAAiBzvF,MAAM,YACnBuvF,EAAY,GAGW,KAFvBI,EAGI,MAOZ,QAHgB/tF,IAAZmuF,GAAyBA,EAAUH,IACnCA,EAAWG,GAEXZ,EAAe,CACf,IAAIc,EAAed,EAAc/mF,QAAQzI,GAAS,EAC7B,IAAjBswF,GAAsBA,IAAiBV,IACvCC,EAAYF,EAA4BW,EAAcT,EAAWH,EAAkB1C,EAAcsC,EAAUC,EAAaC,EAAeC,UAI1IzvF,GAEL8vF,EAAiBzvF,KAAK,UAAsBL,GAIpD,GAAIsvF,EAAU,CACV,IAAIiB,EAAejB,EAASM,GAC5B,GAAIW,EAEA,IADA,IAAIC,EAASrzF,OAAOoK,KAAKgpF,GAChBryF,EAAI,EAAGA,EAAIsyF,EAAOnyF,OAAQH,KAEA,IAA3B6xF,EAAUtnF,QADVgoF,EAAKD,EAAOtyF,MAIZ4xF,EAAiBzvF,MAAc,WAF3BoE,EAAQ8rF,EAAaE,KAGrBhsF,EAAQwrF,IACRA,EAAWxrF,IAO/B,GAAI8qF,EAAa,CACb,IAAImB,EAAkBnB,EAAYK,GAClC,GAAIc,EAEA,IADIF,EAASrzF,OAAOoK,KAAKmpF,GAChBxyF,EAAI,EAAGA,EAAIsyF,EAAOnyF,OAAQH,IAAK,CACpC,IAAIuyF,EAEIhsF,GADuB,IAA3BsrF,EAAUtnF,QADVgoF,EAAKD,EAAOtyF,MAOZ4xF,EAAiBzvF,MAAc,WAL3BoE,EAAQisF,EAAgBD,KAMxBhsF,EAAQwrF,IACRA,EAAWxrF,KAM/B,GAAkB,IAAdmrF,GAA6C,iBAAnBH,EAG1B,IAASvxF,EAAI+xF,EAAW,EAAG/xF,GAAKuxF,EAAgBvxF,IAI5C4xF,EAAiBzvF,MAAU,WAALnC,GAG9B,OAAO2xF,EAvIPF,CAA4B,EAAG,EAAGD,EAAkB1C,EAAcsC,EAAUC,EAAaC,EAAeC,GACjGzC,GAujZX3wF,EAAQs0F,wBAA0BvlD,GAClC/uC,EAAQu0F,8BAAgCnJ,GACxCprF,EAAQw0F,qBAAuBrkC,GAC/BnwD,EAAQy0F,4BAA8BrkC,GACtCpwD,EAAQ00F,kBAAoBvmC,GAC5BnuD,EAAQ20F,kBAAoBzlC,GAC5BlvD,EAAQ40F,aAAe5kC,GACvBhwD,EAAQ4lD,cAAgB7F,GACxB//C,EAAQ6lD,eAAiB3F,GACzBlgD,EAAQomD,aAAe/F,GACvBrgD,EAAQ+lD,qBAAuBvF,GAC/BxgD,EAAQ60F,6BAxqVR,SAASC,GAA4BC,GACjC,OAAO77C,GAA8B67C,EAAa,SAwqVtD/0F,EAAQg1F,8BA7pVR,SAASC,GAA6BC,GAClC,OAAOh8C,GAA8Bg8C,EAAc,UA6pVvDl1F,EAAQm1F,+BAlpVR,SAASC,GAA8BC,GACnC,OAAOn8C,GAA8Bm8C,EAAe,WAkpVxDr1F,EAAQs1F,4BAvoVR,SAASC,GAA2BC,GAChC,OAAOt8C,GAA8Bs8C,EAAY,QAuoVrDx1F,EAAQy1F,oCA5nVR,SAASC,GAAmCC,GACxC,OAAOz8C,GAA8By8C,EAAoB,gBA4nV7D31F,EAAQ41F,YAAcv+E,GACtBrX,EAAQ61F;;;;;;;;AA5VR,SAASC,GAAUva,EAAKoQ,GACpB,IAAIoK,EAAiB1+E,GAAWkkE,GAC5Bya,EAAmBlwE,GAAyBiwE,EAAeh9E,OAAQg9E,GACvEC,EAAiBhyF,KAAK2nF,GACtBA,EAAOv4D,iBAAiB,IAAqB,WACzC,IAAIhrB,EAAQ4tF,EAAiB5pF,QAAQu/E,GACjCvjF,GAAS,GACT4tF,EAAiBl1E,OAAO1Y,EAAO,GAEnCujF,EAAOppE,YAEX,IAAIoa,EAz4jBR,SAASs5D,EAAeC,GACpB,OAAO/3E,GAAY+3E,GAAiBt/E,IAw4jBlBq/E,CAAeF,EAAev+E,YAC5BmlB,EAAYM,gBAAkBN,EAAYM,cAAgB,IAAIwuD,KACpEI,YAAYF,EAAQpQ,GAClC,IAAI3+C,EAAyC,IAAtBD,EAAY9sB,MAGnC8sB,EAAY9sB,OAAS,EACjB+sB,GACAC,GAAaF,IA0UrB38B,EAAQm2F,YAvUR,SAASC,GAAW7a,GAChB,OAAOz1D,GAAyBy1D;;;;;;;QAuUpCv7E,EAAQq2F,qCA/zNR,SAASC,GAAoCplF,EAAUpL,EAASktC,GAE5D,OAAOnoC,QAAQC,QAAQ,IAAIgoC,GAAkBE,KA8zNjDhzC,EAAQu2F,mCAAqCzK,GAC7C9rF,EAAQw2F,mCAAqCzK,GAC7C/rF,EAAQy2F,oCAAsCzK,GAC9ChsF,EAAQ02F,kCAAoCzK,GAC5CjsF,EAAQ22F,8BAAgCzK,GACxClsF,EAAQ42F,yBAn9RS,EAo9RjB52F,EAAQ62F,qCAAuC1K,GAC/CnsF,EAAQ82F,sCAAwC1K,GAChDpsF,EAAQ+2F,6CAA+C1K,GACvDrsF,EAAQg3F,4CAA8C1K,GACtDtsF,EAAQi3F,uBAz0MR,SAASC,GAAsBriF,EAAI9U,GAC/B,IAAIqyC,EAAWwzB,GAAgBx4D,IAAIyH,GACnC,GAAIu9B,EACA,MAAM,IAAI9tC,MAAM,mCAAqCuQ,EAAK,MAAQu9B,EAASY,WAAWpsC,KAAO,OAAS7G,EAAQizC,WAAWpsC,MAE7Hg/D,GAAgBl3D,IAAImG,EAAI9U,IAq0M5BC,EAAQm3F,gBACRn3F,EAAQo3F,cACRp3F,EAAQq3F;;;;;;;;AAjjIR,SAAStQ,GAAUl3E,EAAO+kE,EAAmBqB,EAAgBF,EAAY3D,EAAaklB,GAClFznF,GAAS,EACT,IAAIzI,EAAKutE,GAAuBC,GAEhC,OAEIn9D,WAAY,EACZlK,OAAQ,KACR+V,aAAc,KACdwc,cAAe,EACf83C,aAAc,EAEd/nE,MAAOA,EACPovE,YAAa,EACbjD,WAAY,EACZmD,iBAAkB,EAClBC,oBAAqB,EAAGvK,eAdyCztE,EAAGytE,eAcZC,gBAd0E1tE,EAAG0tE,gBAc3ChN,WAdO1gE,EAAG0gE,WAccmO,eAAgBA,EAAgBF,WAAYA,EAC9JppD,YACA6pD,aAAc,EACdtjE,WACAyS,SACIuxD,GAAI,KACJtwE,KAAM,KACN4d,MAAO,KAAM7R,SApBN2kF,EAAkB9hB,GAAkB8hB,GAAmB,KAqB9Dxc,kBAAmB,KACnBj7D,cAAe,KACfu1D,sBAAuB,KACvBiL,gBAAiB,KACjBD,aAAc,KACdhO,YAAaA,GAAeU,IAEhChkE,SAAU,KACVzE,KAAM,KACNusC,MAAO,KACP0/B,UAAW,OAghInBt2E,EAAQu3F,KAt8GR,SAASC,GAAuBruF,EAAU2/B,EAAewxC,EAAgBtnE,EAAQE,EAASi2B,GACtF,OAAO,IAAIoxC,GAAkBpxE,EAAU2/B,EAAewxC,EAAgBtnE,EAAQE,EAASi2B,IAs8G3FnpC,EAAQy3F,KAtjBR,SAASC,GAAsB/kD,EAAcsrC,EAAqB0Z,GAC9D,OAAO,IAAI1M,GAAiBt4C,EAAcsrC,EAAqB0Z,IAsjBnE33F,EAAQ43F,KAh5IR,SAASC,GAAoBhwF,GACzB,OACIgN,GANyB,cAOzBzC,OAAQvK,EAAOuK,OACfF,cAAerK,EAAOqK,cACtB9I,KAAMvB,EAAOuB,OA44IrBpJ,EAAQ83F,KA59FR,SAAS3iE,GAAa8pD,EAAYpvE,EAAOglE,EAAgBkB,EAAYnuE,EAAM+G,EAAM9H,EAAOqM,GACpF,IAAIyZ,KACJ,GAAI9lB,EACA,IAAK,IAAIsgB,KAAQtgB,EAAO,CACpB,IAAIO,EAAKvD,EAAOgD,EAAMsgB,GAAO,GAC7BwF,EADgDvlB,EAAG,KAE/CyI,MAAO,EACPjJ,KAAMugB,EAAMq5D,gBAHyDp5E,EAAG,GAIxE8vE,GAAI,KACJgB,gBAAiB,KACjBngD,OAAQ,MAIpB,IAAIggE,KACJ,GAAI7kF,EACA,IAAK,IAAIpL,KAAYoL,EACjB6kF,EAAW/zF,MAAOkC,KAAM,EAAyB4B,SAAUA,EAAUzF,OAAQ,KAAMowB,UAAWvf,EAAQpL,KAI9G,OAAOkxE,GAAKiG,EADZpvE,GAAS,MACsBglE,EAAgBkB,EAAYnuE,EAAMA,EAAM+G,EAAMge,EAAUorE,IAw8F3F/3F,EAAQg4F,KAjhIR,SAAS9W,GAAWjC,EAAYpvE,EAAO+kE,EAAmBqB,EAAgBF,EAAY8G,EAAkBob,EAAYtrE,EAAUzZ,EAASk/D,EAAavyD,EAAeu1D,GAE/J,IAAIhuE,OADe,IAAf6wF,IAAyBA,MAExB7lB,IACDA,EAAcU,IAElB,IAAI52B,EAAKy4B,GAAuBC,GAAoBC,EAAiB34B,EAAG24B,eAAgB/M,EAAa5rB,EAAG4rB,WAAYgN,EAAkB54B,EAAG44B,gBACrIoC,EAAK,KACLtwE,EAAO,KACPi2E,IACkD3F,GAAlD9vE,EAAKvD,EAAOgzE,GAAegG,GAAmB,IAAY,GAAIj2E,EAAOQ,EAAG,IAE5EulB,EAAWA,MAEX,IADA,IAAIurE,EAAc,IAAIj3F,MAAM0rB,EAAS3qB,QAC5BH,EAAI,EAAGA,EAAI8qB,EAAS3qB,OAAQH,IAAK,CACtC,IAAIs6C,EAAKt4C,EAAO8oB,EAAS9qB,GAAI,GAAI20E,EAAer6B,EAAG,GAAgCg8C,EAA0Bh8C,EAAG,GAC5Gi8C,EAAKv0F,EAAOgzE,GAD4D16B,EAAG,IAC3B,GAAIk8C,EAAOD,EAAG,GAAIE,EAASF,EAAG,GAC9ElgB,OAAkBtyE,EAClBmyB,OAASnyB,EACb,OAAuB,GAAf4wE,GACJ,KAAK,EACDz+C,EAASogE,EACT,MACJ,KAAK,EACL,KAAK,EACDjgB,EAAkBigB,EAG1BD,EAAYr2F,IACNgO,MAAO2mE,EAAcU,GAAImhB,EAAMzxF,KAAM0xF,EAAQ9X,gBAAiB8X,EAAQpgB,gBAAiBA,EAAiBngD,OAAQA,GAE1H7kB,EAAUA,MACV,IAAI6kF,EAAa,IAAI92F,MAAMiS,EAAQlR,QACnC,IAASH,EAAI,EAAGA,EAAIqR,EAAQlR,OAAQH,IAAK,CACrC,IAAI02F,EAAK10F,EAAOqP,EAAQrR,GAAI,GAC5Bk2F,EAAWl2F,IACPqE,KAAM,EACN7D,OAHqCk2F,EAAG,GAGxB9lE,UAHwC8lE,EAAG,GAI3DzwF,SAAU,MAIlB,IAAI0c,GADJyzE,EAAaA,OACUlsF,IAAI,SAAU3E,GACjC,IAAI80C,EAAKr4C,EAAOuD,EAAI,GAA8BzD,EAAQu4C,EAAG,GACzDC,EAAKt4C,EAAOgzE,GAD2B36B,EAAG,IACI,GAClD,OAD2DC,EAAG,GAAWA,EAAG,GAC1Dx4C,KAOtB,OALAyxE,EAvaJ,SAASojB,EAAqBtyF,GAC1B,GAAIA,GAdyB,gBAcjBA,EAAK2O,GAAmC,CAEhD,IAAI4jF,EAAmC,MAAtBvyF,EAAKgM,eAAyBhM,EAAKgM,gBAAkBlS,EAAQ4J,kBAAkB8uF,MAC5FxyF,EAAKkM,OAAOpQ,QAAUlB,OAAOoK,KAAKhF,EAAKkD,MAAMpH,OAE7CkE,EAAK2O,GADL4jF,EACU,IAAMxlB,KAlBC,UA2BzB,OAHI/sE,GAxBqB,YAwBbA,EAAK2O,KACb3O,EAAO,MAEJA,GAAQ,KAwZSsyF,CAAqBpjB,GACzCv1D,IACAhQ,GAAS,WAKT4H,WAAY,EACZlK,OAAQ,KACR+V,aAAc,KACdwc,cAAe,EACf83C,aAAc,EAEdqH,WAAYA,EACZpvE,MAVJA,GAAS,EAWLmsE,WAAY,EACZmD,iBAAkB,EAClBC,oBAAqB,EAAGvK,eAAgBA,EAAgBC,gBAAiBA,EAAiBhN,WAAYA,EAAYmO,eAAgBA,EAAgBF,WAAYA,EAC9JppD,SAAUurE,EACV1hB,aAAcM,GAAiBohB,GAC/BhlF,QAAS6kF,EACTpyE,SACIuxD,GAAIA,EACJtwE,KAAMA,EACN4d,MAAOA,EACP7R,SAAU,KAEVmoE,kBAAmB,KACnBj7D,cAAeA,GAAiB,KAChCu1D,sBAAuBA,EACvBiL,gBAAiB,KACjBD,aAAc,KACdhO,YAAaA,GAAeU,IAEhChkE,SAAU,KACVzE,KAAM,KACNusC,MAAO,KACP0/B,UAAW,OA87HnBt2E,EAAQ24F,sBAAwBrkB,GAChCt0E,EAAQ44F,mCAAqCve,GAC7Cr6E,EAAQ64F,mBAxmIR,SAASC,GAAkBC,EAAYC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC3G,OAAQnB,GACJ,KAAK,EACD,OAAOC,EAAKjiB,GAAkBkiB,GAAMC,EACxC,KAAK,EACD,OAAOF,EAAKjiB,GAAkBkiB,GAAMC,EAAKniB,GAAkBoiB,GAAMC,EACrE,KAAK,EACD,OAAOJ,EAAKjiB,GAAkBkiB,GAAMC,EAAKniB,GAAkBoiB,GAAMC,EAAKriB,GAAkBsiB,GACpFC,EACR,KAAK,EACD,OAAON,EAAKjiB,GAAkBkiB,GAAMC,EAAKniB,GAAkBoiB,GAAMC,EAAKriB,GAAkBsiB,GACpFC,EAAKviB,GAAkBwiB,GAAMC,EACrC,KAAK,EACD,OAAOR,EAAKjiB,GAAkBkiB,GAAMC,EAAKniB,GAAkBoiB,GAAMC,EAAKriB,GAAkBsiB,GACpFC,EAAKviB,GAAkBwiB,GAAMC,EAAKziB,GAAkB0iB,GAAMC,EAClE,KAAK,EACD,OAAOV,EAAKjiB,GAAkBkiB,GAAMC,EAAKniB,GAAkBoiB,GAAMC,EAAKriB,GAAkBsiB,GACpFC,EAAKviB,GAAkBwiB,GAAMC,EAAKziB,GAAkB0iB,GAAMC,EAAK3iB,GAAkB4iB,GAAMC,EAC/F,KAAK,EACD,OAAOZ,EAAKjiB,GAAkBkiB,GAAMC,EAAKniB,GAAkBoiB,GAAMC,EAAKriB,GAAkBsiB,GACpFC,EAAKviB,GAAkBwiB,GAAMC,EAAKziB,GAAkB0iB,GAAMC,EAAK3iB,GAAkB4iB,GACjFC,EAAK7iB,GAAkB8iB,GAAMC,EACrC,KAAK,EACD,OAAOd,EAAKjiB,GAAkBkiB,GAAMC,EAAKniB,GAAkBoiB,GAAMC,EAAKriB,GAAkBsiB,GACpFC,EAAKviB,GAAkBwiB,GAAMC,EAAKziB,GAAkB0iB,GAAMC,EAAK3iB,GAAkB4iB,GACjFC,EAAK7iB,GAAkB8iB,GAAMC,EAAK/iB,GAAkBgjB,GAAMC,EAClE,KAAK,EACD,OAAOhB,EAAKjiB,GAAkBkiB,GAAMC,EAAKniB,GAAkBoiB,GAAMC,EAAKriB,GAAkBsiB,GACpFC,EAAKviB,GAAkBwiB,GAAMC,EAAKziB,GAAkB0iB,GAAMC,EAAK3iB,GAAkB4iB,GACjFC,EAAK7iB,GAAkB8iB,GAAMC,EAAK/iB,GAAkBgjB,GAAMC,EAAKjjB,GAAkBkjB,GAAMC,EAC/F,QACI,MAAM,IAAI51F,MAAM,8CA0kI5BtE,EAAQm6F,aAhnIR,SAASC,GAAYrB,EAAYsB,GAE7B,IADA,IAAIxjD,EAAS,GACJh1C,EAAI,EAAGA,EAAiB,EAAbk3F,EAAgBl3F,GAAQ,EACxCg1C,EAASA,EAASwjD,EAAex4F,GAAKk1E,GAAkBsjB,EAAex4F,EAAI,IAE/E,OAAOg1C,EAASwjD,EAA4B,EAAbtB,IA4mInC/4F,EAAQs6F,KA5wHR,SAASC,GAAUx0F,GAIf,IAHA,IAAIkzE,KACAK,KACAC,GAAS,EACJ13E,EAAI,EAAGA,EAAIkE,EAAU/D,OAAQH,IAAK,CACvC,IAAIiN,EAAW/I,EAAUlE,GACrBiN,EAAShD,QAAUkkC,KAA+B,IAAnBlhC,EAASnL,QACxC41E,GAAS,GAEQ,WAAjBzqE,EAASe,OACTypE,EAAQt1E,KAAK8K,EAAShD,OAE1BgD,EAAS1G,MAAQvG,EACjBo3E,EAAejG,GAASlkE,EAAShD,QAAUgD,EAE/C,OAEI/O,QAAS,KACTk5E,eAAgBA,EAChBlzE,UAAWA,EACXuzE,QAASA,EACTC,OAAQA,IAwvHhBv5E,EAAQw6F,KAzxHR,SAASC,GAAiB5qF,EAAO/D,EAAOnI,EAAOgL,GAM3C,OAFAhL,EAAQ8I,GAAkB9I,IAItByE,OAAQ,EACRuG,KAJUqmE,GAAarmE,EAAM9C,GAAUC,IAIxB+D,MAAOA,EAAO/D,MAAOA,EAAOnI,MAAOA,IAixH1D3D,EAAQ06F,KA90ER,SAASC,GAAa1kB,EAAgB7tE,GAClC,OAEIqP,WAAY,EACZlK,OAAQ,KACR+V,aAAc,KACdwc,cAAe,EACf83C,aAAc,EAEdqH,YAAa,EACbpvE,MAAO,EACPmsE,WAAY,EACZmD,iBAAkB,EAClBC,oBAAqB,EACrBvK,kBACAC,gBAAiB,EACjBhN,cAAgBmO,eAAgBA,EAChCF,WAAY,EACZppD,YACA6pD,aAAc,EACdtjE,WACAyS,QAAS,KACT7W,SAAU,KACVzE,KAAM,KACNusC,MAAO,KACP0/B,WAAaluE,MAAOA,KAszE5BpI,EAAQ46F,KArpGR,SAAS98C,GAAUj/B,EAAMzW,GACrB,IAAIkK,EAAMuM,EAAKvM,IAAI4+D,MAAM9oE,GACzB,GAAgB,EAAZkK,EAAIzC,MAA6B,CACjC,IAAIkoE,EAAS5G,GAActyD,EAAMvM,EAAImF,WACrC,OAAOnF,EAAIqT,QAAQhT,SAAWolE,EAAOplE,SAAWolE,EAAO3D,cAEtD,GAAgB,EAAZ9hE,EAAIzC,MACT,OAAOohE,GAAWpyD,EAAMvM,EAAImF,WAAW48D,WAEtC,GAAgB,MAAZ/hE,EAAIzC,MACT,OAAOuhE,GAAevyD,EAAMvM,EAAImF,WAAWE,SAE/C,MAAM,IAAIrT,MAAM,gDAAkD8D,IA0oGtEpI,EAAQ66F,KA/8FR,SAAS9kF,GAAQlG,EAAOjI,EAAM+G,GAE1B,OAAOqqE,IAAM,EADbnpE,GAAS,GACc,KAAM,EAAGjI,EAAMA,EAAM+G,IA88FhD3O,EAAQ86F,KA58FR,SAAS/hB,GAAYlpE,EAAOglE,EAAgB/oE,EAAOnI,EAAOgL,GACtD,OAAOqqE,IAAM,EAAGnpE,EAAOglE,EAAgB,EAAG/oE,EAAOnI,EAAOgL,IA48F5D3O,EAAQ+6F,KAjyER,SAASC,GAAa/b,EAAYgc,GAC9B,OAAOrZ,GAAmB,GAAwB3C,EAAY,IAAIh+E,MAAMg6F,KAiyE5Ej7F,EAAQk7F,KA/xER,SAASC,GAAclc,EAAYmc,GAI/B,IAHA,IAAIlwF,EAAOpK,OAAOoK,KAAKkwF,GACnBC,EAASnwF,EAAKlJ,OACd6/E,EAAgB,IAAI5gF,MAAMo6F,GACrBx5F,EAAI,EAAGA,EAAIw5F,EAAQx5F,IAAK,CAC7B,IAAIS,EAAM4I,EAAKrJ,GAEfggF,EADYuZ,EAAY94F,IACDA,EAE3B,OAAOs/E,GAAmB,GAAyB3C,EAAY4C,IAuxEnE7hF,EAAQs7F,KAvyER,SAASC,GAAYtc,EAAYgc,GAE7B,OAAOrZ,GAAmB,IAAwB3C,EAAY,IAAIh+E,MAAMg6F,EAAW,KAsyEvFj7F,EAAQw7F,KApgFR,SAASja,GAAS1xE,EAAOgF,EAAI8X,GACzB,IAAIurE,KACJ,IAAK,IAAIpwF,KAAY6kB,EAEjBurE,EAAYl0F,MAAO8D,SAAUA,EAAUw5E,YADrB30D,EAAS7kB,KAG/B,OAEI2P,WAAY,EACZlK,OAAQ,KACR+V,aAAc,KACdwc,cAAe,EACf83C,aAAc,EAGdqH,YAAa,EAAGpvE,MAAOA,EACvBmsE,WAAY,EACZmD,iBAAkB,EAClBC,oBAAqB,EACrBnJ,gBAAiB,EACjBpB,kBACAC,gBAAiB,EACjBhN,cACAiO,WAAY,EACZppD,YACA6pD,aAAc,EACdtjE,WACAyS,QAAS,KACT7W,SAAU,KACVzE,KAAM,KACNusC,OAAS/hC,GAAIA,EAAIksE,SAAUtM,GAAc5/D,GAAK8X,SAAUurE,GACxD5hB,UAAW,OAs+EnBt2E,EAAQy7F,KAjlER,SAASC,GAAQzc,EAAYhJ,EAAgBwb,GAEzC,IADA,IAAI9kE,EAAW,IAAI1rB,MAAMwwF,EAAWzvF,OAAS,GACpCH,EAAI,EAAGA,EAAI4vF,EAAWzvF,OAAQH,IACnC8qB,EAAS9qB,EAAI,IACTgO,MAAO,EACPjJ,KAAM,KACNswE,GAAI,KACJsJ,gBAAiB,KACjBtI,gBAAiB,KACjBngD,OAAQ05D,EAAW5vF,IAG3B,OAEI4V,WAAY,EACZlK,OAAQ,KACR+V,aAAc,KACdwc,cAAe,EACf83C,aAAc,EAEdqH,WAAYA,EACZpvE,MAAO,EACPmsE,WAAY,EACZmD,iBAAkB,EAClBC,oBAAqB,EACrBvK,kBACAC,gBAAiB,EACjBhN,cAAgBmO,eAAgBA,EAChCF,WAAY,EAAGppD,SAAUA,EACzB6pD,aAAc,EACdtjE,WACAyS,QAAS,KACT7W,SAAU,KACVzE,MAAQyzB,OAAQ2zD,EAAW,IAC3B76C,MAAO,KACP0/B,UAAW,OA+iEnBt2E,EAAQ27F,KA/6IR,SAASC,GAAY/8E,EAAMg9E,EAAS1oB,EAAYxvE,GAC5C,GAAIwZ,GAAaI,UAAU5Z,GAAQ,CAC/BA,EAAQwZ,GAAaG,OAAO3Z,GAC5B,IAAIm4F,EAAmBj9E,EAAKvM,IAAI4+D,MAAM2qB,GAAS/7D,aAAeqzC,EAC1DlzC,EAAW9iB,GAAaG,OAAOuB,EAAKu0D,UAAU0oB,IAClDj9E,EAAKu0D,UAAU0oB,GAAoB,IAAI3+E,GAAa8iB,GAExD,OAAOt8B,GAy6IX3D,EAAQ+7F,KA/8DR,SAASnhB,GAAQ/qE,EAAOqhE,EAAOmB,EAAkBC,GAY7C,IAVA,IAAI0pB,EAAmB,EACnBC,EAAsB,EACtBC,EAAgB,EAChBC,EAAoB,EACpBC,EAAqB,EACrBC,EAAgB,KAChBC,EAAsB,KACtBC,GAAmC,EACnCC,GAAoC,EACpC9mB,EAAqB,KAChB7zE,EAAI,EAAGA,EAAIqvE,EAAMlvE,OAAQH,IAAK,CACnC,IAAIyd,EAAO4xD,EAAMrvE,GAQjB,GAPAyd,EAAK7H,UAAY5V,EACjByd,EAAK/R,OAAS8uF,EACd/8E,EAAKwgB,aAAek8D,EACpB18E,EAAKs4D,YAAcqkB,EACnB38E,EAAKgE,aAAeg5E,EACpBJ,GAAiB58E,EAAKzP,MACtBusF,GAAsB98E,EAAKw1D,gBACvBx1D,EAAKqG,QAAS,CACd,IAAIqxD,EAAQ13D,EAAKqG,QACjBqxD,EAAMqJ,gBACFgc,EAAgBA,EAAc12E,QAAQ06D,gBAAkBv/E,OAAOU,OAAO,MAC1Ew1E,EAAMoJ,aAAepJ,EAAMqJ,gBAE3Bkc,GAAmC,EACnCC,GAAoC,EAChCl9E,EAAKqG,QAAQhT,WACbypF,GAAsB98E,EAAKqG,QAAQhT,SAASkuE,oBASpD,GANAmB,GAAaqa,EAAe/8E,EAAM4xD,EAAMlvE,QACxCg6F,GAAoB18E,EAAKqN,SAAS3qB,OAClCi6F,GAAuB38E,EAAKpM,QAAQlR,QAC/Bs6F,GAAqC,EAAbh9E,EAAKzP,QAC9B6lE,EAAqBp2D,GAER,MAAbA,EAAKzP,MAAiC,CACjC0sF,IACDA,GAAmC,EAEnCF,EAAc12E,QAAQ06D,gBAClBv/E,OAAOU,OAAO66F,EAAc12E,QAAQ06D,iBACxCgc,EAAc12E,QAAQy6D,aAAeic,EAAc12E,QAAQ06D,iBAE/D,IACIh0C,EAAuD,IAA3B,MAAb/sB,EAAKzP,OAD6C,IAAhC,KAAbyP,EAAKzP,QAEJw8B,EACrBgwD,EAAc12E,QAAQ06D,gBAAgBrN,GAAS1zD,EAAKxQ,SAAShD,QAAUwT,GAGlEk9E,IACDA,GAAoC,EAEpCH,EAAc12E,QAAQy6D,aAClBt/E,OAAOU,OAAO66F,EAAc12E,QAAQ06D,kBAE5Cgc,EAAc12E,QAAQy6D,aAAapN,GAAS1zD,EAAKxQ,SAAShD,QAAUwT,GAEpE+sB,IACAgwD,EAAc12E,QAAQm1D,kBAAoBx7D,GAclD,GAXI+8E,GACAA,EAAcrgB,YAAc18D,EAAKzP,MACjCwsF,EAAcld,kBAAoB7/D,EAAKzP,MACvCwsF,EAAcjd,qBAAuB9/D,EAAKw1D,gBACtCx1D,EAAKqG,SAAWrG,EAAKqG,QAAQhT,WAC7B0pF,EAAcjd,qBAAuB9/D,EAAKqG,QAAQhT,SAASkuE,qBAI/Dsb,GAAqB78E,EAAKzP,MAE1ByP,EAAKy2D,WAAa,EAClBsmB,EAAgB/8E,EACXyiE,GAAcziE,KACfg9E,EAAsBh9E,QAS1B,KAAO+8E,GAAiBx6F,IAAMw6F,EAAc5kF,UAAY4kF,EAActmB,YAAY,CAC9E,IAAI0mB,EAAYJ,EAAc9uF,OAC1BkvF,IACAA,EAAUzgB,YAAcqgB,EAAcrgB,WACtCygB,EAAUrd,qBAAuBid,EAAcjd,qBAK/Ckd,GAHJD,EAAgBI,IAEK1a,GAAcsa,GACTA,EAAc/4E,aAGd+4E,GAQtC,OAEIt8F,QAAS,KACTsnC,UAAW60D,EACXQ,cAAeP,EACftb,mBAAoBub,EAAoBvsF,MAAOA,EAC/CqhE,MAAOA,EACPmB,iBAAkBA,GAAoBS,GACtCR,eAAgBA,GAAkBQ,GAAMV,YAX1B,SAAUvzD,EAAMpH,EAAWgb,EAAWqhD,GACpD,OAAO5C,EAAMz5D,GAAWkO,QAAQysD,YAAYvzD,EAAM4T,EAAWqhD,IAW7D0O,aAAcwZ,EACdzZ,YAAa0Z,EAAqBvmB,mBAAoBA,IA21D9D50E,OAAO+B,eAAe7C,EAAS,cAAgB2D,OAAO","sourcesContent":["/**\n * @license Angular v7.0.0-rc.0+62.sha-ccceff5\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('@angular/compiler'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', '@angular/compiler', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.ng.compiler,global.rxjs.operators));\n}(this, (function (exports,rxjs,compiler,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @experimental\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @experimental\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @experimental\n     */\n    var INJECTOR = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     *\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            var injectableDef = getInjectableDef(token);\n            if (injectableDef && injectableDef.providedIn == 'root') {\n                return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                    injectableDef.value;\n            }\n            if (flags & 8 /* Optional */)\n                return null;\n            throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY$1 = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY$1);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var pipeTypes = componentDefinition.pipes;\n        var directiveTypes = componentDefinition.directives;\n        var declaredInputs = {};\n        var encapsulation = componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated;\n        var styles = componentDefinition.styles || EMPTY_ARRAY;\n        var animations = componentDefinition.animations || null;\n        var data = componentDefinition.data || {};\n        if (animations) {\n            data.animations = animations;\n        }\n        var def = {\n            type: type,\n            diPublic: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            hostVars: componentDefinition.hostVars || 0,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            inputs: invertObject(componentDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(componentDefinition.outputs),\n            exportAs: componentDefinition.exportAs || null,\n            onInit: type.prototype.ngOnInit || null,\n            doCheck: type.prototype.ngDoCheck || null,\n            afterContentInit: type.prototype.ngAfterContentInit || null,\n            afterContentChecked: type.prototype.ngAfterContentChecked || null,\n            afterViewInit: type.prototype.ngAfterViewInit || null,\n            afterViewChecked: type.prototype.ngAfterViewChecked || null,\n            onDestroy: type.prototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null,\n            pipeDefs: pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: data,\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: encapsulation,\n            providers: EMPTY_ARRAY,\n            viewProviders: EMPTY_ARRAY,\n            id: \"c\" + _renderCompCount++, styles: styles,\n        };\n        var feature = componentDefinition.features;\n        feature && feature.forEach(function (fn) { return fn(def); });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY$1;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type) {\n        return type[NG_MODULE_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 17;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var PARENT = 1;\n    var NEXT = 2;\n    var QUERIES = 3;\n    var FLAGS = 4;\n    var HOST_NODE = 5;\n    var BINDING_INDEX = 6;\n    var DIRECTIVES = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n    var DECLARATION_VIEW = 16;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LViewData` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     */\n    function getContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LViewData instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lViewData = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = discoverDirectives(nodeIndex, lViewData);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lViewData, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, compontent or\n                // directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var lNode = getLNodeFromViewData(lViewData, nodeIndex);\n                var existingCtx = readPatchedData(lNode.native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lViewData, nodeIndex, lNode.native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomElement(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lViewData = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lViewData = parentContext;\n                    }\n                    else {\n                        lViewData = parentContext.lViewData;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lViewData) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lViewData, rElement);\n                    if (index >= 0) {\n                        var lNode = getLNodeFromViewData(lViewData, index);\n                        var context = createLContext(lViewData, index, lNode.native);\n                        attachPatchData(lNode.native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lViewData, lNodeIndex, native) {\n        return {\n            lViewData: lViewData,\n            nodeIndex: lNodeIndex, native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * A simplified lookup function for finding the LElementNode from a component instance.\n     *\n     * This function exists for tree-shaking purposes to avoid having to pull in everything\n     * that `getContext` has in the event that an Angular application doesn't need to have\n     * any programmatic access to an element's context (only change detection uses this function).\n     */\n    function getLElementFromComponent(componentInstance) {\n        var lViewData = readPatchedData(componentInstance);\n        var lNode;\n        if (Array.isArray(lViewData)) {\n            var lNodeIndex = findViaComponent(lViewData, componentInstance);\n            lNode = readElementValue(lViewData[lNodeIndex]);\n            var context = createLContext(lViewData, lNodeIndex, lNode.native);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lViewData;\n            lNode = readElementValue(context.lViewData[context.nodeIndex]);\n        }\n        return lNode;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLViewData(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lViewData;\n        }\n        return null;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LViewData and returns the matching index\n     */\n    function findViaNativeElement(lViewData, native) {\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var lNode = getLNodeFromViewData(lViewData, tNode.index);\n            if (lNode.native === native) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else if (tNode.parent) {\n            return tNode.parent.next || null;\n        }\n        return null;\n    }\n    /**\n     * Locates the component within the given LViewData and returns the matching index\n     */\n    function findViaComponent(lViewData, componentInstance) {\n        var componentIndices = lViewData[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var lNodeData = readElementValue(lViewData[elementComponentIndex]).data;\n                if (lNodeData[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootNode = lViewData[HEADER_OFFSET];\n            var rootComponent = rootNode.data[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LViewData and returns the matching index\n     */\n    function findViaDirective(lViewData, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LViewData of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var directivesAcrossView = lViewData[DIRECTIVES];\n        var tNode = lViewData[TVIEW].firstChild;\n        if (directivesAcrossView != null) {\n            while (tNode) {\n                var directiveIndexStart = getDirectiveStartIndex(tNode);\n                var directiveIndexEnd = getDirectiveEndIndex(tNode, directiveIndexStart);\n                for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                    if (directivesAcrossView[i] === directiveInstance) {\n                        return tNode.index;\n                    }\n                }\n                tNode = traverseNextElement(tNode);\n            }\n        }\n        return -1;\n    }\n    function assertDomElement(element) {\n        assertEqual(element.nodeType, 1, 'The provided value must be an instance of an HTMLElement');\n    }\n    /**\n     * Retruns the instance of the LElementNode at the given index in the LViewData.\n     *\n     * This function will also unwrap the inner value incase it's stuffed into an\n     * array (which is what happens when [style] and [class] bindings are present\n     * in the view instructions for the element being returned).\n     */\n    function getLNodeFromViewData(lViewData, lElementIndex) {\n        var value = lViewData[lElementIndex];\n        return value ? readElementValue(value) : null;\n    }\n    /**\n     * Returns a list of directives extracted from the given view. Does not contain\n     * the component.\n     *\n     * @param lViewData The target view data\n     */\n    function discoverDirectives(nodeIndex, lViewData) {\n        var directivesAcrossView = lViewData[DIRECTIVES];\n        if (directivesAcrossView != null) {\n            var tNode = lViewData[TVIEW].data[nodeIndex];\n            var directiveStartIndex = getDirectiveStartIndex(tNode);\n            var directiveEndIndex = getDirectiveEndIndex(tNode, directiveStartIndex);\n            if (tNode.flags & 4096 /* isComponent */)\n                directiveStartIndex++;\n            return directivesAcrossView.slice(directiveStartIndex, directiveEndIndex);\n        }\n        return null;\n    }\n    function getDirectiveStartIndex(tNode) {\n        // the tNode instances store a flag value which then has a\n        // pointer which tells the starting index of where all the\n        // active directives are in the master directive array\n        return tNode.flags >> 15 /* DirectiveStartingIndexShift */;\n    }\n    function getDirectiveEndIndex(tNode, startIndex) {\n        // The end value is also a part of the same flag\n        // (see `TNodeFlags` to see how the flag bit shifting\n        // values are used).\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        return count ? (startIndex + count) : -1;\n    }\n    function readElementValue(value) {\n        return (Array.isArray(value) ? value[0] : value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData[DIRECTIVES]\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 15 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.directives[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView[DIRECTIVES], tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(data, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(data[arr[i]]);\n        }\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    // PARENT, NEXT, and QUERIES are indices 1, 2, and 3.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var VIEWS = 4;\n    var RENDER_PARENT = 5;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b, checkNoChangesMode) {\n        if (ngDevMode && checkNoChangesMode) {\n            return !devModeEqual(a, b);\n        }\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData` or `TData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /** Retrieves an element value from the provided `viewData`.\n      *\n      * Elements that are read may be wrapped in a style context,\n      * therefore reading the value may involve unwrapping that.\n      */\n    function loadElementInternal(index, arr) {\n        var value = loadInternal(index, arr);\n        return readElementValue(value);\n    }\n    function getLNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lViewData = Array.isArray(target) ? target : readPatchedLViewData(target);\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    function getRootContext(viewOrComponent) {\n        return getRootView(viewOrComponent)[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the parent LNode of a given node. */\n    function getParentLNode(tNode, currentView) {\n        return tNode.parent == null ? getHostElementNode(currentView) :\n            getLNode(tNode.parent, currentView);\n    }\n    /**\n     * Gets the host LElementNode given a view. Will return null if the host element is an\n     * LViewNode, since they are being phased out.\n     */\n    function getHostElementNode(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getLNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    function getContainerNode(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ?\n                embeddedView[PARENT][containerHostIndex].dynamicLContainerNode :\n                null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return getParentLNode(tNode, embeddedView[PARENT]);\n        }\n    }\n    /**\n     * Retrieves render parent LElementNode for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getContainerNode(tViewNode, view);\n        return container ? container.data[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the LElement nodes.\n     * @param renderer the current renderer.\n     * @param renderParentNode Optional the render parent node to be set in all LContainerNodes found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParentNode, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            var parent_1 = renderParentNode ? renderParentNode.native : null;\n            if (tNode.type === 3 /* Element */) {\n                var elementNode = getLNode(tNode, currentView);\n                executeNodeAction(action, renderer, parent_1, elementNode.native, beforeNode);\n                if (elementNode.dynamicLContainerNode) {\n                    executeNodeAction(action, renderer, parent_1, elementNode.dynamicLContainerNode.native, beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainerNode = currentView[tNode.index];\n                executeNodeAction(action, renderer, parent_1, lContainerNode.native, beforeNode);\n                var childContainerData = lContainerNode.dynamicLContainerNode ?\n                    lContainerNode.dynamicLContainerNode.data :\n                    lContainerNode.data;\n                if (renderParentNode) {\n                    childContainerData[RENDER_PARENT] = renderParentNode;\n                }\n                if (childContainerData[VIEWS].length) {\n                    currentView = childContainerData[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainerNode.dynamicLContainerNode ?\n                        lContainerNode.dynamicLContainerNode.native :\n                        lContainerNode.native;\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 8192 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the LNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index].native;\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lViewData) {\n        var rootTNode = lViewData[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'viewData.parent');\n            lViewData = lViewData[PARENT];\n            rootTNode = lViewData[HOST_NODE];\n        }\n        return lViewData;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var parentNode = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        var parent = parentNode ? parentNode.native : null;\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (parent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, parentNode, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~8 /* Attached */;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, tContainer, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        destroyLView(view);\n        detachView(lContainer, removeIndex, !!tContainer.detached);\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        if (viewData[TVIEW].childIndex === -1)\n            return null;\n        var hostNode = viewData[viewData[TVIEW].childIndex];\n        return hostNode.data ? hostNode.data : hostNode.dynamicLContainerNode.data;\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getContainerNode(tNode, state).data;\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer[TVIEW]) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]).native;\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view[DIRECTIVES], destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            var hostTNode = currentView[HOST_NODE];\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentLNode(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 4096 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getContainerNode(viewTNode, view);\n        if (container == null || container.data[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent = tNode.parent;\n        if (tNode.parent && tNode.parent.type === 4 /* ElementContainer */) {\n            currentNode = getHighestElementContainer(tNode);\n            parent = currentNode.parent;\n        }\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var parentLNode = getParentLNode(childTNode, currentView);\n        var parentEl = parentLNode ? parentLNode.native : null;\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var container = getContainerNode(parentTNode, currentView);\n                var renderParent = container.data[RENDER_PARENT];\n                var views = container.data[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, renderParent.native, childEl, getBeforeNodeForView(index, views, container));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */) {\n                var elementContainer = getHighestElementContainer(childTNode);\n                var node = getRenderParent(elementContainer, currentView);\n                nativeInsertBefore(renderer, node.native, childEl, parentEl);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                    parentEl.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level ng-container if ng-containers are nested.\n     *\n     * @param ngContainer The TNode of the starting ng-container\n     * @returns tNode The TNode of the highest level ng-container\n     */\n    function getHighestElementContainer(ngContainer) {\n        while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n            ngContainer = ngContainer.parent;\n        }\n        return ngContainer;\n    }\n    function getBeforeNodeForView(index, views, container) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getLNode(viewTNode.child, view).native : container.native;\n        }\n        else {\n            return container.native;\n        }\n    }\n    /**\n     * Removes the `child` element of the `parent` from the DOM.\n     *\n     * @param parentEl The parent element from which to remove the child\n     * @param child The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(tNode, child, currentView) {\n        var parentNative = getParentLNode(tNode, currentView).native;\n        if (child !== null && canInsertNativeNode(tNode, currentView)) {\n            // We only remove the element if not in View or not projected.\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, child) :\n                parentNative.removeChild(child);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedLNode The node to process\n     * @param parentNode The last parent element to be processed\n     * @param tProjectionNode\n     * @param currentView Current LView\n     * @param projectionView Projection view\n     */\n    function appendProjectedNode(projectedLNode, projectedTNode, tProjectionNode, currentView, projectionView) {\n        appendChild(projectedLNode.native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(projectedLNode.native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var lContainer = projectedLNode.data;\n            lContainer[RENDER_PARENT] = renderParent;\n            var views = lContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, projectedLNode.native);\n            }\n        }\n        else if (projectedTNode.type === 4 /* ElementContainer */) {\n            var ngContainerChildTNode = projectedTNode.child;\n            while (ngContainerChildTNode) {\n                var ngContainerChild = getLNode(ngContainerChildTNode, projectionView);\n                appendProjectedNode(ngContainerChild, ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                ngContainerChildTNode = ngContainerChildTNode.next;\n            }\n        }\n        if (projectedLNode.dynamicLContainerNode) {\n            projectedLNode.dynamicLContainerNode.data[RENDER_PARENT] = renderParent;\n            appendChild(projectedLNode.dynamicLContainerNode.native, tProjectionNode, currentView);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    function createEmptyStylingContext(element, sanitizer, initialStylingValues) {\n        return [\n            element || null, null, sanitizer || null, initialStylingValues || [null], 0, 0, null, null\n        ];\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getContext(target);\n        if (ngDevMode && !context) {\n            throw new Error('Only elements that exist in an Angular application can be used for player access');\n        }\n        var lViewData = context.lViewData, nodeIndex = context.nodeIndex;\n        var value = lViewData[nodeIndex];\n        var stylingContext = value;\n        if (!Array.isArray(value)) {\n            stylingContext = lViewData[nodeIndex] = createEmptyStylingContext(value);\n        }\n        return stylingContext[1 /* PlayerContext */] || allocPlayerContext(stylingContext);\n    }\n    function allocPlayerContext(data) {\n        return data[1 /* PlayerContext */] = [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(lElement, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[0 /* ElementPosition */] = lElement;\n        return context;\n    }\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer) {\n        var initialStylingValues = [null];\n        var context = createEmptyStylingContext(null, styleSanitizer, initialStylingValues);\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[5 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 3 /* Size */ * 2 + 8 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 8 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 8 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 3 /* Size */ + 8 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 3 /* Size */ + multiStart;\n            var indexForSingle = i * 3 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        setFlag(context, 4 /* MasterFlagPosition */, pointers(0, 0, multiStart));\n        setContextDirty(context, initialStylingValues.length > 1);\n        return context;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classes The key/value map of CSS class names that will be used for the update.\n     * @param styles The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classes, styles) {\n        styles = styles || null;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = classes === context[6 /* PreviousMultiClassValue */];\n        var ignoreAllStyleUpdates = styles === context[7 /* PreviousMultiStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            context[6 /* PreviousMultiClassValue */] = classes;\n            if (typeof classes == 'string') {\n                classNames = classes.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classes ? Object.keys(classes) : EMPTY_ARR;\n            }\n        }\n        classes = (classes || EMPTY_OBJ);\n        if (!ignoreAllStyleUpdates) {\n            context[7 /* PreviousMultiStyleValue */] = styles;\n        }\n        var styleProps = styles ? Object.keys(styles) : EMPTY_ARR;\n        styles = styles || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_2 && !ignoreAllStyleUpdates) || (isClassBased_2 && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 3 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased_3 && !ignoreAllStyleUpdates) || (isClassBased_3 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased_3);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 3 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_4 && !ignoreAllStyleUpdates) || (isClassBased_4 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n                context.push(flag, prop, value);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, value) {\n        var singleIndex = 8 /* SingleStylesStartPosition */ + index * 3 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[5 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param styleStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param classStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     */\n    function renderStyling(context, renderer, styleStore, classStore) {\n        if (isContextDirty(context)) {\n            var native = context[0 /* ElementPosition */].native;\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            for (var i = 8 /* SingleStylesStartPosition */; i < context.length; i += 3 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    if (isClassBased_6) {\n                        setClass(native, prop, valueToApply ? true : false, renderer, classStore);\n                    }\n                    else {\n                        var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                        setStyle(native, prop, valueToApply, renderer, sanitizer, styleStore);\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            setContextDirty(context, false);\n        }\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store) {\n            store[prop] = value;\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store) {\n        if (store) {\n            store[className] = add;\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 7 /* BitMask */) | (staticIndex << 3 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 3 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[3 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 3 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 3 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 8 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[4 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[2 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 4 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 4 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 4 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 4 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 3 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 3 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 3 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * TView.data needs to fill the same number of slots as the LViewData header\n     * so the indices of nodes are consistent between LViewData and TView.data.\n     *\n     * It's much faster to keep a blueprint of the pre-filled array and slice it\n     * than it is to create a new array and fill it each time a TView is created.\n     */\n    var HEADER_FILLER = new Array(HEADER_OFFSET).fill(null);\n    /**\n     * Token set in currentMatches while dependencies are being resolved.\n     *\n     * If we visit a directive that has a value set to CIRCULAR, we know we've\n     * already seen it, and thus have a circular dependency.\n     */\n    var CIRCULAR$1 = '__CIRCULAR__';\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    var rendererFactory;\n    function getRendererFactory() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return rendererFactory;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LViewData` to only those elements.\n     */\n    var elementDepthCount;\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentNode() {\n        return previousOrParentTNode == null || previousOrParentTNode === viewData[HOST_NODE] ?\n            getHostElementNode(viewData) :\n            getLNode(previousOrParentTNode, viewData);\n    }\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setEnvironment(tNode, view) {\n        previousOrParentTNode = tNode;\n        viewData = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    var tView;\n    var currentQueries;\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== viewData[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = currentQueries.clone());\n            previousOrParentTNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (currentQueries = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function _getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    /**\n     * An array of directive instances in the current view.\n     *\n     * These must be stored separately from LNodes because their presence is\n     * unknown at compile-time and thus space cannot be reserved in data[].\n     */\n    var directives;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.hostBindingStartIndex + any hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = viewData;\n        directives = newView && newView[DIRECTIVES];\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        bindingRootIndex = newView && tView.bindingStartIndex;\n        renderer = newView && newView[RENDERER];\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        viewData = contextViewData = newView;\n        oldView && (oldView[QUERIES] = currentQueries);\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(directives, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews() {\n        setHostBindings(tView.hostBindings);\n        var parentFirstTemplatePass = firstTemplatePass;\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = firstTemplatePass = false;\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicEmbeddedViews(viewData);\n        // Content query results must be refreshed before content hooks are called.\n        refreshContentQueries(tView);\n        if (!checkNoChangesMode) {\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        refreshChildComponents(tView.components, parentFirstTemplatePass);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(bindings) {\n        if (bindings != null) {\n            bindingRootIndex = viewData[BINDING_INDEX] = tView.hostBindingStartIndex;\n            var defs = tView.directives;\n            for (var i = 0; i < bindings.length; i += 2) {\n                var dirIndex = bindings[i];\n                var def = defs[dirIndex];\n                if (firstTemplatePass) {\n                    for (var i_1 = 0; i_1 < def.hostVars; i_1++) {\n                        tView.blueprint.push(NO_CHANGE);\n                        viewData.push(NO_CHANGE);\n                    }\n                }\n                def.hostBindings(dirIndex, bindings[i + 1]);\n                bindingRootIndex = viewData[BINDING_INDEX] = bindingRootIndex + def.hostVars;\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.directives[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components, parentFirstTemplatePass) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i], parentFirstTemplatePass);\n            }\n        }\n    }\n    function executeInitAndContentHooks() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        var instance = tView.blueprint.slice();\n        instance[PARENT] = instance[DECLARATION_VIEW] = viewData;\n        instance[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        instance[CONTEXT] = context;\n        instance[INJECTOR$1] = viewData ? viewData[INJECTOR$1] : null;\n        instance[RENDERER] = renderer;\n        instance[SANITIZER] = sanitizer || null;\n        return instance;\n    }\n    /**\n     * Creation of LNode object is extracted to a separate function so we always create LNode object\n     * with the same shape\n     * (same properties assigned in the same order).\n     */\n    function createLNodeObject(type, native, state) {\n        return { native: native, data: state, dynamicLContainerNode: null };\n    }\n    function createNodeAtIndex(index, type, native, name, attrs, state) {\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && viewData && parent !== viewData[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        var isState = state != null;\n        var node = createLNodeObject(type, native, isState ? state : null);\n        var tNode;\n        if (index === -1 || type === 2 /* View */) {\n            // View nodes are not stored in data because they can be added / removed at runtime (which\n            // would cause indices to change). Their TNodes are instead stored in tView.node.\n            tNode = (state ? state[TVIEW].node : null) ||\n                createTNode(type, index, null, null, tParent, null);\n        }\n        else {\n            var adjustedIndex = index + HEADER_OFFSET;\n            // This is an element or container or projection node\n            var tData = tView.data;\n            ngDevMode && assertLessThan(adjustedIndex, viewData.length, \"Slot should have been initialized with null\");\n            viewData[adjustedIndex] = node;\n            if (tData[adjustedIndex] == null) {\n                var tNode_1 = tData[adjustedIndex] =\n                    createTNode(type, adjustedIndex, name, attrs, tParent, null);\n                if (!isParent && previousOrParentTNode) {\n                    previousOrParentTNode.next = tNode_1;\n                    if (previousOrParentTNode.dynamicContainerNode)\n                        previousOrParentTNode.dynamicContainerNode.next = tNode_1;\n                }\n            }\n            tNode = tData[adjustedIndex];\n            if (!tView.firstChild && type === 3 /* Element */) {\n                tView.firstChild = tNode;\n            }\n            // Now link ourselves into the tree.\n            if (isParent && previousOrParentTNode) {\n                if (previousOrParentTNode.child == null && parentInSameView ||\n                    previousOrParentTNode.type === 2 /* View */) {\n                    // We are in the same view, which means we are adding content node to the parent View.\n                    previousOrParentTNode.child = tNode;\n                }\n            }\n        }\n        // View nodes and host elements need to set their host node (components do not save host TNodes)\n        if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n            var lViewData = state;\n            ngDevMode &&\n                assertEqual(lViewData[HOST_NODE], null, 'lViewData[HOST_NODE] should not have been initialized');\n            lViewData[HOST_NODE] = tNode;\n            if (lViewData[TVIEW].firstTemplatePass) {\n                lViewData[TVIEW].node = tNode;\n            }\n        }\n        previousOrParentTNode = tNode;\n        isParent = true;\n        return tNode;\n    }\n    /**\n     * When LNodes are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function adjustBlueprintForNewNode(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.hostBindingStartIndex++;\n            tView.blueprint.push(null);\n            view.push(null);\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = isParent;\n        var _previousOrParentTNode = previousOrParentTNode;\n        isParent = true;\n        previousOrParentTNode = null;\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createNodeAtIndex(-1, 2 /* View */, null, null, null, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        isParent = _isParent;\n        previousOrParentTNode = _previousOrParentTNode;\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context, rf) {\n        var _isParent = isParent;\n        var _previousOrParentTNode = previousOrParentTNode;\n        var oldView;\n        if (viewToRender[FLAGS] & 64 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(viewToRender[CONTEXT]);\n        }\n        else {\n            try {\n                isParent = true;\n                previousOrParentTNode = null;\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews();\n                }\n                else {\n                    viewToRender[TVIEW].firstTemplatePass = firstTemplatePass = false;\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice in fact, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                isParent = _isParent;\n                previousOrParentTNode = _previousOrParentTNode;\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function renderComponentOrTemplate(hostView, componentOrContext, templateFn) {\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(getRenderFlags(hostView), componentOrContext);\n                refreshDescendantViews();\n            }\n            else {\n                executeInitAndContentHooks();\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings(tView.hostBindings);\n                componentRefresh(HEADER_OFFSET, false);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, null, attrs || null, null);\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        currentQueries &&\n            (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null, null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (elementDepthCount === 0) {\n            attachPatchData(native, viewData);\n        }\n        elementDepthCount++;\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || renderer;\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    function nativeNodeLocalRefExtractor(tNode, currentView) {\n        return getLNode(tNode, currentView).native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param lNode LNode for which directive and locals should be created\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from LNode\n     */\n    function createDirectivesAndLocals(localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = nativeNodeLocalRefExtractor; }\n        if (!bindingsEnabled)\n            return;\n        if (firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            cacheMatchingDirectivesForNode(previousOrParentTNode, tView, localRefs || null);\n        }\n        else {\n            instantiateDirectivesDirectly();\n        }\n        saveResolvedLocalsInData(localRefExtractor);\n    }\n    /**\n     * On first template pass, we match each node against available directive selectors and save\n     * the resulting defs in the correct instantiation order for subsequent change detection runs\n     * (so dependencies are always created before the directives that inject them).\n     */\n    function cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var matches = tView.currentMatches = findDirectiveMatches(tNode);\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                var valueIndex = i + 1;\n                resolveDirective(def, valueIndex, matches, tView);\n                saveNameToExportMap(matches[valueIndex], def, exportsMap);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /** Matches the current node against all available selectors. */\n    function findDirectiveMatches(tNode) {\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    matches || (matches = []);\n                    if (def.template) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        addComponentLogic(def);\n                        tNode.flags = 4096 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def, null);\n                    }\n                    else {\n                        matches.push(def, null);\n                    }\n                    if (def.diPublic)\n                        def.diPublic(def);\n                }\n            }\n        }\n        return matches;\n    }\n    function resolveDirective(def, valueIndex, matches, tView) {\n        if (matches[valueIndex] === null) {\n            matches[valueIndex] = CIRCULAR$1;\n            var instance = def.factory();\n            (tView.directives || (tView.directives = [])).push(def);\n            return directiveCreate(matches[valueIndex] = tView.directives.length - 1, instance, def);\n        }\n        else if (matches[valueIndex] === CIRCULAR$1) {\n            // If we revisit this directive before it's resolved, we know it's circular\n            throwCyclicDependencyError(def.type);\n        }\n        return null;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck() {\n        if (firstTemplatePass) {\n            (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n        }\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n     */\n    function queueHostBindingForCheck(dirIndex, hostVars) {\n        // Must subtract the header offset because hostBindings functions are generated with\n        // instructions that expect element indices that are NOT adjusted (e.g. elementProperty).\n        ngDevMode &&\n            assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.hostBindings || (tView.hostBindings = [])).push(dirIndex, previousOrParentTNode.index - HEADER_OFFSET);\n    }\n    /**\n     * This function instantiates the given directives.\n     */\n    function instantiateDirectivesDirectly() {\n        ngDevMode && assertEqual(firstTemplatePass, false, \"Directives should only be instantiated directly after first template pass\");\n        var count = previousOrParentTNode.flags & 4095 /* DirectiveCountMask */;\n        if (isContentQueryHost(previousOrParentTNode) && currentQueries) {\n            currentQueries = currentQueries.clone();\n        }\n        if (count > 0) {\n            var start = previousOrParentTNode.flags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var tDirectives = tView.directives;\n            for (var i = start; i < end; i++) {\n                var def = tDirectives[i];\n                // Component view must be set on node before the factory is created so\n                // ChangeDetectorRefs have a way to store component view on creation.\n                if (def.template) {\n                    addComponentLogic(def);\n                }\n                directiveCreate(i, def.factory(), def);\n            }\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(localRefExtractor) {\n        var localNames = previousOrParentTNode.localNames;\n        var tNode = previousOrParentTNode;\n        if (localNames) {\n            var localIndex = previousOrParentTNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ? localRefExtractor(tNode, viewData) : directives[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            hostBindingStartIndex: initialViewLength,\n            directives: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            hostBindings: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            currentMatches: null,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        rendererFactory = factory;\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Creates the host LNode.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     *\n     * @returns LElementNode created\n     */\n    function hostElement(tag, rNode, def, sanitizer) {\n        resetComponentState();\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null, createLViewData(renderer, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n        if (firstTemplatePass) {\n            tNode.flags = 4096 /* isComponent */;\n            if (def.diPublic)\n                def.diPublic(def);\n            tView.directives = [def];\n        }\n        return viewData[HEADER_OFFSET];\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var node = getPreviousOrParentNode();\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var cleanupFn = renderer.listen(node.native, eventName, listenerFn);\n                storeCleanupFn(viewData, cleanupFn);\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                node.native.addEventListener(eventName, wrappedListener, useCapture);\n                var cleanupInstances = getCleanup(viewData);\n                cleanupInstances.push(wrappedListener);\n                if (firstTemplatePass) {\n                    getTViewCleanup(viewData).push(eventName, tNode.index, cleanupInstances.length - 1, useCapture);\n                }\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], directives);\n            var subscription = directives[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = viewData;\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        currentQueries &&\n            (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n        elementDepthCount--;\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var element_1 = loadElement(index);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1.native, name) :\n                    element_1.native.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1.native, name, strValue) :\n                    element_1.native.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var node = loadElement(index);\n        var tNode = getTNode(index);\n        // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked\n        if (tNode && tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(tNode.flags, 0 /* Input */);\n        }\n        var inputData = tNode && tNode.inputs;\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(dataValue, value);\n            markDirtyIfOnPush(node);\n        }\n        else {\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            var native = node.native;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n                (native.setProperty ? native.setProperty(propName, value) :\n                    native[propName] = value);\n        }\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param parent The parent of this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: parent ? parent.injectorIndex : -1,\n            flags: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: parent,\n            dynamicContainerNode: null,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], directives);\n            directives[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number lNodeFlags logical node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.directives;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassProp(index, stylingIndex, value) {\n        updateClassProp(getStylingContext(index), stylingIndex, value ? true : false);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n        var tNode = previousOrParentTNode;\n        if (!tNode.stylingTemplate) {\n            // initialize the styling template.\n            tNode.stylingTemplate =\n                createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            elementStylingApply(tNode.index - HEADER_OFFSET);\n        }\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     */\n    function getStylingContext(index) {\n        var stylingContext = load(index);\n        if (!Array.isArray(stylingContext)) {\n            var lElement = stylingContext;\n            var tNode = getTNode(index);\n            ngDevMode &&\n                assertDefined(tNode.stylingTemplate, 'getStylingContext() called before elementStyling()');\n            stylingContext = viewData[index + HEADER_OFFSET] =\n                allocStylingContext(lElement, tNode.stylingTemplate);\n        }\n        return stylingContext;\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        renderStyling(getStylingContext(index), renderer);\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param styleName Name of property. Because it is going to DOM this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix) {\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     */\n    function elementStylingMap(index, classes, styles) {\n        updateStylingMap(getStylingContext(index), classes, styles);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, renderer);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        isParent = false;\n        appendChild(textNative, tNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var existingNode = loadElement(index);\n            ngDevMode && assertDefined(existingNode, 'LNode should exist');\n            ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n                existingNode.native.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Create a directive and their associated content queries.\n     *\n     * NOTE: directives can be created in order other than the index order. They can also\n     *       be retrieved before they are created in which case the value will be null.\n     *\n     * @param directive The directive instance.\n     * @param directiveDef DirectiveDef object which contains information about the template.\n     */\n    function directiveCreate(directiveDefIdx, directive, directiveDef) {\n        var hostNode = getLNode(previousOrParentTNode, viewData);\n        var instance = baseDirectiveCreate(directiveDefIdx, directive, directiveDef, hostNode);\n        if (directiveDef.template) {\n            hostNode.data[CONTEXT] = directive;\n        }\n        if (firstTemplatePass) {\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(directiveDefIdx, directiveDef.onInit, directiveDef.doCheck, tView);\n            if (directiveDef.hostBindings)\n                queueHostBindingForCheck(directiveDefIdx, directiveDef.hostVars);\n        }\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, instance, directiveDef.inputs, previousOrParentTNode);\n        }\n        if (directiveDef.contentQueries) {\n            directiveDef.contentQueries();\n        }\n        return instance;\n    }\n    function addComponentLogic(def) {\n        var hostNode = getLNode(previousOrParentTNode, viewData);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentTNode.index, createLViewData(rendererFactory.createRenderer(hostNode.native, def), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        // We need to set the host node/data here because when the component LNode was created,\n        // we didn't yet know it was a component (just an element).\n        hostNode.data = componentView;\n        componentView[HOST_NODE] = previousOrParentTNode;\n        if (firstTemplatePass)\n            queueComponentIndexForCheck();\n    }\n    /**\n     * A lighter version of directiveCreate() that is used for the root component\n     *\n     * This version does not contain features that we don't already support at root in\n     * current Angular. Example: local refs and inputs on root component.\n     */\n    function baseDirectiveCreate(index, directive, directiveDef, hostNode) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        attachPatchData(directive, viewData);\n        if (hostNode) {\n            attachPatchData(hostNode.native, viewData);\n        }\n        if (directives == null)\n            viewData[DIRECTIVES] = directives = [];\n        ngDevMode && assertDataNext(index, directives);\n        directives[index] = directive;\n        if (firstTemplatePass) {\n            var flags = previousOrParentTNode.flags;\n            if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n                // When the first directive is created:\n                // - save the index,\n                // - set the number of directives to 1\n                previousOrParentTNode.flags =\n                    index << 15 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n            }\n            else {\n                // Only need to bump the size when subsequent directives are created\n                ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n                previousOrParentTNode.flags++;\n            }\n        }\n        else {\n            var diPublic = directiveDef.diPublic;\n            if (diPublic)\n                diPublic(directiveDef);\n        }\n        if (directiveDef.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(hostNode.native, directiveDef.attributes);\n        }\n        return directive;\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param currentView The parent view of the LContainer\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(currentView, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? null : 0,\n            currentView,\n            null,\n            null,\n            [],\n            null // renderParent, set after node creation\n        ];\n    }\n    /**\n     * Creates an LContainerNode for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (firstTemplatePass) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(localRefs, localRefExtractor);\n        currentQueries &&\n            (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(tNode.flags, tView);\n        isParent = false;\n    }\n    /**\n     * Creates an LContainerNode for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        firstTemplatePass && (tNode.tViews = []);\n        isParent = false;\n    }\n    function containerInternal(index, tagName, attrs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'container nodes should be created before any bindings');\n        var lContainer = createLContainer(viewData);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = renderer.createComment(ngDevMode ? 'container' : '');\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs, lContainer);\n        lContainer[RENDER_PARENT] = getRenderParent(tNode, viewData);\n        appendChild(comment, tNode, viewData);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, lContainer);\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        previousOrParentTNode = loadInternal(index, tView.data);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        isParent = true;\n        // Inline containers cannot have style bindings, so we can read the value directly\n        viewData[previousOrParentTNode.index].data[ACTIVE_INDEX] = 0;\n        if (!checkNoChangesMode) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, creationMode);\n        }\n    }\n    /**\n     * Marks the end of the LContainerNode.\n     *\n     * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        // Inline containers cannot have style bindings, so we can read the value directly\n        var lContainer = viewData[previousOrParentTNode.index].data;\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === null) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the search here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        // Inline containers cannot have style bindings, so we can read the value directly\n        var container = viewData[containerTNode.index];\n        var currentView = viewData;\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var lContainer = container.data;\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            isParent = true;\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createNodeAtIndex(viewBlockId, 2 /* View */, null, null, null, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (container) {\n            if (creationMode) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, currentView, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewToRender);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var viewHost = viewData[HOST_NODE];\n        refreshDescendantViews();\n        leaveView(viewData[PARENT]);\n        previousOrParentTNode = viewHost;\n        isParent = false;\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex, parentFirstTemplatePass) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var element = readElementValue(viewData[adjustedElementIndex]);\n        ngDevMode && assertNodeType(tView.data[adjustedElementIndex], 3 /* Element */);\n        ngDevMode &&\n            assertDefined(element.data, \"Component's host node should have an LViewData attached.\");\n        var hostView = element.data;\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            parentFirstTemplatePass && syncViewWithBlueprint(hostView);\n            detectChangesInternal(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LViewData instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LViewData is created.\n     * 3. Second <comp> is matched as a component and its LViewData is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LViewData was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(viewData)[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null, null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        isParent = false;\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(viewData);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                var lNode = projectedView[nodeToProject.index];\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 8192 /* isProjected */;\n                appendProjectedNode(lNode, nodeToProject, tProjectionNode, viewData, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(node) {\n        // Because data flows down the component tree, ancestors do not need to be marked dirty\n        if (node.data && !(node.data[FLAGS] & 2 /* CheckAlways */)) {\n            node.data[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView && !(currentView[FLAGS] & 64 /* IsRoot */)) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext should be defined');\n        var rootContext = currentView[CONTEXT];\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= 1 /* DetectChanges */;\n        if (nothingScheduled) {\n            scheduleTick(rootContext);\n        }\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext) {\n        if (rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLViewData(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var hostNode = getLElementFromComponent(component);\n        ngDevMode &&\n            assertDefined(hostNode, 'Component host node should be attached to an LViewData instance.');\n        detectChangesInternal(hostNode.data, component);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        checkNoChangesMode = true;\n        try {\n            detectChanges(component);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        checkNoChangesMode = true;\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView[FLAGS], component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews();\n            updateViewQuery(viewQuery, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, flags, component) {\n        if (viewQuery && (flags & 1 /* CreationMode */)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, component) {\n        if (viewQuery) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var elementNode = getLElementFromComponent(component);\n        markViewDirty(elementNode.data);\n    }\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(viewData[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(viewData[BINDING_INDEX]++, v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        viewData[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        return loadInternal(index, contextViewData);\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /** Retrieves a value from the `directives` array. */\n    function loadDirective(index) {\n        ngDevMode && assertDefined(directives, 'Directives array should be defined if reading a dir.');\n        ngDevMode && assertDataInRange(index, directives);\n        return directives[index];\n    }\n    function loadQueryList(queryListIdx) {\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, viewData);\n    }\n    function loadElement(index) {\n        return loadElementInternal(index, viewData);\n    }\n    function getTNode(index) {\n        return tView.data[index + HEADER_OFFSET];\n    }\n    /** Gets the current binding value. */\n    function getBinding(bindingIndex) {\n        ngDevMode && assertDataInRange(viewData[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(viewData[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && assertLessThan(bindingIndex, viewData.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (viewData[bindingIndex] === NO_CHANGE) {\n            viewData[bindingIndex] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n            throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding and returns the value. */\n    function updateBinding(bindingIndex, value) {\n        return viewData[bindingIndex] = value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(bindingIndex, exp1);\n        return bindingUpdated(bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated(bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated2(bindingIndex + 2, exp3, exp4) || different;\n    }\n    function getTView() {\n        return tView;\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList) {\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (firstTemplatePass) {\n            var currentDirectiveIndex = directives.length - 1;\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(previousOrParentTNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n    function assertDataNext(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n            2 /* CheckAlways */ | 64 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window), opts.playerHandler || null);\n        var rootView = createLViewData(rendererFactory.createRenderer(hostNode, componentDef), createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n        rootView[INJECTOR$1] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var elementNode;\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n            component = createRootComponent(elementNode, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            executeInitAndContentHooks();\n            detectChangesInternal(elementNode.data, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(elementNode, componentDef, rootView, rootContext, hostFeatures) {\n        // Create directive instance with factory() and store at index 0 in directives array\n        var component = baseDirectiveCreate(0, componentDef.factory(), componentDef, elementNode);\n        if (componentDef.hostBindings)\n            queueHostBindingForCheck(0, componentDef.hostVars);\n        rootContext.components.push(component);\n        elementNode.data[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        setHostBindings(rootView[TVIEW].hostBindings);\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLViewData(component)[TVIEW];\n        // Root component is always created at dir index 0\n        queueInitHooks(0, def.onInit, def.doCheck, rootTView);\n        // Directive starting index 0, directive count 1 -> directive flags: 1\n        queueLifecycleHooks(1, rootTView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$1(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$1(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef(definition) && isComponentDef(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function () {\n                            superContentQueries_1();\n                            prevContentQueries_1();\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY$1) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handeled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @experimental\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @experimental\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        return Renderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_SIZE = 9;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        if (tView.firstTemplatePass) {\n            var id = type[NG_ELEMENT_ID];\n            // Set a unique ID on the directive type, so if something tries to inject the directive,\n            // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n            if (id == null) {\n                id = type[NG_ELEMENT_ID] = nextNgElementId++;\n            }\n            // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n            // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n            var bloomBit = id & BLOOM_MASK;\n            // Create a mask that targets the specific bit associated with the directive.\n            // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n            // to bit positions 0 - 31 in a 32 bit integer.\n            var mask = 1 << bloomBit;\n            // Use the raw bloomBit number to determine which bloom filter bucket we should check\n            // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n            var b7 = bloomBit & 0x80;\n            var b6 = bloomBit & 0x40;\n            var b5 = bloomBit & 0x20;\n            var tData = tView.data;\n            if (b7) {\n                b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                    (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n            }\n            else {\n                b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                    (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n            }\n        }\n    }\n    function getOrCreateNodeInjector() {\n        ngDevMode && assertPreviousIsParent();\n        return getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), _getViewData());\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            // TODO(kara): Store node injector with host bindings for that node (see VIEW_DATA.md)\n            tNode.injectorIndex = hostView.length;\n            setUpBloom(tView.data, tNode); // foundation for node bloom\n            setUpBloom(hostView, null); // foundation for cumulative bloom\n            setUpBloom(tView.blueprint, null);\n            tView.hostBindingStartIndex += INJECTOR_SIZE;\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = parentLoc & 32767 /* InjectorIndexMask */;\n        var parentView = getParentInjectorView(parentLoc, hostView);\n        var parentData = parentView[TVIEW].data;\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (parentLoc !== -1) {\n            for (var i = 0; i < PARENT_INJECTOR; i++) {\n                var bloomIndex = parentIndex + i;\n                // Creates a cumulative bloom filter that merges the parent's bloom filter\n                // and its own cumulative bloom (which contains tokens for all ancestors)\n                hostView[injectorIndex + i] = parentView[bloomIndex] | parentData[bloomIndex];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function setUpBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // view offset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view[HOST_NODE];\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 15 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LViewData instance from which to start walking up the view tree\n     * @returns The LViewData instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = location >> 15 /* ViewOffsetShift */;\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param def The definition of the directive to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, def) {\n        bloomAdd(injectorIndex, view[TVIEW], def.type);\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param def The definition of the directive to be made public\n     */\n    function diPublic(def) {\n        diPublicInInjector(getOrCreateNodeInjector(), _getViewData(), def);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return getOrCreateInjectable(getOrCreateNodeInjector(), _getViewData(), token, flags);\n    }\n    function injectRenderer2() {\n        return getOrCreateRenderer2(_getViewData());\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @experimental\n     */\n    function injectAttribute(attrNameToInject) {\n        var tNode = getPreviousOrParentTNode();\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /**\n     * Returns the value associated to the given token from the injectors.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(startInjectorIndex, hostView, token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBitOrFactory(token);\n        // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n        // so just call the factory function to create it.\n        if (typeof bloomHash === 'function')\n            return bloomHash();\n        // If the token has a bloom hash, then it is a directive that is public to the injection system\n        // (diPublic) otherwise fall back to the module injector.\n        if (bloomHash != null) {\n            var injectorIndex = startInjectorIndex;\n            var injectorView = hostView;\n            if (flags & 4 /* SkipSelf */) {\n                var parentLocation = injectorView[injectorIndex + PARENT_INJECTOR];\n                injectorIndex = parentLocation & 32767 /* InjectorIndexMask */;\n                injectorView = getParentInjectorView(parentLocation, injectorView);\n            }\n            while (injectorIndex !== -1) {\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match. Outer loop is necessary in case we get a false positive injector.\n                while (injectorIndex !== -1) {\n                    // Check the current injector. If it matches, stop searching for an injector.\n                    if (injectorHasToken(bloomHash, injectorIndex, injectorView[TVIEW].data)) {\n                        break;\n                    }\n                    if (flags & 2 /* Self */ ||\n                        flags & 1 /* Host */ &&\n                            !sameHostView(injectorView[injectorIndex + PARENT_INJECTOR])) {\n                        injectorIndex = -1;\n                        break;\n                    }\n                    // If the ancestor bloom filter value has the bit corresponding to the directive, traverse\n                    // up to find the specific injector. If the ancestor bloom filter does not have the bit, we\n                    // can abort.\n                    if (injectorHasToken(bloomHash, injectorIndex, injectorView)) {\n                        var parentLocation_1 = injectorView[injectorIndex + PARENT_INJECTOR];\n                        injectorIndex = parentLocation_1 & 32767 /* InjectorIndexMask */;\n                        injectorView = getParentInjectorView(parentLocation_1, injectorView);\n                    }\n                    else {\n                        injectorIndex = -1;\n                        break;\n                    }\n                }\n                // If no injector is found, we *know* that there is no ancestor injector that contains the\n                // token, so we abort.\n                if (injectorIndex === -1) {\n                    break;\n                }\n                // At this point, we have an injector which *may* contain the token, so we step through the\n                // directives associated with the injector's corresponding node to get the directive instance.\n                var instance = void 0;\n                if (instance = searchDirectivesOnInjector(injectorIndex, injectorView, token)) {\n                    return instance;\n                }\n                // If we *didn't* find the directive for the token and we are searching the current node's\n                // injector, it's possible the directive is on this node and hasn't been created yet.\n                if (injectorIndex === startInjectorIndex && hostView === injectorView &&\n                    (instance = searchMatchesQueuedForCreation(token, injectorView[TVIEW]))) {\n                    return instance;\n                }\n                // The def wasn't found anywhere on this node, so it was a false positive.\n                // Traverse up the tree and continue searching.\n                var parentLocation = injectorView[injectorIndex + PARENT_INJECTOR];\n                injectorIndex = parentLocation & 32767 /* InjectorIndexMask */;\n                injectorView = getParentInjectorView(parentLocation, injectorView);\n            }\n        }\n        var moduleInjector = hostView[INJECTOR$1];\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    function searchMatchesQueuedForCreation(token, hostTView) {\n        var matches = hostTView.currentMatches;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                if (def.type === token) {\n                    return resolveDirective(def, i + 1, matches, hostTView);\n                }\n            }\n        }\n        return null;\n    }\n    function searchDirectivesOnInjector(injectorIndex, injectorView, token) {\n        var tNode = injectorView[TVIEW].data[injectorIndex + TNODE];\n        var nodeFlags = tNode.flags;\n        var count = nodeFlags & 4095 /* DirectiveCountMask */;\n        if (count !== 0) {\n            var start = nodeFlags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var defs = injectorView[TVIEW].directives;\n            for (var i = start; i < end; i++) {\n                // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                // and matches the given token, return the directive instance.\n                var directiveDef = defs[i];\n                if (directiveDef.type === token && directiveDef.diPublic) {\n                    return injectorView[DIRECTIVES][i];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function injectorHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /**\n     * Checks whether the current injector and its parent are in the same host view.\n     *\n     * This is necessary to support @Host() decorators. If @Host() is set, we should stop searching once\n     * the injector and its parent view don't match because it means we'd cross the view boundary.\n     */\n    function sameHostView(parentLocation) {\n        return !!parentLocation && (parentLocation >> 15 /* ViewOffsetShift */) === 0;\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n            this._injectorIndex = getOrCreateNodeInjectorForNode(_tNode, _hostView);\n        }\n        NodeInjector.prototype.get = function (token) {\n            if (token === Renderer2) {\n                return getOrCreateRenderer2(this._hostView);\n            }\n            setEnvironment(this._tNode, this._hostView);\n            return getOrCreateInjectable(this._injectorIndex, this._hostView, token);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This feature publishes the directive (or component) into the DI system, making it visible to\n     * others for injection.\n     *\n     * @param definition\n     */\n    function PublicFeature(definition) {\n        definition.diPublic = diPublic;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     *\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._view = _view;\n        }\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = getRendererFactory();\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._view[PARENT][DIRECTIVES][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        return RootViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), _getViewData());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getLNode(tNode, view).native);\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), _getViewData());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, tContainerNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, tContainerNode.parent.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context, 1 /* Create */);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        var hostNode = getLNode(hostTNode, hostView);\n        ngDevMode && assertNodeType(hostTNode, 0 /* Container */);\n        ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n        return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getRenderer(), hostNode.data[QUERIES], hostTNode.injectorIndex);\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, _getViewData());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _tContainerNode, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._tContainerNode = _tContainerNode;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentIndex = parentLocation & 32767 /* InjectorIndexMask */;\n                        var parentTNode = parentView[TVIEW].data[parentIndex];\n                        return parentLocation === -1 ? new NullInjector() :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._tContainerNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._view;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._tContainerNode.parent.index);\n                    var container$$1 = this._getHostNode().dynamicLContainerNode;\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], container$$1);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._tContainerNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    detachView(this._lContainer, adjustedIdx, !!this._tContainerNode.detached);\n                    return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                ViewContainerRef_.prototype._getHostNode = function () { return getLNode(this._hostTNode, this._hostView); };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        var hostLNode = getLNode(hostTNode, hostView);\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer = createLContainer(hostView, true);\n        var comment = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var lContainerNode = createLNodeObject(0 /* Container */, comment, lContainer);\n        lContainer[RENDER_PARENT] = getRenderParent(hostTNode, hostView);\n        appendChild(comment, hostTNode, hostView);\n        if (!hostTNode.dynamicContainerNode) {\n            hostTNode.dynamicContainerNode =\n                createTNode(0 /* Container */, -1, null, null, hostTNode, null);\n        }\n        hostLNode.dynamicLContainerNode = lContainerNode;\n        addToViewTree(hostView, hostTNode.index, lContainer);\n        return new R3ViewContainerRef(lContainer, hostTNode.dynamicContainerNode, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), _getViewData(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.flags >> 15 /* DirectiveStartingIndexShift */;\n            var componentView = getLNode(hostTNode, hostView).data;\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3_ELEMENT_REF_FACTORY = injectElementRef;\n    var R3_TEMPLATE_REF_FACTORY = injectTemplateRef;\n    var R3_CHANGE_DETECTOR_REF_FACTORY = injectChangeDetectorRef;\n    var R3_VIEW_CONTAINER_REF_FACTORY = injectViewContainerRef;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     *\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return R3_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () {\n            var useRaf = typeof requestAnimationFrame !== 'undefined' && typeof window !== 'undefined';\n            return useRaf ? requestAnimationFrame.bind(window) : setTimeout;\n        },\n    });\n    /**\n     * A function used to wrap the `RendererFactory2`.\n     * Used in tests to change the `RendererFactory2` into a `DebugRendererFactory2`.\n     */\n    var WRAP_RENDERER_FACTORY2 = new InjectionToken('WRAP_RENDERER_FACTORY2');\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory;\n            if (ngModule) {\n                var wrapper = ngModule.injector.get(WRAP_RENDERER_FACTORY2, function (v) { return v; });\n                rendererFactory = wrapper(ngModule.injector.get(RendererFactory2));\n            }\n            else {\n                rendererFactory = domRendererFactory3;\n            }\n            var hostNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            // The first index of the first selector is the tag name.\n            var componentTag = this.componentDef.selectors[0][0];\n            var rootFlags = this.componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n                2 /* CheckAlways */ | 64 /* IsRoot */;\n            var rootContext = ngModule && !isInternalRootView ?\n                ngModule.injector.get(ROOT_CONTEXT) :\n                createRootContext(requestAnimationFrame.bind(window));\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(rendererFactory.createRenderer(hostNode, this.componentDef), createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n            rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var elementNode;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                // Create element node at index 0 in data array\n                elementNode = hostElement(componentTag, hostNode, this.componentDef);\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(elementNode, this.componentDef, rootView, rootContext, [LifecycleHooksFeature]);\n                tElementNode = getTNode(0);\n                // Transform the arrays of native nodes into a LNode structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            adjustBlueprintForNewNode(rootView);\n                            var tNode = createNodeAtIndex(++index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // Execute the template in creation mode only, and then turn off the CreationMode flag\n                var componentView = elementNode.data;\n                renderEmbeddedTemplate(componentView, componentView[TVIEW], component, 1 /* Create */);\n                componentView[FLAGS] &= ~1 /* CreationMode */;\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, rootView, injector, createElementRef(ElementRef, tElementNode, rootView));\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, location) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(rootView);\n            _this.hostView._tViewNode = createNodeAtIndex(-1, 2 /* View */, null, null, null, rootView);\n            _this.injector = injector;\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /{\\$([^}]+)}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, templateRoots, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var nbTemplates = templateRoots ? templateRoots.length + 1 : 1;\n        var instructions = (new Array(nbTemplates)).fill(undefined);\n        generateMappingInstructions(0, 0, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param tmplIndex The order of appearance of the template.\n     * 0 for the root template, following indexes match the order in `templateRoots`.\n     * @param partIndex The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(tmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex) {\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        var currentElements = elements && elements[tmplIndex] ? elements[tmplIndex] : null;\n        var currentExpressions = expressions && expressions[tmplIndex] ? expressions[tmplIndex] : null;\n        instructions[tmplIndex] = tmplInstructions;\n        for (; partIndex < translationParts.length; partIndex++) {\n            // The value can either be text or the name of a placeholder (element/template root/expression)\n            var value = translationParts[partIndex];\n            // Odd indexes are placeholders\n            if (partIndex & 1) {\n                var phIndex = void 0;\n                if (currentElements && currentElements[value] !== undefined) {\n                    phIndex = currentElements[value];\n                    // The placeholder represents a DOM element, add an instruction to move it\n                    var templateRootIndex = templateRoots ? templateRoots.indexOf(value) : -1;\n                    if (templateRootIndex !== -1 && (templateRootIndex + 1) !== tmplIndex) {\n                        // This is a template root, it has no closing tag, not treating it as an element\n                        tmplInstructions.push(phIndex | -2147483648 /* TemplateRoot */);\n                    }\n                    else {\n                        tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                        openedTagCount++;\n                    }\n                    phVisited.push(value);\n                }\n                else if (currentExpressions && currentExpressions[value] !== undefined) {\n                    phIndex = currentExpressions[value];\n                    // The placeholder represents an expression, add an instruction to move it\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else {\n                    // It is a closing tag\n                    tmplInstructions.push(-1073741824 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (phIndex !== undefined && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (templateRoots) {\n                    var newTmplIndex = templateRoots.indexOf(value) + 1;\n                    if (newTmplIndex !== 0 && newTmplIndex !== tmplIndex) {\n                        partIndex = generateMappingInstructions(newTmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n                    }\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Add instructions to remove elements that are not used in the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        // Add instructions to remove expressions that are not used in the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index.toString(2).length, 28, \"Index \" + index + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                tmplInstructions.push(i | -1610612736 /* Any */);\n            }\n        }\n        return partIndex;\n    }\n    // TODO: Remove LNode arg when we remove dynamicContainerNode\n    function appendI18nNode(node, tNode, parentTNode, previousTNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = _getViewData();\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = viewData[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n                tNode.next = parentTNode.child;\n                parentTNode.child = tNode;\n            }\n            else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n                tNode.next = previousTNode.next;\n                previousTNode.next = tNode;\n            }\n            else {\n                tNode.next = null;\n            }\n            if (parentTNode !== viewData[HOST_NODE]) {\n                tNode.parent = parentTNode;\n            }\n        }\n        appendChild(node.native, tNode, viewData);\n        // Template containers also have a comment node for the `ViewContainerRef` that should be moved\n        if (tNode.type === 0 /* Container */ && node.dynamicLContainerNode) {\n            appendChild(node.dynamicLContainerNode.native, tNode, viewData);\n            return tNode.dynamicContainerNode;\n        }\n        return tNode;\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = _getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var startTNode = getTNode(startIndex);\n        var localParentTNode = startTNode.parent || viewData[HOST_NODE];\n        var localPreviousTNode = localParentTNode;\n        resetComponentState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var elementIndex = instruction & 536870911 /* IndexMask */;\n                    var element$$1 = load(elementIndex);\n                    var elementTNode = getTNode(elementIndex);\n                    localPreviousTNode =\n                        appendI18nNode(element$$1, elementTNode, localParentTNode, localPreviousTNode);\n                    localParentTNode = elementTNode;\n                    break;\n                case 1610612736 /* Expression */:\n                case -2147483648 /* TemplateRoot */:\n                case -1610612736 /* Any */:\n                    var nodeIndex = instruction & 536870911 /* IndexMask */;\n                    var node = load(nodeIndex);\n                    localPreviousTNode =\n                        appendI18nNode(node, getTNode(nodeIndex), localParentTNode, localPreviousTNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createNodeAtIndex takes a raw index (not adjusted by header offset).\n                    adjustBlueprintForNewNode(viewData);\n                    var lastNodeIndex = viewData.length - 1 - HEADER_OFFSET;\n                    var textTNode = createNodeAtIndex(lastNodeIndex, 3 /* Element */, textRNode, null, null);\n                    localPreviousTNode = appendI18nNode(loadElement(lastNodeIndex), textTNode, localParentTNode, localPreviousTNode);\n                    resetComponentState();\n                    break;\n                case -1073741824 /* CloseNode */:\n                    localPreviousTNode = localParentTNode;\n                    localParentTNode = localParentTNode.parent || viewData[HOST_NODE];\n                    break;\n                case -536870912 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var removeIndex = instruction & 536870911 /* IndexMask */;\n                    var removedNode = load(removeIndex);\n                    var removedTNode = getTNode(removeIndex);\n                    removeChild(removedTNode, removedNode.native || null, viewData);\n                    // For template containers we also need to remove their `ViewContainerRef` from the DOM\n                    if (removedTNode.type === 0 /* Container */ && removedNode.dynamicLContainerNode) {\n                        removeChild(removedTNode, removedNode.dynamicLContainerNode.native || null, viewData);\n                        removedTNode.dynamicContainerNode.detached = true;\n                        removedNode.dynamicLContainerNode.data[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of an expression has changed and replaces it by its value in a translation,\n     * or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation1(instructions, v0) {\n        var different = bindingUpdated(_getViewData()[BINDING_INDEX]++, v0);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                res += stringify$1(v0);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 2 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation2(instructions, v0, v1) {\n        var viewData = _getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b1 ? v1 : v0;\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 3 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation3(instructions, v0, v1, v2) {\n        var viewData = _getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? v2 : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 4 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation4(instructions, v0, v1, v2, v3) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 5 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation5(instructions, v0, v1, v2, v3, v4) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? v4 : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 6 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */ function i18nInterpolation6(instructions, v0, v1, v2, v3, v4, v5) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b1 ? v5 : v4) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 7 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation7(instructions, v0, v1, v2, v3, v4, v5, v6) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? v6 : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     * @param v7 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation8(instructions, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? (b1 ? v7 : v6) : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var viewData = _getViewData();\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$2 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @experimental\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = injectableDefRecord(token);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$2) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$2;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefRecord(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return makeRecord(function () { return new token(); });\n        }\n        return makeRecord(injectableDef.factory);\n    }\n    function providerToRecord(provider) {\n        var token = resolveForwardRef(provider);\n        var value = NOT_YET;\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefRecord(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                value = provider.useValue;\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefRecord(classRef_1);\n                }\n            }\n        }\n        return makeRecord(factory, value);\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |--------consts--------|----------------vars----------------|------ hostVars (dir1) ------|\n     * ---------------------------------------------------------------------------------------------\n     * | nodes / refs / pipes | bindings | pure function bindings  | host bindings  | host slots |\n     * ---------------------------------------------------------------------------------------------\n     *                        ^                                    ^\n     *             TView.bindingStartIndex            TView.hostBindingStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the hostBindingStartIndex +\n     * any hostVars in directives evaluated before it.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return getCreationMode() ?\n            updateBinding(bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(bindingIndex, exp) ?\n            updateBinding(bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated2(bindingIndex, exp1, exp2) ?\n            updateBinding(bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated3(bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(bindingIndex + 4, exp5) || different ?\n            updateBinding(bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return R3_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param currentView The view we are currently processing\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(tNode, currentView, type) {\n        var defs = currentView[TVIEW].directives;\n        if (defs) {\n            var flags = tNode.flags;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var start = flags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            for (var i = start; i < end; i++) {\n                var def = defs[i];\n                if (def.type === type && def.diPublic) {\n                    return i;\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryRead(tNode, currentView, read) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(tNode, currentView, read);\n            if (matchingIdx !== null) {\n                return currentView[DIRECTIVES][matchingIdx];\n            }\n        }\n        return null;\n    }\n    function queryReadByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function add(query, tNode) {\n        var currentView = _getViewData();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                // if read token and / or strategy is not specified, use type as read token\n                var result = queryRead(tNode, currentView, predicate.read || type);\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        var result = null;\n                        if (predicate.read) {\n                            result = queryRead(tNode, currentView, predicate.read);\n                        }\n                        else {\n                            if (directiveIdx > -1) {\n                                result = currentView[DIRECTIVES][directiveIdx];\n                            }\n                            else {\n                                // if read token and / or strategy is not specified,\n                                // detect it using appropriate tNode type\n                                result = queryReadByTNodeType(tNode, currentView);\n                            }\n                        }\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type) ? true : false;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     *\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts`s have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ÉµdefineBase': defineBase,\n        'ÉµdefineComponent': defineComponent,\n        'ÉµdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ÉµdefineNgModule': defineNgModule,\n        'ÉµdefinePipe': definePipe,\n        'ÉµdirectiveInject': directiveInject,\n        'ÉµgetFactoryOf': getFactoryOf,\n        'ÉµgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ÉµinjectAttribute': injectAttribute,\n        'ÉµtemplateRefExtractor': templateRefExtractor,\n        'ÉµinjectRenderer2': injectRenderer2,\n        'ÉµNgOnChangesFeature': NgOnChangesFeature,\n        'ÉµPublicFeature': PublicFeature,\n        'ÉµInheritDefinitionFeature': InheritDefinitionFeature,\n        'ÉµelementAttribute': elementAttribute,\n        'Éµbind': bind,\n        'Éµcontainer': container,\n        'ÉµnextContext': nextContext,\n        'ÉµcontainerRefreshStart': containerRefreshStart,\n        'ÉµcontainerRefreshEnd': containerRefreshEnd,\n        'ÉµloadDirective': loadDirective,\n        'ÉµloadQueryList': loadQueryList,\n        'ÉµnamespaceHTML': namespaceHTML,\n        'ÉµnamespaceMathML': namespaceMathML,\n        'ÉµnamespaceSVG': namespaceSVG,\n        'ÉµenableBindings': enableBindings,\n        'ÉµdisableBindings': disableBindings,\n        'ÉµelementStart': elementStart,\n        'ÉµelementEnd': elementEnd,\n        'Éµelement': element,\n        'ÉµEC': elementContainerStart,\n        'ÉµeC': elementContainerEnd,\n        'ÉµpureFunction0': pureFunction0,\n        'ÉµpureFunction1': pureFunction1,\n        'ÉµpureFunction2': pureFunction2,\n        'ÉµpureFunction3': pureFunction3,\n        'ÉµpureFunction4': pureFunction4,\n        'ÉµpureFunction5': pureFunction5,\n        'ÉµpureFunction6': pureFunction6,\n        'ÉµpureFunction7': pureFunction7,\n        'ÉµpureFunction8': pureFunction8,\n        'ÉµpureFunctionV': pureFunctionV,\n        'ÉµgetCurrentView': getCurrentView,\n        'ÉµrestoreView': restoreView,\n        'Éµinterpolation1': interpolation1,\n        'Éµinterpolation2': interpolation2,\n        'Éµinterpolation3': interpolation3,\n        'Éµinterpolation4': interpolation4,\n        'Éµinterpolation5': interpolation5,\n        'Éµinterpolation6': interpolation6,\n        'Éµinterpolation7': interpolation7,\n        'Éµinterpolation8': interpolation8,\n        'ÉµinterpolationV': interpolationV,\n        'ÉµelementClassProp': elementClassProp,\n        'Éµlistener': listener,\n        'Éµload': load,\n        'Éµprojection': projection,\n        'ÉµelementProperty': elementProperty,\n        'ÉµpipeBind1': pipeBind1,\n        'ÉµpipeBind2': pipeBind1,\n        'ÉµpipeBind3': pipeBind3,\n        'ÉµpipeBind4': pipeBind4,\n        'ÉµpipeBindV': pipeBindV,\n        'ÉµprojectionDef': projectionDef,\n        'Éµpipe': pipe,\n        'Éµquery': query,\n        'ÉµqueryRefresh': queryRefresh,\n        'ÉµregisterContentQuery': registerContentQuery,\n        'Éµreference': reference,\n        'ÉµelementStyling': elementStyling,\n        'ÉµelementStylingMap': elementStylingMap,\n        'ÉµelementStyleProp': elementStyleProp,\n        'ÉµelementStylingApply': elementStylingApply,\n        'Éµtemplate': template,\n        'Éµtext': text,\n        'ÉµtextBinding': textBinding,\n        'ÉµembeddedViewStart': embeddedViewStart,\n        'ÉµembeddedViewEnd': embeddedViewEnd,\n        'ÉµsanitizeHtml': sanitizeHtml,\n        'ÉµsanitizeStyle': sanitizeStyle,\n        'ÉµdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ÉµsanitizeResourceUrl': sanitizeResourceUrl,\n        'ÉµsanitizeScript': sanitizeScript,\n        'ÉµsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     *\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        return deps.map(function (dep) { return reflectDependency(dep); });\n    }\n    function reflectDependency(dep) {\n        var meta = {\n            token: new compiler.LiteralExpr(null),\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            if (token === Injector) {\n                meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n            }\n            else {\n                meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            }\n            meta.token = new compiler.WrappedNodeExpr(token);\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = new compiler.WrappedNodeExpr(param.token);\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = new compiler.LiteralExpr(param.attributeName);\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        compileNgModuleDefs(moduleType, ngModule);\n        setScopeOnDeclaredComponents(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            get: function () {\n                if (ngModuleDef === null) {\n                    var meta = {\n                        type: wrap(moduleType),\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2).map(wrapReference),\n                        declarations: declarations.map(wrapReference),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        emitInline: true,\n                    };\n                    var res = compiler.compileNgModule(meta);\n                    ngModuleDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", []);\n                }\n                return ngModuleDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: wrap(moduleType),\n                        deps: reflectDependencies(moduleType),\n                        providers: new compiler.WrappedNodeExpr(ngModule.providers || EMPTY_ARRAY$2),\n                        imports: new compiler.WrappedNodeExpr([\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ]),\n                    };\n                    var res = compiler.compileInjector(meta);\n                    ngInjectorDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", res.statements);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getNgModuleDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function wrap(value) {\n        return new compiler.WrappedNodeExpr(value);\n    }\n    function wrapReference(value) {\n        var wrapped = wrap(value);\n        return { value: wrapped, type: wrapped };\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    // The ConstantPool is a requirement of the JIT'er.\n                    var constantPool = new compiler.ConstantPool();\n                    // Parse the template and check for errors.\n                    var template = compiler.parseTemplate(metadata.template, \"ng://\" + stringify(type) + \"/template.html\", {\n                        preserveWhitespaces: metadata.preserveWhitespaces || false,\n                    }, '');\n                    if (template.errors !== undefined) {\n                        var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                        throw new Error(\"Errors during JIT compilation of template for \" + stringify(type) + \": \" + errors);\n                    }\n                    // Compile the component metadata, including template, into an expression.\n                    // TODO(alxhub): implement inputs, outputs, queries, etc.\n                    var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [], wrapDirectivesInClosure: false, styles: metadata.styles || [], encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, animations: metadata.animations || null }), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngComponentDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", preStatements);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var constantPool = new compiler.ConstantPool();\n                    var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                    var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngDirectiveDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, preStatements);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        var host = extractHostBindings(metadata, propMetadata);\n        var inputsFromMetadata = parseInputOutputs(metadata.inputs || []);\n        var outputsFromMetadata = parseInputOutputs(metadata.outputs || []);\n        var inputsFromType = {};\n        var outputsFromType = {};\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isInput(ann)) {\n                        inputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                    else if (isOutput(ann)) {\n                        outputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return {\n            name: type.name,\n            type: new compiler.WrappedNodeExpr(type),\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type), host: host,\n            inputs: __assign({}, inputsFromMetadata, inputsFromType),\n            outputs: __assign({}, outputsFromMetadata, outputsFromType),\n            queries: [],\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n        };\n    }\n    function extractHostBindings(metadata, propMetadata) {\n        // First parse the declarations from the metadata.\n        var _a = compiler.parseHostBindings(metadata.host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties, animations = _a.animations;\n        if (Object.keys(animations).length > 0) {\n            throw new Error(\"Animation bindings are as-of-yet unsupported in Ivy\");\n        }\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isHostBinding(ann)) {\n                        properties[ann.hostPropertyName || field] = field;\n                    }\n                    else if (isHostListener(ann)) {\n                        listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                    }\n                });\n            }\n        };\n        // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return { attributes: attributes, listeners: listeners, properties: properties };\n    }\n    function isInput(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function isOutput(value) {\n        return value.ngMetadataName === 'Output';\n    }\n    function isHostBinding(value) {\n        return value.ngMetadataName === 'HostBinding';\n    }\n    function isHostListener(value) {\n        return value.ngMetadataName === 'HostListener';\n    }\n    function parseInputOutputs(values) {\n        return values.reduce(function (map, value) {\n            var _a = __read(value.split(',').map(function (piece) { return piece.trim(); }), 2), field = _a[0], property = _a[1];\n            map[field] = property || field;\n            return map;\n        }, {});\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var def = null;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Check whether the injectable metadata includes a provider specification.\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var ctorDeps = reflectDependencies(type);\n                    var userDeps = undefined;\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        userDeps = convertDependencies(meta.deps);\n                    }\n                    // Decide which flavor of factory to generate, based on the provider specified.\n                    // Only one of the use* fields should be set.\n                    var useClass = undefined;\n                    var useFactory = undefined;\n                    var useValue = undefined;\n                    var useExisting = undefined;\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        useClass = new compiler.WrappedNodeExpr(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        useClass = new compiler.WrappedNodeExpr(meta.useClass);\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        useValue = new compiler.WrappedNodeExpr(meta.useValue);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        useFactory = new compiler.WrappedNodeExpr(meta.useFactory);\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        useExisting = new compiler.WrappedNodeExpr(meta.useExisting);\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    var _a = compiler.compileInjectable({\n                        name: type.name,\n                        type: new compiler.WrappedNodeExpr(type),\n                        providedIn: computeProvidedIn(meta.providedIn),\n                        useClass: useClass,\n                        useFactory: useFactory,\n                        useValue: useValue,\n                        useExisting: useExisting,\n                        ctorDeps: ctorDeps,\n                        userDeps: userDeps,\n                    }), expression = _a.expression, statements = _a.statements;\n                    def = compiler.jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", statements);\n                }\n                return def;\n            },\n        });\n    }\n    function computeProvidedIn(providedIn) {\n        if (providedIn == null || typeof providedIn === 'string') {\n            return new compiler.LiteralExpr(providedIn);\n        }\n        else {\n            return new compiler.WrappedNodeExpr(providedIn);\n        }\n    }\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var sourceMapUrl = \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\";\n                    var name_1 = type.name;\n                    var res = compiler.compilePipeFromMetadata({\n                        name: name_1,\n                        type: new compiler.WrappedNodeExpr(type),\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true,\n                    });\n                    ngPipeDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, res.statements);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ivyEnabled = true;\n    var R3_COMPILE_COMPONENT = compileComponent;\n    var R3_COMPILE_DIRECTIVE = compileDirective;\n    var R3_COMPILE_INJECTABLE = compileInjectable;\n    var R3_COMPILE_NGMODULE = compileNgModule;\n    var R3_COMPILE_PIPE = compilePipe;\n    var R3_COMPILE_NGMODULE_DEFS = compileNgModuleDefs;\n    var R3_PATCH_COMPONENT_DEF_WTIH_SCOPE = patchComponentDefWithScope;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return R3_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return R3_COMPILE_COMPONENT(type, meta); });\n    /**\n     *\n     *\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return R3_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     *\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     *\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return R3_COMPILE_NGMODULE(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     *\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    var VERSION = new Version('7.0.0-rc.0+62.sha-ccceff5');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Injectable decorator and metadata.\n    *\n    * @Annotation\n    */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return R3_COMPILE_INJECTABLE(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @deprecated No replacement\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @experimental\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_NGCC__;\n    function compileNgModuleFactory__PRE_NGCC__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler$$1 = compilerFactory.createCompiler([options]);\n        return compiler$$1.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_NGCC__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @experimental\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return R3_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return R3_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this.nativeNode = nativeNode;\n            this._debugContext = _debugContext;\n            this.listeners = [];\n            this.parent = null;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @experimental\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        Object.defineProperty(DebugRenderer2.prototype, \"debugContext\", {\n            get: function () { return this.debugContextFactory(); },\n            enumerable: true,\n            configurable: true\n        });\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n     *\n     * The created DebugRenderer know how to create a Debug Context specific to IVY.\n     */\n    var Render3DebugRendererFactory2 = /** @class */ (function (_super) {\n        __extends(Render3DebugRendererFactory2, _super);\n        function Render3DebugRendererFactory2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Render3DebugRendererFactory2.prototype.createRenderer = function (element$$1, renderData) {\n            var renderer = _super.prototype.createRenderer.call(this, element$$1, renderData);\n            renderer.debugContextFactory = function () { return new Render3DebugContext(_getViewData()); };\n            return renderer;\n        };\n        return Render3DebugRendererFactory2;\n    }(DebugRendererFactory2));\n    /**\n     * Stores context information about view nodes.\n     *\n     * Used in tests to retrieve information those nodes.\n     */\n    var Render3DebugContext = /** @class */ (function () {\n        function Render3DebugContext(viewData) {\n            this.viewData = viewData;\n            // The LNode will be created next and appended to viewData\n            this.nodeIndex = viewData ? viewData.length : null;\n        }\n        Object.defineProperty(Render3DebugContext.prototype, \"view\", {\n            get: function () { return this.viewData; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"injector\", {\n            get: function () {\n                if (this.nodeIndex !== null) {\n                    var tNode = this.view[TVIEW].data[this.nodeIndex];\n                    return new NodeInjector(tNode, this.view);\n                }\n                return Injector.NULL;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"component\", {\n            get: function () {\n                // TODO(vicb): why/when\n                if (this.nodeIndex === null) {\n                    return null;\n                }\n                var tView = this.view[TVIEW];\n                var components = tView.components;\n                return (components && components.indexOf(this.nodeIndex) == -1) ?\n                    null :\n                    this.view[this.nodeIndex].data[CONTEXT];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"providerTokens\", {\n            // TODO(vicb): add view providers when supported\n            get: function () {\n                // TODO(vicb): why/when\n                var directiveDefs = this.view[TVIEW].directives;\n                if (this.nodeIndex === null || directiveDefs == null) {\n                    return [];\n                }\n                var currentTNode = this.view[TVIEW].data[this.nodeIndex];\n                var dirStart = currentTNode >> 15 /* DirectiveStartingIndexShift */;\n                var dirEnd = dirStart + (currentTNode & 4095 /* DirectiveCountMask */);\n                return directiveDefs.slice(dirStart, dirEnd);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"references\", {\n            get: function () {\n                // TODO(vicb): implement retrieving references\n                throw new Error('Not implemented yet in ivy');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"context\", {\n            get: function () {\n                if (this.nodeIndex === null) {\n                    return null;\n                }\n                var lNode = this.view[this.nodeIndex];\n                return lNode.view[CONTEXT];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"componentRenderElement\", {\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"renderNode\", {\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        // TODO(vicb): check previous implementation\n        Render3DebugContext.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            console.error.apply(console, __spread(values));\n        };\n        return Render3DebugContext;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function addPlayer(ref, player) {\n        var elementContext = getContext(ref);\n        var animationContext = getOrCreatePlayerContext(elementContext.native, elementContext);\n        animationContext.push(player);\n        player.addEventListener(200 /* Destroyed */, function () {\n            var index = animationContext.indexOf(player);\n            if (index >= 0) {\n                animationContext.splice(index, 1);\n            }\n            player.destroy();\n        });\n        var rootContext = getRootContext(elementContext.lViewData);\n        var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n        playerHandler.queuePlayer(player, ref);\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        // change detection may or may not happen therefore\n        // the core code needs to be kicked off to flush the animations\n        rootContext.flags |= 2 /* FlushPlayers */;\n        if (nothingScheduled) {\n            scheduleTick(rootContext);\n        }\n    }\n    function getPlayers(ref) {\n        return getOrCreatePlayerContext(ref);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3_COMPILE_COMPONENT__POST_NGCC__ = R3_COMPILE_COMPONENT;\n    var R3_COMPILE_DIRECTIVE__POST_NGCC__ = R3_COMPILE_DIRECTIVE;\n    var R3_COMPILE_INJECTABLE__POST_NGCC__ = R3_COMPILE_INJECTABLE;\n    var R3_COMPILE_NGMODULE__POST_NGCC__ = R3_COMPILE_NGMODULE;\n    var R3_COMPILE_PIPE__POST_NGCC__ = R3_COMPILE_PIPE;\n    var ivyEnable__POST_NGCC__ = ivyEnabled;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3_ELEMENT_REF_FACTORY__POST_NGCC__ = R3_ELEMENT_REF_FACTORY;\n    var R3_TEMPLATE_REF_FACTORY__POST_NGCC__ = R3_TEMPLATE_REF_FACTORY;\n    var R3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__ = R3_CHANGE_DETECTOR_REF_FACTORY;\n    var R3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__ = R3_VIEW_CONTAINER_REF_FACTORY;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ÉµNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.ÉµgetInjectableDef = getInjectableDef;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµresolveComponentResources = resolveComponentResources;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineBase = defineBase;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdefineNgModule = defineNgModule;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµRender3ComponentFactory = ComponentFactory$1;\n    exports.ÉµRender3ComponentRef = ComponentRef$1;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectRenderer2 = injectRenderer2;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµgetFactoryOf = getFactoryOf;\n    exports.ÉµgetInheritedFactory = getInheritedFactory;\n    exports.ÉµtemplateRefExtractor = templateRefExtractor;\n    exports.ÉµPublicFeature = PublicFeature;\n    exports.ÉµInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµRender3NgModuleRef = NgModuleRef$1;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNgModuleFactory = NgModuleFactory$1;\n    exports.ÉµNO_CHANGE = NO_CHANGE;\n    exports.Éµcontainer = container;\n    exports.ÉµnextContext = nextContext;\n    exports.ÉµelementStart = elementStart;\n    exports.ÉµnamespaceHTML = namespaceHTML;\n    exports.ÉµnamespaceMathML = namespaceMathML;\n    exports.ÉµnamespaceSVG = namespaceSVG;\n    exports.Éµelement = element;\n    exports.Éµlistener = listener;\n    exports.Éµtext = text;\n    exports.ÉµembeddedViewStart = embeddedViewStart;\n    exports.Éµquery = query;\n    exports.ÉµregisterContentQuery = registerContentQuery;\n    exports.ÉµloadDirective = loadDirective;\n    exports.Éµprojection = projection;\n    exports.Éµbind = bind;\n    exports.Éµinterpolation1 = interpolation1;\n    exports.Éµinterpolation2 = interpolation2;\n    exports.Éµinterpolation3 = interpolation3;\n    exports.Éµinterpolation4 = interpolation4;\n    exports.Éµinterpolation5 = interpolation5;\n    exports.Éµinterpolation6 = interpolation6;\n    exports.Éµinterpolation7 = interpolation7;\n    exports.Éµinterpolation8 = interpolation8;\n    exports.ÉµinterpolationV = interpolationV;\n    exports.ÉµpipeBind1 = pipeBind1;\n    exports.ÉµpipeBind2 = pipeBind2;\n    exports.ÉµpipeBind3 = pipeBind3;\n    exports.ÉµpipeBind4 = pipeBind4;\n    exports.ÉµpipeBindV = pipeBindV;\n    exports.ÉµpureFunction0 = pureFunction0;\n    exports.ÉµpureFunction1 = pureFunction1;\n    exports.ÉµpureFunction2 = pureFunction2;\n    exports.ÉµpureFunction3 = pureFunction3;\n    exports.ÉµpureFunction4 = pureFunction4;\n    exports.ÉµpureFunction5 = pureFunction5;\n    exports.ÉµpureFunction6 = pureFunction6;\n    exports.ÉµpureFunction7 = pureFunction7;\n    exports.ÉµpureFunction8 = pureFunction8;\n    exports.ÉµpureFunctionV = pureFunctionV;\n    exports.ÉµgetCurrentView = getCurrentView;\n    exports.ÉµrestoreView = restoreView;\n    exports.ÉµcontainerRefreshStart = containerRefreshStart;\n    exports.ÉµcontainerRefreshEnd = containerRefreshEnd;\n    exports.ÉµqueryRefresh = queryRefresh;\n    exports.ÉµloadQueryList = loadQueryList;\n    exports.ÉµelementEnd = elementEnd;\n    exports.ÉµelementProperty = elementProperty;\n    exports.ÉµprojectionDef = projectionDef;\n    exports.Éµreference = reference;\n    exports.ÉµenableBindings = enableBindings;\n    exports.ÉµdisableBindings = disableBindings;\n    exports.ÉµelementAttribute = elementAttribute;\n    exports.ÉµelementStyling = elementStyling;\n    exports.ÉµelementStylingMap = elementStylingMap;\n    exports.ÉµelementStyleProp = elementStyleProp;\n    exports.ÉµelementStylingApply = elementStylingApply;\n    exports.ÉµelementClassProp = elementClassProp;\n    exports.ÉµtextBinding = textBinding;\n    exports.Éµtemplate = template;\n    exports.ÉµembeddedViewEnd = embeddedViewEnd;\n    exports.Éµstore = store;\n    exports.Éµload = load;\n    exports.Éµpipe = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.Éµi18nApply = i18nApply;\n    exports.Éµi18nExpMapping = i18nExpMapping;\n    exports.Éµi18nInterpolation1 = i18nInterpolation1;\n    exports.Éµi18nInterpolation2 = i18nInterpolation2;\n    exports.Éµi18nInterpolation3 = i18nInterpolation3;\n    exports.Éµi18nInterpolation4 = i18nInterpolation4;\n    exports.Éµi18nInterpolation5 = i18nInterpolation5;\n    exports.Éµi18nInterpolation6 = i18nInterpolation6;\n    exports.Éµi18nInterpolation7 = i18nInterpolation7;\n    exports.Éµi18nInterpolation8 = i18nInterpolation8;\n    exports.Éµi18nInterpolationV = i18nInterpolationV;\n    exports.Éµi18nMapping = i18nMapping;\n    exports.ÉµWRAP_RENDERER_FACTORY2 = WRAP_RENDERER_FACTORY2;\n    exports.ÉµRender3DebugRendererFactory2 = Render3DebugRendererFactory2;\n    exports.ÉµcompileNgModuleDefs = R3_COMPILE_NGMODULE_DEFS;\n    exports.ÉµpatchComponentDefWithScope = R3_PATCH_COMPONENT_DEF_WTIH_SCOPE;\n    exports.ÉµcompileComponent = R3_COMPILE_COMPONENT;\n    exports.ÉµcompileDirective = R3_COMPILE_DIRECTIVE;\n    exports.ÉµcompilePipe = R3_COMPILE_PIPE;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµgetContext = getContext;\n    exports.ÉµaddPlayer = addPlayer;\n    exports.ÉµgetPlayers = getPlayers;\n    exports.ÉµcompileNgModuleFactory__POST_NGCC__ = compileNgModuleFactory__POST_NGCC__;\n    exports.ÉµR3_COMPILE_COMPONENT__POST_NGCC__ = R3_COMPILE_COMPONENT__POST_NGCC__;\n    exports.ÉµR3_COMPILE_DIRECTIVE__POST_NGCC__ = R3_COMPILE_DIRECTIVE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_INJECTABLE__POST_NGCC__ = R3_COMPILE_INJECTABLE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_NGMODULE__POST_NGCC__ = R3_COMPILE_NGMODULE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_PIPE__POST_NGCC__ = R3_COMPILE_PIPE__POST_NGCC__;\n    exports.ÉµivyEnable__POST_NGCC__ = ivyEnable__POST_NGCC__;\n    exports.ÉµR3_ELEMENT_REF_FACTORY__POST_NGCC__ = R3_ELEMENT_REF_FACTORY__POST_NGCC__;\n    exports.ÉµR3_TEMPLATE_REF_FACTORY__POST_NGCC__ = R3_TEMPLATE_REF_FACTORY__POST_NGCC__;\n    exports.ÉµR3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__ = R3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__;\n    exports.ÉµR3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__ = R3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}