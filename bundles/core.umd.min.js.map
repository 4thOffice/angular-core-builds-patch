{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","EMPTY","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","def","providersResolver","consts","vars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","id","styles","_","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","forEach","extractDirectiveDef","extractPipeDef","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","obj","secondary","newLookup","minifiedKey","publicName","declaredName","isArray","defineBase","baseDefinition","R3ResolvedDependencyType","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","getCompilerFacade","globalNg","ɵcompilerFacade","InjectFlags","Inject","Optional","Self","SkipSelf","Host","_injectImplementation","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","j","NodeInjectorFactory","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR","RENDERER_FACTORY","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","HEADER_OFFSET","queueInitHooks","tView","initHooks","checkHooks","queueLifecycleHooks","tNode","firstTemplatePass","directiveStart","end","directiveEnd","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","arr","ACTIVE_INDEX","VIEWS","NATIVE","RENDER_PARENT","MONKEY_PATCH_KEY_NAME","stringify$1","loadInternal","view","readElementValue","getNativeByIndex","lView","getNativeByTNode","hostView","getTNode","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","isComponent","isComponentDef","isLContainer","isRootView","getRootView","readPatchedLView","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","elementDepthCount","defaultScheduler","requestAnimationFrame","setTimeout","addAllToArray","items","bindingsEnabled","previousOrParentTNode","isParent","currentDirectiveDef","setCurrentDirectiveDef","enableBindings","disableBindings","getLView","restoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","getCreationMode","checkNoChangesMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","getFirstTemplatePass","setFirstTemplatePass","bindingRootIndex","getBindingRoot","setBindingRoot","enterView","newView","hostTNode","oldView","bindingStartIndex","nextContextImpl","level","walkUpViews","nestingLevel","leaveView","creationOnly","includeViewProviders","setIncludeViewProviders","v","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","parent","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","attrs","attrName","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","previousTView","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","providerTokenOrDef","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","previousInjectImplementation","injectorView","NodeInjector","_tNode","_lView","_injectorIndex","previousTNode","previousLView","getFactoryOf","typeAny","getInheritedFactory","getLContext","mpValue","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","context","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","slice","noop","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR$1","NullInjector","Injector","StaticInjector","NULL","SWITCH_INJECTOR_FACTORY","IDENT","EMPTY$1","CIRCULAR","MULTI_PROVIDER_FN","USE_VALUE","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","charAt","substr","parts","JSON","replace","NgModuleRef","NgModuleFactory","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","throwMultipleComponentError","tagName","NO_CHANGE","updateBinding","bindingIndex","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getParentNative","getHostNative","getFirstParentNative","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","rootTNode","node","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","findComponentView","head","projection","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","tCleanup","cleanup","lCleanup","listener","useCaptureOrSubIdx","removeEventListener","unsubscribe","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","destroy","getRenderParent","canInsertNativeNode","nativeParentNode","tNodeParent","getHighestElementContainer","currentNode","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","nativeInsertBefore","appendChild","childEl","childTNode","parentEl","parentTNode","getBeforeNodeForView","ngContainer","containerNative","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","createEmptyStylingContext","element","sanitizer","initialStylingValues","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","input","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","isClassBased_5","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setContextDirty","setContextPlayersDirty","setStyle","prop","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","builder","insertionIndex","playerBuilderIndex","getPlayerBuilder","setFlag","getProp","limitToSingleClasses","findEntryPositionByProp","startIndex","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","playerIndex","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","_CLEAN_PROMISE","refreshDescendantViews","rf","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","setHostBindings","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","componentRefresh","createLView","rendererFactory","createNodeAtIndex","createTNode","createViewNode","allocExpando","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","nextContext","renderComponentOrTemplate","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","createDirectivesAndLocals","elementContainerEnd","currentQueries","addNode","elementCreate","setUpAttributes","getElementDepthCount","increaseElementDepthCount","overriddenRenderer","rendererToUse","createElement","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","start","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","directive","previousExpandoLength","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","pipeRegistry","isProc","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","eventName","listenerFn","useCapture","lCleanupIndex","getCleanup","listen","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","generatePropertyAliases","propsLength","subscription","subscribe","idx","decreaseElementDepthCount","elementAttribute","element_1","removeAttribute","strValue","elementProperty","dataValue","inputData","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","childComponentLView","tViews","tParent","initialInputs","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementClassProp","classIndex","hackImplementationOfElementClassProp","hostStylingHack","classDeclarations","classList","val","updateClassProp","addOrRemove","elementStyling","styleDeclarations","styleSanitizer","hasClassInput","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","onlyProcessSingleClasses","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","initialStaticClasses","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","delegateToClassInput","elementStylingApply","hackImplementationOfElementStyling","hostStylingHackMap","squashedClassDeclarations","hackSquashDeclaration","hackSetStaticClasses","staticClassStartIndex","renderStyleAndClassBindings","rootOrView","classesStore","stylesStore","totalPlayersQueued","isContextDirty","flushPlayerBuilders","multiStartIndex","onlySingleClasses","isClassBased_6","readInitialValue","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","hackImplementationOfElementStyleProp","elementStylingMap","classes","hackImplementationOfElementStylingMap","initialClasses","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","isClassBased_3","isClassBased_4","textNative","textBinding","element_2","textContent","directiveCount","elementIndex","postProcessBaseDirective","setInputsFromAttrs","directiveIndex","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","adjustedElementIndex","viewAttached","syncViewWithBlueprint","componentTView","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInRootView","hostTView","createViewQuery","renderFlags","viewFlags","updateViewQuery","markDirty","allocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","interpolationV","content","interpolation1","prefix","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextLView","loadQueryList","queryListIdx","load","directiveInject","injectAttribute","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","getCurrentView","getTViewCleanup","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","result","tNodeChild","enumerable","configurable","_lookUpContext","detach","callback","storeCleanupFn","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_super","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","queries","viewRef","hostContainer","NodeInjector$1","NodeInjector$$1","_hostView","createViewRef","componentIndex","hostComponentView","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootContext$1","getRootView$1","componentOrView","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","Node","isBrowserEvents","getListeners","listeners","firstParam","secondParam","useCaptureOrIndx","sort","sortListeners","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","rNode","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","isComponentDef$1","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","ngInherit","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","setter_1","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ngOnChanges","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imported","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","existing","multiRecord_1","hasOnDestroy","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","endIndex","cptViewProvidersCount","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","factoryFn","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","item","multiResolve","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","ngContentSelectors","projectableNodes","rootSelectorOrNode","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","SecurityContext","Renderer2","SWITCH_RENDERER2_FACTORY","Version","Sanitizer","VERSION","full","major","minor","patch","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ComponentFactory$$1","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","tElementNode","rootLView","oldLView","projection$$1","nodeList","firstTNode","componentRef","ComponentRef$1","ComponentRef$$1","_rootLView","destroyCbs","changeDetectorRef","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","sanitizeSrcset","srcset","trim","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","elAttr","lower","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","ELEMENT_MARKER","marker","COMMENT_MARKER","MARKER","ICU_BLOCK_REGEX","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","PP_PLACEHOLDERS","PP_ICU_VARS","PP_ICUS","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","exec","pos","pop","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","str","binding","parseInt","blocks","assertGreaterThan","actual","expected","msg","throwError","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","RegExp","phIndex","icuNodeIndex","icuStart","tIcuIndex","hasBinding","update","icus","appendI18nNode","i18nPostprocess","replacements","_match","shift","some","_idx","list","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","visitedPlaceholders","readCreateOpCodes","removeNode","currentTNode","opCode","destinationNodeIndex","destinationTNode","commentValue","activeCaseIndex","tagNameValue","removedPhTNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","k","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","worstCaseSize","max","opCodes","parseNodes","nestedIcusToCreate","element$$1","attr","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","parentInjector","_bootstrapComponents","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","moduleType","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","unwrapValue","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","clone","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","QueryList","QueryList_","changes","filter","find","reduce","init","toArray","reset","flatten","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","storeCleanupWithContext","queryRefresh","templateRefExtractor","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","SAFE_STYLE_VALUE","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","getSanitizer","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetFactoryOf","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵloadQueryList","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵallocHostVars","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵquery","ɵqueryRefresh","ɵregisterContentQuery","ɵreference","ɵelementStyling","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ɵsanitizeUrl","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","EMPTY_ARRAY$2","compileNgModule","compileNgModuleDefs","setScopeOnDeclaredComponents","flatten$1","transitiveScopes","transitiveScopesFor","declaration","patchComponentDefWithScope","ngSelectorScope","expandModuleWithProviders","emitInline","compileInjector","from","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","preserveWhitespaces","viewQueries","extractQueriesMetadata","interpolation","hasSelectorScope","compileDirective","facade","typeArgumentCount","EMPTY_OBJ$1","isContentQuery","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","isQueryAnn","queriesMeta","field","ann","convertToR3QueryMetadata","propertyName","convertToR3QueryPredicate","splitByComma","piece","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","USE_VALUE$1","EMPTY_ARRAY$3","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","USE_VALUE$2","isUseClassProvider","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","scope","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","delete","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","DebugElement__PRE_R3__","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","eAttrs","lContext","lNode","eClasses","styleName","eStyles","style","name_1","getPropertyValue","children","getDebugNode__POST_R3__","_queryNodeChildrenR3","elementsOnly","_nativeNodeToDebugNode","getDebugNode","getDebugNode__PRE_R3__","indexDebugNode","DebugNode","DebugElement","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","APPLICATION_MODULE_PROVIDERS","ApplicationModule","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","templateRef","insert","createComponent","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","ɵangular_packages_core_core_r","ɵangular_packages_core_core_o","ɵangular_packages_core_core_p","ɵangular_packages_core_core_q","ɵangular_packages_core_core_g","ɵangular_packages_core_core_m","ɵangular_packages_core_core_n","ɵangular_packages_core_core_l","ɵangular_packages_core_core_k","ɵangular_packages_core_core_c","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_f","ɵangular_packages_core_core_s","ɵangular_packages_core_core_u","ɵangular_packages_core_core_t","ɵangular_packages_core_core_x","ɵangular_packages_core_core_v","ɵangular_packages_core_core_w","ɵangular_packages_core_core_ba","ɵangular_packages_core_core_bh","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_bg","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_j","ɵangular_packages_core_core_a","ɵangular_packages_core_core_b","ɵangular_packages_core_core_bi","ɵangular_packages_core_core_y","ɵangular_packages_core_core_z","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","getModuleFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵgetInjectableDef","ɵinject","ɵsetCurrentInjector","ɵAPP_ROOT","ɵivyEnabled","ɵComponentFactory","ɵCodegenComponentFactoryResolver","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵstore","ɵwhenRendered","whenRendered","getRootContext$2","ɵsetClassMetadata","setClassMetadata","clazz","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","meta_1","hasAProvider","compilerMeta","ctorDeps","userDeps","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","_lContainer","_hostTNode","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","adjustedIdx","_adjustIndex","commentNode","nativeNextSibling","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵSWITCH_INJECTOR_FACTORY__POST_R3__","injectInjector","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue$1","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.1.0+149.sha-faca8b1\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.rxjs.operators));\n}(this, (function (exports,rxjs,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type) {\n        return type[NG_MODULE_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global.ng;\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't descend into ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        assertEqual(node instanceof Node, true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6; // Rename to `T_HOST`?\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var TAIL = 14;\n    var CONTAINER_INDEX = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 18;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LView\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 6;\n    var RENDER_PARENT = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    /**\n     * Takes the value of a slot in `LView` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LView. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LView`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return readElementValue(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && typeof value[ACTIVE_INDEX] === 'number';\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 64 /* IsRoot */) !== 0;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lView = Array.isArray(target) ? target : readPatchedLView(target);\n        while (lView && !(lView[FLAGS] & 64 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[HOST_NODE];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[HOST_NODE];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    /**\n     * Equivalent to ES6 spread, add each item to an array.\n     *\n     * @param items The items to add\n     * @param arr The array to which you want to add the items\n     */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== lView[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = lView[QUERIES] = currentQueries.clone());\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        return currentQueries || (lView[QUERIES] = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    function getFirstTemplatePass() {\n        return firstTemplatePass;\n    }\n    function setFirstTemplatePass(value) {\n        firstTemplatePass = value;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            creationMode = (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n            firstTemplatePass = tView.firstTemplatePass;\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        var tView = lView[TVIEW];\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            lView[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        lView[FLAGS] |= 16 /* RunInit */;\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = false;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0, AcrossHostBoundary is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view[HOST_NODE];\n            viewOffset++;\n        }\n        var acrossHostBoundary = hostTNode && hostTNode.type === 3 /* Element */ ?\n            32768 /* AcrossHostBoundary */ :\n            0;\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) |\n                acrossHostBoundary :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var bloomHash = bloomHashBitOrFactory(token);\n        // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n        // so just call the factory function to create it.\n        if (typeof bloomHash === 'function') {\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lView);\n            try {\n                var value = bloomHash();\n                if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                    throw new Error(\"No provider for \" + stringify$1(token));\n                }\n                else {\n                    return value;\n                }\n            }\n            finally {\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        else if (typeof bloomHash == 'number') {\n            // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n            // A reference to the previous injector TView that was found while climbing the element injector\n            // tree. This is used to know if viewProviders can be accessed on the current injector.\n            var previousTView = null;\n            var injectorIndex = getInjectorIndex(tNode, lView);\n            var parentLocation = NO_PARENT_INJECTOR;\n            // If we should skip this injector, or if there is no injector on this node, start by searching\n            // the parent injector.\n            if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                    lView[injectorIndex + PARENT_INJECTOR];\n                if (!shouldSearchParent(flags, parentLocation)) {\n                    injectorIndex = -1;\n                }\n                else {\n                    previousTView = lView[TVIEW];\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lView = getParentInjectorView(parentLocation, lView);\n                }\n            }\n            // Traverse up the injector tree until we find a potential match or until we know there\n            // *isn't* a match.\n            while (injectorIndex !== -1) {\n                parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                // Check the current injector. If it matches, see if it contains token.\n                var tView = lView[TVIEW];\n                if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                    // At this point, we have an injector which *may* contain the token, so we step through\n                    // the providers and directives associated with the injector's corresponding node to get\n                    // the instance.\n                    var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView);\n                    if (instance !== NOT_FOUND) {\n                        return instance;\n                    }\n                }\n                if (shouldSearchParent(flags, parentLocation) &&\n                    bloomHasToken(bloomHash, injectorIndex, lView)) {\n                    // The def wasn't found anywhere on this node, so it was a false positive.\n                    // Traverse up the tree and continue searching.\n                    previousTView = tView;\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lView = getParentInjectorView(parentLocation, lView);\n                }\n                else {\n                    // If we should not search parent OR If the ancestor bloom filter value does not have the\n                    // bit corresponding to the directive we can give up on traversing up to find the specific\n                    // injector.\n                    injectorIndex = -1;\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR];\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders) {\n        var tView = lView[TVIEW];\n        var nodeFlags = tNode.flags;\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        for (var i = startingIndex; i < directiveEnd; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringify$1(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, parentLocation) {\n        return !(flags & exports.InjectFlags.Self ||\n            (flags & exports.InjectFlags.Host &&\n                (parentLocation & 32768 /* AcrossHostBoundary */)));\n    }\n    function injectInjector() {\n        var tNode = getPreviousOrParentTNode();\n        return new NodeInjector(tNode, getLView());\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n            this._injectorIndex = getOrCreateNodeInjectorForNode(_tNode, _lView);\n        }\n        NodeInjector.prototype.get = function (token) {\n            var previousTNode = getPreviousOrParentTNode();\n            var previousLView = getLView();\n            setTNodeAndViewData(this._tNode, this._lView);\n            try {\n                return getOrCreateInjectable(this._tNode, this._lView, token);\n            }\n            finally {\n                setTNodeAndViewData(previousTNode, previousLView);\n            }\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, compontent or\n                // directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else if (tNode.parent) {\n            return tNode.parent.next || null;\n        }\n        return null;\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] =\n                    directiveIndex === -1 ? getNativeByTNode(tNode, lView) : lView[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR$1 = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR$1); },\n        });\n        /** @internal */\n        Injector.__NG_ELEMENT_ID__ = function () { return SWITCH_INJECTOR_FACTORY(); };\n        return Injector;\n    }());\n    var SWITCH_INJECTOR_FACTORY__POST_R3__ = function () {\n        return injectInjector();\n    };\n    var SWITCH_INJECTOR_FACTORY__PRE_R3__ = noop;\n    var SWITCH_INJECTOR_FACTORY = SWITCH_INJECTOR_FACTORY__PRE_R3__;\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY$1 = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            records.set(INJECTOR$1, { token: INJECTOR$1, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY$1;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY$1\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY$1;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY$1) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY$1;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY$1;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (lView[bindingIndex] === NO_CHANGE) {\n            // initial pass\n            lView[bindingIndex] = value;\n        }\n        else if (isDifferent(lView[bindingIndex], value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                if (!devModeEqual(lView[bindingIndex], value)) {\n                    throwErrorIfNoChangesMode(getCreationMode(), lView[bindingIndex], value);\n                }\n            }\n            lView[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the parent element of a given node. */\n    function getParentNative(tNode, currentView) {\n        if (tNode.parent == null) {\n            return getHostNative(currentView);\n        }\n        else {\n            var parentTNode = getFirstParentNative(tNode);\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Get the first parent of a node that isn't an IcuContainer TNode\n     */\n    function getFirstParentNative(tNode) {\n        var parent = tNode.parent;\n        while (parent && parent.type === 5 /* IcuContainer */) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n    /**\n     * Gets the host element given a view. Will return null if the current view is an embedded view,\n     * which does not have a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? container[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n                if (renderParent)\n                    lContainer[RENDER_PARENT] = renderParent;\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[PARENT], 'lView.parent');\n            lView = lView[PARENT];\n            rootTNode = lView[HOST_NODE];\n        }\n        return lView;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LView, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LView.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~8 /* Attached */;\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LView */\n    function getLViewChild(lView) {\n        var childIndex = lView[TVIEW].childIndex;\n        return childIndex === -1 ? null : lView[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var idx = tCleanup[i + 1];\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var native = readElementValue(lView[idx]);\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // DOM listener\n                        native.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else if (typeof tCleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = lCleanup[tCleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(lView) {\n        var pipeDestroyHooks = lView[TVIEW] && lView[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(lView, pipeDestroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            // If we are asked for a render parent of the root component we need to do low-level DOM\n            // operation as LTree doesn't exist above the topmost host node. We might need to find a render\n            // parent of the topmost host node if the root component injects ViewContainerRef.\n            if (isRootView(currentView)) {\n                return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n            }\n            var hostTNode = currentView[HOST_NODE];\n            var tNodeParent = tNode.parent;\n            if (tNodeParent != null && tNodeParent.type === 4 /* ElementContainer */) {\n                tNode = getHighestElementContainer(tNodeParent);\n            }\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentNative(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 1 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getLContainer(viewTNode, view);\n        if (container == null || container[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param tNode The tNode of the node that we want to insert.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the node should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent = tNode.parent;\n        if (tNode.parent) {\n            if (tNode.parent.type === 4 /* ElementContainer */) {\n                currentNode = getHighestElementContainer(tNode);\n                parent = currentNode.parent;\n            }\n            else if (tNode.parent.type === 5 /* IcuContainer */) {\n                currentNode = getFirstParentNative(currentNode);\n                parent = currentNode.parent;\n            }\n        }\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        if (childEl === void 0) { childEl = null; }\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var parentEl = getParentNative(childTNode, currentView);\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, lContainer[RENDER_PARENT], childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */) {\n                var renderParent = getRenderParent(childTNode, currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, parentEl);\n            }\n            else if (parentTNode.type === 5 /* IcuContainer */) {\n                var icuAnchorNode = getNativeByTNode(childTNode.parent, currentView);\n                nativeInsertBefore(renderer, parentEl, childEl, icuAnchorNode);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                    parentEl.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level ng-container if ng-containers are nested.\n     *\n     * @param ngContainer The TNode of the starting ng-container\n     * @returns tNode The TNode of the highest level ng-container\n     */\n    function getHighestElementContainer(ngContainer) {\n        while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n            ngContainer = ngContainer.parent;\n        }\n        return ngContainer;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        // We only remove the element if not in View or not projected.\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var parentNative = getParentNative(childTNode, currentView);\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, childEl) :\n                parentNative.removeChild(childEl);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                nodeOrContainer[RENDER_PARENT] = renderParent;\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName || current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createEmptyStylingContext(element, sanitizer, initialStylingValues) {\n        return [\n            null,\n            sanitizer || null,\n            initialStylingValues || [null],\n            0,\n            0,\n            element || null,\n            null,\n            null // PreviousMultiStyleValue\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LView or an LContainer\n        return Array.isArray(value) && typeof value[FLAGS] !== 'number' &&\n            typeof value[ACTIVE_INDEX] !== 'number';\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[0 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[0 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer, onlyProcessSingleClasses) {\n        var initialStylingValues = [null];\n        var context = createEmptyStylingContext(null, styleSanitizer, initialStylingValues);\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        var initialStaticClasses = onlyProcessSingleClasses ? [] : null;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                        initialStaticClasses && initialStaticClasses.push(className);\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 4 /* Size */ * 2 + 8 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 8 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 8 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 4 /* Size */ + 8 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 4 /* Size */ + multiStart;\n            var indexForSingle = i * 4 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            setPlayerBuilderIndex(context, indexForSingle, 0);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n            setPlayerBuilderIndex(context, indexForMulti, 0);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStart) |\n            (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n        setFlag(context, 3 /* MasterFlagPosition */, masterFlag);\n        setContextDirty(context, initialStylingValues.length > 1);\n        if (initialStaticClasses) {\n            context[6 /* PreviousOrCachedMultiClassValue */] = initialStaticClasses.join(' ');\n        }\n        return context;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput) {\n        stylesInput = stylesInput || null;\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n            classesValue === context[6 /* PreviousOrCachedMultiClassValue */];\n        var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* PreviousMultiStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* PreviousOrCachedMultiClassValue */] = classesValue;\n        context[7 /* PreviousMultiStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARR;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARR;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_2 && !ignoreAllStyleUpdates) || (isClassBased_2 && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased_2 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased_3 && !ignoreAllStyleUpdates) || (isClassBased_3 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased_3);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased_3 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_4 && !ignoreAllStyleUpdates) || (isClassBased_4 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased_4 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                context.push(flag, prop, value, playerBuilderIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, input) {\n        var singleIndex = 8 /* SingleStylesStartPosition */ + index * 4 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_5 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex);\n                playerBuildersAreDirty = true;\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyleAndClassBindings(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore) {\n        var totalPlayersQueued = 0;\n        if (isContextDirty(context)) {\n            var flushPlayerBuilders = context[3 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            var onlySingleClasses = limitToSingleClasses(context);\n            for (var i = 8 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var readInitialValue = !isClassBased_6 || !onlySingleClasses;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6) && readInitialValue) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased_6) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                            setStyle(native, prop, valueToApply, renderer, sanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setContextDirty(context, false);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 8 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[0 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[0 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex) {\n        context[index + 3 /* PlayerBuilderIndexOffset */] = playerBuilderIndex;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        return context[index + 3 /* PlayerBuilderIndexOffset */] || 0;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[0 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function limitToSingleClasses(context) {\n        return context[3 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[3 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[3 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setPlayerBuilderIndex(context, indexA, getPlayerBuilderIndex(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, playerIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView, rf) {\n        var tView = lView[TVIEW];\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        setFirstTemplatePass(false);\n        // Dynamically created views must run first only in creation mode. If this is a\n        // creation-only pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update-only pass.\n        if (rf !== 1 /* Create */) {\n            var creationMode = getCreationMode();\n            var checkNoChangesMode = getCheckNoChangesMode();\n            if (!checkNoChangesMode) {\n                executeInitHooks(lView, tView, creationMode);\n            }\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView);\n            if (!checkNoChangesMode) {\n                executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, creationMode);\n            }\n            setHostBindings(tView, lView);\n        }\n        refreshChildComponents(tView.components, rf);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        instruction(2 /* Update */, readElementValue(viewData[currentDirectiveIndex]), currentElementIndex);\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components, rf) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i], rf);\n            }\n        }\n    }\n    function createLView(parentLView, tView, context, flags, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR] = injector || parentLView && parentLView[INJECTOR] || null;\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var previousOrParentTNode = getPreviousOrParentTNode();\n            var isParent = getIsParent();\n            // TODO(misko): Refactor createTNode so that it does not depend on LView.\n            tNode = tView.data[adjustedIndex] = createTNode(lView, type, adjustedIndex, name, attrs, null);\n            // Now link ourselves into the tree.\n            if (previousOrParentTNode) {\n                if (isParent && previousOrParentTNode.child == null &&\n                    (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                    // We are in the same view, which means we are adding content node to the parent view.\n                    previousOrParentTNode.child = tNode;\n                }\n                else if (!isParent) {\n                    previousOrParentTNode.next = tNode;\n                }\n            }\n        }\n        if (tView.firstChild == null && type === 3 /* Element */) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(view, 2 /* View */, index, null, null, null);\n        }\n        return view[HOST_NODE] = view[TVIEW].node;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            tView.data.push(null);\n            view.push(null);\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 2 /* CheckAlways */);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context, rf) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var oldView;\n        if (viewToRender[FLAGS] & 64 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews(viewToRender, null);\n                }\n                else {\n                    // This must be set to false immediately after the first creation run because in an\n                    // ngFor loop, all the views will be created together before update mode runs and turns\n                    // off firstTemplatePass. If we don't set it here, instances will perform directive\n                    // matching, etc again and again.\n                    viewToRender[TVIEW].firstTemplatePass = false;\n                    setFirstTemplatePass(false);\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, componentOrContext, rf, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(rf || getRenderFlags(hostView), componentOrContext);\n            }\n            refreshDescendantViews(hostView, rf);\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, null, attrs || null);\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(tView, previousOrParentTNode);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getFirstTemplatePass()) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, viewData, findDirectiveMatches(tView, viewData, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, viewData, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, viewData, previousOrParentTNode);\n        saveResolvedLocalsInData(viewData, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var useCaptureOrSubIdx = useCapture;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var cleanupFn = renderer.listen(native, eventName, listenerFn);\n                lCleanup.push(listenerFn, cleanupFn);\n                useCaptureOrSubIdx = lCleanupIndex + 1;\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                native.addEventListener(eventName, wrappedListener, useCapture);\n                lCleanup.push(wrappedListener);\n            }\n            tCleanup && tCleanup.push(eventName, tNode.index, lCleanupIndex, useCaptureOrSubIdx);\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 2) {\n                    ngDevMode && assertDataInRange(lView, props[i]);\n                    var subscription = lView[props[i]][props[i + 1]].subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element_1 = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                    element_1.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData = initializeTNodeInputs(tNode);\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode && tNode.type === 3 /* Element */) {\n                setNgReflectProperties(lView, element, propName, value);\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            var renderer = lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ?\n                renderer.setProperty(element, propName, value) :\n                (element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(lView, type, adjustedIndex, tagName, attrs, tViews) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && ngDevMode.tNode++;\n        var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && lView && parent !== lView[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(lView, inputs[i]);\n            lView[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    function setNgReflectProperties(lView, element, propName, value) {\n        var renderer = lView[RENDERER];\n        var attrName = normalizeDebugBindingName(propName);\n        var debugValue = normalizeDebugBindingValue(value);\n        isProceduralRenderer(renderer) ? renderer.setAttribute(element, attrName, debugValue) :\n            element.setAttribute(attrName, debugValue);\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number tNodeFlags node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param classIndex Index of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementClassProp(index, classIndex, value, directive) {\n        if (directive != undefined) {\n            return hackImplementationOfElementClassProp(index, classIndex, value, directive); // proper supported in next PR\n        }\n        var val = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, val);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer, directive) {\n        if (directive != undefined) {\n            getCreationMode() &&\n                hackImplementationOfElementStyling(classDeclarations || null, styleDeclarations || null, styleSanitizer || null, directive); // supported in next PR\n            return;\n        }\n        var tNode = getPreviousOrParentTNode();\n        var inputData = initializeTNodeInputs(tNode);\n        if (!tNode.stylingTemplate) {\n            var hasClassInput = inputData && inputData.hasOwnProperty('class') ? true : false;\n            if (hasClassInput) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            // initialize the styling template.\n            tNode.stylingTemplate = createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer, hasClassInput);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            var index = tNode.index;\n            if (delegateToClassInput(tNode)) {\n                var lView = getLView();\n                var stylingContext = getStylingContext(index, lView);\n                var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n                setInputsForProperty(lView, tNode.inputs['class'], initialClasses);\n            }\n            elementStylingApply(index - HEADER_OFFSET);\n        }\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStylingApply(index, directive) {\n        if (directive != undefined) {\n            return hackImplementationOfElementStylingApply(index, directive); // supported in next PR\n        }\n        var lView = getLView();\n        var isFirstRender = (lView[FLAGS] & 1 /* CreationMode */) !== 0;\n        var totalPlayersQueued = renderStyleAndClassBindings(getStylingContext(index + HEADER_OFFSET, lView), lView[RENDERER], lView, isFirstRender);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, directive) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        if (directive != undefined) {\n            hackImplementationOfElementStyleProp(index, styleIndex, valueToAdd, suffix, directive);\n        }\n        else {\n            updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd);\n        }\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStylingMap(index, classes, styles, directive) {\n        if (directive != undefined)\n            return hackImplementationOfElementStylingMap(index, classes, styles, directive); // supported in next PR\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        if (delegateToClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n            setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n        }\n        updateStylingMap(stylingContext, classes, styles);\n    }\n    function hackImplementationOfElementStyling(classDeclarations, styleDeclarations, styleSanitizer, directive) {\n        var node = getNativeByTNode(getPreviousOrParentTNode(), getLView());\n        ngDevMode && assertDefined(node, 'expecting parent DOM node');\n        var hostStylingHackMap = (node.hostStylingHack || (node.hostStylingHack = new Map()));\n        var squashedClassDeclarations = hackSquashDeclaration(classDeclarations);\n        hostStylingHackMap.set(directive, {\n            classDeclarations: squashedClassDeclarations,\n            styleDeclarations: hackSquashDeclaration(styleDeclarations), styleSanitizer: styleSanitizer\n        });\n        hackSetStaticClasses(node, squashedClassDeclarations);\n    }\n    function hackSetStaticClasses(node, classDeclarations) {\n        // Static classes need to be set here because static classes don't generate\n        // elementClassProp instructions.\n        var lView = getLView();\n        var staticClassStartIndex = classDeclarations.indexOf(1 /* VALUES_MODE */) + 1;\n        var renderer = lView[RENDERER];\n        for (var i = staticClassStartIndex; i < classDeclarations.length; i += 2) {\n            var className = classDeclarations[i];\n            var value = classDeclarations[i + 1];\n            // if value is true, then this is a static class and we should set it now.\n            // class bindings are set separately in elementClassProp.\n            if (value === true) {\n                if (isProceduralRenderer(renderer)) {\n                    renderer.addClass(node, className);\n                }\n                else {\n                    var classList = node.classList;\n                    classList.add(className);\n                }\n            }\n        }\n    }\n    function hackSquashDeclaration(declarations) {\n        // assume the array is correct. This should be fine for View Engine compatibility.\n        return declarations || [];\n    }\n    function hackImplementationOfElementClassProp(index, classIndex, value, directive) {\n        var lView = getLView();\n        var node = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(node, 'could not locate node');\n        var hostStylingHack = node.hostStylingHack.get(directive);\n        var className = hostStylingHack.classDeclarations[classIndex];\n        var renderer = lView[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            value ? renderer.addClass(node, className) : renderer.removeClass(node, className);\n        }\n        else {\n            var classList = node.classList;\n            value ? classList.add(className) : classList.remove(className);\n        }\n    }\n    function hackImplementationOfElementStylingApply(index, directive) {\n        // Do nothing because the hack implementation is eager.\n    }\n    function hackImplementationOfElementStyleProp(index, styleIndex, value, suffix, directive) {\n        var lView = getLView();\n        var node = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(node, 'could not locate node');\n        var hostStylingHack = node.hostStylingHack.get(directive);\n        var styleName = hostStylingHack.styleDeclarations[styleIndex];\n        var renderer = lView[RENDERER];\n        setStyle(node, styleName, value, renderer, null);\n    }\n    function hackImplementationOfElementStylingMap(index, classes, styles, directive) {\n        throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n    }\n    /* END OF HACK BLOCK */\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n                element_2.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive, def);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                queueInitHooks(directiveDefIdx, def.onInit, def.doCheck, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!getFirstTemplatePass() && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = getFirstTemplatePass();\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = viewData[i];\n            if (def.hostBindings) {\n                var previousExpandoLength = expando.length;\n                setCurrentDirectiveDef(def);\n                def.hostBindings(1 /* Create */, directive, tNode.index);\n                setCurrentDirectiveDef(null);\n                // `hostBindings` function may or may not contain `allocHostVars` call\n                // (e.g. it may not if it only contains host listeners), so we need to check whether\n                // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n                // expando block, to make sure we execute it for DI cycle\n                if (previousExpandoLength === expando.length && firstTemplatePass) {\n                    expando.push(def.hostBindings);\n                }\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def.inputs, previousOrParentTNode);\n        }\n        if (def.contentQueries) {\n            def.contentQueries(directiveDefIdx);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n        // TODO(misko): setUpAttributes should be a feature for better treeshakability.\n        if (def.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(native, def.attributes);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var tView = getLView()[TVIEW];\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n    */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, previousOrParentTNode.index, createLView(lView, tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = lView[previousOrParentTNode.index];\n        lView[previousOrParentTNode.index] = componentView;\n        if (getFirstTemplatePass()) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, hostTNode, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n            getRenderParent(hostTNode, currentView) // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (getFirstTemplatePass()) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        var currentQueries = lView[QUERIES];\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(tView, tNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        getFirstTemplatePass() && (tNode.tViews = []);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] =\n            createLContainer(lView[adjustedIndex], tNode, lView, comment);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, index + HEADER_OFFSET, lContainer);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        if (!getCheckNoChangesMode()) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(lView, tView, getCreationMode());\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = getLViewChild(lView); current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 2 /* CheckAlways */);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (getCreationMode()) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lView, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewToRender);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[HOST_NODE];\n        refreshDescendantViews(lView, null);\n        leaveView(lView[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     * @param rf  The render flags that should be used to process this template\n     */\n    function componentRefresh(adjustedElementIndex, rf) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            detectChangesInternal(hostView, hostView[CONTEXT], rf);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getLView())[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(lView);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 2 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param state The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, adjustedHostIndex, state) {\n        var tView = lView[TVIEW];\n        var firstTemplatePass = getFirstTemplatePass();\n        if (lView[TAIL]) {\n            lView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        lView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 2 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(lView) {\n        while (lView && !(lView[FLAGS] & 64 /* IsRoot */)) {\n            lView[FLAGS] |= 4 /* Dirty */;\n            lView = lView[PARENT];\n        }\n        lView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(lView[CONTEXT], 'rootContext should be defined');\n        var rootContext = lView[CONTEXT];\n        scheduleTick(rootContext, 1 /* DetectChanges */);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent, 2 /* Update */);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        detectChangesInternal(getComponentViewByInstance(component), component, null);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChanges(component);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, component, rf) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, rf, hostView[FLAGS], component);\n            templateFn(rf || getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView, rf);\n            updateViewQuery(viewQuery, hostView[FLAGS], component);\n        }\n        finally {\n            leaveView(oldView, rf === 1 /* Create */);\n        }\n    }\n    function createViewQuery(viewQuery, renderFlags, viewFlags, component) {\n        if (viewQuery && (renderFlags === 1 /* Create */ ||\n            (renderFlags === null && (viewFlags & 1 /* CreationMode */)))) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, flags, component) {\n        if (viewQuery && flags & 2 /* Update */) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        markViewDirty(getComponentViewByInstance(component));\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        var lView = getLView();\n        return bindingUpdated(lView, lView[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     */\n    function allocHostVars(count) {\n        if (!getFirstTemplatePass())\n            return;\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX], v0);\n        lView[BINDING_INDEX] += 1;\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated2(lView, lView[BINDING_INDEX], v0, v1);\n        lView[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated3(lView, lView[BINDING_INDEX], v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated4(lView, lView[BINDING_INDEX], v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    function loadQueryList(queryListIdx) {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], queryListIdx);\n        return lView[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(getLView(), index);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList, currentDirectiveIndex) {\n        var viewData = getLView();\n        var tView = viewData[TVIEW];\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (getFirstTemplatePass()) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    function delegateToClassInput(tNode) {\n        return tNode.flags & 8 /* hasClassInput */;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return getLView();\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[HOST_NODE];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef && viewAttached(this._lView)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = this._lView[RENDERER_FACTORY];\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._lView[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            result.push(getNativeByTNode(tNodeChild, lView));\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context, 1 /* Create */);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getLView()[RENDERER], hostContainer[QUERIES], hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    var NodeInjector$1 = /** @class */ (function () {\n        function NodeInjector$$1(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n        }\n        NodeInjector$$1.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._hostView, token, exports.InjectFlags.Default, notFoundValue);\n        };\n        return NodeInjector$$1;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector$1(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NullInjector() :\n                            new NodeInjector$1(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], view[CONTAINER_INDEX]) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostTNode, hostView, commentNode, true);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        while (lView[PARENT] && lView[HOST] === null) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = lView[PARENT];\n        }\n        return lView[FLAGS] & 64 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     *\n     */\n    function getRootContext$1(target) {\n        var lViewData = Array.isArray(target) ? target : loadLContext(target).lView;\n        var rootLView = getRootView$1(lViewData);\n        return rootLView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector$1(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringify$1(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrView any component or view\n     *\n     */\n    function getRootView$1(componentOrView) {\n        var lView;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lView');\n            lView = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lView = readPatchedLView(componentOrView);\n        }\n        while (lView && !(lView[FLAGS] & 64 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = lView[secondParam];\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lView);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    /*\n     * Publishes a collection of default debug tools onto `window._ng_`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    var _published = false;\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ngDevMode` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n            2 /* CheckAlways */ | 64 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            refreshDescendantViews(rootView, null);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, rendererFactory, renderer, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var rootTNode = getPreviousOrParentTNode();\n            setCurrentDirectiveDef(componentDef);\n            componentDef.hostBindings(1 /* Create */, component, rootTNode.index);\n            setCurrentDirectiveDef(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        queueLifecycleHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            superHostBindings_1(rf, ctx, elementIndex);\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (dirIndex) {\n                            superContentQueries_1(dirIndex);\n                            prevContentQueries_1(dirIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    // This option ensures that the ngOnChanges lifecycle hook will be inherited\n    // from superclasses (in InheritDefinitionFeature).\n    NgOnChangesFeature.ngInherit = true;\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR$1, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null && !isDuplicate) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return function () { return new token(); };\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider) {\n        var factory = providerToFactory(provider);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider.useClass || provider.provide);\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('7.1.0+149.sha-faca8b1');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n                2 /* CheckAlways */ | 64 /* IsRoot */;\n            var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                // Transform the arrays of native nodes into a structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var tView = rootLView[TVIEW];\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            if (tView.firstTemplatePass) {\n                                // For dynamically created components such as ComponentRef, we create a new TView for\n                                // each insert. This is not ideal since we should be sharing the TViews.\n                                // Also the logic here should be shared with `component.ts`'s `renderComponent`\n                                // method.\n                                tView.expandoStartIndex++;\n                                tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\n                                tView.data.splice(index + HEADER_OFFSET, 0, null);\n                                rootLView.splice(index + HEADER_OFFSET, 0, null);\n                            }\n                            var tNode = createNodeAtIndex(index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                refreshDescendantViews(rootLView, 1 /* Create */);\n            }\n            finally {\n                leaveView(oldLView, true);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = createViewNode(-1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef$$1.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            this.hostView.destroy();\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEX = /^\\s*(�\\d+�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostproocess regexps\n    var PP_PLACEHOLDERS = /\\[(�.+?�?)\\]/g;\n    var PP_ICU_VARS = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEX.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEX, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        var viewData = getLView();\n        var expandoStartIndex = tView.blueprint.length - HEADER_OFFSET;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[HOST_NODE] ?\n            parentTNode.index - HEADER_OFFSET :\n            index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = value.split(ICU_REGEXP);\n                for (var j = 0; j < parts.length; j++) {\n                    value = parts[j];\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        allocExpando(viewData);\n                        var icuNodeIndex = tView.blueprint.length - 1 - HEADER_OFFSET;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parseICUBlock(value.substr(1, value.length - 2));\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (value !== '') {\n                        // Even indexes are text (including bindings)\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        // Create text nodes\n                        allocExpando(viewData);\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, tView.blueprint.length - 1 - HEADER_OFFSET), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: tView.blueprint.length - HEADER_OFFSET - expandoStartIndex,\n            expandoStartIndex: expandoStartIndex,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[HOST_NODE]) {\n            tNode.parent = parentTNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        //\n        // Step 1: resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n        //\n        var matches = {};\n        var result = message.replace(PP_PLACEHOLDERS, function (_match, content) {\n            if (!matches[content]) {\n                matches[content] = content.split('|');\n            }\n            if (!matches[content].length) {\n                throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n            }\n            return matches[content].shift();\n        });\n        // verify that we injected all values\n        var hasUnmatchedValues = Object.keys(matches).some(function (key) { return !!matches[key].length; });\n        if (hasUnmatchedValues) {\n            throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches));\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        //\n        // Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n        //\n        result = result.replace(PP_ICU_VARS, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        //\n        // Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n        // in case multiple ICUs have the same placeholder name\n        //\n        result = result.replace(PP_ICUS, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass) {\n            i18nEndFirstPass(tView);\n        }\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // The last placeholder that was added before `i18nEnd`\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var visitedPlaceholders = readCreateOpCodes(rootIndex, tI18n.create, tI18n.expandoStartIndex, viewData);\n        // Remove deleted placeholders\n        // The last placeholder that was added before `i18nEnd` is `previousOrParentTNode`\n        for (var i = rootIndex + 1; i <= previousOrParentTNode.index - HEADER_OFFSET; i++) {\n            if (visitedPlaceholders.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    function readCreateOpCodes(index, createOpCodes, expandoStartIndex, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedPlaceholders = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createNodeAtIndex(expandoStartIndex++, 3 /* Element */, textRNode, null, null);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[HOST_NODE];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        destinationTNode.next = null;\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedPlaceholders.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 5 /* IcuContainer */, commentRNode, null, null);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 3 /* Element */, elementRNode, tagNameValue, null);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedPlaceholders;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += stringify$1(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    var tIcuIndex = updateOpCodes[++j];\n                                    var tIcu = icus[tIcuIndex];\n                                    var icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], tIcu.expandoStartIndex, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        removeChild(removedPhTNode, removedPhRNode || null, viewData);\n        removedPhTNode.detached = true;\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                removeChild(removedPhTNode, lContainer[NATIVE] || null, viewData);\n            }\n            lContainer[RENDER_PARENT] = null;\n        }\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            expandoStartIndex: expandoStartIndex + 1, childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        var lView = getLView();\n        var worstCaseSize = Math.max.apply(Math, __spread(vars));\n        for (var i = 0; i < worstCaseSize; i++) {\n            allocExpando(lView);\n        }\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element$$1 = currentNode;\n                        var tagName = element$$1.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element$$1.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return getCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            getLView()[getBindingRoot()] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(getLView(), queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵloadQueryList': loadQueryList,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵallocHostVars': allocHostVars,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵquery': query,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵregisterContentQuery': registerContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        setScopeOnDeclaredComponents(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2),\n                        declarations: declarations,\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2).map(expandModuleWithProviders),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2).map(expandModuleWithProviders),\n                        emitInline: true,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$2,\n                        imports: [\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getNgModuleDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var meta = __assign({}, directiveMetadata(type, metadata), { template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, viewQueries: extractQueriesMetadata(getReflect().propMetadata(type), isViewQuery), directives: [], pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, \"ng://\" + stringify(type) + \"/template.html\", meta);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var facade = directiveMetadata(type, directive);\n                    ngDirectiveDef = getCompilerFacade().compileDirective(angularCoreEnv, \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\", facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ$1,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(propMetadata, isContentQuery),\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n            providers: metadata.providers || null,\n        };\n    }\n    var EMPTY_OBJ$1 = {};\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : selector;\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null\n        };\n    }\n    function extractQueriesMetadata(propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$2 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$2 });\n    var EMPTY_ARRAY$3 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$3))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    var meta_1 = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta_1) || isUseFactoryProvider(meta_1) ||\n                        isUseValueProvider(meta_1) || isUseExistingProvider(meta_1);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        providedIn: meta_1.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined\n                    };\n                    if ((isUseClassProvider(meta_1) || isUseFactoryProvider(meta_1)) && meta_1.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta_1.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta_1)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta_1.useClass;\n                    }\n                    else if (isUseValueProvider(meta_1)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta_1.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta_1)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta_1.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta_1)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta_1.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var ɵ0$3 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$3 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement && getComponent(nativeElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tView = lView[TVIEW];\n                var tNode = tView.data[context.nodeIndex];\n                var properties = {};\n                // TODO: https://angular-team.atlassian.net/browse/FW-681\n                // Missing implementation here...\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 8 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (isClassBased(lNode, i)) {\n                                var className = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 8 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (!isClassBased(lNode, i)) {\n                                var styleName = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n        if (parentNode instanceof DebugElement__POST_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__POST_R3__) {\n                    if (elementsOnly ? node.nativeElement : true) {\n                        _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                    }\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__PRE_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue$1(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR$1);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR$1);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_r = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_o = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_p = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_q = _localeFactory;\n    exports.ɵangular_packages_core_core_g = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_m = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_n = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_l = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_k = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_c = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_d = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_e = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_f = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_s = wtfEnabled;\n    exports.ɵangular_packages_core_core_u = createScope;\n    exports.ɵangular_packages_core_core_t = detectWTF;\n    exports.ɵangular_packages_core_core_x = endTimeRange;\n    exports.ɵangular_packages_core_core_v = leave;\n    exports.ɵangular_packages_core_core_w = startTimeRange;\n    exports.ɵangular_packages_core_core_ba = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_bh = NG_INJECTABLE_DEF;\n    exports.ɵangular_packages_core_core_bb = getLView;\n    exports.ɵangular_packages_core_core_bc = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_bd = nextContextImpl;\n    exports.ɵangular_packages_core_core_bg = BoundPlayerFactory;\n    exports.ɵangular_packages_core_core_bk = loadInternal;\n    exports.ɵangular_packages_core_core_h = createElementRef;\n    exports.ɵangular_packages_core_core_i = createTemplateRef;\n    exports.ɵangular_packages_core_core_j = createViewRef;\n    exports.ɵangular_packages_core_core_a = makeParamDecorator;\n    exports.ɵangular_packages_core_core_b = makePropDecorator;\n    exports.ɵangular_packages_core_core_bi = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_y = _def;\n    exports.ɵangular_packages_core_core_z = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR$1;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵinject = inject;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵquery = query;\n    exports.ɵregisterContentQuery = registerContentQuery;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵloadQueryList = loadQueryList;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵallocHostVars = allocHostVars;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵSWITCH_INJECTOR_FACTORY__POST_R3__ = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue$1;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}