{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","compiler","rxjs","operators","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","InjectionToken","_desc","ngMetadataName","ngInjectableDef","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","chainFn","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","args","_i","apply","_a","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","type","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Error","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","GET_PROPERTY_NAME","USE_VALUE","getClosureSafeProperty","objWithPropertyToExtract","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","source","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","v","text","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getClosureSafeProperty$1","GET_PROPERTY_NAME$1","USE_VALUE$1","EMPTY_ARRAY","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","R3_COMPILE_INJECTABLE","preR3InjectableCompile","injectableType","NgModule","ngModule","R3_COMPILE_NGMODULE","preR3NgModuleCompile","moduleType","ngInjectorDef","queueContentHooks","def","tView","afterContentInit","contentHooks","afterContentChecked","contentCheckHooks","queueViewHooks","afterViewInit","viewHooks","afterViewChecked","viewCheckHooks","queueDestroyHooks","onDestroy","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","directives","initHooks","checkHooks","allHooks","hooksToCall","callHooks","arr","throwMultipleComponentError","tNode","tagName","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","stringify$1","findNextRNodeSibling","node","stopNode","currentNode","pNextOrParent","nativeNode","findFirstRNode","currentSibling","getNextLNode","parentNode","getParentLNode","parentType","lView","view","getChildLNode","child","getNextLNodeWithProjection","getNextOrParentSiblingNode","initialNode","rootNode","nextNode","walkLNodeTree","startingNode","action","renderParentNode","beforeNode","native","parent_1","insertBefore","parent_2","removeChild","destroyNode","childContainerData","dynamicLContainerNode","renderParent","views","head","addRemoveViewFromContainer","container","insertMode","insertView","viewNode","splice","queries","containerNextNativeNode","detachView","removeIndex","removedLview","removeView","destroyLView","getLViewChild","childIndex","hostNode","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupInstances","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","id","destroy","canInsertNativeNode","appendChild","appendProjectedNode","currentParent","lContainer","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","selectorAttrValue","nodeAttrValue","step","attrName","isNodeMatchingSelectorList","matchingSelectorIndex","selectors","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","rendererFactory","previousOrParentNode","isParent","tData","NG_HOST_SYMBOL","_CLEAN_PROMISE","_ROOT_DIRECTIVE_INDICES","CIRCULAR$1","getCurrentSanitizer","sanitizer","getPreviousOrParentNode","currentQueries","getCleanup","getTViewCleanup","checkNoChangesMode","firstTemplatePass","enterView","newView","host","oldView","leaveView","creationOnly","bindingIndex","refreshView","refreshDynamicChildren","nextIndex","container_1","lViewNode","dynamicView","renderEmbeddedTemplate","setHostBindings","hostBindings","refreshChildComponents","components","componentRefresh","bindings","defs","dirIndex","executeInitAndContentHooks","createLView","tail","createLNodeObject","nodeInjector","createLNode","tParent","isState","createTNode","previousTNode","dynamicContainerNode","_isParent","_previousOrParentNode","rf","createView","template","renderComponentOrTemplate","hostView","componentOrContext","begin","getRenderFlags","end","elementStart","localRefs","createElement","setUpAttributes","createDirectivesAndLocals","cacheMatchingDirectivesForNode","exportsMap","","matches","currentMatches","findDirectiveMatches","registry","directiveRegistry","diPublic","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","instantiateDirectivesDirectly","count","start","tDirectives","directiveCreate","saveResolvedLocalsInData","instance","throwCyclicDependencyError","initChangeDetectorIfExisting","changeDetectorRef","_setComponentContext","exportAs","getOrCreateTView","pipes","ngPrivateData","createTView","viewIndex","bindingStartIndex","pipeRegistry","isProc","attrVal","setAttribute","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","tag","rNode","resetApplicationState","directiveDefs","pipeDefs","onPush","listener","eventName","listenerFn","useCapture","wrappedListener","wrapListenerWithDirtyLogic","markViewDirty","listen","storeCleanupFn","wrapListenerWithDirtyAndDefault","wrapListenerIn_markViewDirty","preventDefault","returnValue","addEventListener","outputs","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","elementEnd","addNode","queueLifecycleHooks","elementAttribute","NO_CHANGE","element","removeAttribute","strValue","elementProperty","inputs","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","setProperty","tViews","initialInputs","tNodeFlags","direction","propStore","isInput","directiveDef","propertyAliasMap","publicName","internalName","elementClassNamed","className","lElement","addClass","classList","add","removeClass","remove","elementClass","elementStyleNamed","styleName","suffixOrSanitizer","removeStyle","DashCase","removeProperty","setStyle","elementStyle","style","styleValue","textNode","createTextNode","createText","textBinding","existingNode","setValue","textContent","directive","baseDirectiveCreate","addComponentLogic","addToViewTree","queueComponentIndexForCheck","queueInitHooks","onInit","doCheck","queueHostBindingForCheck","setInputsFromAttrs","directiveIndex","initialInputData","generateInitialInputs","minifiedInputName","attrValue","enumerable","attributes","createLContainer","parentLNode","isForViewContainerRef","containerRefreshStart","containerRefreshEnd","embeddedViewStart","viewBlockId","scanForView","containerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","embeddedViewEnd","setRenderParentInProjectedNodes","nodeToProject","lastNodeToProject","elementIndex","viewAttached","detectChangesInternal","getDirectiveInstance","appendToProjectionNode","projectionNode","appendedFirst","appendedLast","projectionNodeData","findComponentHost","viewRootLNode","hostIndex","scheduleTick","rootContext","res_1","clean","scheduler","tickRootContext","rootComponent","_getComponentHostLElementNode","getRootView","component","detectChanges","initBindings","bindingUpdated","moveBindingIndexToReservedSlot","offset","currentSlot","restoreBindingIndex","interpolation1","prefix","v0","suffix","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","different","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","store","load","loadDirective","consumeBinding","isDifferent","throwErrorIfNoChangesMode","oldValue","currValue","msg","checkAndUpdateBinding","exp1","exp2","exp3","exp4","getTView","instanceOrArray","CLEAN_PROMISE","ROOT_DIRECTIVE_INDICES","createRootContext","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","item","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_this","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","isDirty","configurable","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","clear","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","delete","size","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","has","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","k","IterableDiffers","factories","copied","extend","find","iterable","f","getTypeNameForDebugging","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","optional","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","some","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","dep","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","APP_ROOT","NOT_YET","CIRCULAR$2","EMPTY_ARRAY$2","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","Set","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","assertNotDestroyed","service","ngOnDestroy","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","imported","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","multiRecord_1","hasOnDestroy","input","ViewEncapsulation","KeyValueDiffers","kv","ChangeDetectorRef","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","UNDEFINED_RENDERER_TYPE_ID","EMPTY_RENDERER_TYPE_ID","_renderCompCount","resolveRendererType2","isFilled","encapsulation","None","styles","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding$1","checkBindingNoChanges","bindingName","nodeIndex","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","componentView","root","errorHandler","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","_b","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","nextSibling","lastRenderRootNode","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","projectableNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","match","calcBindingFlags","_toStringWithNull","ViewRef","_view","callback","markForCheck","detach","reattach","checkNoChanges","detachFromAppRef","_appRef","attachToAppRef","appRef","EmbeddedViewRef","_super","_viewContainerRef","_lViewNode","attachToViewContainerRef","vcRef","NG_ELEMENT_ID","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","parentInjector","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","templateRef","viewContainerRef","elementRef","diPublicInInjector","di","bloomAdd","bloomBit","mask","directiveInject","getOrCreateInjectable","bloomHash","bloomHashBit","formerInjector","bloomFindPossibleInjector","nodeFlags","searchMatchesQueuedForCreation","sameHostView","injectTemplateRef","getOrCreateTemplateRef","hostTNode","TemplateRef","getOrCreateElementRef","getRenderer","injectViewContainerRef","getOrCreateContainerRef","vcRefHost","hostParent","lContainerNode","ViewContainerRef","injectChangeDetectorRef","getOrCreateChangeDetectorRef","isComponent","getOrCreateHostChangeDetector","getClosestComponentAncestor","hostInjector","injectAttribute","attrNameToInject","startInjector","ReadFromInjectorFn","read","ElementRef","nativeElement","_lContainerNode","_viewRefs","viewRef","insert","createComponent","componentFactory","notImplemented","adjustedIdx","_adjustIndex","move","newIndex","shift","_tView","_renderer","_queries","defineComponent","componentDefinition","pipeTypes","directiveTypes","invertObject","ngOnInit","ngDoCheck","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","changeDetection","OnPush","extractDirectiveDef","extractPipeDef","feature","features","ngComponentDef","ngDirectiveDef","ngPipeDef","PRIVATE_PREFIX","NgOnChangesFeature","inputPropertyNames","definition","proto","_loop_1","pubKey","minKey","propertyName","privateMinKey","originalProperty","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ngOnChanges","EMPTY$1","newObj","minifiedKey","defineDirective","ComponentRef$1","ComponentRef","ComponentFactory$1","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver$1","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","ngContentSelectors","rootSelectorOrNode","ElementRef$1","RenderComponentType","templateUrl","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ComponentFactoryResolver$$1","ComponentFactory$$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","componentDef","parentComponentInjector","elementNode","componentTag","ComponentRef$$1","destroyCbs","location","NgModuleRef$1","NgModuleRef","NgModuleFactory$1","NgModuleFactory","COMPONENT_FACTORY_RESOLVER","NgModuleRef$$1","ngModuleType","_bootstrapComponents","ngModuleDef","bootstrap","componentFactoryResolver","pureFunction0","slotOffset","pureFn","thisArg","getCreationMode","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipeBind1","pipeInstance","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","pure","NgModuleFactory$$1","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","setTimeout","sink","Subscription","Subject","LQueries_","deep","shallow","track","queryList","predicate","descend","createQuery","query","containerValues","clonedQuery","list","setDirty","getIdxOfMatchingSelector","getIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","previous","createPredicate","_valuesTree","QueryList","QueryList_","dirty","changes","_values","filter","reduce","init","toArray","reset","flatten","notifyOnChanges","memoryIndex","getCurrentQueries","QueryType","queryRefresh","angularCoreEnv","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","defineNgModule","declarations","transitiveCompileScopes","ÉµdirectiveInject","ÉµinjectAttribute","ÉµinjectChangeDetectorRef","ÉµinjectElementRef","injectElementRef","ÉµinjectTemplateRef","ÉµinjectViewContainerRef","ÉµNgOnChangesFeature","Éµa","Éµb","ÉµC","ÉµcR","Éµcr","Éµd","ÉµE","Éµe","Éµf0","Éµf1","Éµf2","Éµf3","Éµf4","Éµf5","Éµf6","Éµf7","Éµf8","ÉµfV","Éµi1","Éµi2","Éµi3","Éµi4","Éµi5","Éµi6","Éµi7","Éµi8","Éµk","Éµkn","ÉµL","Éµld","Éµp","Éµpb1","Éµpb2","Éµpb3","Éµpb4","ÉµpbV","ÉµQ","ÉµqR","Éµs","Éµsn","Éµst","ÉµT","Éµt","ÉµV","Éµv","TARGET","NG_COMPONENT_DEF","NG_DIRECTIVE_DEF","NG_PIPE_DEF","NG_MODULE_DEF","EMPTY_ARRAY$3","patchComponentDefWithScope","transitiveScopesFor","compilation","dir","pipe","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","flatten$1","out","expandModuleWithProviders","isModuleWithProviders","WrappedNodeExpr","TemplateRef$1","ViewContainerRef$1","getReflect","reflectDependencies","convertDependencies","reflectDependency","LiteralExpr","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","param","_pendingPromises","directiveMetadata","field","ann","isOutput","bindingPropertyName","listeners","properties","lifecycle","usesOnChanges","typeSourceSpan","isUseClassProvider","GET_PROPERTY_NAME$2","USE_VALUE$2","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Version","compileInjectable$1","hasAProvider","expression","compileInjectable","computeProvidedIn","jitExpression","compileNgModule$1","emitInline","compileNgModule","declaration","ngSelectorScope","Directive","compileDirective","constantPool","ConstantPool","sourceMapUrl","compileDirectiveFromMetadata","makeBindingParser","Component","Default","compileComponentDecorator","compileComponent","templateStr","parseTemplate","errors","compileComponentFromMetadata","viewQueries","hasSelectorScope","Pipe","Input","Output","HostBinding","hostPropertyName","HostListener","VERSION","full","major","split","minor","patch","isPromise","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","isPeriodic","delay","creationLocation","xhr","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","_devMode","_runModeLocked","ALLOW_MULTIPLE_PLATFORMS","isDevMode","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","optionsReducer","createCompiler","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","merge","share","ApplicationRef_1","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","componentRef","el","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef$1","EventListener","DebugNode","_debugContext","DebugElement","addChild","providerTokens","classes","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","MissingTranslationStrategy","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","XMLHttpRequest","responseType","open","send","response","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","elAttrs","childNode","nodeType","Node","ELEMENT_NODE","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","tagSet","tags","e_1","_c","e_1_1","return","merge$1","sets","e_2","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","content","SecurityContext","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","Sanitizer","elDef","selectorOrNode","ns","createComment","parentEl","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","sanitize","setElementClass","setElementStyle","STYLE","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance$1","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","parentView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","viewData","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","comment","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey","INJECTORRefTokenKey","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance","createPipeInstance","createClass","createDirectiveInstance","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","directiveInstance","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","embeddedView","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","NgModuleFactory_","_ngModuleDefFactory","BRAND","bypassSanitizationTrustString","trustedString","trusted","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","isObservable","ÉµisPromise","ÉµclearOverrides","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdefinePipe","definePipe","pipeDef","ÉµdetectChanges","ÉµrenderComponent","renderComponent","hostFeatures","ÉµPublicFeature","PublicFeature","ÉµmarkDirty","markDirty","ÉµNC","ÉµP","projection","localIndex","selectorIndex","nodesForSelector","previouslyProjected","ÉµiV","interpolationV","ÉµpD","projectionDef","noOfNodeBuckets","distributedNodes","componentChild","ÉµrS","reserveSlots","numSlots","ÉµPp","pipeName","getPipeDef","ÉµwhenRendered","whenRendered","getRootContext","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµsanitizeHtml","sanitizeHtml","HTML","ÉµsanitizeStyle","sanitizeStyle","unsafeStyle","ÉµsanitizeUrl","sanitizeUrl","unsafeUrl","URL","ÉµsanitizeResourceUrl","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","staticText","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.1.0-beta.0+24.sha-5ef7a07\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/compiler'), require('rxjs'), require('rxjs/operators')) :\n\ttypeof define === 'function' && define.amd ? define('@angular/core', ['exports', '@angular/compiler', 'rxjs', 'rxjs/operators'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.core = {}),global.ng.compiler,global.rxjs,global.rxjs.operators));\n}(this, (function (exports,compiler,rxjs,operators) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\n\r\n\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n * in which injectors (if any) it will be available.\n *\n * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n * `InjectableType`.\n *\n * Options:\n * * `providedIn` determines which injectors will include the injectable, by either associating it\n *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n * * `factory` gives the zero argument function which will create an instance of the injectable.\n *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n *\n * @experimental\n */\nfunction defineInjectable(opts) {\n    return {\n        providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n    };\n}\n/**\n * Construct an `InjectorDef` which configures an injector.\n *\n * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n * `InjectorType`.\n *\n * Options:\n *\n * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n *   create the type must be provided. If that factory function needs to inject arguments, it can\n *   use the `inject` function.\n * * `providers`: an optional array of providers to add to the injector. Each provider must\n *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n *   type must be an `InjectableType`).\n * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n *   whose providers will also be added to the injector. Locally provided types will override\n *   providers from imports.\n *\n * @experimental\n */\nfunction defineInjector(options) {\n    return {\n        factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n * application's root injector. If the factory function, which takes zero arguments, needs to inject\n * dependencies, it can do so using the `inject` function. See below for an example.\n *\n * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n * mentioned above, `'root'` is the default value for `providedIn`.\n *\n * ### Example\n *\n * #### Tree-shakeable InjectionToken\n *\n * {@example core/di/ts/injector_spec.ts region='ShakeableInjectionToken'}\n *\n * #### Plain InjectionToken\n *\n * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n *\n */\nvar InjectionToken = /** @class */ (function () {\n    function InjectionToken(_desc, options) {\n        this._desc = _desc;\n        /** @internal */\n        this.ngMetadataName = 'InjectionToken';\n        if (options !== undefined) {\n            this.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn || 'root',\n                factory: options.factory,\n            });\n        }\n        else {\n            this.ngInjectableDef = undefined;\n        }\n    }\n    InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n    return InjectionToken;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANNOTATIONS = '__annotations__';\nvar PARAMETERS = '__parameters__';\nvar PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n */\nfunction makeDecorator(name, props, parentClass, chainFn, typeFn) {\n    var metaCtor = makeMetadataCtor(props);\n    function DecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call.apply(metaCtor, __spread([this], args));\n            return this;\n        }\n        var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n        var TypeDecorator = function TypeDecorator(cls) {\n            typeFn && typeFn.apply(void 0, __spread([cls], args));\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                cls[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            return cls;\n        };\n        if (chainFn)\n            chainFn(TypeDecorator);\n        return TypeDecorator;\n        var _a;\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.ngMetadataName = name;\n    DecoratorFactory.annotationCls = DecoratorFactory;\n    return DecoratorFactory;\n}\nfunction makeMetadataCtor(props) {\n    return function ctor() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (props) {\n            var values = props.apply(void 0, __spread(args));\n            for (var propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\nfunction makeParamDecorator(name, props, parentClass) {\n    var metaCtor = makeMetadataCtor(props);\n    function ParamDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n        ParamDecorator.annotation = annotationInstance;\n        return ParamDecorator;\n        function ParamDecorator(cls, unusedKey, index) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                cls[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n        var _a;\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\nfunction makePropDecorator(name, props, parentClass) {\n    var metaCtor = makeMetadataCtor(props);\n    function PropDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof PropDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n        return function PropDecorator(target, name) {\n            var constructor = target.constructor;\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                constructor[PROP_METADATA] :\n                Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n            meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n            meta[name].unshift(decoratorInstance);\n        };\n        var _a;\n    }\n    if (parentClass) {\n        PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    PropDecoratorFactory.prototype.ngMetadataName = name;\n    PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n    return PropDecoratorFactory;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * @NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * @experimental\n */\nvar ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Attribute decorator and metadata.\n *\n *\n * @Annotation\n */\nvar Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * Base class for query metadata.\n *\n * See {@link ContentChildren}, {@link ContentChild}, {@link ViewChildren}, {@link ViewChild} for\n * more information.\n *\n *\n */\nvar Query = /** @class */ (function () {\n    function Query() {\n    }\n    return Query;\n}());\n/**\n * ContentChildren decorator and metadata.\n *\n *\n *  @Annotation\n */\nvar ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n}, Query);\n/**\n * ContentChild decorator and metadata.\n *\n *\n * @Annotation\n */\nvar ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n}, Query);\n/**\n * ViewChildren decorator and metadata.\n *\n *\n * @Annotation\n */\nvar ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n}, Query);\n/**\n * ViewChild decorator and metadata.\n *\n *\n * @Annotation\n */\nvar ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n}, Query);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Describes within the change detector which strategy will be used the next time change\n * detection is triggered.\n *\n */\n\n(function (ChangeDetectionStrategy) {\n    /**\n     * `OnPush` means that the change detector's mode will be initially set to `CheckOnce`.\n     */\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n    /**\n     * `Default` means that the change detector's mode will be initially set to `CheckAlways`.\n     */\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n})(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n/**\n * Describes the status of the detector.\n */\n\n(function (ChangeDetectorStatus) {\n    /**\n     * `CheckOnce` means that after calling detectChanges the mode of the change detector\n     * will become `Checked`.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n    /**\n     * `Checked` means that the change detector should be skipped until its mode changes to\n     * `CheckOnce`.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n    /**\n     * `CheckAlways` means that after calling detectChanges the mode of the change detector\n     * will remain `CheckAlways`.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n    /**\n     * `Detached` means that the change detector sub tree is not a part of the main tree and\n     * should be skipped.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n    /**\n     * `Errored` means that the change detector encountered an error checking a binding\n     * or calling a directive lifecycle method and is now in an inconsistent state. Change\n     * detectors in this state will no longer detect changes.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n    /**\n     * `Destroyed` means that the change detector is destroyed.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n})(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\nfunction isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n    return changeDetectionStrategy == null ||\n        changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\n// Check __global first, because in Node tests both __global and __window may be defined and _global\n// should be __global in that case.\nvar _global = __global || __window || __self;\nvar promise = Promise.resolve(0);\nvar _symbolIterator = null;\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        var Symbol_1 = _global['Symbol'];\n        if (Symbol_1 && Symbol_1.iterator) {\n            _symbolIterator = Symbol_1.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    Map.prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\nfunction scheduleMicroTask(fn) {\n    if (typeof Zone === 'undefined') {\n        // use promise to schedule microTask instead of use Zone\n        promise.then(function () { fn && fn.apply(null, null); });\n    }\n    else {\n        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n    }\n}\n// JS has NaN !== NaN\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n *\n * ### Example\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * @experimental\n */\nfunction forwardRef(forwardRefFn) {\n    forwardRefFn.__forward_ref__ = forwardRef;\n    forwardRefFn.toString = function () { return stringify(this()); };\n    return forwardRefFn;\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n *\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * See: {@link forwardRef}\n * @experimental\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n        type.__forward_ref__ === forwardRef) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Inject decorator and metadata.\n *\n *\n * @Annotation\n */\nvar Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n/**\n * Optional decorator and metadata.\n *\n *\n * @Annotation\n */\nvar Optional = makeParamDecorator('Optional');\n/**\n * Self decorator and metadata.\n *\n *\n * @Annotation\n */\nvar Self = makeParamDecorator('Self');\n/**\n * SkipSelf decorator and metadata.\n *\n *\n * @Annotation\n */\nvar SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Host decorator and metadata.\n *\n *\n * @Annotation\n */\nvar Host = makeParamDecorator('Host');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SOURCE = '__source';\nvar _THROW_IF_NOT_FOUND = new Object();\nvar THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n/**\n * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n *\n * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n * project.\n *\n * @experimental\n */\nvar INJECTOR = new InjectionToken('INJECTOR');\nvar NullInjector = /** @class */ (function () {\n    function NullInjector() {\n    }\n    NullInjector.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n            // reason why correctly written application should cause this exception.\n            debugger;\n            throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n        }\n        return notFoundValue;\n    };\n    return NullInjector;\n}());\n/**\n * @usageNotes\n * ```\n * const injector: Injector = ...;\n * injector.get(...);\n * ```\n *\n * @description\n *\n * Concrete injectors implement this interface.\n *\n * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n *\n */\nvar Injector = /** @class */ (function () {\n    function Injector() {\n    }\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     */\n    Injector.create = function (options, parent) {\n        if (Array.isArray(options)) {\n            return new StaticInjector(options, parent);\n        }\n        else {\n            return new StaticInjector(options.providers, options.parent, options.name || null);\n        }\n    };\n    Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    Injector.NULL = new NullInjector();\n    Injector.ngInjectableDef = defineInjectable({\n        providedIn: 'any',\n        factory: function () { return inject(INJECTOR); },\n    });\n    return Injector;\n}());\nvar IDENT = function (value) {\n    return value;\n};\nvar EMPTY = [];\nvar CIRCULAR = IDENT;\nvar MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\nvar GET_PROPERTY_NAME = {};\nvar USE_VALUE = getClosureSafeProperty({ provide: String, useValue: GET_PROPERTY_NAME });\nvar NG_TOKEN_PATH = 'ngTokenPath';\nvar NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nvar NULL_INJECTOR = Injector.NULL;\nvar NEW_LINE = /\\n/gm;\nvar NO_NEW_LINE = 'Éµ';\nvar StaticInjector = /** @class */ (function () {\n    function StaticInjector(providers, parent, source) {\n        if (parent === void 0) { parent = NULL_INJECTOR; }\n        if (source === void 0) { source = null; }\n        this.parent = parent;\n        this.source = source;\n        var records = this._records = new Map();\n        records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n        records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n        recursivelyProcessProviders(records, providers);\n    }\n    StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n        }\n        catch (e) {\n            var tokenPath = e[NG_TEMP_TOKEN_PATH];\n            if (token[SOURCE]) {\n                tokenPath.unshift(token[SOURCE]);\n            }\n            e.message = formatError('\\n' + e.message, tokenPath, this.source);\n            e[NG_TOKEN_PATH] = tokenPath;\n            e[NG_TEMP_TOKEN_PATH] = null;\n            throw e;\n        }\n    };\n    StaticInjector.prototype.toString = function () {\n        var tokens = [], records = this._records;\n        records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n        return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n    };\n    return StaticInjector;\n}());\nfunction resolveProvider(provider) {\n    var deps = computeDeps(provider);\n    var fn = IDENT;\n    var value = EMPTY;\n    var useNew = false;\n    var provide = resolveForwardRef(provider.provide);\n    if (USE_VALUE in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = provider.useValue;\n    }\n    else if (provider.useFactory) {\n        fn = provider.useFactory;\n    }\n    else if (provider.useExisting) {\n        // Just use IDENT\n    }\n    else if (provider.useClass) {\n        useNew = true;\n        fn = resolveForwardRef(provider.useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps: deps, fn: fn, useNew: useNew, value: value };\n}\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (var i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            // At this point we have what looks like a provider: {provide: ?, ....}\n            var token = resolveForwardRef(provider.provide);\n            var resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                // This is a multi provider.\n                var multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = {\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    });\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n            }\n            var record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\nfunction tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue, flags);\n    }\n    catch (e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path.unshift(token);\n        if (record && record.value == CIRCULAR) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\nfunction resolveToken(token, record, records, parent, notFoundValue, flags) {\n    var value;\n    if (record && !(flags & 4 /* SkipSelf */)) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR) {\n            throw Error(NO_NEW_LINE + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR;\n            var obj = undefined;\n            var useNew = record.useNew;\n            var fn = record.fn;\n            var depRecords = record.deps;\n            var deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (var i = 0; i < depRecords.length; i++) {\n                    var depRecord = depRecords[i];\n                    var options = depRecord.options;\n                    var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, \n                    // A record which describes how to resolve the token.\n                    // If undefined, this means we don't have such a record\n                    childRecord, \n                    // Other records we know about.\n                    records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                }\n            }\n            record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n        }\n    }\n    else if (!(flags & 2 /* Self */)) {\n        value = parent.get(token, notFoundValue, 0 /* Default */);\n    }\n    return value;\n    var _a;\n}\nfunction computeDeps(provider) {\n    var deps = EMPTY;\n    var providerDeps = provider.deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (var i = 0; i < providerDeps.length; i++) {\n            var options = 6;\n            var token = resolveForwardRef(providerDeps[i]);\n            if (token instanceof Array) {\n                for (var j = 0, annotations = token; j < annotations.length; j++) {\n                    var annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject) {\n                        token = annotation.token;\n                    }\n                    else {\n                        token = resolveForwardRef(annotation);\n                    }\n                }\n            }\n            deps.push({ token: token, options: options });\n        }\n    }\n    else if (provider.useExisting) {\n        var token = resolveForwardRef(provider.useExisting);\n        deps = [{ token: token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\nfunction formatError(text, obj, source) {\n    if (source === void 0) { source = null; }\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    var context = stringify(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        var parts = [];\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                var value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n            }\n        }\n        context = \"{\" + parts.join(', ') + \"}\";\n    }\n    return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n}\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj));\n}\nfunction getClosureSafeProperty(objWithPropertyToExtract) {\n    for (var key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n            return key;\n        }\n    }\n    throw Error('!prop');\n}\n/**\n * Current injector value used by `inject`.\n * - `undefined`: it is an error to call `inject`\n * - `null`: `inject` can be called but there is no injector (limp-mode).\n * - Injector instance: Use the injector for resolution.\n */\nvar _currentInjector = undefined;\nfunction setCurrentInjector(injector) {\n    var former = _currentInjector;\n    _currentInjector = injector;\n    return former;\n}\nfunction inject(token, flags) {\n    if (flags === void 0) { flags = 0 /* Default */; }\n    if (_currentInjector === undefined) {\n        throw new Error(\"inject() must be called from an injection context\");\n    }\n    else if (_currentInjector === null) {\n        var injectableDef = token.ngInjectableDef;\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & 8 /* Optional */)\n            return null;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    else {\n        return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n    }\n}\nfunction injectArgs(types) {\n    var args = [];\n    for (var i = 0; i < types.length; i++) {\n        var arg = types[i];\n        if (Array.isArray(arg)) {\n            if (arg.length === 0) {\n                throw new Error('Arguments array must have arguments.');\n            }\n            var type = undefined;\n            var flags = 0;\n            for (var j = 0; j < arg.length; j++) {\n                var meta = arg[j];\n                if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                    flags |= 8 /* Optional */;\n                }\n                else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                    flags |= 4 /* SkipSelf */;\n                }\n                else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                    flags |= 2 /* Self */;\n                }\n                else if (meta instanceof Inject) {\n                    type = meta.token;\n                }\n                else {\n                    type = meta;\n                }\n            }\n            args.push(inject(type, flags));\n        }\n        else {\n            args.push(inject(arg));\n        }\n    }\n    return args;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Represents a type that a Component or other object is instances of.\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n *\n */\nvar Type = Function;\nfunction isType(v) {\n    return typeof v === 'function';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Attention: These regex has to hold even if the code is minified!\n */\nvar DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nvar INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\nvar INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\nvar ReflectionCapabilities = /** @class */ (function () {\n    function ReflectionCapabilities(reflect) {\n        this._reflect = reflect || _global['Reflect'];\n    }\n    ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n    ReflectionCapabilities.prototype.factory = function (t) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new (t.bind.apply(t, __spread([void 0], args)))();\n    }; };\n    /** @internal */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n        var result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n        var typeStr = type.toString();\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(typeStr) ||\n            (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n            return null;\n        }\n        // Prefer the direct API.\n        if (type.parameters && type.parameters !== parentCtor.parameters) {\n            return type.parameters;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        var tsickleCtorParams = type.ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            // Newer tsickle uses a function closure\n            // Retain the non-function case for compatibility with older tsickle\n            var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n            var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n            });\n            return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n        }\n        // API for metadata created by invoking the decorators.\n        var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n        var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array(type.length).fill(undefined);\n    };\n    ReflectionCapabilities.prototype.parameters = function (type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        var parentCtor = getParentCtor(type);\n        var parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    };\n    ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n            var annotations = typeOrFunc.annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return typeOrFunc[ANNOTATIONS];\n        }\n        return null;\n    };\n    ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        var parentCtor = getParentCtor(typeOrFunc);\n        var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    };\n    ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (typeOrFunc.propMetadata &&\n            typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n            var propMetadata = typeOrFunc.propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (typeOrFunc.propDecorators &&\n            typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n            var propDecorators_1 = typeOrFunc.propDecorators;\n            var propMetadata_1 = {};\n            Object.keys(propDecorators_1).forEach(function (prop) {\n                propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n            });\n            return propMetadata_1;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return typeOrFunc[PROP_METADATA];\n        }\n        return null;\n    };\n    ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        var parentCtor = getParentCtor(typeOrFunc);\n        var propMetadata = {};\n        if (parentCtor !== Object) {\n            var parentPropMetadata_1 = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                propMetadata[propName] = parentPropMetadata_1[propName];\n            });\n        }\n        var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach(function (propName) {\n                var decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                }\n                decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    };\n    ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return type instanceof Type && lcProperty in type.prototype;\n    };\n    ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n    ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n    ReflectionCapabilities.prototype.setter = function (name) {\n        return new Function('o', 'v', 'return o.' + name + ' = v;');\n    };\n    ReflectionCapabilities.prototype.method = function (name) {\n        var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return new Function('o', 'args', functionBody);\n    };\n    // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n    ReflectionCapabilities.prototype.importUri = function (type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return \"./\" + stringify(type);\n    };\n    ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n    ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return runtime;\n    };\n    ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n    return ReflectionCapabilities;\n}());\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(function (decoratorInvocation) {\n        var decoratorType = decoratorInvocation.type;\n        var annotationCls = decoratorType.annotationCls;\n        var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n    });\n}\nfunction getParentCtor(ctor) {\n    var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n    var parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getClosureSafeProperty$1(objWithPropertyToExtract, target) {\n    for (var key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === target) {\n            return key;\n        }\n    }\n    throw Error('Could not find renamed property on target object.');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GET_PROPERTY_NAME$1 = {};\nvar USE_VALUE$1 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$1 }, GET_PROPERTY_NAME$1);\nvar EMPTY_ARRAY = [];\nfunction convertInjectableProviderToFactory(type, provider) {\n    if (!provider) {\n        var reflectionCapabilities = new ReflectionCapabilities();\n        var deps_1 = reflectionCapabilities.parameters(type);\n        // TODO - convert to flags.\n        return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n    }\n    if (USE_VALUE$1 in provider) {\n        var valueProvider_1 = provider;\n        return function () { return valueProvider_1.useValue; };\n    }\n    else if (provider.useExisting) {\n        var existingProvider_1 = provider;\n        return function () { return inject(existingProvider_1.useExisting); };\n    }\n    else if (provider.useFactory) {\n        var factoryProvider_1 = provider;\n        return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY))); };\n    }\n    else if (provider.useClass) {\n        var classProvider_1 = provider;\n        var deps_2 = provider.deps;\n        if (!deps_2) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            deps_2 = reflectionCapabilities.parameters(type);\n        }\n        return function () {\n            return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            var _a;\n        };\n    }\n    else {\n        var deps_3 = provider.deps;\n        if (!deps_3) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            deps_3 = reflectionCapabilities.parameters(type);\n        }\n        return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n    }\n}\n/**\n * Supports @Injectable() in JIT mode for Render2.\n */\nfunction preR3InjectableCompile(injectableType, options) {\n    if (options && options.providedIn !== undefined && injectableType.ngInjectableDef === undefined) {\n        injectableType.ngInjectableDef = defineInjectable({\n            providedIn: options.providedIn,\n            factory: convertInjectableProviderToFactory(injectableType, options),\n        });\n    }\n}\n/**\n* Injectable decorator and metadata.\n*\n*\n* @Annotation\n*/\nvar Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) {\n    return (R3_COMPILE_INJECTABLE || preR3InjectableCompile)(type, meta);\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction defineNgModule(def) {\n    var res = {\n        type: def.type,\n        bootstrap: def.bootstrap || [],\n        declarations: def.declarations || [],\n        imports: def.imports || [],\n        exports: def.exports || [],\n        transitiveCompileScopes: null,\n    };\n    return res;\n}\n/**\n * Defines a schema that will allow:\n * - any non-Angular elements with a `-` in their name,\n * - any properties on elements with a `-` in their name which is the common rule for custom\n * elements.\n *\n *\n */\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\n/**\n * Defines a schema that will allow any property on any element.\n *\n * @experimental\n */\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\nfunction preR3NgModuleCompile(moduleType, metadata) {\n    var imports = (metadata && metadata.imports) || [];\n    if (metadata && metadata.exports) {\n        imports = __spread(imports, [metadata.exports]);\n    }\n    moduleType.ngInjectorDef = defineInjector({\n        factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n        providers: metadata && metadata.providers,\n        imports: imports,\n    });\n}\n/**\n * NgModule decorator and metadata.\n *\n *\n * @Annotation\n */\nvar NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, function (type, meta) { return (R3_COMPILE_NGMODULE || preR3NgModuleCompile)(type, meta); });\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// The functions in this file verify that the assumptions we are making\n// about state in an instruction are correct before implementing any logic.\n// They are meant only to be called in dev mode as sanity checks.\n\nfunction assertEqual(actual, expected, msg) {\n    if (actual != expected) {\n        throwError(msg);\n    }\n}\nfunction assertNotEqual(actual, expected, msg) {\n    if (actual == expected) {\n        throwError(msg);\n    }\n}\nfunction assertSame(actual, expected, msg) {\n    if (actual !== expected) {\n        throwError(msg);\n    }\n}\nfunction assertLessThan(actual, expected, msg) {\n    if (actual >= expected) {\n        throwError(msg);\n    }\n}\nfunction assertGreaterThan(actual, expected, msg) {\n    if (actual <= expected) {\n        throwError(msg);\n    }\n}\nfunction assertNotDefined(actual, msg) {\n    if (actual != null) {\n        throwError(msg);\n    }\n}\nfunction assertDefined(actual, msg) {\n    if (actual == null) {\n        throwError(msg);\n    }\n}\nfunction assertComponentType(actual, msg) {\n    if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n    if (!actual.ngComponentDef) {\n        throwError(msg);\n    }\n}\nfunction throwError(msg) {\n    debugger; // Left intentionally for better debugger experience.\n    throw new Error(\"ASSERTION ERROR: \" + msg);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n * TView.initHooks during directiveCreate.\n *\n * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n * directive index), then saved in the even indices of the initHooks array. The odd indices\n * hold the hook functions themselves.\n *\n * @param index The index of the directive in LView.data\n * @param hooks The static hooks map on the directive def\n * @param tView The current TView\n */\nfunction queueInitHooks(index, onInit, doCheck, tView) {\n    ngDevMode &&\n        assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n    if (onInit) {\n        (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n    }\n    if (doCheck) {\n        (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n        (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n    }\n}\n/**\n * Loops through the directives on a node and queues all their hooks except ngOnInit\n * and ngDoCheck, which are queued separately in directiveCreate.\n */\nfunction queueLifecycleHooks(flags, currentView) {\n    var tView = currentView.tView;\n    if (tView.firstTemplatePass === true) {\n        var start = flags >> 13;\n        var count = flags & 4095;\n        var end = start + count;\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = start; i < end; i++) {\n            var def = tView.directives[i];\n            queueContentHooks(def, tView, i);\n            queueViewHooks(def, tView, i);\n            queueDestroyHooks(def, tView, i);\n        }\n    }\n}\n/** Queues afterContentInit and afterContentChecked hooks on TView */\nfunction queueContentHooks(def, tView, i) {\n    if (def.afterContentInit) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n    }\n    if (def.afterContentChecked) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n        (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n    }\n}\n/** Queues afterViewInit and afterViewChecked hooks on TView */\nfunction queueViewHooks(def, tView, i) {\n    if (def.afterViewInit) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n    }\n    if (def.afterViewChecked) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n        (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n    }\n}\n/** Queues onDestroy hooks on TView */\nfunction queueDestroyHooks(def, tView, i) {\n    if (def.onDestroy != null) {\n        (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n    }\n}\n/**\n * Calls onInit and doCheck calls if they haven't already been called.\n *\n * @param currentView The current view\n */\nfunction executeInitHooks(currentView, tView, creationMode) {\n    if (currentView.flags & 16 /* RunInit */) {\n        executeHooks(currentView.directives, tView.initHooks, tView.checkHooks, creationMode);\n        currentView.flags &= ~16 /* RunInit */;\n    }\n}\n/**\n * Iterates over afterViewInit and afterViewChecked functions and calls them.\n *\n * @param currentView The current view\n */\nfunction executeHooks(data, allHooks, checkHooks, creationMode) {\n    var hooksToCall = creationMode ? allHooks : checkHooks;\n    if (hooksToCall) {\n        callHooks(data, hooksToCall);\n    }\n}\n/**\n * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n * creation mode.\n *\n * @param currentView The current view\n * @param arr The array in which the hooks are found\n */\nfunction callHooks(data, arr) {\n    for (var i = 0; i < arr.length; i += 2) {\n        arr[i + 1].call(data[arr[i]]);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ngDevModeResetPerfCounters = (typeof ngDevMode == 'undefined' && (function (global) {\n    function ngDevModeResetPerfCounters() {\n        global['ngDevMode'] = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n        };\n    }\n    ngDevModeResetPerfCounters();\n    return ngDevModeResetPerfCounters;\n})(typeof window != 'undefined' && window || typeof self != 'undefined' && self ||\n    typeof global != 'undefined' && global));\n\n/** Called when directives inject each other (creating a circular dependency) */\nfunction throwCyclicDependencyError(token) {\n    throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n}\n/** Called when there are multiple component selectors that match a given node */\nfunction throwMultipleComponentError(tNode) {\n    throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n}\n/** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\nfunction throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n    if (checkNoChangesMode) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction assertNodeType(node, type) {\n    assertDefined(node, 'should be called with a node');\n    assertEqual(node.tNode.type, type, \"should be a \" + typeName(type));\n}\nfunction assertNodeOfPossibleTypes(node) {\n    var types = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        types[_i - 1] = arguments[_i];\n    }\n    assertDefined(node, 'should be called with a node');\n    var found = types.some(function (type) { return node.tNode.type === type; });\n    assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', '));\n}\nfunction typeName(type) {\n    if (type == 1 /* Projection */)\n        return 'Projection';\n    if (type == 0 /* Container */)\n        return 'Container';\n    if (type == 2 /* View */)\n        return 'View';\n    if (type == 3 /* Element */)\n        return 'Element';\n    return '<unknown>';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO: cleanup once the code is merged in angular/angular\nvar RendererStyleFlags3;\n(function (RendererStyleFlags3) {\n    RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n    RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n})(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n/** Returns whether the `renderer` is a `ProceduralRenderer3` */\nfunction isProceduralRenderer(renderer) {\n    return !!(renderer.listen);\n}\nvar domRendererFactory3 = {\n    createRenderer: function (hostElement, rendererType) { return document; }\n};\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n* Must use this method for CD (instead of === ) since NaN !== NaN\n*/\nfunction isDifferent(a, b) {\n    // NaN is the only value that is not equal to itself so the first\n    // test checks if both a and b are not NaN\n    return !(a !== a && b !== b) && a !== b;\n}\nfunction stringify$1(value) {\n    if (typeof value == 'function')\n        return value.name || value;\n    if (typeof value == 'string')\n        return value;\n    if (value == null)\n        return '';\n    return '' + value;\n}\n/**\n *  Function that throws a \"not implemented\" error so it's clear certain\n *  behaviors/methods aren't yet ready.\n *\n * @returns Not implemented error\n */\nfunction notImplemented() {\n    return new Error('NotImplemented');\n}\n/**\n * Flattens an array in non-recursive way. Input arrays are not modified.\n */\nfunction flatten(list) {\n    var result = [];\n    var i = 0;\n    while (i < list.length) {\n        var item = list[i];\n        if (Array.isArray(item)) {\n            if (item.length > 0) {\n                list = item.concat(list.slice(i + 1));\n                i = 0;\n            }\n            else {\n                i++;\n            }\n        }\n        else {\n            result.push(item);\n            i++;\n        }\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns the first RNode following the given LNode in the same parent DOM element.\n *\n * This is needed in order to insert the given node with insertBefore.\n *\n * @param node The node whose following DOM node must be found.\n * @param stopNode A parent node at which the lookup in the tree should be stopped, or null if the\n * lookup should not be stopped until the result is found.\n * @returns RNode before which the provided node should be inserted or null if the lookup was\n * stopped\n * or if there is no native node after the given logical node in the same native parent.\n */\nfunction findNextRNodeSibling(node, stopNode) {\n    var currentNode = node;\n    while (currentNode && currentNode !== stopNode) {\n        var pNextOrParent = currentNode.pNextOrParent;\n        if (pNextOrParent) {\n            while (pNextOrParent.tNode.type !== 1 /* Projection */) {\n                var nativeNode = findFirstRNode(pNextOrParent);\n                if (nativeNode) {\n                    return nativeNode;\n                }\n                pNextOrParent = pNextOrParent.pNextOrParent;\n            }\n            currentNode = pNextOrParent;\n        }\n        else {\n            var currentSibling = getNextLNode(currentNode);\n            while (currentSibling) {\n                var nativeNode = findFirstRNode(currentSibling);\n                if (nativeNode) {\n                    return nativeNode;\n                }\n                currentSibling = getNextLNode(currentSibling);\n            }\n            var parentNode = getParentLNode(currentNode);\n            currentNode = null;\n            if (parentNode) {\n                var parentType = parentNode.tNode.type;\n                if (parentType === 0 /* Container */ || parentType === 2 /* View */) {\n                    currentNode = parentNode;\n                }\n            }\n        }\n    }\n    return null;\n}\n/** Retrieves the sibling node for the given node. */\nfunction getNextLNode(node) {\n    // View nodes don't have TNodes, so their next must be retrieved through their LView.\n    if (node.tNode.type === 2 /* View */) {\n        var lView = node.data;\n        return lView.next ? lView.next.node : null;\n    }\n    return node.tNode.next ? node.view.data[node.tNode.next.index] : null;\n}\n/** Retrieves the first child of a given node */\nfunction getChildLNode(node) {\n    if (node.tNode.child) {\n        var view = node.tNode.type === 2 /* View */ ? node.data : node.view;\n        return view.data[node.tNode.child.index];\n    }\n    return null;\n}\nfunction getParentLNode(node) {\n    if (node.tNode.index === -1)\n        return null;\n    var parent = node.tNode.parent;\n    return parent ? node.view.data[parent.index] : node.view.node;\n}\n/**\n * Get the next node in the LNode tree, taking into account the place where a node is\n * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n *\n * @param node The node whose next node in the LNode tree must be found.\n * @return LNode|null The next sibling in the LNode tree.\n */\nfunction getNextLNodeWithProjection(node) {\n    var pNextOrParent = node.pNextOrParent;\n    if (pNextOrParent) {\n        // The node is projected\n        var isLastProjectedNode = pNextOrParent.tNode.type === 1;\n        // returns pNextOrParent if we are not at the end of the list, null otherwise\n        return isLastProjectedNode ? null : pNextOrParent;\n    }\n    // returns node.next because the the node is not projected\n    return getNextLNode(node);\n}\n/**\n * Find the next node in the LNode tree, taking into account the place where a node is\n * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n *\n * If there is no sibling node, this function goes to the next sibling of the parent node...\n * until it reaches rootNode (at which point null is returned).\n *\n * @param initialNode The node whose following node in the LNode tree must be found.\n * @param rootNode The root node at which the lookup should stop.\n * @return LNode|null The following node in the LNode tree.\n */\nfunction getNextOrParentSiblingNode(initialNode, rootNode) {\n    var node = initialNode;\n    var nextNode = getNextLNodeWithProjection(node);\n    while (node && !nextNode) {\n        // if node.pNextOrParent is not null here, it is not the next node\n        // (because, at this point, nextNode is null, so it is the parent)\n        node = node.pNextOrParent || getParentLNode(node);\n        if (node === rootNode) {\n            return null;\n        }\n        nextNode = node && getNextLNodeWithProjection(node);\n    }\n    return nextNode;\n}\n/**\n * Returns the first RNode inside the given LNode.\n *\n * @param node The node whose first DOM node must be found\n * @returns RNode The first RNode of the given LNode or null if there is none.\n */\nfunction findFirstRNode(rootNode) {\n    return walkLNodeTree(rootNode, rootNode, 0 /* Find */) || null;\n}\n/**\n * Walks a tree of LNodes, applying a transformation on the LElement nodes, either only on the first\n * one found, or on all of them.\n * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n * being passed as an argument.\n *\n * @param startingNode the node from which the walk is started.\n * @param rootNode the root node considered.\n * @param action Identifies the action to be performed on the LElement nodes.\n * @param renderer Optional the current renderer, required for action modes 1, 2 and 3.\n * @param renderParentNode Optionnal the render parent node to be set in all LContainerNodes found,\n * required for action modes 1 and 2.\n * @param beforeNode Optionnal the node before which elements should be added, required for action\n * modes 1.\n */\nfunction walkLNodeTree(startingNode, rootNode, action, renderer, renderParentNode, beforeNode) {\n    var node = startingNode;\n    while (node) {\n        var nextNode = null;\n        if (node.tNode.type === 3 /* Element */) {\n            // Execute the action\n            if (action === 0 /* Find */) {\n                return node.native;\n            }\n            else if (action === 1 /* Insert */) {\n                var parent_1 = renderParentNode.native;\n                isProceduralRenderer(renderer) ?\n                    renderer\n                        .insertBefore(parent_1, node.native, beforeNode) :\n                    parent_1.insertBefore(node.native, beforeNode, true);\n            }\n            else if (action === 2 /* Detach */) {\n                var parent_2 = renderParentNode.native;\n                isProceduralRenderer(renderer) ?\n                    renderer.removeChild(parent_2, node.native) :\n                    parent_2.removeChild(node.native);\n            }\n            else if (action === 3 /* Destroy */) {\n                ngDevMode && ngDevMode.rendererDestroyNode++;\n                renderer.destroyNode(node.native);\n            }\n            nextNode = getNextLNode(node);\n        }\n        else if (node.tNode.type === 0 /* Container */) {\n            var lContainerNode = node;\n            var childContainerData = lContainerNode.dynamicLContainerNode ?\n                lContainerNode.dynamicLContainerNode.data :\n                lContainerNode.data;\n            if (renderParentNode) {\n                childContainerData.renderParent = renderParentNode;\n            }\n            nextNode =\n                childContainerData.views.length ? getChildLNode(childContainerData.views[0]) : null;\n        }\n        else if (node.tNode.type === 1 /* Projection */) {\n            // For Projection look at the first projected node\n            nextNode = node.data.head;\n        }\n        else {\n            // Otherwise look at the first child\n            nextNode = getChildLNode(node);\n        }\n        node = nextNode === null ? getNextOrParentSiblingNode(node, rootNode) : nextNode;\n    }\n}\nfunction createTextNode(value, renderer) {\n    return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n        renderer.createTextNode(stringify$1(value));\n}\nfunction addRemoveViewFromContainer(container, rootNode, insertMode, beforeNode) {\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    ngDevMode && assertNodeType(rootNode, 2 /* View */);\n    var parentNode = container.data.renderParent;\n    var parent = parentNode ? parentNode.native : null;\n    if (parent) {\n        var node = getChildLNode(rootNode);\n        var renderer = container.view.renderer;\n        walkLNodeTree(node, rootNode, insertMode ? 1 /* Insert */ : 2 /* Detach */, renderer, parentNode, beforeNode);\n    }\n}\n/**\n * Traverses down and up the tree of views and containers to remove listeners and\n * call onDestroy callbacks.\n *\n * Notes:\n *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n *  - Must process containers instead of their views to avoid splicing\n *  when views are destroyed and re-added.\n *  - Using a while loop because it's faster than recursion\n *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n *\n *  @param rootView The view to destroy\n */\nfunction destroyViewTree(rootView) {\n    // If the view has no children, we can clean it up and return early.\n    if (rootView.tView.childIndex === -1) {\n        return cleanUpView(rootView);\n    }\n    var viewOrContainer = getLViewChild(rootView);\n    while (viewOrContainer) {\n        var next = null;\n        if (viewOrContainer.views && viewOrContainer.views.length) {\n            next = viewOrContainer.views[0].data;\n        }\n        else if (viewOrContainer.tView && viewOrContainer.tView.childIndex > -1) {\n            next = getLViewChild(viewOrContainer);\n        }\n        else if (viewOrContainer.next) {\n            // Only move to the side and clean if operating below rootView -\n            // otherwise we would start cleaning up sibling views of the rootView.\n            cleanUpView(viewOrContainer);\n            next = viewOrContainer.next;\n        }\n        if (next == null) {\n            // If the viewOrContainer is the rootView and next is null it means that we are dealing\n            // with a root view that doesn't have children. We didn't descend into child views\n            // so no need to go back up the views tree.\n            while (viewOrContainer && !viewOrContainer.next && viewOrContainer !== rootView) {\n                cleanUpView(viewOrContainer);\n                viewOrContainer = getParentState(viewOrContainer, rootView);\n            }\n            cleanUpView(viewOrContainer || rootView);\n            next = viewOrContainer && viewOrContainer.next;\n        }\n        viewOrContainer = next;\n    }\n}\n/**\n * Inserts a view into a container.\n *\n * This adds the view to the container's array of active views in the correct\n * position. It also adds the view's elements to the DOM if the container isn't a\n * root node of another view (in that case, the view's elements will be added when\n * the container's parent view is added later).\n *\n * @param container The container into which the view should be inserted\n * @param viewNode The view to insert\n * @param index The index at which to insert the view\n * @returns The inserted view\n */\nfunction insertView(container, viewNode, index) {\n    var state = container.data;\n    var views = state.views;\n    if (index > 0) {\n        // This is a new view, we need to add it to the children.\n        views[index - 1].data.next = viewNode.data;\n    }\n    if (index < views.length) {\n        viewNode.data.next = views[index].data;\n        views.splice(index, 0, viewNode);\n    }\n    else {\n        views.push(viewNode);\n        viewNode.data.next = null;\n    }\n    // Notify query that a new view has been added\n    var lView = viewNode.data;\n    if (lView.queries) {\n        lView.queries.insertView(index);\n    }\n    // If the container's renderParent is null, we know that it is a root node of its own parent view\n    // and we should wait until that parent processes its nodes (otherwise, we will insert this view's\n    // nodes twice - once now and once when its parent inserts its views).\n    if (container.data.renderParent !== null) {\n        var beforeNode = findNextRNodeSibling(viewNode, container);\n        if (!beforeNode) {\n            var containerNextNativeNode = container.native;\n            if (containerNextNativeNode === undefined) {\n                containerNextNativeNode = container.native = findNextRNodeSibling(container, null);\n            }\n            beforeNode = containerNextNativeNode;\n        }\n        addRemoveViewFromContainer(container, viewNode, true, beforeNode);\n    }\n    // Sets the attached flag\n    viewNode.data.flags |= 8 /* Attached */;\n    return viewNode;\n}\n/**\n * Detaches a view from a container.\n *\n * This method splices the view from the container's array of active views. It also\n * removes the view's elements from the DOM.\n *\n * @param container The container from which to detach a view\n * @param removeIndex The index of the view to detach\n * @returns The detached view\n */\nfunction detachView(container, removeIndex) {\n    var views = container.data.views;\n    var viewNode = views[removeIndex];\n    if (removeIndex > 0) {\n        views[removeIndex - 1].data.next = viewNode.data.next;\n    }\n    views.splice(removeIndex, 1);\n    addRemoveViewFromContainer(container, viewNode, false);\n    // Notify query that view has been removed\n    var removedLview = viewNode.data;\n    if (removedLview.queries) {\n        removedLview.queries.removeView(removeIndex);\n    }\n    // Unsets the attached flag\n    viewNode.data.flags &= ~8 /* Attached */;\n    return viewNode;\n}\n/**\n * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n *\n * @param container The container from which to remove a view\n * @param removeIndex The index of the view to remove\n * @returns The removed view\n */\nfunction removeView(container, removeIndex) {\n    var viewNode = container.data.views[removeIndex];\n    detachView(container, removeIndex);\n    destroyLView(viewNode.data);\n    return viewNode;\n}\n/** Gets the child of the given LView */\nfunction getLViewChild(view) {\n    if (view.tView.childIndex === -1)\n        return null;\n    var hostNode = view.data[view.tView.childIndex];\n    return hostNode.data ? hostNode.data : hostNode.dynamicLContainerNode.data;\n}\n/**\n * A standalone function which destroys an LView,\n * conducting cleanup (e.g. removing listeners, calling onDestroys).\n *\n * @param view The view to be destroyed.\n */\nfunction destroyLView(view) {\n    var renderer = view.renderer;\n    if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n        walkLNodeTree(view.node, view.node, 3 /* Destroy */, renderer);\n    }\n    destroyViewTree(view);\n    // Sets the destroyed flag\n    view.flags |= 32 /* Destroyed */;\n}\n/**\n * Determines which LViewOrLContainer to jump to when traversing back up the\n * tree in destroyViewTree.\n *\n * Normally, the view's parent LView should be checked, but in the case of\n * embedded views, the container (which is the view node's parent, but not the\n * LView's parent) needs to be checked for a possible next property.\n *\n * @param state The LViewOrLContainer for which we need a parent state\n * @param rootView The rootView, so we don't propagate too far up the view tree\n * @returns The correct parent LViewOrLContainer\n */\nfunction getParentState(state, rootView) {\n    var node;\n    if ((node = state.node) && node.tNode.type === 2 /* View */) {\n        // if it's an embedded view, the state needs to go up to the container, in case the\n        // container has a next\n        return getParentLNode(node).data;\n    }\n    else {\n        // otherwise, use parent view for containers or component views\n        return state.parent === rootView ? null : state.parent;\n    }\n}\n/**\n * Removes all listeners and call all onDestroys in a given view.\n *\n * @param view The LView to clean up\n */\nfunction cleanUpView(viewOrContainer) {\n    if (viewOrContainer.tView) {\n        var view = viewOrContainer;\n        removeListeners(view);\n        executeOnDestroys(view);\n        executePipeOnDestroys(view);\n        // For component views only, the local renderer is destroyed as clean up time.\n        if (view.tView.id === -1 && isProceduralRenderer(view.renderer)) {\n            ngDevMode && ngDevMode.rendererDestroy++;\n            view.renderer.destroy();\n        }\n    }\n}\n/** Removes listeners and unsubscribes from output subscriptions */\nfunction removeListeners(view) {\n    var cleanup = view.tView.cleanup;\n    if (cleanup != null) {\n        for (var i = 0; i < cleanup.length - 1; i += 2) {\n            if (typeof cleanup[i] === 'string') {\n                // This is a listener with the native renderer\n                var native = view.data[cleanup[i + 1]].native;\n                var listener = view.cleanupInstances[cleanup[i + 2]];\n                native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                i += 2;\n            }\n            else if (typeof cleanup[i] === 'number') {\n                // This is a listener with renderer2 (cleanup fn can be found by index)\n                var cleanupFn = view.cleanupInstances[cleanup[i]];\n                cleanupFn();\n            }\n            else {\n                // This is a cleanup function that is grouped with the index of its context\n                var context = view.cleanupInstances[cleanup[i + 1]];\n                cleanup[i].call(context);\n            }\n        }\n        view.cleanupInstances = null;\n    }\n}\n/** Calls onDestroy hooks for this view */\nfunction executeOnDestroys(view) {\n    var tView = view.tView;\n    var destroyHooks;\n    if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n        callHooks(view.directives, destroyHooks);\n    }\n}\n/** Calls pipe destroy hooks for this view */\nfunction executePipeOnDestroys(view) {\n    var pipeDestroyHooks = view.tView && view.tView.pipeDestroyHooks;\n    if (pipeDestroyHooks) {\n        callHooks(view.data, pipeDestroyHooks);\n    }\n}\n/**\n * Returns whether a native element should be inserted in the given parent.\n *\n * The native node can be inserted when its parent is:\n * - A regular element => Yes\n * - A component host element =>\n *    - if the `currentView` === the parent `view`: The element is in the content (vs the\n *      template)\n *      => don't add as the parent component will project if needed.\n *    - `currentView` !== the parent `view` => The element is in the template (vs the content),\n *      add it\n * - View element => delay insertion, will be done on `viewEnd()`\n *\n * @param parent The parent in which to insert the child\n * @param currentView The LView being processed\n * @return boolean Whether the child element should be inserted.\n */\nfunction canInsertNativeNode(parent, currentView) {\n    var parentIsElement = parent.tNode.type === 3;\n    return parentIsElement &&\n        (parent.view !== currentView || parent.data === null /* Regular Element. */);\n}\n/**\n * Appends the `child` element to the `parent`.\n *\n * The element insertion might be delayed {@link canInsertNativeNode}\n *\n * @param parent The parent to which to append the child\n * @param child The child that should be appended\n * @param currentView The current LView\n * @returns Whether or not the child was appended\n */\nfunction appendChild(parent, child, currentView) {\n    if (child !== null && canInsertNativeNode(parent, currentView)) {\n        // We only add element if not in View or not projected.\n        var renderer = currentView.renderer;\n        isProceduralRenderer(renderer) ? renderer.appendChild(parent.native, child) :\n            parent.native.appendChild(child);\n        return true;\n    }\n    return false;\n}\n/**\n * Appends a projected node to the DOM, or in the case of a projected container,\n * appends the nodes from all of the container's active views to the DOM.\n *\n * @param node The node to process\n * @param currentParent The last parent element to be processed\n * @param currentView Current LView\n */\nfunction appendProjectedNode(node, currentParent, currentView) {\n    if (node.tNode.type !== 0 /* Container */) {\n        appendChild(currentParent, node.native, currentView);\n    }\n    else {\n        // The node we are adding is a Container and we are adding it to Element which\n        // is not a component (no more re-projection).\n        // Alternatively a container is projected at the root of a component's template\n        // and can't be re-projected (as not content of any component).\n        // Assignee the final projection location in those cases.\n        var lContainer = node.data;\n        lContainer.renderParent = currentParent;\n        var views = lContainer.views;\n        for (var i = 0; i < views.length; i++) {\n            addRemoveViewFromContainer(node, views[i], true, null);\n        }\n    }\n    if (node.dynamicLContainerNode) {\n        node.dynamicLContainerNode.data.renderParent = currentParent;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n    var nodeClassesLen = nodeClassAttrVal.length;\n    var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n    var matchEndIdx = matchIndex + cssClassToMatch.length;\n    if (matchIndex === -1 // no match\n        || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n        ||\n            (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n     {\n        return false;\n    }\n    return true;\n}\n/**\n * A utility function to match an Ivy node static data against a simple CSS selector\n *\n * @param node static data to match\n * @param selector\n * @returns true if node matches the selector.\n */\nfunction isNodeMatchingSelector(tNode, selector) {\n    ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n    var mode = 4;\n    var nodeAttrs = tNode.attrs;\n    var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SELECT_ONLY */) : -1;\n    // When processing \":not\" selectors, we skip to the next \":not\" if the\n    // current one doesn't match\n    var skipToNextSelector = false;\n    for (var i = 0; i < selector.length; i++) {\n        var current = selector[i];\n        if (typeof current === 'number') {\n            // If we finish processing a :not selector and it hasn't failed, return false\n            if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                return false;\n            }\n            // If we are skipping to the next :not() and this mode flag is positive,\n            // it's a part of the current :not() selector, and we should keep skipping\n            if (skipToNextSelector && isPositive(current))\n                continue;\n            skipToNextSelector = false;\n            mode = current | (mode & 1 /* NOT */);\n            continue;\n        }\n        if (skipToNextSelector)\n            continue;\n        if (mode & 4 /* ELEMENT */) {\n            mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n            if (current !== '' && current !== tNode.tagName) {\n                if (isPositive(mode))\n                    return false;\n                skipToNextSelector = true;\n            }\n        }\n        else {\n            var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n            var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n            if (attrIndexInNode === -1) {\n                if (isPositive(mode))\n                    return false;\n                skipToNextSelector = true;\n                continue;\n            }\n            var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n            if (selectorAttrValue !== '') {\n                var nodeAttrValue = selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx ?\n                    '' :\n                    nodeAttrs[attrIndexInNode + 1];\n                if (mode & 8 /* CLASS */ &&\n                    !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                    mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n        }\n    }\n    return isPositive(mode) || skipToNextSelector;\n}\nfunction isPositive(mode) {\n    return (mode & 1 /* NOT */) === 0;\n}\nfunction findAttrIndexInNode(name, attrs) {\n    var step = 2;\n    if (attrs === null)\n        return -1;\n    for (var i = 0; i < attrs.length; i += step) {\n        var attrName = attrs[i];\n        if (attrName === name)\n            return i;\n        if (attrName === 1 /* SELECT_ONLY */) {\n            step = 1;\n        }\n    }\n    return -1;\n}\nfunction isNodeMatchingSelectorList(tNode, selector) {\n    for (var i = 0; i < selector.length; i++) {\n        if (isNodeMatchingSelector(tNode, selector[i])) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction getProjectAsAttrValue(tNode) {\n    var nodeAttrs = tNode.attrs;\n    if (nodeAttrs != null) {\n        var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n        // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n        // (attribute names are stored at even indexes)\n        if ((ngProjectAsAttrIdx & 1) === 0) {\n            return nodeAttrs[ngProjectAsAttrIdx + 1];\n        }\n    }\n    return null;\n}\n/**\n * Checks a given node against matching selectors and returns\n * selector index (or 0 if none matched).\n *\n * This function takes into account the ngProjectAs attribute: if present its value will be compared\n * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n */\nfunction matchingSelectorIndex(tNode, selectors, textSelectors) {\n    var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n    for (var i = 0; i < selectors.length; i++) {\n        // if a node has the ngProjectAs attribute match it against unparsed selector\n        // match a node against a parsed selector only if ngProjectAs attribute is not present\n        if (ngProjectAsAttrVal === textSelectors[i] ||\n            ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n            return i + 1; // first matching selector \"captures\" a given node\n        }\n    }\n    return 0;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive (D) sets a property on all component instances using this constant as a key and the\n * component's host node (LElement) as the value. This is used in methods like detectChanges to\n * facilitate jumping from an instance to the host node.\n */\nvar NG_HOST_SYMBOL = '__ngHostLNode__';\n/**\n * A permanent marker promise which signifies that the current CD tree is\n * clean.\n */\nvar _CLEAN_PROMISE = Promise.resolve(null);\n/**\n * Directive and element indices for top-level directive.\n *\n * Saved here to avoid re-instantiating an array on every change detection run.\n */\nvar _ROOT_DIRECTIVE_INDICES = [0, 0];\n/**\n * Token set in currentMatches while dependencies are being resolved.\n *\n * If we visit a directive that has a value set to CIRCULAR, we know we've\n * already seen it, and thus have a circular dependency.\n */\nvar CIRCULAR$1 = '__CIRCULAR__';\n/**\n * This property gets set before entering a template.\n *\n * This renderer can be one of two varieties of Renderer3:\n *\n * - ObjectedOrientedRenderer3\n *\n * This is the native browser API style, e.g. operations are methods on individual objects\n * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n * size).\n *\n * - ProceduralRenderer3\n *\n * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n * that enables element manipulation. This also facilitates backwards compatibility with\n * Renderer2.\n */\nvar renderer;\nvar rendererFactory;\nfunction getRenderer() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return renderer;\n}\nfunction getCurrentSanitizer() {\n    return currentView && currentView.sanitizer;\n}\n/** Used to set the parent property when nodes are created. */\nvar previousOrParentNode;\nfunction getPreviousOrParentNode() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return previousOrParentNode;\n}\n/**\n * If `isParent` is:\n *  - `true`: then `previousOrParentNode` points to a parent node.\n *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n */\nvar isParent;\n/**\n * Static data that corresponds to the instance-specific data array on an LView.\n *\n * Each node's static data is stored in tData at the same index that it's stored\n * in the data array. Any nodes that do not have static data store a null value in\n * tData to avoid a sparse array.\n */\nvar tData;\n/**\n * State of the current view being processed.\n *\n * NOTE: we cheat here and initialize it to `null` even thought the type does not\n * contain `null`. This is because we expect this value to be not `null` as soon\n * as we enter the view. Declaring the type as `null` would require us to place `!`\n * in most instructions since they all assume that `currentView` is defined.\n */\nvar currentView = null;\nvar currentQueries;\nfunction getCurrentQueries(QueryType) {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return currentQueries || (currentQueries = new QueryType());\n}\n/**\n * This property gets set before entering a template.\n */\nvar creationMode;\nfunction getCreationMode() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return creationMode;\n}\n/**\n * An array of nodes (text, element, container, etc), pipes, their bindings, and\n * any local variables that need to be stored between invocations.\n */\nvar data;\n/**\n * An array of directive instances in the current view.\n *\n * These must be stored separately from LNodes because their presence is\n * unknown at compile-time and thus space cannot be reserved in data[].\n */\nvar directives;\nfunction getCleanup(view) {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return view.cleanupInstances || (view.cleanupInstances = []);\n}\nfunction getTViewCleanup(view) {\n    return view.tView.cleanup || (view.tView.cleanup = []);\n}\n/**\n * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n *\n * Necessary to support ChangeDetectorRef.checkNoChanges().\n */\nvar checkNoChangesMode = false;\n/** Whether or not this is the first time the current view has been processed. */\nvar firstTemplatePass = true;\n/**\n * Swap the current state with a new state.\n *\n * For performance reasons we store the state in the top level of the module.\n * This way we minimize the number of properties to read. Whenever a new view\n * is entered we have to store the state for later, and when the view is\n * exited the state has to be restored\n *\n * @param newView New state to become active\n * @param host Element to which the View is a child of\n * @returns the previous state;\n */\nfunction enterView(newView, host) {\n    var oldView = currentView;\n    data = newView && newView.data;\n    directives = newView && newView.directives;\n    tData = newView && newView.tView.data;\n    creationMode = newView && (newView.flags & 1 /* CreationMode */) === 1 /* CreationMode */;\n    firstTemplatePass = newView && newView.tView.firstTemplatePass;\n    renderer = newView && newView.renderer;\n    if (host != null) {\n        previousOrParentNode = host;\n        isParent = true;\n    }\n    currentView = newView;\n    currentQueries = newView && newView.queries;\n    return oldView;\n}\n/**\n * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n * the direction of traversal (up or down the view tree) a bit clearer.\n *\n * @param newView New state to become active\n * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n * only, i.e. the first update will be done later. Only possible for dynamically created views.\n */\nfunction leaveView(newView, creationOnly) {\n    if (!creationOnly) {\n        if (!checkNoChangesMode) {\n            executeHooks(directives, currentView.tView.viewHooks, currentView.tView.viewCheckHooks, creationMode);\n        }\n        // Views are clean and in update mode after being checked, so these bits are cleared\n        currentView.flags &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n    }\n    currentView.flags |= 16 /* RunInit */;\n    currentView.bindingIndex = -1;\n    enterView(newView, null);\n}\n/**\n * Refreshes the view, executing the following steps in that order:\n * triggers init hooks, refreshes dynamic children, triggers content hooks, sets host bindings,\n * refreshes child components.\n * Note: view hooks are triggered later when leaving the view.\n * */\nfunction refreshView() {\n    var tView = currentView.tView;\n    if (!checkNoChangesMode) {\n        executeInitHooks(currentView, tView, creationMode);\n    }\n    refreshDynamicChildren();\n    if (!checkNoChangesMode) {\n        executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n    }\n    // This needs to be set before children are processed to support recursive components\n    tView.firstTemplatePass = firstTemplatePass = false;\n    setHostBindings(tView.hostBindings);\n    refreshChildComponents(tView.components);\n}\n/** Sets the host bindings for the current view. */\nfunction setHostBindings(bindings) {\n    if (bindings != null) {\n        var defs = currentView.tView.directives;\n        for (var i = 0; i < bindings.length; i += 2) {\n            var dirIndex = bindings[i];\n            var def = defs[dirIndex];\n            def.hostBindings && def.hostBindings(dirIndex, bindings[i + 1]);\n        }\n    }\n}\n/** Refreshes child components in the current view. */\nfunction refreshChildComponents(components) {\n    if (components != null) {\n        for (var i = 0; i < components.length; i += 2) {\n            componentRefresh(components[i], components[i + 1]);\n        }\n    }\n}\nfunction executeInitAndContentHooks() {\n    if (!checkNoChangesMode) {\n        var tView = currentView.tView;\n        executeInitHooks(currentView, tView, creationMode);\n        executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n    }\n}\nfunction createLView(renderer, tView, context, flags, sanitizer) {\n    var newView = {\n        parent: currentView,\n        flags: flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */,\n        node: null,\n        data: [],\n        directives: null,\n        tView: tView,\n        cleanupInstances: null,\n        renderer: renderer,\n        tail: null,\n        next: null,\n        bindingIndex: -1,\n        context: context,\n        queries: null,\n        injector: currentView && currentView.injector,\n        sanitizer: sanitizer || null\n    };\n    return newView;\n}\n/**\n * Creation of LNode object is extracted to a separate function so we always create LNode object\n * with the same shape\n * (same properties assigned in the same order).\n */\nfunction createLNodeObject(type, currentView, parent, native, state, queries) {\n    return {\n        native: native,\n        view: currentView,\n        nodeInjector: parent ? parent.nodeInjector : null,\n        data: state,\n        queries: queries,\n        tNode: null,\n        pNextOrParent: null,\n        dynamicLContainerNode: null\n    };\n}\nfunction createLNode(index, type, native, name, attrs, state) {\n    var parent = isParent ? previousOrParentNode :\n        previousOrParentNode && getParentLNode(previousOrParentNode);\n    // Parents cannot cross component boundaries because components will be used in multiple places,\n    // so it's only set if the view is the same.\n    var tParent = parent && parent.view === currentView ? parent.tNode : null;\n    var queries = (isParent ? currentQueries : previousOrParentNode && previousOrParentNode.queries) ||\n        parent && parent.queries && parent.queries.child();\n    var isState = state != null;\n    var node = createLNodeObject(type, currentView, parent, native, isState ? state : null, queries);\n    if (index === -1 || type === 2 /* View */) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in TView.node.\n        node.tNode = state.tView.node || createTNode(type, index, null, null, tParent, null);\n    }\n    else {\n        // This is an element or container or projection node\n        ngDevMode && assertDataNext(index);\n        data[index] = node;\n        // Every node adds a value to the static data array to avoid a sparse array\n        if (index >= tData.length) {\n            var tNode = tData[index] = createTNode(type, index, name, attrs, tParent, null);\n            if (!isParent && previousOrParentNode) {\n                var previousTNode = previousOrParentNode.tNode;\n                previousTNode.next = tNode;\n                if (previousTNode.dynamicContainerNode)\n                    previousTNode.dynamicContainerNode.next = tNode;\n            }\n        }\n        node.tNode = tData[index];\n        // Now link ourselves into the tree.\n        if (isParent) {\n            currentQueries = null;\n            if (previousOrParentNode.tNode.child == null && previousOrParentNode.view === currentView ||\n                previousOrParentNode.tNode.type === 2 /* View */) {\n                // We are in the same view, which means we are adding content node to the parent View.\n                previousOrParentNode.tNode.child = node.tNode;\n            }\n        }\n    }\n    // View nodes and host elements need to set their host node (components set host nodes later)\n    if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n        // Bit of a hack to bust through the readonly because there is a circular dep between\n        // LView and LNode.\n        ngDevMode &&\n            assertNotDefined(state.node, 'LView.node should not have been initialized');\n        state.node = node;\n        if (firstTemplatePass)\n            state.tView.node = node.tNode;\n    }\n    previousOrParentNode = node;\n    isParent = true;\n    return node;\n}\n//////////////////////////\n//// Render\n//////////////////////////\n/**\n * Resets the application state.\n */\nfunction resetApplicationState() {\n    isParent = false;\n    previousOrParentNode = null;\n}\n/**\n *\n * @param hostNode Existing node to render into.\n * @param template Template function with the instructions.\n * @param context to pass into the template.\n * @param providedRendererFactory renderer factory to use\n * @param host The host element node to use\n * @param directives Directive defs that should be used for matching\n * @param pipes Pipe defs that should be used for matching\n */\n\n/**\n * Used for rendering embedded views (e.g. dynamically created views)\n *\n * Dynamically created views must store/retrieve their TViews differently from component views\n * because their template functions are nested in the template functions of their hosts, creating\n * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n * TView for dynamically created views on their host TNode, which only has one instance.\n */\nfunction renderEmbeddedTemplate(viewNode, tView, context, renderer, queries) {\n    var _isParent = isParent;\n    var _previousOrParentNode = previousOrParentNode;\n    var oldView;\n    var rf = 2;\n    try {\n        isParent = true;\n        previousOrParentNode = null;\n        if (viewNode == null) {\n            var lView = createLView(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (queries) {\n                lView.queries = queries.createView();\n            }\n            viewNode = createLNode(-1, 2 /* View */, null, null, null, lView);\n            rf = 1 /* Create */;\n        }\n        oldView = enterView(viewNode.data, viewNode);\n        tView.template(rf, context);\n        if (rf & 2 /* Update */) {\n            refreshView();\n        }\n        else {\n            viewNode.data.tView.firstTemplatePass = firstTemplatePass = false;\n        }\n    }\n    finally {\n        // renderEmbeddedTemplate() is called twice in fact, once for creation only and then once for\n        // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n        var isCreationOnly = (rf & 1 /* Create */) === 1;\n        leaveView(oldView, isCreationOnly);\n        isParent = _isParent;\n        previousOrParentNode = _previousOrParentNode;\n    }\n    return viewNode;\n}\nfunction renderComponentOrTemplate(node, hostView, componentOrContext, template) {\n    var oldView = enterView(hostView, node);\n    try {\n        if (rendererFactory.begin) {\n            rendererFactory.begin();\n        }\n        if (template) {\n            template(getRenderFlags(hostView), componentOrContext);\n            refreshView();\n        }\n        else {\n            executeInitAndContentHooks();\n            // Element was stored at 0 in data and directive was stored at 0 in directives\n            // in renderComponent()\n            setHostBindings(_ROOT_DIRECTIVE_INDICES);\n            componentRefresh(0, 0);\n        }\n    }\n    finally {\n        if (rendererFactory.end) {\n            rendererFactory.end();\n        }\n        leaveView(oldView);\n    }\n}\n/**\n * This function returns the default configuration of rendering flags depending on when the\n * template is in creation mode or update mode. By default, the update block is run with the\n * creation block when the view is in creation mode. Otherwise, the update block is run\n * alone.\n *\n * Dynamically created views do NOT use this configuration (update block and create block are\n * always run separately).\n */\nfunction getRenderFlags(view) {\n    return view.flags & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n        2 /* Update */;\n}\n//////////////////////////\n//// Element\n//////////////////////////\n/**\n * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n *\n * @param index Index of the element in the data array\n * @param name Name of the DOM Node\n * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n * @param localRefs A set of local reference bindings on the element.\n *\n * Attributes and localRefs are passed as an array of strings where elements with an even index\n * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n * ['id', 'warning5', 'class', 'alert']\n */\nfunction elementStart(index, name, attrs, localRefs) {\n    ngDevMode &&\n        assertEqual(currentView.bindingIndex, -1, 'elements should be created before any bindings');\n    ngDevMode && ngDevMode.rendererCreateElement++;\n    var native = renderer.createElement(name);\n    ngDevMode && assertDataInRange(index - 1);\n    var node = createLNode(index, 3 /* Element */, native, name, attrs || null, null);\n    if (attrs)\n        setUpAttributes(native, attrs);\n    appendChild(getParentLNode(node), native, currentView);\n    createDirectivesAndLocals(localRefs);\n    return native;\n}\n/**\n * Creates directive instances and populates local refs.\n *\n * @param localRefs Local refs of the current node\n */\nfunction createDirectivesAndLocals(localRefs) {\n    var node = previousOrParentNode;\n    if (firstTemplatePass) {\n        ngDevMode && ngDevMode.firstTemplatePass++;\n        cacheMatchingDirectivesForNode(node.tNode, currentView.tView, localRefs || null);\n    }\n    else {\n        instantiateDirectivesDirectly();\n    }\n    saveResolvedLocalsInData();\n}\n/**\n * On first template pass, we match each node against available directive selectors and save\n * the resulting defs in the correct instantiation order for subsequent change detection runs\n * (so dependencies are always created before the directives that inject them).\n */\nfunction cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n    // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n    var exportsMap = localRefs ? { '': -1 } : null;\n    var matches = tView.currentMatches = findDirectiveMatches(tNode);\n    if (matches) {\n        for (var i = 0; i < matches.length; i += 2) {\n            var def = matches[i];\n            var valueIndex = i + 1;\n            resolveDirective(def, valueIndex, matches, tView);\n            saveNameToExportMap(matches[valueIndex], def, exportsMap);\n        }\n    }\n    if (exportsMap)\n        cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n}\n/** Matches the current node against all available selectors. */\nfunction findDirectiveMatches(tNode) {\n    var registry = currentView.tView.directiveRegistry;\n    var matches = null;\n    if (registry) {\n        for (var i = 0; i < registry.length; i++) {\n            var def = registry[i];\n            if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                if (def.template) {\n                    if (tNode.flags & 4096 /* isComponent */)\n                        throwMultipleComponentError(tNode);\n                    tNode.flags = 4096 /* isComponent */;\n                }\n                if (def.diPublic)\n                    def.diPublic(def);\n                (matches || (matches = [])).push(def, null);\n            }\n        }\n    }\n    return matches;\n}\nfunction resolveDirective(def, valueIndex, matches, tView) {\n    if (matches[valueIndex] === null) {\n        matches[valueIndex] = CIRCULAR$1;\n        var instance = def.factory();\n        (tView.directives || (tView.directives = [])).push(def);\n        return directiveCreate(matches[valueIndex] = tView.directives.length - 1, instance, def);\n    }\n    else if (matches[valueIndex] === CIRCULAR$1) {\n        // If we revisit this directive before it's resolved, we know it's circular\n        throwCyclicDependencyError(def.type);\n    }\n    return null;\n}\n/** Stores index of component's host element so it will be queued for view refresh during CD. */\nfunction queueComponentIndexForCheck(dirIndex) {\n    if (firstTemplatePass) {\n        (currentView.tView.components || (currentView.tView.components = [])).push(dirIndex, data.length - 1);\n    }\n}\n/** Stores index of directive and host element so it will be queued for binding refresh during CD.\n */\nfunction queueHostBindingForCheck(dirIndex) {\n    ngDevMode &&\n        assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n    (currentView.tView.hostBindings || (currentView.tView.hostBindings = [])).push(dirIndex, data.length - 1);\n}\n/** Sets the context for a ChangeDetectorRef to the given instance. */\nfunction initChangeDetectorIfExisting(injector, instance, view) {\n    if (injector && injector.changeDetectorRef != null) {\n        injector.changeDetectorRef._setComponentContext(view, instance);\n    }\n}\nfunction isComponent(tNode) {\n    return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n}\n/**\n * This function instantiates the given directives.\n */\nfunction instantiateDirectivesDirectly() {\n    var tNode = previousOrParentNode.tNode;\n    var count = tNode.flags & 4095;\n    if (count > 0) {\n        var start = tNode.flags >> 13;\n        var end = start + count;\n        var tDirectives = currentView.tView.directives;\n        for (var i = start; i < end; i++) {\n            var def = tDirectives[i];\n            directiveCreate(i, def.factory(), def);\n        }\n    }\n}\n/** Caches local names and their matching directive indices for query and template lookups. */\nfunction cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n    if (localRefs) {\n        var localNames = tNode.localNames = [];\n        // Local names must be stored in tNode in the same order that localRefs are defined\n        // in the template to ensure the data is loaded in the same slots as their refs\n        // in the template (for template queries).\n        for (var i = 0; i < localRefs.length; i += 2) {\n            var index = exportsMap[localRefs[i + 1]];\n            if (index == null)\n                throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n            localNames.push(localRefs[i], index);\n        }\n    }\n}\n/**\n * Builds up an export map as directives are created, so local refs can be quickly mapped\n * to their directive instances.\n */\nfunction saveNameToExportMap(index, def, exportsMap) {\n    if (exportsMap) {\n        if (def.exportAs)\n            exportsMap[def.exportAs] = index;\n        if (def.template)\n            exportsMap[''] = index;\n    }\n}\n/**\n * Takes a list of local names and indices and pushes the resolved local variable values\n * to data[] in the same order as they are loaded in the template with load().\n */\nfunction saveResolvedLocalsInData() {\n    var localNames = previousOrParentNode.tNode.localNames;\n    if (localNames) {\n        for (var i = 0; i < localNames.length; i += 2) {\n            var index = localNames[i + 1];\n            var value = index === -1 ? previousOrParentNode.native : directives[index];\n            data.push(value);\n        }\n    }\n}\n/**\n * Gets TView from a template function or creates a new TView\n * if it doesn't already exist.\n *\n * @param template The template from which to get static data\n * @param directives Directive defs that should be saved on TView\n * @param pipes Pipe defs that should be saved on TView\n * @returns TView\n */\nfunction getOrCreateTView(template, directives, pipes) {\n    // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n    // 1. It is a megamorphic call on each invocation.\n    // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n    //    outer template invocation, which means that no such property will exist\n    // Correct solution is to only put `ngPrivateData` on the Component template\n    // and not on embedded templates.\n    return template.ngPrivateData ||\n        (template.ngPrivateData = createTView(-1, template, directives, pipes));\n}\n/**\n * Creates a TView instance\n *\n * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n * @param directives Registry of directives for this view\n * @param pipes Registry of pipes for this view\n */\nfunction createTView(viewIndex, template, directives, pipes) {\n    ngDevMode && ngDevMode.tView++;\n    return {\n        id: viewIndex,\n        template: template,\n        node: null,\n        data: [],\n        childIndex: -1,\n        bindingStartIndex: -1,\n        directives: null,\n        firstTemplatePass: true,\n        initHooks: null,\n        checkHooks: null,\n        contentHooks: null,\n        contentCheckHooks: null,\n        viewHooks: null,\n        viewCheckHooks: null,\n        destroyHooks: null,\n        pipeDestroyHooks: null,\n        cleanup: null,\n        hostBindings: null,\n        components: null,\n        directiveRegistry: typeof directives === 'function' ? directives() : directives,\n        pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n        currentMatches: null\n    };\n}\nfunction setUpAttributes(native, attrs) {\n    var isProc = isProceduralRenderer(renderer);\n    for (var i = 0; i < attrs.length; i += 2) {\n        var attrName = attrs[i];\n        if (attrName === 1 /* SELECT_ONLY */)\n            break;\n        if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n            var attrVal = attrs[i + 1];\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            isProc ?\n                renderer\n                    .setAttribute(native, attrName, attrVal) :\n                native.setAttribute(attrName, attrVal);\n        }\n    }\n}\nfunction createError(text, token) {\n    return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n}\n/**\n * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n *\n * @param elementOrSelector Render element or CSS selector to locate the element.\n */\nfunction locateHostElement(factory, elementOrSelector) {\n    ngDevMode && assertDataInRange(-1);\n    rendererFactory = factory;\n    var defaultRenderer = factory.createRenderer(null, null);\n    var rNode = typeof elementOrSelector === 'string' ?\n        (isProceduralRenderer(defaultRenderer) ?\n            defaultRenderer.selectRootElement(elementOrSelector) :\n            defaultRenderer.querySelector(elementOrSelector)) :\n        elementOrSelector;\n    if (ngDevMode && !rNode) {\n        if (typeof elementOrSelector === 'string') {\n            throw createError('Host node with selector not found:', elementOrSelector);\n        }\n        else {\n            throw createError('Host node is required:', elementOrSelector);\n        }\n    }\n    return rNode;\n}\n/**\n * Creates the host LNode.\n *\n * @param rNode Render host element.\n * @param def ComponentDef\n *\n * @returns LElementNode created\n */\nfunction hostElement(tag, rNode, def, sanitizer) {\n    resetApplicationState();\n    var node = createLNode(0, 3 /* Element */, rNode, null, null, createLView(renderer, getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n    if (firstTemplatePass) {\n        node.tNode.flags = 4096 /* isComponent */;\n        if (def.diPublic)\n            def.diPublic(def);\n        currentView.tView.directives = [def];\n    }\n    return node;\n}\n/**\n * Adds an event listener to the current node.\n *\n * If an output exists on one of the node's directives, it also subscribes to the output\n * and saves the subscription for later cleanup.\n *\n * @param eventName Name of the event\n * @param listenerFn The function to be called when event emits\n * @param useCapture Whether or not to use capture in event listener.\n */\nfunction listener(eventName, listenerFn, useCapture) {\n    if (useCapture === void 0) { useCapture = false; }\n    ngDevMode && assertPreviousIsParent();\n    var node = previousOrParentNode;\n    var native = node.native;\n    ngDevMode && ngDevMode.rendererAddEventListener++;\n    // In order to match current behavior, native DOM event listeners must be added for all\n    // events (including outputs).\n    if (isProceduralRenderer(renderer)) {\n        var wrappedListener = wrapListenerWithDirtyLogic(currentView, listenerFn);\n        var cleanupFn = renderer.listen(native, eventName, wrappedListener);\n        storeCleanupFn(currentView, cleanupFn);\n    }\n    else {\n        var wrappedListener = wrapListenerWithDirtyAndDefault(currentView, listenerFn);\n        native.addEventListener(eventName, wrappedListener, useCapture);\n        var cleanupInstances = getCleanup(currentView);\n        cleanupInstances.push(wrappedListener);\n        if (firstTemplatePass) {\n            getTViewCleanup(currentView)\n                .push(eventName, node.tNode.index, cleanupInstances.length - 1, useCapture);\n        }\n    }\n    var tNode = node.tNode;\n    if (tNode.outputs === undefined) {\n        // if we create TNode here, inputs must be undefined so we know they still need to be\n        // checked\n        tNode.outputs = generatePropertyAliases(node.tNode.flags, 1 /* Output */);\n    }\n    var outputs = tNode.outputs;\n    var outputData;\n    if (outputs && (outputData = outputs[eventName])) {\n        createOutput(outputData, listenerFn);\n    }\n}\n/**\n * Iterates through the outputs associated with a particular event name and subscribes to\n * each output.\n */\nfunction createOutput(outputs, listener) {\n    for (var i = 0; i < outputs.length; i += 2) {\n        ngDevMode && assertDataInRange(outputs[i], directives);\n        var subscription = directives[outputs[i]][outputs[i + 1]].subscribe(listener);\n        storeCleanupWithContext(currentView, subscription, subscription.unsubscribe);\n    }\n}\n/**\n * Saves context for this cleanup function in LView.cleanupInstances.\n *\n * On the first template pass, saves in TView:\n * - Cleanup function\n * - Index of context we just saved in LView.cleanupInstances\n */\nfunction storeCleanupWithContext(view, context, cleanupFn) {\n    if (view === void 0) { view = currentView; }\n    getCleanup(view).push(context);\n    if (view.tView.firstTemplatePass) {\n        getTViewCleanup(view).push(cleanupFn, view.cleanupInstances.length - 1);\n    }\n}\n/**\n * Saves the cleanup function itself in LView.cleanupInstances.\n *\n * This is necessary for functions that are wrapped with their contexts, like in renderer2\n * listeners.\n *\n * On the first template pass, the index of the cleanup function is saved in TView.\n */\nfunction storeCleanupFn(view, cleanupFn) {\n    getCleanup(view).push(cleanupFn);\n    if (view.tView.firstTemplatePass) {\n        getTViewCleanup(view).push(view.cleanupInstances.length - 1, null);\n    }\n}\n/** Mark the end of the element. */\nfunction elementEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertHasParent();\n        previousOrParentNode = getParentLNode(previousOrParentNode);\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n    var queries = previousOrParentNode.queries;\n    queries && queries.addNode(previousOrParentNode);\n    queueLifecycleHooks(previousOrParentNode.tNode.flags, currentView);\n}\n/**\n * Updates the value of removes an attribute on an Element.\n *\n * @param number index The index of the element in the data array\n * @param name name The name of the attribute.\n * @param value value The attribute is removed when value is `null` or `undefined`.\n *                  Otherwise the attribute value is set to the stringified value.\n * @param sanitizer An optional function used to sanitize the value.\n */\nfunction elementAttribute(index, name, value, sanitizer) {\n    if (value !== NO_CHANGE) {\n        var element = data[index];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element.native, name) :\n                element.native.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n            isProceduralRenderer(renderer) ? renderer.setAttribute(element.native, name, strValue) :\n                element.native.setAttribute(name, strValue);\n        }\n    }\n}\n/**\n * Update a property on an Element.\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n *\n * @param index The index of the element to update in the data array\n * @param propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value New value to write.\n * @param sanitizer An optional function used to sanitize the value.\n */\nfunction elementProperty(index, propName, value, sanitizer) {\n    if (value === NO_CHANGE)\n        return;\n    var node = data[index];\n    var tNode = node.tNode;\n    // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n    // yet been checked\n    if (tNode && tNode.inputs === undefined) {\n        // mark inputs as checked\n        tNode.inputs = generatePropertyAliases(node.tNode.flags, 0 /* Input */);\n    }\n    var inputData = tNode && tNode.inputs;\n    var dataValue;\n    if (inputData && (dataValue = inputData[propName])) {\n        setInputsForProperty(dataValue, value);\n        markDirtyIfOnPush(node);\n    }\n    else {\n        // It is assumed that the sanitizer is only added when the compiler determines that the property\n        // is risky, so sanitization can be done without further checks.\n        value = sanitizer != null ? sanitizer(value) : value;\n        var native = node.native;\n        ngDevMode && ngDevMode.rendererSetProperty++;\n        isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n            (native.setProperty ? native.setProperty(propName, value) :\n                native[propName] = value);\n    }\n}\n/**\n * Constructs a TNode object from the arguments.\n *\n * @param type The type of the node\n * @param index The index of the TNode in TView.data\n * @param tagName The tag name of the node\n * @param attrs The attributes defined on this node\n * @param parent The parent of this node\n * @param tViews Any TViews attached to this node\n * @returns the TNode object\n */\nfunction createTNode(type, index, tagName, attrs, parent, tViews) {\n    ngDevMode && ngDevMode.tNode++;\n    return {\n        type: type,\n        index: index,\n        flags: 0,\n        tagName: tagName,\n        attrs: attrs,\n        localNames: null,\n        initialInputs: undefined,\n        inputs: undefined,\n        outputs: undefined,\n        tViews: tViews,\n        next: null,\n        child: null,\n        parent: parent,\n        dynamicContainerNode: null\n    };\n}\n/**\n * Given a list of directive indices and minified input names, sets the\n * input properties on the corresponding directives.\n */\nfunction setInputsForProperty(inputs, value) {\n    for (var i = 0; i < inputs.length; i += 2) {\n        ngDevMode && assertDataInRange(inputs[i], directives);\n        directives[inputs[i]][inputs[i + 1]] = value;\n    }\n}\n/**\n * Consolidates all inputs or outputs of all directives on this logical node.\n *\n * @param number lNodeFlags logical node flags\n * @param Direction direction whether to consider inputs or outputs\n * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n */\nfunction generatePropertyAliases(tNodeFlags, direction) {\n    var count = tNodeFlags & 4095;\n    var propStore = null;\n    if (count > 0) {\n        var start = tNodeFlags >> 13;\n        var end = start + count;\n        var isInput = direction === 0;\n        var defs = currentView.tView.directives;\n        for (var i = start; i < end; i++) {\n            var directiveDef = defs[i];\n            var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n            for (var publicName in propertyAliasMap) {\n                if (propertyAliasMap.hasOwnProperty(publicName)) {\n                    propStore = propStore || {};\n                    var internalName = propertyAliasMap[publicName];\n                    var hasProperty = propStore.hasOwnProperty(publicName);\n                    hasProperty ? propStore[publicName].push(i, internalName) :\n                        (propStore[publicName] = [i, internalName]);\n                }\n            }\n        }\n    }\n    return propStore;\n}\n/**\n * Add or remove a class in a `classList` on a DOM element.\n *\n * This instruction is meant to handle the [class.foo]=\"exp\" case\n *\n * @param index The index of the element to update in the data array\n * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value A value indicating if a given class should be added or removed.\n */\nfunction elementClassNamed(index, className, value) {\n    if (value !== NO_CHANGE) {\n        var lElement = data[index];\n        if (value) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(lElement.native, className) :\n                lElement.native.classList.add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(lElement.native, className) :\n                lElement.native.classList.remove(className);\n        }\n    }\n}\n/**\n * Set the `className` property on a DOM element.\n *\n * This instruction is meant to handle the `[class]=\"exp\"` usage.\n *\n * `elementClass` instruction writes the value to the \"element's\" `className` property.\n *\n * @param index The index of the element to update in the data array\n * @param value A value indicating a set of classes which should be applied. The method overrides\n *   any existing classes. The value is stringified (`toString`) before it is applied to the\n *   element.\n */\nfunction elementClass(index, value) {\n    if (value !== NO_CHANGE) {\n        // TODO: This is a naive implementation which simply writes value to the `className`. In the\n        // future\n        // we will add logic here which would work with the animation code.\n        var lElement = data[index];\n        ngDevMode && ngDevMode.rendererSetClassName++;\n        isProceduralRenderer(renderer) ? renderer.setProperty(lElement.native, 'className', value) :\n            lElement.native['className'] = stringify$1(value);\n    }\n}\nfunction elementStyleNamed(index, styleName, value, suffixOrSanitizer) {\n    if (value !== NO_CHANGE) {\n        var lElement = data[index];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(lElement.native, styleName, RendererStyleFlags3.DashCase) :\n                lElement.native['style'].removeProperty(styleName);\n        }\n        else {\n            var strValue = typeof suffixOrSanitizer == 'function' ? suffixOrSanitizer(value) : stringify$1(value);\n            if (typeof suffixOrSanitizer == 'string')\n                strValue = strValue + suffixOrSanitizer;\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(lElement.native, styleName, strValue, RendererStyleFlags3.DashCase) :\n                lElement.native['style'].setProperty(styleName, strValue);\n        }\n    }\n}\n/**\n * Set the `style` property on a DOM element.\n *\n * This instruction is meant to handle the `[style]=\"exp\"` usage.\n *\n *\n * @param index The index of the element to update in the data array\n * @param value A value indicating if a given style should be added or removed.\n *   The expected shape of `value` is an object where keys are style names and the values\n *   are their corresponding values to set. If value is falsy, then the style is removed. An absence\n *   of style does not cause that style to be removed. `NO_CHANGE` implies that no update should be\n *   performed.\n */\nfunction elementStyle(index, value) {\n    if (value !== NO_CHANGE) {\n        // TODO: This is a naive implementation which simply writes value to the `style`. In the future\n        // we will add logic here which would work with the animation code.\n        var lElement = data[index];\n        if (isProceduralRenderer(renderer)) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            renderer.setProperty(lElement.native, 'style', value);\n        }\n        else {\n            var style = lElement.native['style'];\n            for (var i = 0, keys = Object.keys(value); i < keys.length; i++) {\n                var styleName = keys[i];\n                var styleValue = value[styleName];\n                if (styleValue == null) {\n                    ngDevMode && ngDevMode.rendererRemoveStyle++;\n                    style.removeProperty(styleName);\n                }\n                else {\n                    ngDevMode && ngDevMode.rendererSetStyle++;\n                    style.setProperty(styleName, styleValue);\n                }\n            }\n        }\n    }\n}\n//////////////////////////\n//// Text\n//////////////////////////\n/**\n * Create static text node\n *\n * @param index Index of the node in the data array.\n * @param value Value to write. This value will be stringified.\n */\nfunction text(index, value) {\n    ngDevMode &&\n        assertEqual(currentView.bindingIndex, -1, 'text nodes should be created before bindings');\n    ngDevMode && ngDevMode.rendererCreateTextNode++;\n    var textNode = createTextNode(value, renderer);\n    var node = createLNode(index, 3 /* Element */, textNode, null, null);\n    // Text nodes are self closing.\n    isParent = false;\n    appendChild(getParentLNode(node), textNode, currentView);\n}\n/**\n * Create text node with binding\n * Bindings should be handled externally with the proper interpolation(1-8) method\n *\n * @param index Index of the node in the data array.\n * @param value Stringified value to write.\n */\nfunction textBinding(index, value) {\n    if (value !== NO_CHANGE) {\n        ngDevMode && assertDataInRange(index);\n        var existingNode = data[index];\n        ngDevMode && assertDefined(existingNode, 'LNode should exist');\n        ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n            existingNode.native.textContent = stringify$1(value);\n    }\n}\n//////////////////////////\n//// Directive\n//////////////////////////\n/**\n * Create a directive.\n *\n * NOTE: directives can be created in order other than the index order. They can also\n *       be retrieved before they are created in which case the value will be null.\n *\n * @param directive The directive instance.\n * @param directiveDef DirectiveDef object which contains information about the template.\n */\nfunction directiveCreate(index, directive, directiveDef) {\n    var instance = baseDirectiveCreate(index, directive, directiveDef);\n    ngDevMode && assertDefined(previousOrParentNode.tNode, 'previousOrParentNode.tNode');\n    var tNode = previousOrParentNode.tNode;\n    var isComponent = directiveDef.template;\n    if (isComponent) {\n        addComponentLogic(index, directive, directiveDef);\n    }\n    if (firstTemplatePass) {\n        // Init hooks are queued now so ngOnInit is called in host components before\n        // any projected components.\n        queueInitHooks(index, directiveDef.onInit, directiveDef.doCheck, currentView.tView);\n        if (directiveDef.hostBindings)\n            queueHostBindingForCheck(index);\n    }\n    if (tNode && tNode.attrs) {\n        setInputsFromAttrs(index, instance, directiveDef.inputs, tNode);\n    }\n    return instance;\n}\nfunction addComponentLogic(index, instance, def) {\n    var tView = getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs);\n    // Only component views should be added to the view tree directly. Embedded views are\n    // accessed through their containers because they may be removed / re-added later.\n    var hostView = addToViewTree(currentView, previousOrParentNode.tNode.index, createLView(rendererFactory.createRenderer(previousOrParentNode.native, def.rendererType), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n    // We need to set the host node/data here because when the component LNode was created,\n    // we didn't yet know it was a component (just an element).\n    previousOrParentNode.data = hostView;\n    hostView.node = previousOrParentNode;\n    if (firstTemplatePass)\n        tView.node = previousOrParentNode.tNode;\n    initChangeDetectorIfExisting(previousOrParentNode.nodeInjector, instance, hostView);\n    if (firstTemplatePass)\n        queueComponentIndexForCheck(index);\n}\n/**\n * A lighter version of directiveCreate() that is used for the root component\n *\n * This version does not contain features that we don't already support at root in\n * current Angular. Example: local refs and inputs on root component.\n */\nfunction baseDirectiveCreate(index, directive, directiveDef) {\n    ngDevMode &&\n        assertEqual(currentView.bindingIndex, -1, 'directives should be created before any bindings');\n    ngDevMode && assertPreviousIsParent();\n    Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n    if (directives == null)\n        currentView.directives = directives = [];\n    ngDevMode && assertDataNext(index, directives);\n    directives[index] = directive;\n    if (firstTemplatePass) {\n        var flags = previousOrParentNode.tNode.flags;\n        if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n            // When the first directive is created:\n            // - save the index,\n            // - set the number of directives to 1\n            previousOrParentNode.tNode.flags =\n                index << 13 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n        }\n        else {\n            // Only need to bump the size when subsequent directives are created\n            ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n            previousOrParentNode.tNode.flags++;\n        }\n    }\n    else {\n        var diPublic = directiveDef.diPublic;\n        if (diPublic)\n            diPublic(directiveDef);\n    }\n    if (directiveDef.attributes != null && previousOrParentNode.tNode.type == 3 /* Element */) {\n        setUpAttributes(previousOrParentNode.native, directiveDef.attributes);\n    }\n    return directive;\n}\n/**\n * Sets initial input properties on directive instances from attribute data\n *\n * @param directiveIndex Index of the directive in directives array\n * @param instance Instance of the directive on which to set the initial inputs\n * @param inputs The list of inputs from the directive def\n * @param tNode The static data for this node\n */\nfunction setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n    var initialInputData = tNode.initialInputs;\n    if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n        initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n    }\n    var initialInputs = initialInputData[directiveIndex];\n    if (initialInputs) {\n        for (var i = 0; i < initialInputs.length; i += 2) {\n            instance[initialInputs[i]] = initialInputs[i + 1];\n        }\n    }\n}\n/**\n * Generates initialInputData for a node and stores it in the template's static storage\n * so subsequent template invocations don't have to recalculate it.\n *\n * initialInputData is an array containing values that need to be set as input properties\n * for directives on this node, but only once on creation. We need this array to support\n * the case where you set an @Input property of a directive using attribute-like syntax.\n * e.g. if you have a `name` @Input, you can set it once like this:\n *\n * <my-component name=\"Bess\"></my-component>\n *\n * @param directiveIndex Index to store the initial input data\n * @param inputs The list of inputs from the directive def\n * @param tNode The static data on this node\n */\nfunction generateInitialInputs(directiveIndex, inputs, tNode) {\n    var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n    initialInputData[directiveIndex] = null;\n    var attrs = tNode.attrs;\n    for (var i = 0; i < attrs.length; i += 2) {\n        var attrName = attrs[i];\n        var minifiedInputName = inputs[attrName];\n        var attrValue = attrs[i + 1];\n        if (attrName === 1 /* SELECT_ONLY */)\n            break;\n        if (minifiedInputName !== undefined) {\n            var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n            inputsToStore.push(minifiedInputName, attrValue);\n        }\n    }\n    return initialInputData;\n}\n//////////////////////////\n//// ViewContainer & View\n//////////////////////////\n/**\n * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n *\n * @param parentLNode the LNode in which the container's content will be rendered\n * @param currentView The parent view of the LContainer\n * @param template Optional the inline template (ng-template instruction case)\n * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n * @returns LContainer\n */\nfunction createLContainer(parentLNode, currentView, isForViewContainerRef) {\n    ngDevMode && assertDefined(parentLNode, 'containers should have a parent');\n    return {\n        views: [],\n        nextIndex: isForViewContainerRef ? null : 0,\n        // If the direct parent of the container is a view, its views will need to be added\n        // through insertView() when its parent view is being inserted:\n        renderParent: canInsertNativeNode(parentLNode, currentView) ? parentLNode : null,\n        next: null,\n        parent: currentView,\n        queries: null\n    };\n}\n/**\n * Creates an LContainerNode.\n *\n * Only `LViewNodes` can go into `LContainerNodes`.\n *\n * @param index The index of the container in the data array\n * @param template Optional inline template\n * @param tagName The name of the container element, if applicable\n * @param attrs The attrs attached to the container, if applicable\n * @param localRefs A set of local reference bindings on the element.\n */\nfunction container(index, template, tagName, attrs, localRefs) {\n    ngDevMode &&\n        assertEqual(currentView.bindingIndex, -1, 'container nodes should be created before any bindings');\n    var currentParent = isParent ? previousOrParentNode : getParentLNode(previousOrParentNode);\n    var lContainer = createLContainer(currentParent, currentView);\n    var node = createLNode(index, 0 /* Container */, undefined, tagName || null, attrs || null, lContainer);\n    if (firstTemplatePass) {\n        var tView = currentView.tView;\n        node.tNode.tViews =\n            template ? createTView(-1, template, tView.directiveRegistry, tView.pipeRegistry) : [];\n    }\n    // Containers are added to the current view tree instead of their embedded views\n    // because views can be removed and re-inserted.\n    addToViewTree(currentView, index, node.data);\n    var queries = node.queries;\n    if (queries) {\n        // prepare place for matching nodes from views inserted into a given container\n        lContainer.queries = queries.container();\n    }\n    createDirectivesAndLocals(localRefs);\n    isParent = false;\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    if (queries) {\n        // check if a given container node matches\n        queries.addNode(node);\n    }\n}\n/**\n * Sets a container up to receive views.\n *\n * @param index The index of the container in the data array\n */\nfunction containerRefreshStart(index) {\n    ngDevMode && assertDataInRange(index);\n    previousOrParentNode = data[index];\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    isParent = true;\n    previousOrParentNode.data.nextIndex = 0;\n    ngDevMode && assertSame(previousOrParentNode.native, undefined, \"the container's native element should not have been set yet.\");\n    if (!checkNoChangesMode) {\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executeInitHooks(currentView, currentView.tView, creationMode);\n    }\n}\n/**\n * Marks the end of the LContainerNode.\n *\n * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n */\nfunction containerRefreshEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n        ngDevMode && assertHasParent();\n        previousOrParentNode = getParentLNode(previousOrParentNode);\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    var container = previousOrParentNode;\n    container.native = undefined;\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    var nextIndex = container.data.nextIndex;\n    // remove extra views at the end of the container\n    while (nextIndex < container.data.views.length) {\n        removeView(container, nextIndex);\n    }\n}\nfunction refreshDynamicChildren() {\n    for (var current = getLViewChild(currentView); current !== null; current = current.next) {\n        // Note: current can be a LView or a LContainer, but here we are only interested in LContainer.\n        // The distinction is made because nextIndex and views do not exist on LView.\n        if (isLContainer(current)) {\n            var container_1 = current;\n            for (var i = 0; i < container_1.views.length; i++) {\n                var lViewNode = container_1.views[i];\n                // The directives and pipes are not needed here as an existing view is only being refreshed.\n                var dynamicView = lViewNode.data;\n                ngDevMode && assertDefined(dynamicView.tView, 'TView must be allocated');\n                renderEmbeddedTemplate(lViewNode, dynamicView.tView, dynamicView.context, renderer);\n            }\n        }\n    }\n}\nfunction isLContainer(node) {\n    return node.nextIndex == null && node.views != null;\n}\n/**\n * Looks for a view with a given view block id inside a provided LContainer.\n * Removes views that need to be deleted in the process.\n *\n * @param containerNode where to search for views\n * @param startIdx starting index in the views array to search from\n * @param viewBlockId exact view block id to look for\n * @returns index of a found view or -1 if not found\n */\nfunction scanForView(containerNode, startIdx, viewBlockId) {\n    var views = containerNode.data.views;\n    for (var i = startIdx; i < views.length; i++) {\n        var viewAtPositionId = views[i].data.tView.id;\n        if (viewAtPositionId === viewBlockId) {\n            return views[i];\n        }\n        else if (viewAtPositionId < viewBlockId) {\n            // found a view that should not be at this position - remove\n            removeView(containerNode, i);\n        }\n        else {\n            // found a view with id greater than the one we are searching for\n            // which means that required view doesn't exist and can't be found at\n            // later positions in the views array - stop the search here\n            break;\n        }\n    }\n    return null;\n}\n/**\n * Marks the start of an embedded view.\n *\n * @param viewBlockId The ID of this view\n * @return boolean Whether or not this view is in creation mode\n */\nfunction embeddedViewStart(viewBlockId) {\n    var container = (isParent ? previousOrParentNode : getParentLNode(previousOrParentNode));\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    var lContainer = container.data;\n    var viewNode = scanForView(container, lContainer.nextIndex, viewBlockId);\n    if (viewNode) {\n        previousOrParentNode = viewNode;\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n        isParent = true;\n        enterView(viewNode.data, viewNode);\n    }\n    else {\n        // When we create a new LView, we always reset the state of the instructions.\n        var newView = createLView(renderer, getOrCreateEmbeddedTView(viewBlockId, container), null, 2 /* CheckAlways */, getCurrentSanitizer());\n        if (lContainer.queries) {\n            newView.queries = lContainer.queries.createView();\n        }\n        enterView(newView, viewNode = createLNode(viewBlockId, 2 /* View */, null, null, null, newView));\n    }\n    return getRenderFlags(viewNode.data);\n}\n/**\n * Initialize the TView (e.g. static data) for the active embedded view.\n *\n * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n * static data for a particular node would overwrite the static data for a node in the view above\n * it with the same index (since it's in the same template).\n *\n * @param viewIndex The index of the TView in TNode.tViews\n * @param parent The parent container in which to look for the view's static data\n * @returns TView\n */\nfunction getOrCreateEmbeddedTView(viewIndex, parent) {\n    ngDevMode && assertNodeType(parent, 0 /* Container */);\n    var containerTViews = parent.tNode.tViews;\n    ngDevMode && assertDefined(containerTViews, 'TView expected');\n    ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n    if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n        var tView = currentView.tView;\n        containerTViews[viewIndex] =\n            createTView(viewIndex, null, tView.directiveRegistry, tView.pipeRegistry);\n    }\n    return containerTViews[viewIndex];\n}\n/** Marks the end of an embedded view. */\nfunction embeddedViewEnd() {\n    refreshView();\n    isParent = false;\n    var viewNode = previousOrParentNode = currentView.node;\n    var containerNode = getParentLNode(previousOrParentNode);\n    if (containerNode) {\n        ngDevMode && assertNodeType(viewNode, 2 /* View */);\n        ngDevMode && assertNodeType(containerNode, 0 /* Container */);\n        var lContainer = containerNode.data;\n        if (creationMode) {\n            // When projected nodes are going to be inserted, the renderParent of the dynamic container\n            // used by the ViewContainerRef must be set.\n            setRenderParentInProjectedNodes(lContainer.renderParent, viewNode);\n            // it is a new view, insert it into collection of views for a given container\n            insertView(containerNode, viewNode, lContainer.nextIndex);\n        }\n        lContainer.nextIndex++;\n    }\n    leaveView(currentView.parent);\n    ngDevMode && assertEqual(isParent, false, 'isParent');\n    ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n}\n/**\n * For nodes which are projected inside an embedded view, this function sets the renderParent\n * of their dynamic LContainerNode.\n * @param renderParent the renderParent of the LContainer which contains the embedded view.\n * @param viewNode the embedded view.\n */\nfunction setRenderParentInProjectedNodes(renderParent, viewNode) {\n    if (renderParent != null) {\n        var node = getChildLNode(viewNode);\n        while (node) {\n            if (node.tNode.type === 1 /* Projection */) {\n                var nodeToProject = node.data.head;\n                var lastNodeToProject = node.data.tail;\n                while (nodeToProject) {\n                    if (nodeToProject.dynamicLContainerNode) {\n                        nodeToProject.dynamicLContainerNode.data.renderParent = renderParent;\n                    }\n                    nodeToProject = nodeToProject === lastNodeToProject ? null : nodeToProject.pNextOrParent;\n                }\n            }\n            node = getNextLNode(node);\n        }\n    }\n}\n/////////////\n/**\n * Refreshes components by entering the component view and processing its bindings, queries, etc.\n *\n * @param directiveIndex\n * @param elementIndex\n */\nfunction componentRefresh(directiveIndex, elementIndex) {\n    ngDevMode && assertDataInRange(elementIndex);\n    var element = data[elementIndex];\n    ngDevMode && assertNodeType(element, 3 /* Element */);\n    ngDevMode && assertDefined(element.data, \"Component's host node should have an LView attached.\");\n    var hostView = element.data;\n    // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n    if (viewAttached(hostView) && hostView.flags & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n        ngDevMode && assertDataInRange(directiveIndex, directives);\n        detectChangesInternal(hostView, element, getDirectiveInstance(directives[directiveIndex]));\n    }\n}\n/** Returns a boolean for whether the view is attached */\nfunction viewAttached(view) {\n    return (view.flags & 8 /* Attached */) === 8 /* Attached */;\n}\n/**\n * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n * It takes all the selectors from the entire component's template and decides where\n * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n * backed by a selector).\n *\n * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n * un-parsed form.\n *\n * The parsed form is needed for efficient matching of a node against a given CSS selector.\n * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n *\n * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n * drawbacks:\n * - having only a textual form would require runtime parsing of CSS selectors;\n * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n * template author).\n *\n * @param selectors A collection of parsed CSS selectors\n * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n */\nfunction projectionDef(index, selectors, textSelectors) {\n    var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n    var distributedNodes = new Array(noOfNodeBuckets);\n    for (var i = 0; i < noOfNodeBuckets; i++) {\n        distributedNodes[i] = [];\n    }\n    var componentNode = findComponentHost(currentView);\n    var componentChild = getChildLNode(componentNode);\n    while (componentChild !== null) {\n        // execute selector matching logic if and only if:\n        // - there are selectors defined\n        // - a node has a tag name / attributes that can be matched\n        if (selectors && componentChild.tNode) {\n            var matchedIdx = matchingSelectorIndex(componentChild.tNode, selectors, textSelectors);\n            distributedNodes[matchedIdx].push(componentChild);\n        }\n        else {\n            distributedNodes[0].push(componentChild);\n        }\n        componentChild = getNextLNode(componentChild);\n    }\n    ngDevMode && assertDataNext(index);\n    data[index] = distributedNodes;\n}\n/**\n * Updates the linked list of a projection node, by appending another linked list.\n *\n * @param projectionNode Projection node whose projected nodes linked list has to be updated\n * @param appendedFirst First node of the linked list to append.\n * @param appendedLast Last node of the linked list to append.\n */\nfunction appendToProjectionNode(projectionNode, appendedFirst, appendedLast) {\n    ngDevMode && assertEqual(!!appendedFirst, !!appendedLast, 'appendedFirst can be null if and only if appendedLast is also null');\n    if (!appendedLast) {\n        // nothing to append\n        return;\n    }\n    var projectionNodeData = projectionNode.data;\n    if (projectionNodeData.tail) {\n        projectionNodeData.tail.pNextOrParent = appendedFirst;\n    }\n    else {\n        projectionNodeData.head = appendedFirst;\n    }\n    projectionNodeData.tail = appendedLast;\n    appendedLast.pNextOrParent = projectionNode;\n}\n/**\n * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n * to the projectionDef instruction.\n *\n * @param nodeIndex\n * @param localIndex - index under which distribution of projected nodes was memorized\n * @param selectorIndex:\n *        - 0 when the selector is `*` (or unspecified as this is the default value),\n *        - 1 based index of the selector from the {@link projectionDef}\n */\nfunction projection(nodeIndex, localIndex, selectorIndex, attrs) {\n    if (selectorIndex === void 0) { selectorIndex = 0; }\n    var node = createLNode(nodeIndex, 1 /* Projection */, null, null, attrs || null, { head: null, tail: null });\n    // `<ng-content>` has no content\n    isParent = false;\n    // re-distribution of projectable nodes is memorized on a component's view level\n    var componentNode = findComponentHost(currentView);\n    var componentLView = componentNode.data;\n    var nodesForSelector = componentLView.data[localIndex][selectorIndex];\n    // build the linked list of projected nodes:\n    for (var i = 0; i < nodesForSelector.length; i++) {\n        var nodeToProject = nodesForSelector[i];\n        if (nodeToProject.tNode.type === 1 /* Projection */) {\n            // Reprojecting a projection -> append the list of previously projected nodes\n            var previouslyProjected = nodeToProject.data;\n            appendToProjectionNode(node, previouslyProjected.head, previouslyProjected.tail);\n        }\n        else {\n            // Projecting a single node\n            appendToProjectionNode(node, nodeToProject, nodeToProject);\n        }\n    }\n    var currentParent = getParentLNode(node);\n    if (canInsertNativeNode(currentParent, currentView)) {\n        ngDevMode && assertNodeType(currentParent, 3 /* Element */);\n        // process each node in the list of projected nodes:\n        var nodeToProject = node.data.head;\n        var lastNodeToProject = node.data.tail;\n        while (nodeToProject) {\n            appendProjectedNode(nodeToProject, currentParent, currentView);\n            nodeToProject = nodeToProject === lastNodeToProject ? null : nodeToProject.pNextOrParent;\n        }\n    }\n}\n/**\n * Given a current view, finds the nearest component's host (LElement).\n *\n * @param lView LView for which we want a host element node\n * @returns The host node\n */\nfunction findComponentHost(lView) {\n    var viewRootLNode = lView.node;\n    while (viewRootLNode.tNode.type === 2 /* View */) {\n        ngDevMode && assertDefined(lView.parent, 'lView.parent');\n        lView = lView.parent;\n        viewRootLNode = lView.node;\n    }\n    ngDevMode && assertNodeType(viewRootLNode, 3 /* Element */);\n    ngDevMode && assertDefined(viewRootLNode.data, 'node.data');\n    return viewRootLNode;\n}\n/**\n * Adds a LView or a LContainer to the end of the current view tree.\n *\n * This structure will be used to traverse through nested views to remove listeners\n * and call onDestroy callbacks.\n *\n * @param currentView The view where LView or LContainer should be added\n * @param hostIndex Index of the view's host node in data[]\n * @param state The LView or LContainer to add to the view tree\n * @returns The state passed in\n */\nfunction addToViewTree(currentView, hostIndex, state) {\n    // TODO(kara): move next and tail properties off of LView\n    if (currentView.tail) {\n        currentView.tail.next = state;\n    }\n    else if (firstTemplatePass) {\n        currentView.tView.childIndex = hostIndex;\n    }\n    currentView.tail = state;\n    return state;\n}\n///////////////////////////////\n//// Change detection\n///////////////////////////////\n/** If node is an OnPush component, marks its LView dirty. */\nfunction markDirtyIfOnPush(node) {\n    // Because data flows down the component tree, ancestors do not need to be marked dirty\n    if (node.data && !(node.data.flags & 2 /* CheckAlways */)) {\n        node.data.flags |= 4 /* Dirty */;\n    }\n}\n/**\n * Wraps an event listener so its host view and its ancestor views will be marked dirty\n * whenever the event fires. Necessary to support OnPush components.\n */\nfunction wrapListenerWithDirtyLogic(view, listenerFn) {\n    return function (e) {\n        markViewDirty(view);\n        return listenerFn(e);\n    };\n}\n/**\n * Wraps an event listener so its host view and its ancestor views will be marked dirty\n * whenever the event fires. Also wraps with preventDefault behavior.\n */\nfunction wrapListenerWithDirtyAndDefault(view, listenerFn) {\n    return function wrapListenerIn_markViewDirty(e) {\n        markViewDirty(view);\n        if (listenerFn(e) === false) {\n            e.preventDefault();\n            // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n            e.returnValue = false;\n        }\n    };\n}\n/** Marks current view and all ancestors dirty */\nfunction markViewDirty(view) {\n    var currentView = view;\n    while (currentView.parent != null) {\n        currentView.flags |= 4 /* Dirty */;\n        currentView = currentView.parent;\n    }\n    currentView.flags |= 4 /* Dirty */;\n    ngDevMode && assertDefined(currentView.context, 'rootContext');\n    scheduleTick(currentView.context);\n}\n/**\n * Used to schedule change detection on the whole application.\n *\n * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n * It is usually called indirectly by calling `markDirty` when the view needs to be\n * re-rendered.\n *\n * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n * `scheduleTick` requests. The scheduling function can be overridden in\n * `renderComponent`'s `scheduler` option.\n */\nfunction scheduleTick(rootContext) {\n    if (rootContext.clean == _CLEAN_PROMISE) {\n        var res_1;\n        rootContext.clean = new Promise(function (r) { return res_1 = r; });\n        rootContext.scheduler(function () {\n            tickRootContext(rootContext);\n            res_1(null);\n            rootContext.clean = _CLEAN_PROMISE;\n        });\n    }\n}\n/**\n * Used to perform change detection on the whole application.\n *\n * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n * executes lifecycle hooks and conditionally checks components based on their\n * `ChangeDetectionStrategy` and dirtiness.\n *\n * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n * be changed when calling `renderComponent` and providing the `scheduler` option.\n */\n\nfunction tickRootContext(rootContext) {\n    for (var i = 0; i < rootContext.components.length; i++) {\n        var rootComponent = rootContext.components[i];\n        var hostNode = _getComponentHostLElementNode(rootComponent);\n        ngDevMode && assertDefined(hostNode.data, 'Component host node should be attached to an LView');\n        renderComponentOrTemplate(hostNode, getRootView(rootComponent), rootComponent);\n    }\n}\n/**\n * Retrieve the root view from any component by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param component any component\n */\nfunction getRootView(component) {\n    ngDevMode && assertDefined(component, 'component');\n    var lElementNode = _getComponentHostLElementNode(component);\n    var lView = lElementNode.view;\n    while (lView.parent) {\n        lView = lView.parent;\n    }\n    return lView;\n}\n/**\n * Synchronously perform change detection on a component (and possibly its sub-components).\n *\n * This function triggers change detection in a synchronous way on a component. There should\n * be very little reason to call this function directly since a preferred way to do change\n * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n * at some future point in time. This is because a single user action often results in many\n * components being invalidated and calling change detection on each component synchronously\n * would be inefficient. It is better to wait until all components are marked as dirty and\n * then perform single change detection across all of the components\n *\n * @param component The component which the change detection should be performed on.\n */\nfunction detectChanges(component) {\n    var hostNode = _getComponentHostLElementNode(component);\n    ngDevMode && assertDefined(hostNode.data, 'Component host node should be attached to an LView');\n    detectChangesInternal(hostNode.data, hostNode, component);\n}\n/**\n * Checks the change detector and its children, and throws if any changes are detected.\n *\n * This is used in development mode to verify that running change detection doesn't\n * introduce other changes.\n */\nfunction checkNoChanges(component) {\n    checkNoChangesMode = true;\n    try {\n        detectChanges(component);\n    }\n    finally {\n        checkNoChangesMode = false;\n    }\n}\n/** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\nfunction detectChangesInternal(hostView, hostNode, component) {\n    var oldView = enterView(hostView, hostNode);\n    var template = hostView.tView.template;\n    try {\n        template(getRenderFlags(hostView), component);\n        refreshView();\n    }\n    finally {\n        leaveView(oldView);\n    }\n}\n/**\n * Mark the component as dirty (needing change detection).\n *\n * Marking a component dirty will schedule a change detection on this\n * component at some point in the future. Marking an already dirty\n * component as dirty is a noop. Only one outstanding change detection\n * can be scheduled per component tree. (Two components bootstrapped with\n * separate `renderComponent` will have separate schedulers)\n *\n * When the root component is bootstrapped with `renderComponent`, a scheduler\n * can be provided.\n *\n * @param component Component to mark as dirty.\n */\nfunction markDirty(component) {\n    ngDevMode && assertDefined(component, 'component');\n    var lElementNode = _getComponentHostLElementNode(component);\n    markViewDirty(lElementNode.view);\n}\n/** A special value which designates that a value has not changed. */\nvar NO_CHANGE = {};\n/**\n *  Initializes the binding start index. Will get inlined.\n *\n *  This function must be called before any binding related function is called\n *  (ie `bind()`, `interpolationX()`, `pureFunctionX()`)\n */\nfunction initBindings() {\n    ngDevMode && assertEqual(currentView.bindingIndex, -1, 'Binding index should not yet be set ' + currentView.bindingIndex);\n    if (currentView.tView.bindingStartIndex === -1) {\n        currentView.tView.bindingStartIndex = data.length;\n    }\n    currentView.bindingIndex = currentView.tView.bindingStartIndex;\n}\n/**\n * Creates a single value binding.\n *\n * @param value Value to diff\n */\nfunction bind(value) {\n    return bindingUpdated(value) ? value : NO_CHANGE;\n}\n/**\n * Reserves slots for pure functions (`pureFunctionX` instructions)\n *\n * Bindings for pure functions are stored after the LNodes in the data array but before the binding.\n *\n *  ----------------------------------------------------------------------------\n *  |  LNodes ... | pure function bindings | regular bindings / interpolations |\n *  ----------------------------------------------------------------------------\n *                                         ^\n *                                         TView.bindingStartIndex\n *\n * Pure function instructions are given an offset from TView.bindingStartIndex.\n * Subtracting the offset from TView.bindingStartIndex gives the first index where the bindings\n * are stored.\n *\n * NOTE: reserveSlots instructions are only ever allowed at the very end of the creation block\n */\nfunction reserveSlots(numSlots) {\n    // Init the slots with a unique `NO_CHANGE` value so that the first change is always detected\n    // whether it happens or not during the first change detection pass - pure functions checks\n    // might be skipped when short-circuited.\n    data.length += numSlots;\n    data.fill(NO_CHANGE, -numSlots);\n    // We need to initialize the binding in case a `pureFunctionX` kind of binding instruction is\n    // called first in the update section.\n    initBindings();\n}\n/**\n * Sets up the binding index before executing any `pureFunctionX` instructions.\n *\n * The index must be restored after the pure function is executed\n *\n * {@link reserveSlots}\n */\nfunction moveBindingIndexToReservedSlot(offset) {\n    var currentSlot = currentView.bindingIndex;\n    currentView.bindingIndex = currentView.tView.bindingStartIndex - offset;\n    return currentSlot;\n}\n/**\n * Restores the binding index to the given value.\n *\n * This function is typically used to restore the index after a `pureFunctionX` has\n * been executed.\n */\nfunction restoreBindingIndex(index) {\n    currentView.bindingIndex = index;\n}\n/**\n * Create interpolation bindings with a variable number of expressions.\n *\n * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n * Those are faster because there is no need to create an array of expressions and iterate over it.\n *\n * `values`:\n * - has static text at even indexes,\n * - has evaluated expressions at odd indexes.\n *\n * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction interpolationV(values) {\n    ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n    ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n    var different = false;\n    for (var i = 1; i < values.length; i += 2) {\n        // Check if bindings (odd indexes) have changed\n        bindingUpdated(values[i]) && (different = true);\n    }\n    if (!different) {\n        return NO_CHANGE;\n    }\n    // Build the updated content\n    var content = values[0];\n    for (var i = 1; i < values.length; i += 2) {\n        content += stringify$1(values[i]) + values[i + 1];\n    }\n    return content;\n}\n/**\n * Creates an interpolation binding with 1 expression.\n *\n * @param prefix static value used for concatenation only.\n * @param v0 value checked for change.\n * @param suffix static value used for concatenation only.\n */\nfunction interpolation1(prefix, v0, suffix) {\n    var different = bindingUpdated(v0);\n    return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n}\n/** Creates an interpolation binding with 2 expressions. */\nfunction interpolation2(prefix, v0, i0, v1, suffix) {\n    var different = bindingUpdated2(v0, v1);\n    return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n}\n/** Creates an interpolation bindings with 3 expressions. */\nfunction interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n    var different = bindingUpdated2(v0, v1);\n    different = bindingUpdated(v2) || different;\n    return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n        NO_CHANGE;\n}\n/** Create an interpolation binding with 4 expressions. */\nfunction interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n            suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 5 expressions. */\nfunction interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated(v4) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 6 expressions. */\nfunction interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated2(v4, v5) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 7 expressions. */\nfunction interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated2(v4, v5) || different;\n    different = bindingUpdated(v6) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 8 expressions. */\nfunction interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated4(v4, v5, v6, v7) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n        NO_CHANGE;\n}\n/** Store a value in the `data` at a given `index`. */\nfunction store(index, value) {\n    // We don't store any static data for local variables, so the first time\n    // we see the template, we should store as null to avoid a sparse array\n    if (index >= tData.length) {\n        tData[index] = null;\n    }\n    data[index] = value;\n}\n/** Retrieves a value from the `data`. */\nfunction load(index) {\n    ngDevMode && assertDataInRange(index);\n    return data[index];\n}\n/** Retrieves a value from the `directives` array. */\nfunction loadDirective(index) {\n    ngDevMode && assertDefined(directives, 'Directives array should be defined if reading a dir.');\n    ngDevMode && assertDataInRange(index, directives);\n    return directives[index];\n}\n/** Gets the current binding value and increments the binding index. */\nfunction consumeBinding() {\n    ngDevMode && assertDataInRange(currentView.bindingIndex);\n    ngDevMode &&\n        assertNotEqual(data[currentView.bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n    return data[currentView.bindingIndex++];\n}\n/** Updates binding if changed, then returns whether it was updated. */\nfunction bindingUpdated(value) {\n    ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n    if (currentView.bindingIndex === -1)\n        initBindings();\n    if (currentView.bindingIndex >= data.length) {\n        data[currentView.bindingIndex++] = value;\n    }\n    else if (isDifferent(data[currentView.bindingIndex], value)) {\n        throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, data[currentView.bindingIndex], value);\n        data[currentView.bindingIndex++] = value;\n    }\n    else {\n        currentView.bindingIndex++;\n        return false;\n    }\n    return true;\n}\n/** Updates binding if changed, then returns the latest value. */\nfunction checkAndUpdateBinding(value) {\n    bindingUpdated(value);\n    return value;\n}\n/** Updates 2 bindings if changed, then returns whether either was updated. */\nfunction bindingUpdated2(exp1, exp2) {\n    var different = bindingUpdated(exp1);\n    return bindingUpdated(exp2) || different;\n}\n/** Updates 4 bindings if changed, then returns whether any was updated. */\nfunction bindingUpdated4(exp1, exp2, exp3, exp4) {\n    var different = bindingUpdated2(exp1, exp2);\n    return bindingUpdated2(exp3, exp4) || different;\n}\nfunction getTView() {\n    return currentView.tView;\n}\nfunction getDirectiveInstance(instanceOrArray) {\n    // Directives with content queries store an array in directives[directiveIndex]\n    // with the instance as the first index\n    return Array.isArray(instanceOrArray) ? instanceOrArray[0] : instanceOrArray;\n}\nfunction assertPreviousIsParent() {\n    assertEqual(isParent, true, 'previousOrParentNode should be a parent');\n}\nfunction assertHasParent() {\n    assertDefined(getParentLNode(previousOrParentNode), 'previousOrParentNode should have a parent');\n}\nfunction assertDataInRange(index, arr) {\n    if (arr == null)\n        arr = data;\n    assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n}\nfunction assertDataNext(index, arr) {\n    if (arr == null)\n        arr = data;\n    assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n}\n/**\n * On the first template pass, the reserved slots should be set `NO_CHANGE`.\n *\n * If not, they might not have been actually reserved.\n */\nfunction assertReservedSlotInitialized(slotOffset, numSlots) {\n    if (firstTemplatePass) {\n        var startIndex = currentView.tView.bindingStartIndex - slotOffset;\n        for (var i = 0; i < numSlots; i++) {\n            assertEqual(data[startIndex + i], NO_CHANGE, 'The reserved slots should be set to `NO_CHANGE` on first template pass');\n        }\n    }\n}\nfunction _getComponentHostLElementNode(component) {\n    ngDevMode && assertDefined(component, 'expecting component got null');\n    var lElementNode = component[NG_HOST_SYMBOL];\n    ngDevMode && assertDefined(component, 'object is not a component');\n    return lElementNode;\n}\nvar CLEAN_PROMISE = _CLEAN_PROMISE;\nvar ROOT_DIRECTIVE_INDICES = _ROOT_DIRECTIVE_INDICES;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO: A hack to not pull in the NullInjector from @angular/core.\n\n/**\n * Bootstraps a Component into an existing host element and returns an instance\n * of the component.\n *\n * Use this function to bootstrap a component into the DOM tree. Each invocation\n * of this function will create a separate tree of components, injectors and\n * change detection cycles and lifetimes. To dynamically insert a new component\n * into an existing tree such that it shares the same injection, change detection\n * and object lifetime, use {@link ViewContainer#createComponent}.\n *\n * @param componentType Component to bootstrap\n * @param options Optional parameters which control bootstrapping\n */\nfunction renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n    if (opts === void 0) { opts = {}; }\n    ngDevMode && assertComponentType(componentType);\n    var rendererFactory = opts.rendererFactory || domRendererFactory3;\n    var sanitizer = opts.sanitizer || null;\n    var componentDef = componentType.ngComponentDef;\n    if (componentDef.type != componentType)\n        componentDef.type = componentType;\n    var component;\n    // The first index of the first selector is the tag name.\n    var componentTag = componentDef.selectors[0][0];\n    var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n    var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window));\n    var rootView = createLView(rendererFactory.createRenderer(hostNode, componentDef.rendererType), createTView(-1, null, null, null), rootContext, componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n    rootView.injector = opts.injector || null;\n    var oldView = enterView(rootView, null);\n    var elementNode;\n    try {\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        // Create element node at index 0 in data array\n        elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n        // Create directive instance with factory() and store at index 0 in directives array\n        rootContext.components.push(component = baseDirectiveCreate(0, componentDef.factory(), componentDef));\n        initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n        opts.hostFeatures && opts.hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        executeInitAndContentHooks();\n        setHostBindings(ROOT_DIRECTIVE_INDICES);\n        detectChangesInternal(elementNode.data, elementNode, component);\n    }\n    finally {\n        leaveView(oldView);\n        if (rendererFactory.end)\n            rendererFactory.end();\n    }\n    return component;\n}\nfunction createRootContext(scheduler) {\n    return {\n        components: [],\n        scheduler: scheduler,\n        clean: CLEAN_PROMISE,\n    };\n}\n/**\n * Used to enable lifecycle hooks on the root component.\n *\n * Include this feature when calling `renderComponent` if the root component\n * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n * be called properly.\n *\n * Example:\n *\n * ```\n * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n * ```\n */\n\n/**\n * Retrieve the root context for any component by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param component any component\n */\nfunction getRootContext(component) {\n    var rootContext = getRootView(component).context;\n    ngDevMode && assertDefined(rootContext, 'rootContext');\n    return rootContext;\n}\n/**\n * Retrieve the host element of the component.\n *\n * Use this function to retrieve the host element of the component. The host\n * element is the element which the component is associated with.\n *\n * @param component Component for which the host element should be retrieved.\n */\n\n/**\n * Retrieves the rendered text for a given component.\n *\n * This function retrieves the host element of a component and\n * and then returns the `textContent` for that element. This implies\n * that the text returned will include re-projected content of\n * the component as well.\n *\n * @param component The component to return the content text for.\n */\n\n/**\n * Wait on component until it is rendered.\n *\n * This function returns a `Promise` which is resolved when the component's\n * change detection is executed. This is determined by finding the scheduler\n * associated with the `component`'s render tree and waiting until the scheduler\n * flushes. If nothing is scheduled, the function returns a resolved promise.\n *\n * Example:\n * ```\n * await whenRendered(myComponent);\n * ```\n *\n * @param component Component to wait upon\n * @returns Promise which resolves when the component is rendered.\n */\nfunction whenRendered(component) {\n    return getRootContext(component).clean;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction devModeEqual(a, b) {\n    var isListLikeIterableA = isListLikeIterable(a);\n    var isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {@link Pipe} transformation has changed even though the\n * reference has not changed.\n *\n * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n * is stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n *\n */\nvar WrappedValue = /** @class */ (function () {\n    function WrappedValue(value) {\n        this.wrapped = value;\n    }\n    /** Creates a wrapped value. */\n    WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n    /**\n     * Returns the underlying value of a wrapped value.\n     * Returns the given `value` when it is not wrapped.\n     **/\n    WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n    /** Returns true if `value` is a wrapped value. */\n    WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n    return WrappedValue;\n}());\n/**\n * Represents a basic change from a previous to a new value.\n *\n */\nvar SimpleChange = /** @class */ (function () {\n    function SimpleChange(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     */\n    SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n    return SimpleChange;\n}());\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\nfunction areIterablesEqual(a, b, comparator) {\n    var iterator1 = a[getSymbolIterator()]();\n    var iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        var item1 = iterator1.next();\n        var item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var iterator = obj[getSymbolIterator()]();\n        var item = void 0;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultIterableDifferFactory = /** @class */ (function () {\n    function DefaultIterableDifferFactory() {\n    }\n    DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n    DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    };\n    return DefaultIterableDifferFactory;\n}());\nvar trackByIdentity = function (index, item) { return item; };\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nvar DefaultIterableDiffer = /** @class */ (function () {\n    function DefaultIterableDiffer(trackByFn) {\n        this.length = 0;\n        // Keeps track of the used records at any point in time (during & across `_check()` calls)\n        this._linkedRecords = null;\n        // Keeps track of the removed records at any point in time during `_check()` calls.\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        // Keeps track of records where custom track by is the same, but item identity has changed\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n        var record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n        var nextIt = this._itHead;\n        var nextRemove = this._removalsHead;\n        var addRemoveOffset = 0;\n        var moveOffsets = null;\n        while (nextIt || nextRemove) {\n            // Figure out which is the next record to process\n            // Order: remove, add, move\n            var record = !nextRemove ||\n                nextIt &&\n                    nextIt.currentIndex <\n                        getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                nextIt :\n                nextRemove;\n            var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            var currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = nextIt._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    var localCurrentIndex = currentIndex - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (var i = 0; i < localMovePreviousIndex; i++) {\n                            var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            var index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        var previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n        var record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n        var record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n        var record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n        var record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n        var record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.diff = function (collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    DefaultIterableDiffer.prototype.onDestroy = function () { };\n    DefaultIterableDiffer.prototype.check = function (collection) {\n        var _this = this;\n        this._reset();\n        var record = this._itHead;\n        var mayBeDirty = false;\n        var index;\n        var item;\n        var itemTrackBy;\n        if (Array.isArray(collection)) {\n            this.length = collection.length;\n            for (var index_1 = 0; index_1 < this.length; index_1++) {\n                item = collection[index_1];\n                itemTrackBy = this._trackByFn(index_1, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index_1);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, function (item) {\n                itemTrackBy = _this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = _this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        _this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            this.length = index;\n        }\n        this._truncate(record);\n        this.collection = collection;\n        return this.isDirty;\n    };\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n        /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n         * changes.\n         */\n        get: function () {\n            return this._additionsHead !== null || this._movesHead !== null ||\n                this._removalsHead !== null || this._identityChangesHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._reset = function () {\n        if (this.isDirty) {\n            var record = void 0;\n            var nextRecord = void 0;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // TODO(vicb): when assert gets supported\n            // assert(!this.isDirty);\n        }\n    };\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n        // The previous record after which we will append the current one.\n        var previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    };\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n        var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, record._prev, index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    };\n    /**\n     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {@link IterableChangeRecord_}.\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._truncate = function (record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            var nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        var prev = record._prevRemoved;\n        var next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // TODO(vicb):\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n        // TODO(vicb):\n        // assert(record != prevRecord);\n        // assert(record._next === null);\n        // assert(record._prev === null);\n        var next = prevRecord === null ? this._itHead : prevRecord._next;\n        // TODO(vicb):\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._remove = function (record) {\n        return this._addToRemovals(this._unlink(record));\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._unlink = function (record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        var prev = record._prev;\n        var next = record._next;\n        // TODO(vicb):\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n        // TODO(vicb):\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // TODO(vicb):\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    };\n    DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // TODO(vicb):\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    };\n    return DefaultIterableDiffer;\n}());\nvar IterableChangeRecord_ = /** @class */ (function () {\n    function IterableChangeRecord_(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /** @internal */\n        this._nextPrevious = null;\n        /** @internal */\n        this._prev = null;\n        /** @internal */\n        this._next = null;\n        /** @internal */\n        this._prevDup = null;\n        /** @internal */\n        this._nextDup = null;\n        /** @internal */\n        this._prevRemoved = null;\n        /** @internal */\n        this._nextRemoved = null;\n        /** @internal */\n        this._nextAdded = null;\n        /** @internal */\n        this._nextMoved = null;\n        /** @internal */\n        this._nextIdentityChange = null;\n    }\n    return IterableChangeRecord_;\n}());\n// A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\nvar _DuplicateItemRecordList = /** @class */ (function () {\n    function _DuplicateItemRecordList() {\n        /** @internal */\n        this._head = null;\n        /** @internal */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     */\n    _DuplicateItemRecordList.prototype.add = function (record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            // TODO(vicb):\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    };\n    // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n    // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n    _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n        var record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     */\n    _DuplicateItemRecordList.prototype.remove = function (record) {\n        // TODO(vicb):\n        // assert(() {\n        //  // verify that the record being removed is in the list.\n        //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n        //    if (identical(cursor, record)) return true;\n        //  }\n        //  return false;\n        //});\n        var prev = record._prevDup;\n        var next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    };\n    return _DuplicateItemRecordList;\n}());\nvar _DuplicateMap = /** @class */ (function () {\n    function _DuplicateMap() {\n        this.map = new Map();\n    }\n    _DuplicateMap.prototype.put = function (record) {\n        var key = record.trackById;\n        var duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    };\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     */\n    _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n        var key = trackById;\n        var recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    };\n    /**\n     * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     */\n    _DuplicateMap.prototype.remove = function (record) {\n        var key = record.trackById;\n        var recordList = this.map.get(key);\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    };\n    Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n        get: function () { return this.map.size === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n    return _DuplicateMap;\n}());\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    var previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    var moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultKeyValueDifferFactory = /** @class */ (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n    DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n    return DefaultKeyValueDifferFactory;\n}());\nvar DefaultKeyValueDiffer = /** @class */ (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        // _appendAfter is used in the check loop\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        get: function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n        var record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n        var record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n        var record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n        var record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n        var record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.diff = function (map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n        }\n        return this.check(map) ? this : null;\n    };\n    DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     */\n    DefaultKeyValueDiffer.prototype.check = function (map) {\n        var _this = this;\n        this._reset();\n        var insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, function (value, key) {\n            if (insertBefore && insertBefore.key === key) {\n                _this._maybeAddToChanges(insertBefore, value);\n                _this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                var record = _this._getOrCreateRecordForKey(key, value);\n                insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    };\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     */\n    DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n        if (before) {\n            var prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    };\n    DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n        if (this._records.has(key)) {\n            var record_1 = this._records.get(key);\n            this._maybeAddToChanges(record_1, value);\n            var prev = record_1._prev;\n            var next = record_1._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record_1._next = null;\n            record_1._prev = null;\n            return record_1;\n        }\n        var record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    };\n    /** @internal */\n    DefaultKeyValueDiffer.prototype._reset = function () {\n        if (this.isDirty) {\n            var record = void 0;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    };\n    // Add the record or a given key to the list of changes only when the value has actually changed\n    DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            this._additionsTail._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            this._changesTail._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    /** @internal */\n    DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\nvar KeyValueChangeRecord_ = /** @class */ (function () {\n    function KeyValueChangeRecord_(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /** @internal */\n        this._nextPrevious = null;\n        /** @internal */\n        this._next = null;\n        /** @internal */\n        this._prev = null;\n        /** @internal */\n        this._nextAdded = null;\n        /** @internal */\n        this._nextRemoved = null;\n        /** @internal */\n        this._nextChanged = null;\n    }\n    return KeyValueChangeRecord_;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n *\n */\nvar IterableDiffers = /** @class */ (function () {\n    function IterableDiffers(factories) {\n        this.factories = factories;\n    }\n    IterableDiffers.create = function (factories, parent) {\n        if (parent != null) {\n            var copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new IterableDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {@link IterableDiffers} instance with the provided factories and return a new\n     * {@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    IterableDiffers.extend = function (factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    IterableDiffers.prototype.find = function (iterable) {\n        var factory = this.factories.find(function (f) { return f.supports(iterable); });\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n        }\n    };\n    IterableDiffers.ngInjectableDef = defineInjectable({\n        providedIn: 'root',\n        factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n    });\n    return IterableDiffers;\n}());\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nvar ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nvar ERROR_LOGGER = 'ngErrorLogger';\n\nfunction getDebugContext(error) {\n    return error[ERROR_DEBUG_CONTEXT];\n}\nfunction getOriginalError(error) {\n    return error[ERROR_ORIGINAL_ERROR];\n}\nfunction getErrorLogger(error) {\n    return error[ERROR_LOGGER] || defaultErrorLogger;\n}\nfunction defaultErrorLogger(console) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    console.error.apply(console, __spread(values));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n *\n * @description\n * Provides a hook for centralized exception handling.\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * @NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n *\n */\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        /**\n         * @internal\n         */\n        this._console = console;\n    }\n    ErrorHandler.prototype.handleError = function (error) {\n        var originalError = this._findOriginalError(error);\n        var context = this._findContext(error);\n        // Note: Browser consoles show the place from where console.error was called.\n        // We can use this to give users additional information about the error.\n        var errorLogger = getErrorLogger(error);\n        errorLogger(this._console, \"ERROR\", error);\n        if (originalError) {\n            errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    };\n    /** @internal */\n    ErrorHandler.prototype._findContext = function (error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    };\n    /** @internal */\n    ErrorHandler.prototype._findOriginalError = function (error) {\n        var e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    };\n    return ErrorHandler;\n}());\nfunction wrappedError(message, originalError) {\n    var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n    var error = Error(msg);\n    error[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction findFirstClosedCycle(keys) {\n    var res = [];\n    for (var i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        var reversed = findFirstClosedCycle(keys.slice().reverse());\n        var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    var keys = [key];\n    var errMsg = constructResolvingMessage(keys);\n    var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    error[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n * {@link Injector} does not have a {@link Provider} for the given key.\n *\n * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        var first = stringify(keys[0].token);\n        return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        var first = stringify(keys[0].token);\n        return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n    }, originalException);\n}\n/**\n * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n * creation.\n *\n * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n */\nfunction invalidProviderError(provider) {\n    return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n *\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    var signature = [];\n    for (var i = 0, ii = params.length; i < ii; i++) {\n        var parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n *\n */\nfunction outOfBoundsError(index) {\n    return Error(\"Index \" + index + \" is out-of-bounds.\");\n}\n// TODO: add a working example after alpha38 is released\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nvar ReflectiveKey = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n        this.displayName = stringify(this.token);\n    }\n    /**\n     * Retrieves a `Key` for a token.\n     */\n    ReflectiveKey.get = function (token) {\n        return _globalKeyRegistry.get(resolveForwardRef(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @returns the number of keys registered in the system.\n         */\n        get: function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\nvar KeyRegistry = /** @class */ (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    KeyRegistry.prototype.get = function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return this._allKeys.get(token);\n        }\n        var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        get: function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nvar _globalKeyRegistry = new KeyRegistry();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar Reflector = /** @class */ (function () {\n    function Reflector(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n    Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n    Reflector.prototype.parameters = function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    Reflector.prototype.annotations = function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    Reflector.prototype.propMetadata = function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n    Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n    Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n    Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n    Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n    Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    };\n    Reflector.prototype.resolveEnum = function (identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    };\n    return Reflector;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The {@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nvar reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar ReflectiveDependency = /** @class */ (function () {\n    function ReflectiveDependency(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    ReflectiveDependency.fromKey = function (key) {\n        return new ReflectiveDependency(key, false, null);\n    };\n    return ReflectiveDependency;\n}());\nvar _EMPTY_LIST = [];\nvar ResolvedReflectiveProvider_ = /** @class */ (function () {\n    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n        this.resolvedFactory = this.resolvedFactories[0];\n    }\n    return ResolvedReflectiveProvider_;\n}());\n/**\n * An internal resolved representation of a factory function created by resolving {@link\n * Provider}.\n * @experimental\n */\nvar ResolvedReflectiveFactory = /** @class */ (function () {\n    function ResolvedReflectiveFactory(\n    /**\n     * Factory function which can return an instance of an object represented by a key.\n     */\n    factory, \n    /**\n     * Arguments (dependencies) to the `factory` function.\n     */\n    dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n    return ResolvedReflectiveFactory;\n}());\n/**\n * Resolve a single provider.\n */\nfunction resolveReflectiveFactory(provider) {\n    var factoryFn;\n    var resolvedDeps;\n    if (provider.useClass) {\n        var useClass = resolveForwardRef(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = function (aliasInstance) { return aliasInstance; };\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = function () { return provider.useValue; };\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the {@link Provider} into {@link ResolvedProvider}.\n *\n * {@link Injector} internally only uses {@link ResolvedProvider}, {@link Provider} contains\n * convenience provider syntax.\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n */\nfunction resolveReflectiveProviders(providers) {\n    var normalized = _normalizeProviders(providers, []);\n    var resolved = normalized.map(resolveReflectiveProvider);\n    var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where\n * each key is contained exactly once and multi providers\n * have been merged.\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (var i = 0; i < providers.length; i++) {\n        var provider = providers[i];\n        var existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            var resolvedProvider = void 0;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(function (b) {\n        if (b instanceof Type) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && b.provide !== undefined) {\n            res.push(b);\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        var params_1 = dependencies.map(function (t) { return [t]; });\n        return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n    }\n}\nfunction _dependenciesFor(typeOrFunc) {\n    var params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(function (p) { return p == null; })) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n}\nfunction _extractToken(typeOrFunc, metadata, params) {\n    var token = null;\n    var optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    var visibility = null;\n    for (var i = 0; i < metadata.length; ++i) {\n        var paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Threshold for the dynamic version\nvar UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * @Injectable()\n * class Engine {\n * }\n *\n * @Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n */\nvar ReflectiveInjector = /** @class */ (function () {\n    function ReflectiveInjector() {\n    }\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n     */\n    ReflectiveInjector.resolve = function (providers) {\n        return resolveReflectiveProviders(providers);\n    };\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {@link ReflectiveInjector#resolve resolve} and\n     * {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n     */\n    ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n        var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    };\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @experimental\n     */\n    ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    };\n    return ReflectiveInjector;\n}());\nvar ReflectiveInjector_ = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveInjector_(_providers, _parent) {\n        /** @internal */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this.parent = _parent || null;\n        var len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (var i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    };\n    ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n        var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    };\n    ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n        var inj = new ReflectiveInjector_(providers);\n        inj.parent = this;\n        return inj;\n    };\n    ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    };\n    ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n        return this._instantiateProvider(provider);\n    };\n    ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._new = function (provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    };\n    ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n    ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n        if (provider.multiProvider) {\n            var res = new Array(provider.resolvedFactories.length);\n            for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    };\n    ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n        var _this = this;\n        var factory = ResolvedReflectiveFactory$$1.factory;\n        var deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n        }\n        catch (e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        var obj;\n        try {\n            obj = factory.apply(void 0, __spread(deps));\n        }\n        catch (e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    };\n    ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    };\n    ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    };\n    ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n        for (var i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n        var obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n        var inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this.parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            var inj_ = inj;\n            var obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_.parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n        get: function () {\n            var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                .join(', ');\n            return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n    ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n    return ReflectiveInjector_;\n}());\nfunction _mapProviders(injector, fn) {\n    var res = new Array(injector._providers.length);\n    for (var i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal token whose presence in an injector indicates that the injector should treat itself\n * as a root scoped injector when processing requests for unknown tokens which may indicate\n * they are provided in the root scope.\n */\nvar APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Marker which indicates that a value has not yet been created from the factory function.\n */\nvar NOT_YET = {};\n/**\n * Marker which indicates that the factory function for a token is in the process of being called.\n *\n * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n * injection of a dependency has recursively attempted to inject the original token, and there is\n * a circular dependency among the providers.\n */\nvar CIRCULAR$2 = {};\nvar EMPTY_ARRAY$2 = [];\n/**\n * A lazily initialized NullInjector.\n */\nvar NULL_INJECTOR$2 = undefined;\nfunction getNullInjector() {\n    if (NULL_INJECTOR$2 === undefined) {\n        NULL_INJECTOR$2 = new NullInjector();\n    }\n    return NULL_INJECTOR$2;\n}\n/**\n * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n *\n * @experimental\n */\nfunction createInjector(defType, parent, additionalProviders) {\n    if (parent === void 0) { parent = null; }\n    if (additionalProviders === void 0) { additionalProviders = null; }\n    parent = parent || getNullInjector();\n    return new R3Injector(defType, additionalProviders, parent);\n}\nvar R3Injector = /** @class */ (function () {\n    function R3Injector(def, additionalProviders, parent) {\n        var _this = this;\n        this.parent = parent;\n        /**\n         * Map of tokens to records which contain the instances of those tokens.\n         */\n        this.records = new Map();\n        /**\n         * The transitive set of `InjectorType`s which define this injector.\n         */\n        this.injectorDefTypes = new Set();\n        /**\n         * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n         */\n        this.onDestroy = new Set();\n        /**\n         * Flag indicating that this injector was previously destroyed.\n         */\n        this.destroyed = false;\n        // Start off by creating Records for every provider declared in every InjectorType\n        // included transitively in `def`.\n        deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n        additionalProviders &&\n            deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n        // Make sure the INJECTOR token provides this injector.\n        this.records.set(INJECTOR, makeRecord(undefined, this));\n        // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n        // any injectable scoped to APP_ROOT_SCOPE.\n        this.isRootInjector = this.records.has(APP_ROOT);\n        // Eagerly instantiate the InjectorType classes themselves.\n        this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n    }\n    /**\n     * Destroy the injector and release references to every instance or provider associated with it.\n     *\n     * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n     * hook was found.\n     */\n    R3Injector.prototype.destroy = function () {\n        this.assertNotDestroyed();\n        // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n        this.destroyed = true;\n        try {\n            // Call all the lifecycle hooks.\n            this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n        }\n        finally {\n            // Release all references.\n            this.records.clear();\n            this.onDestroy.clear();\n            this.injectorDefTypes.clear();\n        }\n    };\n    R3Injector.prototype.get = function (token, notFoundValue, flags) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        if (flags === void 0) { flags = 0 /* Default */; }\n        this.assertNotDestroyed();\n        // Set the injection context.\n        var previousInjector = setCurrentInjector(this);\n        try {\n            // Check for the SkipSelf flag.\n            if (!(flags & 4 /* SkipSelf */)) {\n                // SkipSelf isn't set, check if the record belongs to this injector.\n                var record = this.records.get(token);\n                if (record === undefined) {\n                    // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                    // with a scope matching this injector.\n                    var def = couldBeInjectableType(token) &&\n                        token.ngInjectableDef ||\n                        undefined;\n                    if (def !== undefined && this.injectableDefInScope(def)) {\n                        // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                        // all along.\n                        record = injectableDefRecord(token);\n                        this.records.set(token, record);\n                    }\n                }\n                // If a record was found, get the instance for it and return it.\n                if (record !== undefined) {\n                    return this.hydrate(token, record);\n                }\n            }\n            // Select the next injector based on the Self flag - if self is set, the next injector is\n            // the NullInjector, otherwise it's the parent.\n            var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n            return this.parent.get(token, notFoundValue);\n        }\n        finally {\n            // Lastly, clean up the state by restoring the previous injector.\n            setCurrentInjector(previousInjector);\n        }\n    };\n    R3Injector.prototype.assertNotDestroyed = function () {\n        if (this.destroyed) {\n            throw new Error('Injector has already been destroyed.');\n        }\n    };\n    /**\n     * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n     * to this injector.\n     */\n    R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n        var _this = this;\n        defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n        // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n        // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n        // read, so care is taken to only do the read once.\n        // First attempt to read the ngInjectorDef.\n        var def = defOrWrappedDef.ngInjectorDef;\n        // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n        var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n        // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n        // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n        // is the `ngModule`.\n        var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n        // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n        // extra providers.\n        var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n            EMPTY_ARRAY$2;\n        // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n        // `InjectorDef` is on its `ngModule`.\n        if (ngModule !== undefined) {\n            def = ngModule.ngInjectorDef;\n        }\n        // If no definition was found, throw.\n        if (def == null) {\n            throw new Error(\"Type \" + stringify(defType) + \" is missing an ngInjectorDef definition.\");\n        }\n        // Check for circular dependencies.\n        if (parents.has(defType)) {\n            throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n        }\n        // Track the InjectorType and add a provider for it.\n        this.injectorDefTypes.add(defType);\n        this.records.set(defType, makeRecord(def.factory));\n        // Add providers in the same way that @NgModule resolution did:\n        // First, include providers from any imports.\n        if (def.imports != null) {\n            // Before processing defType's imports, add it to the set of parents. This way, if it ends\n            // up deeply importing itself, this can be detected.\n            parents.add(defType);\n            try {\n                deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n            }\n            finally {\n                // Remove it from the parents set when finished.\n                parents.delete(defType);\n            }\n        }\n        // Next, include providers listed on the definition itself.\n        if (def.providers != null) {\n            deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n        }\n        // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n        deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n    };\n    /**\n     * Process a `SingleProvider` and add it.\n     */\n    R3Injector.prototype.processProvider = function (provider) {\n        // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n        // property.\n        provider = resolveForwardRef(provider);\n        var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n        // Construct a `Record` for the provider.\n        var record = providerToRecord(provider);\n        if (!isTypeProvider(provider) && provider.multi === true) {\n            // If the provider indicates that it's a multi-provider, process it specially.\n            // First check whether it's been defined already.\n            var multiRecord_1 = this.records.get(token);\n            if (multiRecord_1) {\n                // It has. Throw a nice error if\n                if (multiRecord_1.multi === undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                }\n            }\n            else {\n                multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                this.records.set(token, multiRecord_1);\n            }\n            token = provider;\n            multiRecord_1.multi.push(provider);\n        }\n        else {\n            var existing = this.records.get(token);\n            if (existing && existing.multi !== undefined) {\n                throw new Error(\"Mixed multi-provider for \" + stringify(token));\n            }\n        }\n        this.records.set(token, record);\n    };\n    R3Injector.prototype.hydrate = function (token, record) {\n        if (record.value === CIRCULAR$2) {\n            throw new Error(\"Circular dep for \" + stringify(token));\n        }\n        else if (record.value === NOT_YET) {\n            record.value = CIRCULAR$2;\n            record.value = record.factory();\n        }\n        if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n            this.onDestroy.add(record.value);\n        }\n        return record.value;\n    };\n    R3Injector.prototype.injectableDefInScope = function (def) {\n        if (!def.providedIn) {\n            return false;\n        }\n        else if (typeof def.providedIn === 'string') {\n            return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n        }\n        else {\n            return this.injectorDefTypes.has(def.providedIn);\n        }\n    };\n    return R3Injector;\n}());\nfunction injectableDefRecord(token) {\n    var def = token.ngInjectableDef;\n    if (def === undefined) {\n        throw new Error(\"Type \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n    }\n    return makeRecord(def.factory);\n}\nfunction providerToRecord(provider) {\n    var token = resolveForwardRef(provider);\n    var value = NOT_YET;\n    var factory = undefined;\n    if (isTypeProvider(provider)) {\n        return injectableDefRecord(provider);\n    }\n    else {\n        token = resolveForwardRef(provider.provide);\n        if (isValueProvider(provider)) {\n            value = provider.useValue;\n        }\n        else if (isExistingProvider(provider)) {\n            factory = function () { return inject(provider.useExisting); };\n        }\n        else if (isFactoryProvider(provider)) {\n            factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n        }\n        else {\n            var classRef_1 = provider.useClass || token;\n            if (hasDeps(provider)) {\n                factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n            }\n            else {\n                return injectableDefRecord(classRef_1);\n            }\n        }\n    }\n    return makeRecord(factory, value);\n}\nfunction makeRecord(factory, value, multi) {\n    if (value === void 0) { value = NOT_YET; }\n    if (multi === void 0) { multi = false; }\n    return {\n        factory: factory,\n        value: value,\n        multi: multi ? [] : undefined,\n    };\n}\nfunction deepForEach(input, fn) {\n    input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n}\nfunction isValueProvider(value) {\n    return USE_VALUE in value;\n}\nfunction isExistingProvider(value) {\n    return !!value.useExisting;\n}\nfunction isFactoryProvider(value) {\n    return !!value.useFactory;\n}\nfunction isTypeProvider(value) {\n    return typeof value === 'function';\n}\nfunction hasDeps(value) {\n    return !!value.deps;\n}\nfunction hasOnDestroy(value) {\n    return typeof value === 'object' && value != null && value.ngOnDestroy &&\n        typeof value.ngOnDestroy === 'function';\n}\nfunction couldBeInjectableType(value) {\n    return (typeof value === 'function') ||\n        (typeof value === 'object' && value instanceof InjectionToken);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n *\n */\nvar KeyValueDiffers = /** @class */ (function () {\n    function KeyValueDiffers(factories) {\n        this.factories = factories;\n    }\n    KeyValueDiffers.create = function (factories, parent) {\n        if (parent) {\n            var copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n     * {@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    KeyValueDiffers.extend = function (factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    KeyValueDiffers.prototype.find = function (kv) {\n        var factory = this.factories.find(function (f) { return f.supports(kv); });\n        if (factory) {\n            return factory;\n        }\n        throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n    };\n    return KeyValueDiffers;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ChangeDetectorRef = /** @class */ (function () {\n    function ChangeDetectorRef() {\n    }\n    return ChangeDetectorRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nvar keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nvar iterableDiff = [new DefaultIterableDifferFactory()];\nvar defaultIterableDiffers = new IterableDiffers(iterableDiff);\nvar defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines template and style encapsulation options available for Component's {@link Component}.\n *\n * See {@link Component#encapsulation encapsulation}.\n *\n */\n\n(function (ViewEncapsulation) {\n    /**\n     * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n     * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n     * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n     * selectors.\n     *\n     * This is the default option.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n    /**\n     * Use the native encapsulation mechanism of the renderer.\n     *\n     * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n     * creating a ShadowRoot for Component's Host Element.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n    /**\n     * Don't provide any template or style encapsulation.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n})(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (isFirstCheck) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    return viewDebugError(msg, context);\n}\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\nfunction viewDebugError(msg, context) {\n    var err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\nfunction _addDebugContext(err, context) {\n    err[ERROR_DEBUG_CONTEXT] = context;\n    err[ERROR_LOGGER] = context.logError.bind(context);\n}\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\nfunction viewDestroyedError(action) {\n    return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Called before each cycle of a view's check to detect whether this is in the\n// initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n// lifecycle methods. Returns true if this check cycle should call lifecycle\n// methods.\nfunction shiftInitState(view, priorInitState, newInitState) {\n    // Only update the InitState if we are currently in the prior state.\n    // For example, only move into CallingInit if we are in BeforeInit. Only\n    // move into CallingContentInit if we are in CallingInit. Normally this will\n    // always be true because of how checkCycle is called in checkAndUpdateView.\n    // However, if checkAndUpdateView is called recursively or if an exception is\n    // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n    // from the beginning. This ensures the state is monotonically increasing,\n    // terminating in the AfterInit state, which ensures the Init methods are called\n    // at least once and only once.\n    var state = view.state;\n    var initState = state & 1792;\n    if (initState === priorInitState) {\n        view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n        view.initIndex = -1;\n        return true;\n    }\n    return initState === newInitState;\n}\n// Returns true if the lifecycle init method should be called for the node with\n// the given init index.\nfunction shouldCallLifecycleInitHook(view, initState, index) {\n    if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n        view.initIndex = index + 1;\n        return true;\n    }\n    return false;\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asTextData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asElementData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asProviderData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asPureExpressionData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asQueryList(view, index) {\n    return view.nodes[index];\n}\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nvar Services = {\n    setCurrentNode: undefined,\n    createRootView: undefined,\n    createEmbeddedView: undefined,\n    createComponentView: undefined,\n    createNgModuleRef: undefined,\n    overrideProvider: undefined,\n    overrideComponentView: undefined,\n    clearOverrides: undefined,\n    checkAndUpdateView: undefined,\n    checkNoChangesView: undefined,\n    destroyView: undefined,\n    resolveDep: undefined,\n    createDebugContext: undefined,\n    handleEvent: undefined,\n    updateDirectives: undefined,\n    updateRenderer: undefined,\n    dirtyParentQueries: undefined,\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOOP = function () { };\nvar _tokenKeyCache = new Map();\nfunction tokenKey(token) {\n    var key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\nfunction unwrapValue(view, nodeIdx, bindingIdx, value) {\n    if (WrappedValue.isWrapped(value)) {\n        value = WrappedValue.unwrap(value);\n        var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n        var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n        view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n    }\n    return value;\n}\nvar UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nvar EMPTY_RENDERER_TYPE_ID = '$$empty';\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createRendererType2(values) {\n    return {\n        id: UNDEFINED_RENDERER_TYPE_ID,\n        styles: values.styles,\n        encapsulation: values.encapsulation,\n        data: values.data\n    };\n}\nvar _renderCompCount = 0;\nfunction resolveRendererType2(type) {\n    if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n        // first time we see this RendererType2. Initialize it...\n        var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n            type.styles.length || Object.keys(type.data).length);\n        if (isFilled) {\n            type.id = \"c\" + _renderCompCount++;\n        }\n        else {\n            type.id = EMPTY_RENDERER_TYPE_ID;\n        }\n    }\n    if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n        type = null;\n    }\n    return type || null;\n}\nfunction checkBinding(view, def, bindingIdx, value) {\n    var oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\nfunction checkAndUpdateBinding$1(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        var bindingName = def.bindings[bindingIdx].name;\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\nfunction markParentViewsForCheck(view) {\n    var currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n    var currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        var nodeDef = view.def.nodes[nodeIndex];\n        var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        var parentView = view.parent;\n        return asElementData(parentView, view.parentNodeDef.nodeIndex);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n */\nfunction viewParentEl(view) {\n    var parentView = view.parent;\n    if (parentView) {\n        return view.parentNodeDef.parent;\n    }\n    else {\n        return null;\n    }\n}\nfunction renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.nodeIndex).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.nodeIndex).renderText;\n    }\n}\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\nfunction isComponentView(view) {\n    return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n}\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n}\nfunction filterQueryId(queryId) {\n    return 1 << (queryId % 32);\n}\nfunction splitMatchedQueriesDsl(matchedQueriesDsl) {\n    var matchedQueries = {};\n    var matchedQueryIds = 0;\n    var references = {};\n    if (matchedQueriesDsl) {\n        matchedQueriesDsl.forEach(function (_a) {\n            var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n            if (typeof queryId === 'number') {\n                matchedQueries[queryId] = valueType;\n                matchedQueryIds |= filterQueryId(queryId);\n            }\n            else {\n                references[queryId] = valueType;\n            }\n        });\n    }\n    return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n}\nfunction splitDepsDsl(deps, sourceName) {\n    return deps.map(function (value) {\n        var token;\n        var flags;\n        if (Array.isArray(value)) {\n            _a = __read(value, 2), flags = _a[0], token = _a[1];\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n            Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n        }\n        return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        var _a;\n    });\n}\nfunction getParentRenderElement(view, renderHost, def) {\n    var renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (renderParent.element.componentRendererType &&\n                renderParent.element.componentRendererType.encapsulation ===\n                    exports.ViewEncapsulation.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, def.renderParent.nodeIndex).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\nvar DEFINITION_CACHE = new WeakMap();\nfunction resolveDefinition(factory) {\n    var value = DEFINITION_CACHE.get(factory);\n    if (!value) {\n        value = factory(function () { return NOOP; });\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\nfunction rootRenderNodes(view) {\n    var renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    var compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    var hostView = compView.parent;\n    var hostElDef = viewParentEl(compView);\n    var startIndex = hostElDef.nodeIndex + 1;\n    var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = hostView.def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!hostView.parent) {\n        // a root view\n        var projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (var i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n    }\n    else {\n        var rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n            for (var k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n            visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    var renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            target.push(renderNode);\n            break;\n    }\n}\nvar NS_PREFIX_RE = /^:([^:]+):(.+)$/;\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        var match = name.match(NS_PREFIX_RE);\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\nfunction calcBindingFlags(bindings) {\n    var flags = 0;\n    for (var i = 0; i < bindings.length; i++) {\n        flags |= bindings[i].flags;\n    }\n    return flags;\n}\nfunction interpolate(valueCount, constAndInterp) {\n    var result = '';\n    for (var i = 0; i < valueCount * 2; i = i + 2) {\n        result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n    }\n    return result + constAndInterp[valueCount * 2];\n}\nfunction inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n    switch (valueCount) {\n        case 1:\n            return c0 + _toStringWithNull(a1) + c1;\n        case 2:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n        case 3:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3;\n        case 4:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4;\n        case 5:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n        case 6:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n        case 7:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7;\n        case 8:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n        case 9:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n        default:\n            throw new Error(\"Does not support more than 9 expressions\");\n    }\n}\nfunction _toStringWithNull(v) {\n    return v != null ? v.toString() : '';\n}\nvar EMPTY_ARRAY$1 = [];\nvar EMPTY_MAP = {};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ViewRef = /** @class */ (function () {\n    function ViewRef(_view, context) {\n        this._view = _view;\n        this.context = context;\n    }\n    /** @internal */\n    ViewRef.prototype._setComponentContext = function (view, context) {\n        this._view = view;\n        this.context = context;\n    };\n    Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n        get: function () {\n            return (this._view.flags & 32 /* Destroyed */) === 32 /* Destroyed */;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ViewRef.prototype.destroy = function () { destroyLView(this._view); };\n    ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n    /**\n     * Marks a view and all of its ancestors dirty.\n     *\n     * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n     * multiple `markForCheck` calls to into one change detection run.\n     *\n     * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n     * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n     * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n     *\n     * <!-- TODO: Add a link to a chapter on OnPush components -->\n     *\n     * ### Example ([live demo](https://stackblitz.com/edit/angular-kx7rrw))\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'my-app',\n     *   template: `Number of ticks: {{numberOfTicks}}`\n     *   changeDetection: ChangeDetectionStrategy.OnPush,\n     * })\n     * class AppComponent {\n     *   numberOfTicks = 0;\n     *\n     *   constructor(private ref: ChangeDetectorRef) {\n     *     setInterval(() => {\n     *       this.numberOfTicks++;\n     *       // the following is required, otherwise the view will not be updated\n     *       this.ref.markForCheck();\n     *     }, 1000);\n     *   }\n     * }\n     * ```\n     */\n    ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n    /**\n     * Detaches the view from the change detection tree.\n     *\n     * Detached views will not be checked during change detection runs until they are\n     * re-attached, even if they are dirty. `detach` can be used in combination with\n     * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n     * detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds. We can do that by detaching\n     * the component's change detector and doing a local check every five seconds.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   // in a real application the returned data will be different every time\n     *   get data() {\n     *     return [1,2,3,4,5];\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'giant-list',\n     *   template: `\n     *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n     *   `,\n     * })\n     * class GiantList {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n     *     ref.detach();\n     *     setInterval(() => {\n     *       this.ref.detectChanges();\n     *     }, 5000);\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     <giant-list><giant-list>\n     *   `,\n     * })\n     * class App {\n     * }\n     * ```\n     */\n    ViewRef.prototype.detach = function () { this._view.flags &= ~8 /* Attached */; };\n    /**\n     * Re-attaches a view to the change detection tree.\n     *\n     * This can be used to re-attach views that were previously detached from the tree\n     * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     *\n     * ### Example ([live demo](https://stackblitz.com/edit/angular-ymgsxw))\n     *\n     * The following example creates a component displaying `live` data. The component will detach\n     * its change detector from the main change detector tree when the component's live property\n     * is set to false.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   data = 1;\n     *\n     *   constructor() {\n     *     setInterval(() => {\n     *       this.data = this.data * 2;\n     *     }, 500);\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'live-data',\n     *   inputs: ['live'],\n     *   template: 'Data: {{dataProvider.data}}'\n     * })\n     * class LiveData {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n     *\n     *   set live(value) {\n     *     if (value) {\n     *       this.ref.reattach();\n     *     } else {\n     *       this.ref.detach();\n     *     }\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'my-app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n     *     <live-data [live]=\"live\"><live-data>\n     *   `,\n     * })\n     * class AppComponent {\n     *   live = true;\n     * }\n     * ```\n     */\n    ViewRef.prototype.reattach = function () { this._view.flags |= 8 /* Attached */; };\n    /**\n     * Checks the view and its children.\n     *\n     * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n     * local change detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine, the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds.\n     *\n     * We can do that by detaching the component's change detector and doing a local change detection\n     * check every five seconds.\n     *\n     * See {@link ChangeDetectorRef#detach detach} for more information.\n     */\n    ViewRef.prototype.detectChanges = function () { detectChanges(this.context); };\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n    ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n    ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n    return ViewRef;\n}());\nvar EmbeddedViewRef = /** @class */ (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef(viewNode, template, context) {\n        var _this = _super.call(this, viewNode.data, context) || this;\n        _this._viewContainerRef = null;\n        _this._lViewNode = viewNode;\n        return _this;\n    }\n    EmbeddedViewRef.prototype.destroy = function () {\n        if (this._viewContainerRef &&\n            (this._view.flags & 8 /* Attached */) === 8 /* Attached */) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            this._viewContainerRef = null;\n        }\n        _super.prototype.destroy.call(this);\n    };\n    EmbeddedViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n    return EmbeddedViewRef;\n}(ViewRef));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If a directive is diPublic, bloomAdd sets a property on the instance with this constant as\n * the key and the directive's unique ID as the value. This allows us to map directives to their\n * bloom filter bit for DI.\n */\nvar NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n/**\n * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n * directives that will share slots, and thus, the fewer false positives when checking for\n * the existence of a directive.\n */\nvar BLOOM_SIZE = 256;\n/** Counter used to generate unique IDs for directives. */\nvar nextNgElementId = 0;\n/**\n * Registers this directive as present in its node's injector by flipping the directive's\n * corresponding bit in the injector's bloom filter.\n *\n * @param injector The node injector in which the directive should be registered\n * @param type The directive to register\n */\nfunction bloomAdd(injector, type) {\n    var id = type[NG_ELEMENT_ID];\n    // Set a unique ID on the directive type, so if something tries to inject the directive,\n    // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n    if (id == null) {\n        id = type[NG_ELEMENT_ID] = nextNgElementId++;\n    }\n    // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n    // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n    // This means that after 255, some directives will share slots, leading to some false positives\n    // when checking for a directive's presence.\n    var bloomBit = id % BLOOM_SIZE;\n    // Create a mask that targets the specific bit associated with the directive.\n    // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n    // to bit positions 0 - 31 in a 32 bit integer.\n    var mask = 1 << bloomBit;\n    // Use the raw bloomBit number to determine which bloom filter bucket we should check\n    // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n    if (bloomBit < 128) {\n        // Then use the mask to flip on the bit (0-31) associated with the directive in that bucket\n        bloomBit < 64 ? (bloomBit < 32 ? (injector.bf0 |= mask) : (injector.bf1 |= mask)) :\n            (bloomBit < 96 ? (injector.bf2 |= mask) : (injector.bf3 |= mask));\n    }\n    else {\n        bloomBit < 192 ? (bloomBit < 160 ? (injector.bf4 |= mask) : (injector.bf5 |= mask)) :\n            (bloomBit < 224 ? (injector.bf6 |= mask) : (injector.bf7 |= mask));\n    }\n}\nfunction getOrCreateNodeInjector() {\n    ngDevMode && assertPreviousIsParent();\n    return getOrCreateNodeInjectorForNode(getPreviousOrParentNode());\n}\n/**\n * Creates (or gets an existing) injector for a given element or container.\n *\n * @param node for which an injector should be retrieved / created.\n * @returns Node injector\n */\nfunction getOrCreateNodeInjectorForNode(node) {\n    var nodeInjector = node.nodeInjector;\n    var parent = getParentLNode(node);\n    var parentInjector = parent && parent.nodeInjector;\n    if (nodeInjector != parentInjector) {\n        return nodeInjector;\n    }\n    return node.nodeInjector = {\n        parent: parentInjector,\n        node: node,\n        bf0: 0,\n        bf1: 0,\n        bf2: 0,\n        bf3: 0,\n        bf4: 0,\n        bf5: 0,\n        bf6: 0,\n        bf7: 0,\n        cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n        cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n        cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n        cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n        cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n        cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n        cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n        cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n        templateRef: null,\n        viewContainerRef: null,\n        elementRef: null,\n        changeDetectorRef: null\n    };\n}\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param di The node injector in which a directive will be added\n * @param def The definition of the directive to be made public\n */\nfunction diPublicInInjector(di, def) {\n    bloomAdd(di, def.type);\n}\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param def The definition of the directive to be made public\n */\nfunction diPublic(def) {\n    diPublicInInjector(getOrCreateNodeInjector(), def);\n}\nfunction directiveInject(token, flags) {\n    if (flags === void 0) { flags = 0 /* Default */; }\n    return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n}\n/**\n * Creates an ElementRef and stores it on the injector.\n * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n *\n * @returns The ElementRef instance to use\n */\nfunction injectElementRef() {\n    return getOrCreateElementRef(getOrCreateNodeInjector());\n}\n/**\n * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n * exists, retrieves the existing TemplateRef.\n *\n * @returns The TemplateRef instance to use\n */\nfunction injectTemplateRef() {\n    return getOrCreateTemplateRef(getOrCreateNodeInjector());\n}\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @returns The ViewContainerRef instance to use\n */\nfunction injectViewContainerRef() {\n    return getOrCreateContainerRef(getOrCreateNodeInjector());\n}\n/** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\nfunction injectChangeDetectorRef() {\n    return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n}\n/**\n * Inject static attribute value into directive constructor.\n *\n * This method is used with `factory` functions which are generated as part of\n * `defineDirective` or `defineComponent`. The method retrieves the static value\n * of an attribute. (Dynamic attributes are not supported since they are not resolved\n *  at the time of injection and can change over time.)\n *\n * # Example\n * Given:\n * ```\n * @Component(...)\n * class MyComponent {\n *   constructor(@Attribute('title') title: string) { ... }\n * }\n * ```\n * When instantiated with\n * ```\n * <my-component title=\"Hello\"></my-component>\n * ```\n *\n * Then factory method generated is:\n * ```\n * MyComponent.ngComponentDef = defineComponent({\n *   factory: () => new MyComponent(injectAttribute('title'))\n *   ...\n * })\n * ```\n *\n * @experimental\n */\nfunction injectAttribute(attrNameToInject) {\n    ngDevMode && assertPreviousIsParent();\n    var lElement = getPreviousOrParentNode();\n    ngDevMode && assertNodeType(lElement, 3 /* Element */);\n    var tElement = lElement.tNode;\n    ngDevMode && assertDefined(tElement, 'expecting tNode');\n    var attrs = tElement.attrs;\n    if (attrs) {\n        for (var i = 0; i < attrs.length; i = i + 2) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SELECT_ONLY */)\n                break;\n            if (attrName == attrNameToInject) {\n                return attrs[i + 1];\n            }\n        }\n    }\n    return undefined;\n}\n/**\n * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n * Or, if it already exists, retrieves the existing instance.\n *\n * @returns The ChangeDetectorRef to use\n */\nfunction getOrCreateChangeDetectorRef(di, context) {\n    if (di.changeDetectorRef)\n        return di.changeDetectorRef;\n    var currentNode = di.node;\n    if (isComponent(currentNode.tNode)) {\n        return di.changeDetectorRef = new ViewRef(currentNode.data, context);\n    }\n    else if (currentNode.tNode.type === 3 /* Element */) {\n        return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view.node);\n    }\n    return null;\n}\n/** Gets or creates ChangeDetectorRef for the closest host component */\nfunction getOrCreateHostChangeDetector(currentNode) {\n    var hostNode = getClosestComponentAncestor(currentNode);\n    var hostInjector = hostNode.nodeInjector;\n    var existingRef = hostInjector && hostInjector.changeDetectorRef;\n    return existingRef ?\n        existingRef :\n        new ViewRef(hostNode.data, hostNode.view\n            .directives[hostNode.tNode.flags >> 13 /* DirectiveStartingIndexShift */]);\n}\n/**\n * If the node is an embedded view, traverses up the view tree to return the closest\n * ancestor view that is attached to a component. If it's already a component node,\n * returns itself.\n */\nfunction getClosestComponentAncestor(node) {\n    while (node.tNode.type === 2 /* View */) {\n        node = node.view.node;\n    }\n    return node;\n}\n/**\n * Searches for an instance of the given directive type up the injector tree and returns\n * that instance if found.\n *\n * Specifically, it gets the bloom filter bit associated with the directive (see bloomHashBit),\n * checks that bit against the bloom filter structure to identify an injector that might have\n * the directive (see bloomFindPossibleInjector), then searches the directives on that injector\n * for a match.\n *\n * If not found, it will propagate up to the next parent injector until the token\n * is found or the top is reached.\n *\n * @param di Node injector where the search should start\n * @param token The directive type to search for\n * @param flags Injection flags (e.g. CheckParent)\n * @returns The instance found\n */\nfunction getOrCreateInjectable(di, token, flags) {\n    if (flags === void 0) { flags = 0 /* Default */; }\n    var bloomHash = bloomHashBit(token);\n    // If the token has a bloom hash, then it is a directive that is public to the injection system\n    // (diPublic). If there is no hash, fall back to the module injector.\n    if (bloomHash === null) {\n        var moduleInjector = getPreviousOrParentNode().view.injector;\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    else {\n        var injector = di;\n        while (injector) {\n            // Get the closest potential matching injector (upwards in the injector tree) that\n            // *potentially* has the token.\n            injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n            // If no injector is found, we *know* that there is no ancestor injector that contains the\n            // token, so we abort.\n            if (!injector) {\n                break;\n            }\n            // At this point, we have an injector which *may* contain the token, so we step through the\n            // directives associated with the injector's corresponding node to get the directive instance.\n            var node = injector.node;\n            var nodeFlags = node.tNode.flags;\n            var count = nodeFlags & 4095;\n            if (count !== 0) {\n                var start = nodeFlags >> 13;\n                var end = start + count;\n                var defs = node.view.tView.directives;\n                for (var i = start; i < end; i++) {\n                    // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                    // and matches the given token, return the directive instance.\n                    var directiveDef = defs[i];\n                    if (directiveDef.type === token && directiveDef.diPublic) {\n                        return getDirectiveInstance(node.view.directives[i]);\n                    }\n                }\n            }\n            // If we *didn't* find the directive for the token and we are searching the current node's\n            // injector, it's possible the directive is on this node and hasn't been created yet.\n            var instance = void 0;\n            if (injector === di && (instance = searchMatchesQueuedForCreation(node, token))) {\n                return instance;\n            }\n            // The def wasn't found anywhere on this node, so it was a false positive.\n            // If flags permit, traverse up the tree and continue searching.\n            if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                injector = null;\n            }\n            else {\n                injector = injector.parent;\n            }\n        }\n    }\n    // No directive was found for the given token.\n    if (flags & 8 /* Optional */)\n        return null;\n    throw new Error(\"Injector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n}\nfunction searchMatchesQueuedForCreation(node, token) {\n    var matches = node.view.tView.currentMatches;\n    if (matches) {\n        for (var i = 0; i < matches.length; i += 2) {\n            var def = matches[i];\n            if (def.type === token) {\n                return resolveDirective(def, i + 1, matches, node.view.tView);\n            }\n        }\n    }\n    return null;\n}\n/**\n * Given a directive type, this function returns the bit in an injector's bloom filter\n * that should be used to determine whether or not the directive is present.\n *\n * When the directive was added to the bloom filter, it was given a unique ID that can be\n * retrieved on the class. Since there are only BLOOM_SIZE slots per bloom filter, the directive's\n * ID must be modulo-ed by BLOOM_SIZE to get the correct bloom bit (directives share slots after\n * BLOOM_SIZE is reached).\n *\n * @param type The directive type\n * @returns The bloom bit to check for the directive\n */\nfunction bloomHashBit(type) {\n    var id = type[NG_ELEMENT_ID];\n    return typeof id === 'number' ? id % BLOOM_SIZE : null;\n}\n/**\n * Finds the closest injector that might have a certain directive.\n *\n * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n * check and a starting injector, this function traverses up injectors until it finds an\n * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n * injector may have that directive. It only *may* have the directive because directives begin\n * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n * different directive sharing the bit.\n *\n * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n * the directive and do not need to be checked.\n *\n * @param injector The starting node injector to check\n * @param  bloomBit The bit to check in each injector's bloom filter\n * @param  flags The injection flags for this injection site (e.g. Optional or SkipSelf)\n * @returns An injector that might have the directive\n */\nfunction bloomFindPossibleInjector(startInjector, bloomBit, flags) {\n    // Create a mask that targets the specific bit associated with the directive we're looking for.\n    // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n    // to bit positions 0 - 31 in a 32 bit integer.\n    var mask = 1 << bloomBit;\n    // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n    // match.\n    var injector = flags & 4 /* SkipSelf */ ? startInjector.parent : startInjector;\n    while (injector) {\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value = void 0;\n        if (bloomBit < 128) {\n            value = bloomBit < 64 ? (bloomBit < 32 ? injector.bf0 : injector.bf1) :\n                (bloomBit < 96 ? injector.bf2 : injector.bf3);\n        }\n        else {\n            value = bloomBit < 192 ? (bloomBit < 160 ? injector.bf4 : injector.bf5) :\n                (bloomBit < 224 ? injector.bf6 : injector.bf7);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        if ((value & mask) === mask) {\n            return injector;\n        }\n        else if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n            return null;\n        }\n        // If the current injector does not have the directive, check the bloom filters for the ancestor\n        // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n        if (bloomBit < 128) {\n            value = bloomBit < 64 ? (bloomBit < 32 ? injector.cbf0 : injector.cbf1) :\n                (bloomBit < 96 ? injector.cbf2 : injector.cbf3);\n        }\n        else {\n            value = bloomBit < 192 ? (bloomBit < 160 ? injector.cbf4 : injector.cbf5) :\n                (bloomBit < 224 ? injector.cbf6 : injector.cbf7);\n        }\n        // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n        // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n        injector = (value & mask) ? injector.parent : null;\n    }\n    return null;\n}\n/**\n * Checks whether the current injector and its parent are in the same host view.\n *\n * This is necessary to support @Host() decorators. If @Host() is set, we should stop searching once\n * the injector and its parent view don't match because it means we'd cross the view boundary.\n */\nfunction sameHostView(injector) {\n    return !!injector.parent && injector.parent.node.view === injector.node.view;\n}\nvar ReadFromInjectorFn = /** @class */ (function () {\n    function ReadFromInjectorFn(read) {\n        this.read = read;\n    }\n    return ReadFromInjectorFn;\n}());\n/**\n * Creates an ElementRef for a given node injector and stores it on the injector.\n * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n *\n * @param di The node injector where we should store a created ElementRef\n * @returns The ElementRef instance to use\n */\nfunction getOrCreateElementRef(di) {\n    return di.elementRef || (di.elementRef = new ElementRef(di.node.tNode.type === 0 /* Container */ ? null : di.node.native));\n}\n\n\n\n\n/** A ref to a node's native element. */\nvar ElementRef = /** @class */ (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @returns The ViewContainerRef instance to use\n */\nfunction getOrCreateContainerRef(di) {\n    if (!di.viewContainerRef) {\n        var vcRefHost = di.node;\n        ngDevMode && assertNodeOfPossibleTypes(vcRefHost, 0 /* Container */, 3 /* Element */);\n        var hostParent = getParentLNode(vcRefHost);\n        var lContainer = createLContainer(hostParent, vcRefHost.view, true);\n        var lContainerNode = createLNodeObject(0 /* Container */, vcRefHost.view, hostParent, undefined, lContainer, null);\n        if (vcRefHost.queries) {\n            lContainerNode.queries = vcRefHost.queries.container();\n        }\n        var hostTNode = vcRefHost.tNode;\n        if (!hostTNode.dynamicContainerNode) {\n            hostTNode.dynamicContainerNode = createTNode(0 /* Container */, -1, null, null, null, null);\n        }\n        lContainerNode.tNode = hostTNode.dynamicContainerNode;\n        vcRefHost.dynamicLContainerNode = lContainerNode;\n        addToViewTree(vcRefHost.view, hostTNode.index, lContainer);\n        di.viewContainerRef = new ViewContainerRef(lContainerNode);\n    }\n    return di.viewContainerRef;\n}\n/**\n * A ref to a container that enables adding and removing views from that container\n * imperatively.\n */\nvar ViewContainerRef = /** @class */ (function () {\n    function ViewContainerRef(_lContainerNode) {\n        this._lContainerNode = _lContainerNode;\n        this._viewRefs = [];\n    }\n    ViewContainerRef.prototype.clear = function () {\n        var lContainer = this._lContainerNode.data;\n        while (lContainer.views.length) {\n            this.remove(0);\n        }\n    };\n    ViewContainerRef.prototype.get = function (index) { return this._viewRefs[index] || null; };\n    Object.defineProperty(ViewContainerRef.prototype, \"length\", {\n        get: function () {\n            var lContainer = this._lContainerNode.data;\n            return lContainer.views.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ViewContainerRef.prototype.createEmbeddedView = function (templateRef, context, index) {\n        var viewRef = templateRef.createEmbeddedView(context || {});\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    ViewContainerRef.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModule) {\n        throw notImplemented();\n    };\n    ViewContainerRef.prototype.insert = function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var lViewNode = viewRef._lViewNode;\n        var adjustedIdx = this._adjustIndex(index);\n        viewRef.attachToViewContainerRef(this);\n        insertView(this._lContainerNode, lViewNode, adjustedIdx);\n        // invalidate cache of next sibling RNode (we do similar operation in the containerRefreshEnd\n        // instruction)\n        this._lContainerNode.native = undefined;\n        this._viewRefs.splice(adjustedIdx, 0, viewRef);\n        return viewRef;\n    };\n    ViewContainerRef.prototype.move = function (viewRef, newIndex) {\n        var index = this.indexOf(viewRef);\n        this.detach(index);\n        this.insert(viewRef, this._adjustIndex(newIndex));\n        return viewRef;\n    };\n    ViewContainerRef.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n    ViewContainerRef.prototype.remove = function (index) {\n        var adjustedIdx = this._adjustIndex(index, -1);\n        removeView(this._lContainerNode, adjustedIdx);\n        this._viewRefs.splice(adjustedIdx, 1);\n    };\n    ViewContainerRef.prototype.detach = function (index) {\n        var adjustedIdx = this._adjustIndex(index, -1);\n        detachView(this._lContainerNode, adjustedIdx);\n        return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n    };\n    ViewContainerRef.prototype._adjustIndex = function (index, shift) {\n        if (shift === void 0) { shift = 0; }\n        if (index == null) {\n            return this._lContainerNode.data.views.length + shift;\n        }\n        if (ngDevMode) {\n            assertGreaterThan(index, -1, 'index must be positive');\n            // +1 because it's legal to insert at the end.\n            assertLessThan(index, this._lContainerNode.data.views.length + 1 + shift, 'index');\n        }\n        return index;\n    };\n    return ViewContainerRef;\n}());\n/**\n * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n * exists, retrieves the existing TemplateRef.\n *\n * @param di The node injector where we should store a created TemplateRef\n * @returns The TemplateRef instance to use\n */\nfunction getOrCreateTemplateRef(di) {\n    if (!di.templateRef) {\n        ngDevMode && assertNodeType(di.node, 0 /* Container */);\n        var hostNode = di.node;\n        var hostTNode = hostNode.tNode;\n        ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n        di.templateRef = new TemplateRef(getOrCreateElementRef(di), hostTNode.tViews, getRenderer(), hostNode.data.queries);\n    }\n    return di.templateRef;\n}\nvar TemplateRef = /** @class */ (function () {\n    function TemplateRef(elementRef, _tView, _renderer, _queries) {\n        this._tView = _tView;\n        this._renderer = _renderer;\n        this._queries = _queries;\n        this.elementRef = elementRef;\n    }\n    TemplateRef.prototype.createEmbeddedView = function (context) {\n        var viewNode = renderEmbeddedTemplate(null, this._tView, context, this._renderer, this._queries);\n        return new EmbeddedViewRef(viewNode, this._tView.template, context);\n    };\n    return TemplateRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a component definition object.\n *\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngComponentDef = defineComponent({\n *     ...\n *   });\n * }\n * ```\n */\nfunction defineComponent(componentDefinition) {\n    var type = componentDefinition.type;\n    var pipeTypes = componentDefinition.pipes;\n    var directiveTypes = componentDefinition.directives;\n    var def = {\n        type: type,\n        diPublic: null,\n        factory: componentDefinition.factory,\n        template: componentDefinition.template || null,\n        hostBindings: componentDefinition.hostBindings || null,\n        attributes: componentDefinition.attributes || null,\n        inputs: invertObject(componentDefinition.inputs),\n        outputs: invertObject(componentDefinition.outputs),\n        rendererType: resolveRendererType2(componentDefinition.rendererType) || null,\n        exportAs: componentDefinition.exportAs,\n        onInit: type.prototype.ngOnInit || null,\n        doCheck: type.prototype.ngDoCheck || null,\n        afterContentInit: type.prototype.ngAfterContentInit || null,\n        afterContentChecked: type.prototype.ngAfterContentChecked || null,\n        afterViewInit: type.prototype.ngAfterViewInit || null,\n        afterViewChecked: type.prototype.ngAfterViewChecked || null,\n        onDestroy: type.prototype.ngOnDestroy || null,\n        onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n        directiveDefs: directiveTypes ?\n            function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                .map(extractDirectiveDef); } :\n            null,\n        pipeDefs: pipeTypes ?\n            function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n            null,\n        selectors: componentDefinition.selectors\n    };\n    var feature = componentDefinition.features;\n    feature && feature.forEach(function (fn) { return fn(def); });\n    return def;\n}\nfunction extractDirectiveDef(type) {\n    var def = type.ngComponentDef || type.ngDirectiveDef;\n    if (ngDevMode && !def) {\n        throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n    }\n    return def;\n}\nfunction extractPipeDef(type) {\n    var def = type.ngPipeDef;\n    if (ngDevMode && !def) {\n        throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n    }\n    return def;\n}\nvar PRIVATE_PREFIX = '__ngOnChanges_';\n/**\n * Creates an NgOnChangesFeature function for a component's features list.\n *\n * It accepts an optional map of minified input property names to original property names,\n * if any input properties have a public alias.\n *\n * The NgOnChangesFeature function that is returned decorates a component with support for\n * the ngOnChanges lifecycle hook, so it should be included in any component that implements\n * that hook.\n *\n * Example usage:\n *\n * ```\n * static ngComponentDef = defineComponent({\n *   ...\n *   inputs: {name: 'publicName'},\n *   features: [NgOnChangesFeature({name: 'name'})]\n * });\n * ```\n *\n * @param inputPropertyNames Map of input property names, if they are aliased\n * @returns DirectiveDefFeature\n */\nfunction NgOnChangesFeature(inputPropertyNames) {\n    return function (definition) {\n        var inputs = definition.inputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (pubKey) {\n            var minKey = inputs[pubKey];\n            var propertyName = inputPropertyNames && inputPropertyNames[minKey] || pubKey;\n            var privateMinKey = PRIVATE_PREFIX + minKey;\n            var originalProperty = Object.getOwnPropertyDescriptor(proto, minKey);\n            var getter = originalProperty && originalProperty.get;\n            var setter = originalProperty && originalProperty.set;\n            // create a getter and setter for property\n            Object.defineProperty(proto, minKey, {\n                get: getter ||\n                    (setter ? undefined : function () { return this[privateMinKey]; }),\n                set: function (value) {\n                    var simpleChanges = this[PRIVATE_PREFIX];\n                    if (!simpleChanges) {\n                        // Place where we will store SimpleChanges if there is a change\n                        Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges = {}, writable: true });\n                    }\n                    var isFirstChange = !this.hasOwnProperty(privateMinKey);\n                    var currentChange = simpleChanges[propertyName];\n                    if (currentChange) {\n                        currentChange.currentValue = value;\n                    }\n                    else {\n                        simpleChanges[propertyName] =\n                            new SimpleChange(this[privateMinKey], value, isFirstChange);\n                    }\n                    if (isFirstChange) {\n                        // Create a place where the actual value will be stored and make it non-enumerable\n                        Object.defineProperty(this, privateMinKey, { value: value, writable: true });\n                    }\n                    else {\n                        this[privateMinKey] = value;\n                    }\n                    setter && setter.call(this, value);\n                }\n            });\n        };\n        for (var pubKey in inputs) {\n            _loop_1(pubKey);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    };\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            delegateHook && delegateHook.apply(this);\n        };\n    }\n}\nfunction PublicFeature(definition) {\n    definition.diPublic = diPublic;\n}\nvar EMPTY$1 = {};\n/** Swaps the keys and values of an object. */\nfunction invertObject(obj) {\n    if (obj == null)\n        return EMPTY$1;\n    var newObj = {};\n    for (var minifiedKey in obj) {\n        newObj[obj[minifiedKey]] = minifiedKey;\n    }\n    return newObj;\n}\n/**\n * Create a directive definition object.\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngDirectiveDef = defineDirective({\n *     ...\n *   });\n * }\n * ```\n */\nvar defineDirective = defineComponent;\n/**\n * Create a pipe definition object.\n *\n * # Example\n * ```\n * class MyPipe implements PipeTransform {\n *   // Generated by Angular Template Compiler\n *   static ngPipeDef = definePipe({\n *     ...\n *   });\n * }\n * ```\n * @param pipeDef Pipe definition generated by the compiler\n */\nfunction definePipe(pipeDef) {\n    return {\n        name: pipeDef.name,\n        factory: pipeDef.factory,\n        pure: pipeDef.pure !== false,\n        onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of a Component created via a {@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n * method.\n *\n */\nvar ComponentRef$1 = /** @class */ (function () {\n    function ComponentRef() {\n    }\n    return ComponentRef;\n}());\nvar ComponentFactory$1 = /** @class */ (function () {\n    function ComponentFactory() {\n    }\n    return ComponentFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction noComponentFactoryError(component) {\n    var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n    error[ERROR_COMPONENT] = component;\n    return error;\n}\nvar ERROR_COMPONENT = 'ngComponent';\n\nvar _NullComponentFactoryResolver = /** @class */ (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n        throw noComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\nvar ComponentFactoryResolver$1 = /** @class */ (function () {\n    function ComponentFactoryResolver() {\n    }\n    ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n    return ComponentFactoryResolver;\n}());\nvar CodegenComponentFactoryResolver = /** @class */ (function () {\n    function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n        this._parent = _parent;\n        this._ngModule = _ngModule;\n        this._factories = new Map();\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            this._factories.set(factory.componentType, factory);\n        }\n    }\n    CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n        var factory = this._factories.get(component);\n        if (!factory && this._parent) {\n            factory = this._parent.resolveComponentFactory(component);\n        }\n        if (!factory) {\n            throw noComponentFactoryError(component);\n        }\n        return new ComponentFactoryBoundToModule(factory, this._ngModule);\n    };\n    return CodegenComponentFactoryResolver;\n}());\nvar ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n    __extends(ComponentFactoryBoundToModule, _super);\n    function ComponentFactoryBoundToModule(factory, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.ngModule = ngModule;\n        _this.selector = factory.selector;\n        _this.componentType = factory.componentType;\n        _this.ngContentSelectors = factory.ngContentSelectors;\n        _this.inputs = factory.inputs;\n        _this.outputs = factory.outputs;\n        return _this;\n    }\n    ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    };\n    return ComponentFactoryBoundToModule;\n}(ComponentFactory$1));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * @security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n *\n */\n// Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n// i.e. users have to ask for what they need. With that, we can build better analysis tools\n// and could do better codegen in the future.\nvar ElementRef$1 = /** @class */ (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nvar RenderComponentType = /** @class */ (function () {\n    function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n        this.id = id;\n        this.templateUrl = templateUrl;\n        this.slotCount = slotCount;\n        this.encapsulation = encapsulation;\n        this.styles = styles;\n        this.animations = animations;\n    }\n    return RenderComponentType;\n}());\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n */\nvar RenderDebugInfo = /** @class */ (function () {\n    function RenderDebugInfo() {\n    }\n    return RenderDebugInfo;\n}());\n/**\n * @deprecated Use the `Renderer2` instead.\n */\nvar Renderer = /** @class */ (function () {\n    function Renderer() {\n    }\n    return Renderer;\n}());\nvar Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n */\nvar RootRenderer = /** @class */ (function () {\n    function RootRenderer() {\n    }\n    return RootRenderer;\n}());\n/**\n * @experimental\n */\nvar RendererFactory2 = /** @class */ (function () {\n    function RendererFactory2() {\n    }\n    return RendererFactory2;\n}());\n/**\n * @experimental\n */\n\n(function (RendererStyleFlags2) {\n    RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n    RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n})(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n/**\n * @experimental\n */\nvar Renderer2 = /** @class */ (function () {\n    function Renderer2() {\n    }\n    return Renderer2;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ComponentFactoryResolver$$1 = /** @class */ (function (_super) {\n    __extends(ComponentFactoryResolver$$1, _super);\n    function ComponentFactoryResolver$$1() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n        ngDevMode && assertComponentType(component);\n        var componentDef = component.ngComponentDef;\n        return new ComponentFactory$$1(componentDef);\n    };\n    return ComponentFactoryResolver$$1;\n}(ComponentFactoryResolver$1));\nfunction toRefArray(map) {\n    var array = [];\n    for (var nonMinified in map) {\n        if (map.hasOwnProperty(nonMinified)) {\n            var minified = map[nonMinified];\n            array.push({ propName: minified, templateName: nonMinified });\n        }\n    }\n    return array;\n}\n/**\n * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n */\nvar ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n/**\n * A change detection scheduler token for {@link RootContext}. This token is the default value used\n * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n */\nvar SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', { providedIn: 'root', factory: function () { return requestAnimationFrame.bind(window); } });\n/**\n * Render3 implementation of {@link viewEngine_ComponentFactory}.\n */\nvar ComponentFactory$$1 = /** @class */ (function (_super) {\n    __extends(ComponentFactory$$1, _super);\n    function ComponentFactory$$1(componentDef) {\n        var _this = _super.call(this) || this;\n        _this.componentDef = componentDef;\n        _this.componentType = componentDef.type;\n        _this.selector = componentDef.selectors[0][0];\n        _this.ngContentSelectors = [];\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n        get: function () {\n            return toRefArray(this.componentDef.inputs);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n        get: function () {\n            return toRefArray(this.componentDef.outputs);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ComponentFactory$$1.prototype.create = function (parentComponentInjector, projectableNodes, rootSelectorOrNode, ngModule) {\n        ngDevMode && assertDefined(ngModule, 'ngModule should always be defined');\n        var rendererFactory = ngModule ? ngModule.injector.get(RendererFactory2) : document;\n        var hostNode = locateHostElement(rendererFactory, rootSelectorOrNode);\n        // The first index of the first selector is the tag name.\n        var componentTag = this.componentDef.selectors[0][0];\n        var rootContext = ngModule.injector.get(ROOT_CONTEXT);\n        // Create the root view. Uses empty TView and ContentTemplate.\n        var rootView = createLView(rendererFactory.createRenderer(hostNode, this.componentDef.rendererType), createTView(-1, null, null, null), null, this.componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n        rootView.injector = ngModule && ngModule.injector || null;\n        // rootView is the parent when bootstrapping\n        var oldView = enterView(rootView, null);\n        var component;\n        var elementNode;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, this.componentDef);\n            // Create directive instance with factory() and store at index 0 in directives array\n            rootContext.components.push(component = baseDirectiveCreate(0, this.componentDef.factory(), this.componentDef));\n            initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n        }\n        finally {\n            enterView(oldView, null);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        // TODO(misko): this is the wrong injector here.\n        return new ComponentRef$$1(this.componentType, component, rootView, ngModule.injector, hostNode);\n    };\n    return ComponentFactory$$1;\n}(ComponentFactory$1));\n/**\n * Represents an instance of a Component created via a {@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n * method.\n *\n */\nvar ComponentRef$$1 = /** @class */ (function (_super) {\n    __extends(ComponentRef$$1, _super);\n    function ComponentRef$$1(componentType, instance, rootView, injector, hostNode) {\n        var _this = _super.call(this) || this;\n        _this.destroyCbs = [];\n        _this.instance = instance;\n        /* TODO(jasonaden): This is incomplete, to be adjusted in follow-up PR. Notes from Kara:When\n         * ViewRef.detectChanges is called from ApplicationRef.tick, it will call detectChanges at the\n         * component instance level. I suspect this means that lifecycle hooks and host bindings on the\n         * given component won't work (as these are always called at the level above a component).\n         *\n         * In render2, ViewRef.detectChanges uses the root view instance for view checks, not the\n         * component instance. So passing in the root view (1 level above the component) is sufficient.\n         * We might  want to think about creating a fake component for the top level? Or overwrite\n         * detectChanges with a function that calls tickRootContext? */\n        _this.hostView = _this.changeDetectorRef = new ViewRef(rootView, instance);\n        _this.injector = injector;\n        _this.location = new ElementRef$1(hostNode);\n        _this.componentType = componentType;\n        return _this;\n    }\n    ComponentRef$$1.prototype.destroy = function () {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.forEach(function (fn) { return fn(); });\n        this.destroyCbs = null;\n    };\n    ComponentRef$$1.prototype.onDestroy = function (callback) {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.push(callback);\n    };\n    return ComponentRef$$1;\n}(ComponentRef$1));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n *\n */\nvar NgModuleRef$1 = /** @class */ (function () {\n    function NgModuleRef() {\n    }\n    return NgModuleRef;\n}());\n/**\n * @experimental\n */\nvar NgModuleFactory$1 = /** @class */ (function () {\n    function NgModuleFactory() {\n    }\n    return NgModuleFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_FACTORY_RESOLVER = {\n    provide: ComponentFactoryResolver$1,\n    useFactory: function () { return new ComponentFactoryResolver$$1(); },\n    deps: [],\n};\nvar NgModuleRef$$1 = /** @class */ (function (_super) {\n    __extends(NgModuleRef$$1, _super);\n    function NgModuleRef$$1(ngModuleType, parentInjector) {\n        var _this = _super.call(this) || this;\n        // tslint:disable-next-line:require-internal-with-underscore\n        _this._bootstrapComponents = [];\n        _this.destroyCbs = [];\n        var ngModuleDef = ngModuleType.ngModuleDef;\n        ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n        _this._bootstrapComponents = ngModuleDef.bootstrap;\n        var additionalProviders = [\n            COMPONENT_FACTORY_RESOLVER, {\n                provide: NgModuleRef$1,\n                useValue: _this,\n            }\n        ];\n        _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n        _this.instance = _this.injector.get(ngModuleType);\n        _this.componentFactoryResolver = new ComponentFactoryResolver$$1();\n        return _this;\n    }\n    NgModuleRef$$1.prototype.destroy = function () {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.forEach(function (fn) { return fn(); });\n        this.destroyCbs = null;\n    };\n    NgModuleRef$$1.prototype.onDestroy = function (callback) {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.push(callback);\n    };\n    return NgModuleRef$$1;\n}(NgModuleRef$1));\nvar NgModuleFactory$$1 = /** @class */ (function (_super) {\n    __extends(NgModuleFactory$$1, _super);\n    function NgModuleFactory$$1(moduleType) {\n        var _this = _super.call(this) || this;\n        _this.moduleType = moduleType;\n        return _this;\n    }\n    NgModuleFactory$$1.prototype.create = function (parentInjector) {\n        return new NgModuleRef$$1(this.moduleType, parentInjector);\n    };\n    return NgModuleFactory$$1;\n}(NgModuleFactory$1));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If the value hasn't been saved, calls the pure function to store and return the\n * value. If it has been saved, returns the saved value.\n *\n * @param pureFn Function that returns a value\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param thisArg Optional calling context of pureFn\n * @returns value\n */\nfunction pureFunction0(slotOffset, pureFn, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 1);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var value = getCreationMode() ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg) : pureFn()) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of the provided exp has changed, calls the pure function to return\n * an updated value. Or if the value has not changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn Function that returns an updated value\n * @param exp Updated expression value\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction1(slotOffset, pureFn, exp, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 2);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var value = bindingUpdated(exp) ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 3);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var value = bindingUpdated2(exp1, exp2) ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 4);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated2(exp1, exp2);\n    var value = bindingUpdated(exp3) || different ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 5);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var value = bindingUpdated4(exp1, exp2, exp3, exp4) ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 6);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    var value = bindingUpdated(exp5) || different ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n            pureFn(exp1, exp2, exp3, exp4, exp5)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 7);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    var value = bindingUpdated2(exp5, exp6) || different ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 8);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    different = bindingUpdated2(exp5, exp6) || different;\n    var value = bindingUpdated(exp7) || different ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @param exp8\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 9);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    var value = bindingUpdated4(exp5, exp6, exp7, exp8) || different ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * pureFunction instruction that can support any number of bindings.\n *\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn A pure function that takes binding values and builds an object or array\n * containing those values.\n * @param exps An array of binding values\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, exps.length + 1);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = false;\n    for (var i = 0; i < exps.length; i++) {\n        bindingUpdated(exps[i]) && (different = true);\n    }\n    var value = different ? checkAndUpdateBinding(pureFn.apply(thisArg, exps)) : consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a pipe.\n *\n * @param index Pipe index where the pipe will be stored.\n * @param pipeName The name of the pipe\n * @returns T the instance of the pipe.\n */\nfunction pipe(index, pipeName) {\n    var tView = getTView();\n    var pipeDef;\n    if (tView.firstTemplatePass) {\n        pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n        tView.data[index] = pipeDef;\n        if (pipeDef.onDestroy) {\n            (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(index, pipeDef.onDestroy);\n        }\n    }\n    else {\n        pipeDef = tView.data[index];\n    }\n    var pipeInstance = pipeDef.factory();\n    store(index, pipeInstance);\n    return pipeInstance;\n}\n/**\n * Searches the pipe registry for a pipe with the given name. If one is found,\n * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n *\n * @param name Name of pipe to resolve\n * @param registry Full list of available pipes\n * @returns Matching PipeDef\n */\nfunction getPipeDef(name, registry) {\n    if (registry) {\n        for (var i = 0; i < registry.length; i++) {\n            var pipeDef = registry[i];\n            if (name === pipeDef.name) {\n                return pipeDef;\n            }\n        }\n    }\n    throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n}\n/**\n * Invokes a pipe with 1 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param v1 1st argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind1(index, slotOffset, v1) {\n    var pipeInstance = load(index);\n    return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n        pipeInstance.transform(v1);\n}\n/**\n * Invokes a pipe with 2 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind2(index, slotOffset, v1, v2) {\n    var pipeInstance = load(index);\n    return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n        pipeInstance.transform(v1, v2);\n}\n/**\n * Invokes a pipe with 3 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 4rd argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind3(index, slotOffset, v1, v2, v3) {\n    var pipeInstance = load(index);\n    return isPure(index) ?\n        pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n        pipeInstance.transform(v1, v2, v3);\n}\n/**\n * Invokes a pipe with 4 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 3rd argument to {@link PipeTransform#transform}.\n * @param v4 4th argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n    var pipeInstance = load(index);\n    return isPure(index) ?\n        pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n        pipeInstance.transform(v1, v2, v3, v4);\n}\n/**\n * Invokes a pipe with variable number of arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n */\nfunction pipeBindV(index, slotOffset, values) {\n    var pipeInstance = load(index);\n    return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n        pipeInstance.transform.apply(pipeInstance, values);\n}\nfunction isPure(index) {\n    return getTView().data[index].pure;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * @Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   @Output() open: EventEmitter<any> = new EventEmitter();\n *   @Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n *\n */\nvar EventEmitter = /** @class */ (function (_super) {\n    __extends(EventEmitter, _super);\n    /**\n     * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n     * delivers events synchronously or asynchronously.\n     *\n     * @param isAsync By default, events are delivered synchronously (default value: `false`).\n     * Set to `true` for asynchronous event delivery.\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n    EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n        var schedulerFn;\n        var errorFn = function (err) { return null; };\n        var completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                function (value) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n        if (generatorOrNext instanceof rxjs.Subscription) {\n            generatorOrNext.add(sink);\n        }\n        return sink;\n    };\n    return EventEmitter;\n}(rxjs.Subject));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LQueries_ = /** @class */ (function () {\n    function LQueries_(deep) {\n        this.shallow = null;\n        this.deep = null;\n        this.deep = deep == null ? null : deep;\n    }\n    LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n        // TODO(misko): This is not right. In case of inherited state, a calling track will incorrectly\n        // mutate parent.\n        if (descend) {\n            this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n        }\n        else {\n            this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n        }\n    };\n    LQueries_.prototype.child = function () {\n        if (this.deep === null) {\n            // if we don't have any deep queries then no need to track anything more.\n            return null;\n        }\n        if (this.shallow === null) {\n            // DeepQuery: We can reuse the current state if the child state would be same as current\n            // state.\n            return this;\n        }\n        else {\n            // We need to create new state\n            return new LQueries_(this.deep);\n        }\n    };\n    LQueries_.prototype.container = function () {\n        var result = null;\n        var query = this.deep;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: null,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            clonedQuery.next = result;\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result ? new LQueries_(result) : null;\n    };\n    LQueries_.prototype.createView = function () {\n        var result = null;\n        var query = this.deep;\n        while (query) {\n            var clonedQuery = {\n                next: null,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            clonedQuery.next = result;\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result ? new LQueries_(result) : null;\n    };\n    LQueries_.prototype.insertView = function (index) {\n        var query = this.deep;\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    };\n    LQueries_.prototype.addNode = function (node) {\n        add(this.shallow, node);\n        add(this.deep, node);\n    };\n    LQueries_.prototype.removeView = function (index) {\n        var query = this.deep;\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var removed = query.containerValues.splice(index, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    };\n    return LQueries_;\n}());\n/**\n * Iterates over local names for a given node and returns directive index\n * (or -1 if a local name points to an element).\n *\n * @param tNode static data of a node to check\n * @param selector selector to match\n * @returns directive index, -1 or null if a selector didn't match any of the local names\n */\nfunction getIdxOfMatchingSelector(tNode, selector) {\n    var localNames = tNode.localNames;\n    if (localNames) {\n        for (var i = 0; i < localNames.length; i += 2) {\n            if (localNames[i] === selector) {\n                return localNames[i + 1];\n            }\n        }\n    }\n    return null;\n}\n/**\n * Iterates over all the directives for a node and returns index of a directive for a given type.\n *\n * @param node Node on which directives are present.\n * @param type Type of a directive to look for.\n * @returns Index of a found directive or null when none found.\n */\nfunction getIdxOfMatchingDirective(node, type) {\n    var defs = node.view.tView.directives;\n    var flags = node.tNode.flags;\n    var count = flags & 4095;\n    var start = flags >> 13;\n    var end = start + count;\n    for (var i = start; i < end; i++) {\n        var def = defs[i];\n        if (def.type === type && def.diPublic) {\n            return i;\n        }\n    }\n    return null;\n}\nfunction readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n    if (read instanceof ReadFromInjectorFn) {\n        return read.read(nodeInjector, node, directiveIdx);\n    }\n    else {\n        var matchingIdx = getIdxOfMatchingDirective(node, read);\n        if (matchingIdx !== null) {\n            return node.view.directives[matchingIdx];\n        }\n    }\n    return null;\n}\nfunction add(query, node) {\n    var nodeInjector = getOrCreateNodeInjectorForNode(node);\n    while (query) {\n        var predicate = query.predicate;\n        var type = predicate.type;\n        if (type) {\n            var directiveIdx = getIdxOfMatchingDirective(node, type);\n            if (directiveIdx !== null) {\n                // a node is matching a predicate - determine what to read\n                // if read token and / or strategy is not specified, use type as read token\n                var result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n        }\n        else {\n            var selector = predicate.selector;\n            for (var i = 0; i < selector.length; i++) {\n                var directiveIdx = getIdxOfMatchingSelector(node.tNode, selector[i]);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // note that queries using name selector must specify read strategy\n                    ngDevMode && assertDefined(predicate.read, 'the node should have a predicate');\n                    var result = readFromNodeInjector(nodeInjector, node, predicate.read, directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n        }\n        query = query.next;\n    }\n}\nfunction addMatch(query, matchingValue) {\n    query.values.push(matchingValue);\n    query.list.setDirty();\n}\nfunction createPredicate(predicate, read) {\n    var isArray = Array.isArray(predicate);\n    return {\n        type: isArray ? null : predicate,\n        selector: isArray ? predicate : null,\n        read: read\n    };\n}\nfunction createQuery(previous, queryList, predicate, read) {\n    return {\n        next: previous,\n        list: queryList,\n        predicate: createPredicate(predicate, read),\n        values: queryList._valuesTree,\n        containerValues: null\n    };\n}\nvar QueryList_ = /** @class */ (function () {\n    function QueryList_() {\n        this.dirty = true;\n        this.changes = new EventEmitter();\n        this._values = [];\n        /** @internal */\n        this._valuesTree = [];\n    }\n    Object.defineProperty(QueryList_.prototype, \"length\", {\n        get: function () { return this._values.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"first\", {\n        get: function () {\n            var values = this._values;\n            return values.length ? values[0] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"last\", {\n        get: function () {\n            var values = this._values;\n            return values.length ? values[values.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    QueryList_.prototype.filter = function (fn) {\n        return this._values.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    QueryList_.prototype.find = function (fn) {\n        return this._values.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    QueryList_.prototype.reduce = function (fn, init) {\n        return this._values.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    QueryList_.prototype.some = function (fn) {\n        return this._values.some(fn);\n    };\n    QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n    QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n    QueryList_.prototype.toString = function () { return this._values.toString(); };\n    QueryList_.prototype.reset = function (res) {\n        this._values = flatten(res);\n        this.dirty = false;\n    };\n    QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n    QueryList_.prototype.setDirty = function () { this.dirty = true; };\n    QueryList_.prototype.destroy = function () {\n        this.changes.complete();\n        this.changes.unsubscribe();\n    };\n    return QueryList_;\n}());\nvar QueryList = QueryList_;\n/**\n * Creates and returns a QueryList.\n *\n * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n * this is is a content query and the QueryList will be saved later through directiveCreate.\n * @param predicate The type for which the query will search\n * @param descend Whether or not to descend into children\n * @param read What to save in the query\n * @returns QueryList<T>\n */\nfunction query(memoryIndex, predicate, descend, read) {\n    ngDevMode && assertPreviousIsParent();\n    var queryList = new QueryList();\n    var queries = getCurrentQueries(LQueries_);\n    queries.track(queryList, predicate, descend, read);\n    storeCleanupWithContext(undefined, queryList, queryList.destroy);\n    if (memoryIndex != null) {\n        store(memoryIndex, queryList);\n    }\n    return queryList;\n}\n/**\n * Refreshes a query by combining matches from all active views and removing matches from deleted\n * views.\n * Returns true if a query got dirty during change detection, false otherwise.\n */\nfunction queryRefresh(queryList) {\n    var queryListImpl = queryList;\n    if (queryList.dirty) {\n        queryList.reset(queryListImpl._valuesTree);\n        queryList.notifyOnChanges();\n        return true;\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n *\n * This should be kept up to date with the public exports of @angular/core.\n */\nvar angularCoreEnv = {\n    'ÉµdefineComponent': defineComponent,\n    'ÉµdefineDirective': defineDirective,\n    'defineInjectable': defineInjectable,\n    'ÉµdefineNgModule': defineNgModule,\n    'ÉµdirectiveInject': directiveInject,\n    'inject': inject,\n    'ÉµinjectAttribute': injectAttribute,\n    'ÉµinjectChangeDetectorRef': injectChangeDetectorRef,\n    'ÉµinjectElementRef': injectElementRef,\n    'ÉµinjectTemplateRef': injectTemplateRef,\n    'ÉµinjectViewContainerRef': injectViewContainerRef,\n    'ÉµNgOnChangesFeature': NgOnChangesFeature,\n    'Éµa': elementAttribute,\n    'Éµb': bind,\n    'ÉµC': container,\n    'ÉµcR': containerRefreshStart,\n    'Éµcr': containerRefreshEnd,\n    'Éµd': loadDirective,\n    'ÉµE': elementStart,\n    'Éµe': elementEnd,\n    'Éµf0': pureFunction0,\n    'Éµf1': pureFunction1,\n    'Éµf2': pureFunction2,\n    'Éµf3': pureFunction3,\n    'Éµf4': pureFunction4,\n    'Éµf5': pureFunction5,\n    'Éµf6': pureFunction6,\n    'Éµf7': pureFunction7,\n    'Éµf8': pureFunction8,\n    'ÉµfV': pureFunctionV,\n    'Éµi1': interpolation1,\n    'Éµi2': interpolation2,\n    'Éµi3': interpolation3,\n    'Éµi4': interpolation4,\n    'Éµi5': interpolation5,\n    'Éµi6': interpolation6,\n    'Éµi7': interpolation7,\n    'Éµi8': interpolation8,\n    'Éµk': elementClass,\n    'Éµkn': elementClassNamed,\n    'ÉµL': listener,\n    'Éµld': load,\n    'Éµp': elementProperty,\n    'Éµpb1': pipeBind1,\n    'Éµpb2': pipeBind2,\n    'Éµpb3': pipeBind3,\n    'Éµpb4': pipeBind4,\n    'ÉµpbV': pipeBindV,\n    'ÉµQ': query,\n    'ÉµqR': queryRefresh,\n    'Éµs': elementStyle,\n    'Éµsn': elementStyleNamed,\n    'Éµst': store,\n    'ÉµT': text,\n    'Éµt': textBinding,\n    'ÉµV': embeddedViewStart,\n    'Éµv': embeddedViewEnd,\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TARGET = {};\nvar NG_COMPONENT_DEF = getClosureSafeProperty$1({ ngComponentDef: TARGET }, TARGET);\nvar NG_DIRECTIVE_DEF = getClosureSafeProperty$1({ ngDirectiveDef: TARGET }, TARGET);\nvar NG_PIPE_DEF = getClosureSafeProperty$1({ ngPipeDef: TARGET }, TARGET);\nvar NG_MODULE_DEF = getClosureSafeProperty$1({ ngModuleDef: TARGET }, TARGET);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_ARRAY$3 = [];\nfunction compileNgModule$1(type, ngModule) {\n    var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$3);\n    var def = null;\n    Object.defineProperty(type, NG_MODULE_DEF, {\n        get: function () {\n            if (def === null) {\n                var meta = {\n                    type: wrap(type),\n                    bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$3).map(wrap),\n                    declarations: declarations.map(wrap),\n                    imports: flatten$1(ngModule.imports || EMPTY_ARRAY$3).map(expandModuleWithProviders).map(wrap),\n                    exports: flatten$1(ngModule.exports || EMPTY_ARRAY$3).map(expandModuleWithProviders).map(wrap),\n                    emitInline: true,\n                };\n                var res = compiler.compileNgModule(meta);\n                def = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngModuleDef.js\");\n            }\n            return def;\n        },\n    });\n    declarations.forEach(function (declaration) {\n        // Some declared components may be compiled asynchronously, and thus may not have their\n        // ngComponentDef set yet. If this is the case, then a reference to the module is written into\n        // the `ngSelectorScope` property of the declared type.\n        if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n            // An `ngComponentDef` field exists - go ahead and patch the component directly.\n            patchComponentDefWithScope(declaration.ngComponentDef, type);\n        }\n        else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n            // Set `ngSelectorScope` for future reference when the component compilation finishes.\n            declaration.ngSelectorScope = type;\n        }\n    });\n}\n/**\n * Patch the definition of a component with directives and pipes from the compilation scope of\n * a given module.\n */\nfunction patchComponentDefWithScope(componentDef, module) {\n    componentDef.directiveDefs = function () { return Array.from(transitiveScopesFor(module).compilation.directives)\n        .map(function (dir) { return dir.ngDirectiveDef || dir.ngComponentDef; })\n        .filter(function (def) { return !!def; }); };\n    componentDef.pipeDefs = function () {\n        return Array.from(transitiveScopesFor(module).compilation.pipes).map(function (pipe) { return pipe.ngPipeDef; });\n    };\n}\n/**\n * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n *\n * This operation is memoized and the result is cached on the module's definition. It can be called\n * on modules with components that have not fully compiled yet, but the result should not be used\n * until they have.\n */\nfunction transitiveScopesFor(moduleType) {\n    if (!isNgModule(moduleType)) {\n        throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n    }\n    var def = moduleType.ngModuleDef;\n    if (def.transitiveCompileScopes !== null) {\n        return def.transitiveCompileScopes;\n    }\n    var scopes = {\n        compilation: {\n            directives: new Set(),\n            pipes: new Set(),\n        },\n        exported: {\n            directives: new Set(),\n            pipes: new Set(),\n        },\n    };\n    def.declarations.forEach(function (declared) {\n        var declaredWithDefs = declared;\n        if (declaredWithDefs.ngPipeDef !== undefined) {\n            scopes.compilation.pipes.add(declared);\n        }\n        else {\n            // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n            // had its template compiled yet. In either case, it gets added to the compilation's\n            // directives.\n            scopes.compilation.directives.add(declared);\n        }\n    });\n    def.imports.forEach(function (imported) {\n        var importedTyped = imported;\n        if (!isNgModule(importedTyped)) {\n            throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n        }\n        // When this module imports another, the imported module's exported directives and pipes are\n        // added to the compilation scope of this module.\n        var importedScope = transitiveScopesFor(importedTyped);\n        importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n        importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n    });\n    def.exports.forEach(function (exported) {\n        var exportedTyped = exported;\n        // Either the type is a module, a pipe, or a component/directive (which may not have an\n        // ngComponentDef as it might be compiled asynchronously).\n        if (isNgModule(exportedTyped)) {\n            // When this module exports another, the exported module's exported directives and pipes are\n            // added to both the compilation and exported scopes of this module.\n            var exportedScope = transitiveScopesFor(exportedTyped);\n            exportedScope.exported.directives.forEach(function (entry) {\n                scopes.compilation.directives.add(entry);\n                scopes.exported.directives.add(entry);\n            });\n            exportedScope.exported.pipes.forEach(function (entry) {\n                scopes.compilation.pipes.add(entry);\n                scopes.exported.pipes.add(entry);\n            });\n        }\n        else if (exportedTyped.ngPipeDef !== undefined) {\n            scopes.exported.pipes.add(exportedTyped);\n        }\n        else {\n            scopes.exported.directives.add(exportedTyped);\n        }\n    });\n    def.transitiveCompileScopes = scopes;\n    return scopes;\n}\nfunction flatten$1(values) {\n    var out = [];\n    values.forEach(function (value) {\n        if (Array.isArray(value)) {\n            out.push.apply(out, __spread(flatten$1(value)));\n        }\n        else {\n            out.push(value);\n        }\n    });\n    return out;\n}\nfunction expandModuleWithProviders(value) {\n    if (isModuleWithProviders(value)) {\n        return value.ngModule;\n    }\n    return value;\n}\nfunction wrap(value) {\n    return new compiler.WrappedNodeExpr(value);\n}\nfunction isModuleWithProviders(value) {\n    return value.ngModule !== undefined;\n}\nfunction isNgModule(value) {\n    return value.ngModuleDef !== undefined;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n *\n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {@link Query}.\n *\n * To instantiate Embedded Views based on a Template, use {@link ViewContainerRef#\n * createEmbeddedView}, which will create the View and attach it to the View Container.\n *\n */\nvar TemplateRef$1 = /** @class */ (function () {\n    function TemplateRef() {\n    }\n    return TemplateRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a container where one or more Views can be attached.\n *\n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n *\n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n *\n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n *\n * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n *\n */\nvar ViewContainerRef$1 = /** @class */ (function () {\n    function ViewContainerRef() {\n    }\n    return ViewContainerRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _reflect = null;\nfunction getReflect() {\n    return (_reflect = _reflect || new ReflectionCapabilities());\n}\nfunction reflectDependencies(type) {\n    return convertDependencies(getReflect().parameters(type));\n}\nfunction convertDependencies(deps) {\n    return deps.map(function (dep) { return reflectDependency(dep); });\n}\nfunction reflectDependency(dep) {\n    var meta = {\n        token: new compiler.LiteralExpr(null),\n        host: false,\n        optional: false,\n        resolved: compiler.R3ResolvedDependencyType.Token,\n        self: false,\n        skipSelf: false,\n    };\n    function setTokenAndResolvedType(token) {\n        if (token === ElementRef$1) {\n            meta.resolved = compiler.R3ResolvedDependencyType.ElementRef;\n        }\n        else if (token === Injector) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n        }\n        else if (token === TemplateRef$1) {\n            meta.resolved = compiler.R3ResolvedDependencyType.TemplateRef;\n        }\n        else if (token === ViewContainerRef$1) {\n            meta.resolved = compiler.R3ResolvedDependencyType.ViewContainerRef;\n        }\n        else {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n        }\n        meta.token = new compiler.WrappedNodeExpr(token);\n    }\n    if (Array.isArray(dep)) {\n        if (dep.length === 0) {\n            throw new Error('Dependency array must have arguments.');\n        }\n        for (var j = 0; j < dep.length; j++) {\n            var param = dep[j];\n            if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                meta.optional = true;\n            }\n            else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                meta.skipSelf = true;\n            }\n            else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                meta.self = true;\n            }\n            else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                meta.host = true;\n            }\n            else if (param instanceof Inject) {\n                meta.token = new compiler.WrappedNodeExpr(param.token);\n            }\n            else if (param instanceof Attribute) {\n                if (param.attributeName === undefined) {\n                    throw new Error(\"Attribute name must be defined.\");\n                }\n                meta.token = new compiler.LiteralExpr(param.attributeName);\n                meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n            }\n            else {\n                setTokenAndResolvedType(param);\n            }\n        }\n    }\n    else {\n        setTokenAndResolvedType(dep);\n    }\n    return meta;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _pendingPromises = [];\n/**\n * Compile an Angular component according to its decorator metadata, and patch the resulting\n * ngComponentDef onto the component type.\n *\n * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n * will return a `Promise` which will resolve when compilation completes and the component becomes\n * usable.\n */\nfunction compileComponent(type, metadata) {\n    // TODO(alxhub): implement ResourceLoader support for template compilation.\n    if (!metadata.template) {\n        throw new Error('templateUrl not yet supported');\n    }\n    var templateStr = metadata.template;\n    var def = null;\n    Object.defineProperty(type, NG_COMPONENT_DEF, {\n        get: function () {\n            if (def === null) {\n                // The ConstantPool is a requirement of the JIT'er.\n                var constantPool = new compiler.ConstantPool();\n                // Parse the template and check for errors.\n                var template = compiler.parseTemplate(templateStr, \"ng://\" + type.name + \"/template.html\");\n                if (template.errors !== undefined) {\n                    var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                    throw new Error(\"Errors during JIT compilation of template for \" + type.name + \": \" + errors);\n                }\n                // Compile the component metadata, including template, into an expression.\n                // TODO(alxhub): implement inputs, outputs, queries, etc.\n                var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [] }), constantPool, compiler.makeBindingParser());\n                def = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", constantPool);\n                // If component compilation is async, then the @NgModule annotation which declares the\n                // component may execute and set an ngSelectorScope property on the component type. This\n                // allows the component to patch itself with directiveDefs from the module after it finishes\n                // compiling.\n                if (hasSelectorScope(type)) {\n                    patchComponentDefWithScope(def, type.ngSelectorScope);\n                }\n            }\n            return def;\n        },\n    });\n    return null;\n}\nfunction hasSelectorScope(component) {\n    return component.ngSelectorScope !== undefined;\n}\n/**\n * Compile an Angular directive according to its decorator metadata, and patch the resulting\n * ngDirectiveDef onto the component type.\n *\n * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n * will resolve when compilation completes and the directive becomes usable.\n */\nfunction compileDirective(type, directive) {\n    var def = null;\n    Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n        get: function () {\n            if (def === null) {\n                var constantPool = new compiler.ConstantPool();\n                var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                def = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, constantPool);\n            }\n            return def;\n        },\n    });\n    return null;\n}\n/**\n * A wrapper around `compileComponent` which is intended to be used for the `@Component` decorator.\n *\n * This wrapper keeps track of the `Promise` returned by `compileComponent` and will cause\n * `awaitCurrentlyCompilingComponents` to wait on the compilation to be finished.\n */\nfunction compileComponentDecorator(type, metadata) {\n    var res = compileComponent(type, metadata);\n    if (res !== null) {\n        _pendingPromises.push(res);\n    }\n}\n/**\n * Returns a promise which will await the compilation of any `@Component`s which have been defined\n * since the last time `awaitCurrentlyCompilingComponents` was called.\n */\n\n/**\n * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n * `Component`).\n */\nfunction directiveMetadata(type, metadata) {\n    // Reflect inputs and outputs.\n    var props = getReflect().propMetadata(type);\n    var inputs = {};\n    var outputs = {};\n    var _loop_1 = function (field) {\n        props[field].forEach(function (ann) {\n            if (isInput(ann)) {\n                inputs[field] = ann.bindingPropertyName || field;\n            }\n            else if (isOutput(ann)) {\n                outputs[field] = ann.bindingPropertyName || field;\n            }\n        });\n    };\n    for (var field in props) {\n        _loop_1(field);\n    }\n    return {\n        name: type.name,\n        type: new compiler.WrappedNodeExpr(type),\n        selector: metadata.selector,\n        deps: reflectDependencies(type),\n        host: {\n            attributes: {},\n            listeners: {},\n            properties: {},\n        },\n        inputs: inputs,\n        outputs: outputs,\n        queries: [],\n        lifecycle: {\n            usesOnChanges: type.prototype.ngOnChanges !== undefined,\n        },\n        typeSourceSpan: null,\n    };\n}\nfunction isInput(value) {\n    return value.ngMetadataName === 'Input';\n}\nfunction isOutput(value) {\n    return value.ngMetadataName === 'Output';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n * `ngInjectableDef` onto the injectable type.\n */\nfunction compileInjectable$1(type, meta) {\n    // TODO(alxhub): handle JIT of bare @Injectable().\n    if (!meta) {\n        return;\n    }\n    var def = null;\n    Object.defineProperty(type, 'ngInjectableDef', {\n        get: function () {\n            if (def === null) {\n                // Check whether the injectable metadata includes a provider specification.\n                var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                    isUseValueProvider(meta) || isUseExistingProvider(meta);\n                var deps = undefined;\n                if (!hasAProvider || (isUseClassProvider(meta) && type === meta.useClass)) {\n                    deps = reflectDependencies(type);\n                }\n                else if (isUseClassProvider(meta)) {\n                    deps = meta.deps && convertDependencies(meta.deps);\n                }\n                else if (isUseFactoryProvider(meta)) {\n                    deps = meta.deps && convertDependencies(meta.deps) || [];\n                }\n                // Decide which flavor of factory to generate, based on the provider specified.\n                // Only one of the use* fields should be set.\n                var useClass = undefined;\n                var useFactory = undefined;\n                var useValue = undefined;\n                var useExisting = undefined;\n                if (!hasAProvider) {\n                    // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                    // The deps will have been reflected above, causing the factory to create the class by\n                    // calling\n                    // its constructor with injected deps.\n                    useClass = new compiler.WrappedNodeExpr(type);\n                }\n                else if (isUseClassProvider(meta)) {\n                    // The user explicitly specified useClass, and may or may not have provided deps.\n                    useClass = new compiler.WrappedNodeExpr(meta.useClass);\n                }\n                else if (isUseValueProvider(meta)) {\n                    // The user explicitly specified useValue.\n                    useValue = new compiler.WrappedNodeExpr(meta.useValue);\n                }\n                else if (isUseFactoryProvider(meta)) {\n                    // The user explicitly specified useFactory.\n                    useFactory = new compiler.WrappedNodeExpr(meta.useFactory);\n                }\n                else if (isUseExistingProvider(meta)) {\n                    // The user explicitly specified useExisting.\n                    useExisting = new compiler.WrappedNodeExpr(meta.useExisting);\n                }\n                else {\n                    // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                    throw new Error(\"Unreachable state.\");\n                }\n                var expression = compiler.compileInjectable({\n                    name: type.name,\n                    type: new compiler.WrappedNodeExpr(type),\n                    providedIn: computeProvidedIn(meta.providedIn),\n                    useClass: useClass,\n                    useFactory: useFactory,\n                    useValue: useValue,\n                    useExisting: useExisting,\n                    deps: deps,\n                }).expression;\n                def = compiler.jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\");\n            }\n            return def;\n        },\n    });\n}\nfunction computeProvidedIn(providedIn) {\n    if (providedIn == null || typeof providedIn === 'string') {\n        return new compiler.LiteralExpr(providedIn);\n    }\n    else {\n        return new compiler.WrappedNodeExpr(providedIn);\n    }\n}\nfunction isUseClassProvider(meta) {\n    return meta.useClass !== undefined;\n}\nvar GET_PROPERTY_NAME$2 = {};\nvar USE_VALUE$2 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$2 }, GET_PROPERTY_NAME$2);\nfunction isUseValueProvider(meta) {\n    return USE_VALUE$2 in meta;\n}\nfunction isUseFactoryProvider(meta) {\n    return meta.useFactory !== undefined;\n}\nfunction isUseExistingProvider(meta) {\n    return meta.useExisting !== undefined;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ivyEnabled = true;\nvar R3_COMPILE_COMPONENT = compileComponentDecorator;\nvar R3_COMPILE_DIRECTIVE = compileDirective;\nvar R3_COMPILE_INJECTABLE = compileInjectable$1;\nvar R3_COMPILE_NGMODULE = compileNgModule$1;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive decorator and metadata.\n *\n *\n * @Annotation\n */\nvar Directive = makeDecorator('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n}, undefined, undefined, function (type, meta) { return (R3_COMPILE_DIRECTIVE || (function () { }))(type, meta); });\n/**\n * Component decorator and metadata.\n *\n *\n * @Annotation\n */\nvar Component = makeDecorator('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n}, Directive, undefined, function (type, meta) { return (R3_COMPILE_COMPONENT || (function () { }))(type, meta); });\n/**\n * Pipe decorator and metadata.\n *\n * Use the `@Pipe` annotation to declare that a given class is a pipe. A pipe\n * class must also implement {@link PipeTransform} interface.\n *\n * To use the pipe include a reference to the pipe class in\n * {@link NgModule#declarations}.\n *\n *\n * @Annotation\n */\nvar Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * Input decorator and metadata.\n *\n *\n * @Annotation\n */\nvar Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * Output decorator and metadata.\n *\n *\n * @Annotation\n */\nvar Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * HostBinding decorator and metadata.\n *\n *\n * @Annotation\n */\nvar HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * HostListener decorator and metadata.\n *\n *\n * @Annotation\n */\nvar HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description Represents the version of Angular\n *\n *\n */\nvar Version = /** @class */ (function () {\n    function Version(full) {\n        this.full = full;\n        this.major = full.split('.')[0];\n        this.minor = full.split('.')[1];\n        this.patch = full.split('.').slice(2).join('.');\n    }\n    return Version;\n}());\nvar VERSION = new Version('6.1.0-beta.0+24.sha-5ef7a07');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine if the argument is shaped like a Promise\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n */\nfunction isObservable(obj) {\n    // TODO: use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n    return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A function that will be executed when an application is initialized.\n * @experimental\n */\nvar APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {@link APP_INITIALIZER}s.\n *\n * @experimental\n */\nvar ApplicationInitStatus = /** @class */ (function () {\n    function ApplicationInitStatus(appInits) {\n        var _this = this;\n        this.appInits = appInits;\n        this.initialized = false;\n        this.done = false;\n        this.donePromise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    /** @internal */\n    ApplicationInitStatus.prototype.runInitializers = function () {\n        var _this = this;\n        if (this.initialized) {\n            return;\n        }\n        var asyncInitPromises = [];\n        var complete = function () {\n            _this.done = true;\n            _this.resolve();\n        };\n        if (this.appInits) {\n            for (var i = 0; i < this.appInits.length; i++) {\n                var initResult = this.appInits[i]();\n                if (isPromise(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    };\n    ApplicationInitStatus = __decorate([\n        Injectable(),\n        __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n        __metadata(\"design:paramtypes\", [Array])\n    ], ApplicationInitStatus);\n    return ApplicationInitStatus;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n * using this token.\n * @experimental\n */\nvar APP_ID = new InjectionToken('AppId');\nfunction _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * @experimental\n */\nvar APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: [],\n};\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * @experimental\n */\nvar PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * @experimental\n */\nvar PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * @experimental\n */\nvar APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * @experimental\n */\nvar PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Console = /** @class */ (function () {\n    function Console() {\n    }\n    Console.prototype.log = function (message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    };\n    // Note: for reporting errors use `DOM.logError()` as it is platform specific\n    Console.prototype.warn = function (message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    };\n    Console = __decorate([\n        Injectable()\n    ], Console);\n    return Console;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * @experimental\n */\nvar ModuleWithComponentFactories = /** @class */ (function () {\n    function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n        this.ngModuleFactory = ngModuleFactory;\n        this.componentFactories = componentFactories;\n    }\n    return ModuleWithComponentFactories;\n}());\nfunction _throwError() {\n    throw new Error(\"Runtime compiler is not loaded\");\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n *\n */\nvar Compiler = /** @class */ (function () {\n    function Compiler() {\n    }\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     */\n    Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n    /**\n     * Compiles the given NgModule and all of its components\n     */\n    Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n    /**\n     * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n     */\n    Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     */\n    Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Clears all caches.\n     */\n    Compiler.prototype.clearCache = function () { };\n    /**\n     * Clears the cache for the given component/ngModule.\n     */\n    Compiler.prototype.clearCacheFor = function (type) { };\n    /**\n     * Returns the id for a given NgModule, if one is defined and known to the compiler.\n     */\n    Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n    Compiler = __decorate([\n        Injectable()\n    ], Compiler);\n    return Compiler;\n}());\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * @experimental\n */\nvar COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * @experimental\n */\nvar CompilerFactory = /** @class */ (function () {\n    function CompilerFactory() {\n    }\n    return CompilerFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar trace;\nvar events;\nfunction detectWTF() {\n    var wtf = _global /** TODO #9100 */['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\nfunction createScope(signature, flags) {\n    if (flags === void 0) { flags = null; }\n    return events.createScope(signature, flags);\n}\nfunction leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\nfunction startTimeRange(rangeType, action) {\n    return trace.beginTimeRange(rangeType, action);\n}\nfunction endTimeRange(range) {\n    trace.endTimeRange(range);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * True if WTF is enabled.\n */\nvar wtfEnabled = detectWTF();\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * @experimental\n */\nvar wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * @experimental\n */\nvar wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * @experimental\n */\nvar wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * @experimental\n */\nvar wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '@angular/core';\n * import {NgIf} from '@angular/common';\n *\n * @Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * @experimental\n */\nvar NgZone = /** @class */ (function () {\n    function NgZone(_a) {\n        var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueued in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error(\"In this configuration Angular requires Zone.js\");\n        }\n        Zone.assertZonePatched();\n        var self = this;\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if (Zone['wtfZoneSpec']) {\n            self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n        }\n        if (Zone['TaskTrackingZoneSpec']) {\n            self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n        }\n        if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n    NgZone.assertInAngularZone = function () {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    };\n    NgZone.assertNotInAngularZone = function () {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n        return this._inner.run(fn, applyThis, applyArgs);\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n        var zone = this._inner;\n        var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n        try {\n            return zone.runTask(task, applyThis, applyArgs);\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    };\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     */\n    NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n        return this._inner.runGuarded(fn, applyThis, applyArgs);\n    };\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n     */\n    NgZone.prototype.runOutsideAngular = function (fn) {\n        return this._outer.run(fn);\n    };\n    return NgZone;\n}());\nfunction noop() { }\nvar EMPTY_PAYLOAD = {};\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: { 'isAngularZone': true },\n        onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: function (delegate, current, target, hasTaskState) {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: function (delegate, current, target, error) {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n            return false;\n        }\n    });\n}\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nvar NoopNgZone = /** @class */ (function () {\n    function NoopNgZone() {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        this.isStable = true;\n        this.onUnstable = new EventEmitter();\n        this.onMicrotaskEmpty = new EventEmitter();\n        this.onStable = new EventEmitter();\n        this.onError = new EventEmitter();\n    }\n    NoopNgZone.prototype.run = function (fn) { return fn(); };\n    NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n    NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n    NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n    return NoopNgZone;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * @experimental\n */\nvar Testability = /** @class */ (function () {\n    function Testability(_ngZone) {\n        var _this = this;\n        this._ngZone = _ngZone;\n        this._pendingCount = 0;\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * @internal\n         */\n        this._didWork = false;\n        this._callbacks = [];\n        this._watchAngularEvents();\n        _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n    }\n    Testability.prototype._watchAngularEvents = function () {\n        var _this = this;\n        this._ngZone.onUnstable.subscribe({\n            next: function () {\n                _this._didWork = true;\n                _this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.subscribe({\n                next: function () {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(function () {\n                        _this._isZoneStable = true;\n                        _this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    };\n    /**\n     * Increases the number of pending request\n     * @deprecated pending requests are now tracked with zones.\n     */\n    Testability.prototype.increasePendingRequestCount = function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    /**\n     * Decreases the number of pending request\n     * @deprecated pending requests are now tracked with zones\n     */\n    Testability.prototype.decreasePendingRequestCount = function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    /**\n     * Whether an associated application is stable\n     */\n    Testability.prototype.isStable = function () {\n        return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    Testability.prototype._runCallbacksIfReady = function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    var cb = _this._callbacks.pop();\n                    clearTimeout(cb.timeoutId);\n                    cb.doneCb(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            // Still not stable, send updates.\n            var pending_1 = this.getPendingTasks();\n            this._callbacks = this._callbacks.filter(function (cb) {\n                if (cb.updateCb && cb.updateCb(pending_1)) {\n                    clearTimeout(cb.timeoutId);\n                    return false;\n                }\n                return true;\n            });\n            this._didWork = true;\n        }\n    };\n    Testability.prototype.getPendingTasks = function () {\n        if (!this.taskTrackingZone) {\n            return [];\n        }\n        return this.taskTrackingZone.macroTasks.map(function (t) {\n            return {\n                source: t.source,\n                isPeriodic: t.data.isPeriodic,\n                delay: t.data.delay,\n                // From TaskTrackingZone:\n                // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                creationLocation: t.creationLocation,\n                // Added by Zones for XHRs\n                // https://github.com/angular/zone.js/blob/master/lib/browser/browser.ts#L133\n                xhr: t.data.target\n            };\n        });\n    };\n    Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n        var _this = this;\n        var timeoutId = -1;\n        if (timeout && timeout > 0) {\n            timeoutId = setTimeout(function () {\n                _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                cb(_this._didWork, _this.getPendingTasks());\n            }, timeout);\n        }\n        this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n    };\n    /**\n     * Wait for the application to be stable with a timeout. If the timeout is reached before that\n     * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n     *\n     * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n     *    whichever comes first.\n     * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n     *    specified, whenStable() will wait forever.\n     * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n     *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n     *    and no further updates will be issued.\n     */\n    Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n        if (updateCb && !this.taskTrackingZone) {\n            throw new Error('Task tracking zone is required when passing an update callback to ' +\n                'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n        }\n        // These arguments are 'Function' above to keep the public API simple.\n        this.addCallback(doneCb, timeout, updateCb);\n        this._runCallbacksIfReady();\n    };\n    /**\n     * Get the number of pending requests\n     * @deprecated pending requests are now tracked with zones\n     */\n    Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n    /**\n     * Find providers by name\n     * @param using The root element to search from\n     * @param provider The name of binding variable\n     * @param exactMatch Whether using exactMatch\n     */\n    Testability.prototype.findProviders = function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    Testability = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [NgZone])\n    ], Testability);\n    return Testability;\n}());\n/**\n * A global registry of {@link Testability} instances for specific elements.\n * @experimental\n */\nvar TestabilityRegistry = /** @class */ (function () {\n    function TestabilityRegistry() {\n        /** @internal */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param token token of application, root element\n     * @param testability Testability hook\n     */\n    TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    /**\n     * Unregisters an application.\n     * @param token token of application, root element\n     */\n    TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n    /**\n     * Unregisters all applications\n     */\n    TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n    /**\n     * Get a testability hook associated with the application\n     * @param elem root element\n     */\n    TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n    /**\n     * Get all registered testabilities\n     */\n    TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n    /**\n     * Get all registered applications(root elements)\n     */\n    TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n    /**\n     * Find testability of a node in the Tree\n     * @param elem node\n     * @param findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     */\n    TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    TestabilityRegistry = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], TestabilityRegistry);\n    return TestabilityRegistry;\n}());\nvar _NoopGetTestability = /** @class */ (function () {\n    function _NoopGetTestability() {\n    }\n    _NoopGetTestability.prototype.addToWindow = function (registry) { };\n    _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\n/**\n * Set the {@link GetTestability} implementation used by the Angular testing framework.\n * @experimental\n */\nfunction setTestabilityGetter(getter) {\n    _testabilityGetter = getter;\n}\nvar _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _devMode = true;\nvar _runModeLocked = false;\nvar _platform;\nvar ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n *\n */\nfunction enableProdMode() {\n    if (_runModeLocked) {\n        throw new Error('Cannot enable prod mode after platform setup.');\n    }\n    _devMode = false;\n}\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * @experimental\n */\nvar NgProbeToken = /** @class */ (function () {\n    function NgProbeToken(name, token) {\n        this.name = name;\n        this.token = token;\n    }\n    return NgProbeToken;\n}());\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    var inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach(function (init) { return init(); });\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers) {\n    if (providers === void 0) { providers = []; }\n    var desc = \"Platform: \" + name;\n    var marker = new InjectionToken(desc);\n    return function (extraProviders) {\n        if (extraProviders === void 0) { extraProviders = []; }\n        var platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction assertPlatform(requiredToken) {\n    var platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Destroy the existing platform.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction destroyPlatform() {\n    if (_platform && !_platform.destroyed) {\n        _platform.destroy();\n    }\n}\n/**\n * Returns the current platform.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n *\n *\n */\nvar PlatformRef = /** @class */ (function () {\n    /** @internal */\n    function PlatformRef(_injector) {\n        this._injector = _injector;\n        this._modules = [];\n        this._destroyListeners = [];\n        this._destroyed = false;\n    }\n    /**\n     * Creates an instance of an `@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n        var _this = this;\n        // Note: We need to create the NgZone _before_ we instantiate the module,\n        // as instantiating the module creates some providers eagerly.\n        // So we create a mini parent injector that just contains the new NgZone and\n        // pass that as parent to the NgModuleFactory.\n        var ngZoneOption = options ? options.ngZone : undefined;\n        var ngZone = getNgZone(ngZoneOption);\n        var providers = [{ provide: NgZone, useValue: ngZone }];\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(function () {\n            var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n            var moduleRef = moduleFactory.create(ngZoneInjector);\n            var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n            ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n            return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(function () {\n                    _this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    };\n    /**\n     * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     *\n     */\n    PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        var compilerFactory = this.injector.get(CompilerFactory);\n        var options = optionsReducer({}, compilerOptions);\n        var compiler$$1 = compilerFactory.createCompiler([options]);\n        return compiler$$1.compileModuleAsync(moduleType)\n            .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n    };\n    PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n        var appRef = moduleRef.injector.get(ApplicationRef);\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                \"Please define one of these.\");\n        }\n        this._modules.push(moduleRef);\n    };\n    /**\n     * Register a listener to be called when the platform is disposed.\n     */\n    PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n    Object.defineProperty(PlatformRef.prototype, \"injector\", {\n        /**\n         * Retrieve the platform {@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         */\n        get: function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     */\n    PlatformRef.prototype.destroy = function () {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(function (module) { return module.destroy(); });\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n        this._destroyed = true;\n    };\n    Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n        get: function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    PlatformRef = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [Injector])\n    ], PlatformRef);\n    return PlatformRef;\n}());\nfunction getNgZone(ngZoneOption) {\n    var ngZone;\n    if (ngZoneOption === 'noop') {\n        ngZone = new NoopNgZone();\n    }\n    else {\n        ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n            new NgZone({ enableLongStackTrace: isDevMode() });\n    }\n    return ngZone;\n}\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        var result = callback();\n        if (isPromise(result)) {\n            return result.catch(function (e) {\n                ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (e) {\n        ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\nfunction optionsReducer(dst, objs) {\n    if (Array.isArray(objs)) {\n        dst = objs.reduce(optionsReducer, dst);\n    }\n    else {\n        dst = __assign({}, dst, objs);\n    }\n    return dst;\n}\n/**\n * A reference to an Angular application running on a page.\n *\n *\n */\nvar ApplicationRef = /** @class */ (function () {\n    /** @internal */\n    function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        var _this = this;\n        this._zone = _zone;\n        this._console = _console;\n        this._injector = _injector;\n        this._exceptionHandler = _exceptionHandler;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._initStatus = _initStatus;\n        this._bootstrapListeners = [];\n        this._views = [];\n        this._runningTick = false;\n        this._enforceNoNewChanges = false;\n        this._stable = true;\n        /**\n         * Get a list of component types registered to this application.\n         * This list is populated even before the component is created.\n         */\n        this.componentTypes = [];\n        /**\n         * Get a list of components registered to this application.\n         */\n        this.components = [];\n        this._enforceNoNewChanges = isDevMode();\n        this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        var isCurrentlyStable = new rxjs.Observable(function (observer) {\n            _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                !_this._zone.hasPendingMicrotasks;\n            _this._zone.runOutsideAngular(function () {\n                observer.next(_this._stable);\n                observer.complete();\n            });\n        });\n        var isStable = new rxjs.Observable(function (observer) {\n            // Create the subscription to onStable outside the Angular Zone so that\n            // the callback is run outside the Angular Zone.\n            var stableSub;\n            _this._zone.runOutsideAngular(function () {\n                stableSub = _this._zone.onStable.subscribe(function () {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(function () {\n                        if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                            !_this._zone.hasPendingMicrotasks) {\n                            _this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                NgZone.assertInAngularZone();\n                if (_this._stable) {\n                    _this._stable = false;\n                    _this._zone.runOutsideAngular(function () { observer.next(false); });\n                }\n            });\n            return function () {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        this.isStable =\n            rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n    }\n    ApplicationRef_1 = ApplicationRef;\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {@example core/ts/platform/platform.ts region='longform'}\n     */\n    ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n        var _this = this;\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        var componentFactory;\n        if (componentOrFactory instanceof ComponentFactory$1) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory =\n                this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n        }\n        this.componentTypes.push(componentFactory.componentType);\n        // Create a factory associated with the current module if it's not bound to some other\n        var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef$1);\n        var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n        var testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n        }\n        return compRef;\n    };\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     */\n    ApplicationRef.prototype.tick = function () {\n        var _this = this;\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        var scope = ApplicationRef_1._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach(function (view) { return view.detectChanges(); });\n            if (this._enforceNoNewChanges) {\n                this._views.forEach(function (view) { return view.checkNoChanges(); });\n            }\n        }\n        catch (e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    };\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     */\n    ApplicationRef.prototype.attachView = function (viewRef) {\n        var view = viewRef;\n        this._views.push(view);\n        view.attachToAppRef(this);\n    };\n    /**\n     * Detaches a view from dirty checking again.\n     */\n    ApplicationRef.prototype.detachView = function (viewRef) {\n        var view = viewRef;\n        remove(this._views, view);\n        view.detachFromAppRef();\n    };\n    ApplicationRef.prototype._loadComponent = function (componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this.components.push(componentRef);\n        // Get the listeners lazily to prevent DI cycles.\n        var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach(function (listener) { return listener(componentRef); });\n    };\n    ApplicationRef.prototype._unloadComponent = function (componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this.components, componentRef);\n    };\n    /** @internal */\n    ApplicationRef.prototype.ngOnDestroy = function () {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach(function (view) { return view.destroy(); });\n    };\n    Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n        /**\n         * Returns the number of attached views.\n         */\n        get: function () { return this._views.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n    ApplicationRef = ApplicationRef_1 = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n            ErrorHandler,\n            ComponentFactoryResolver$1,\n            ApplicationInitStatus])\n    ], ApplicationRef);\n    return ApplicationRef;\n    var ApplicationRef_1;\n}());\nfunction remove(list, el) {\n    var index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for Zone\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for render\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to load ng module factories.\n *\n */\nvar NgModuleFactoryLoader = /** @class */ (function () {\n    function NgModuleFactoryLoader() {\n    }\n    return NgModuleFactoryLoader;\n}());\nvar moduleFactories = new Map();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * @experimental\n */\nfunction registerModuleFactory(id, factory) {\n    var existing = moduleFactories.get(id);\n    if (existing) {\n        throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n    }\n    moduleFactories.set(id, factory);\n}\n\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * @experimental\n */\nfunction getModuleFactory(id) {\n    var factory = moduleFactories.get(id);\n    if (!factory)\n        throw new Error(\"No module with ID \" + id + \" loaded\");\n    return factory;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * @Component({...})\n * class Container {\n *   @ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n *\n */\nvar QueryList$1 = /** @class */ (function () {\n    function QueryList() {\n        this.dirty = true;\n        this._results = [];\n        this.changes = new EventEmitter();\n        this.length = 0;\n    }\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    QueryList.prototype.filter = function (fn) {\n        return this._results.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    QueryList.prototype.find = function (fn) {\n        return this._results.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    QueryList.prototype.reduce = function (fn, init) {\n        return this._results.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    QueryList.prototype.some = function (fn) {\n        return this._results.some(fn);\n    };\n    QueryList.prototype.toArray = function () { return this._results.slice(); };\n    QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n    QueryList.prototype.toString = function () { return this._results.toString(); };\n    QueryList.prototype.reset = function (res) {\n        this._results = flatten$2(res);\n        this.dirty = false;\n        this.length = this._results.length;\n        this.last = this._results[this.length - 1];\n        this.first = this._results[0];\n    };\n    QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n    /** internal */\n    QueryList.prototype.setDirty = function () { this.dirty = true; };\n    /** internal */\n    QueryList.prototype.destroy = function () {\n        this.changes.complete();\n        this.changes.unsubscribe();\n    };\n    return QueryList;\n}());\nfunction flatten$2(list) {\n    return list.reduce(function (flat, item) {\n        var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n        return flat.concat(flatItem);\n    }, []);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SEPARATOR = '#';\nvar FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * @experimental\n */\nvar SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n    function SystemJsNgModuleLoaderConfig() {\n    }\n    return SystemJsNgModuleLoaderConfig;\n}());\nvar DEFAULT_CONFIG = {\n    factoryPathPrefix: '',\n    factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * @experimental\n */\nvar SystemJsNgModuleLoader = /** @class */ (function () {\n    function SystemJsNgModuleLoader(_compiler, config) {\n        this._compiler = _compiler;\n        this._config = config || DEFAULT_CONFIG;\n    }\n    SystemJsNgModuleLoader.prototype.load = function (path) {\n        var offlineMode = this._compiler instanceof Compiler;\n        return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n    };\n    SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n        var _this = this;\n        var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n        if (exportName === undefined) {\n            exportName = 'default';\n        }\n        return System.import(module)\n            .then(function (module) { return module[exportName]; })\n            .then(function (type) { return checkNotEmpty(type, module, exportName); })\n            .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n    };\n    SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n        var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n        var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n        if (exportName === undefined) {\n            exportName = 'default';\n            factoryClassSuffix = '';\n        }\n        return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n            .then(function (module) { return module[exportName + factoryClassSuffix]; })\n            .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n    };\n    SystemJsNgModuleLoader = __decorate([\n        Injectable(),\n        __param(1, Optional()),\n        __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n    ], SystemJsNgModuleLoader);\n    return SystemJsNgModuleLoader;\n}());\nfunction checkNotEmpty(value, modulePath, exportName) {\n    if (!value) {\n        throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n    }\n    return value;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ViewRef$1 = /** @class */ (function (_super) {\n    __extends(ViewRef, _super);\n    function ViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ViewRef;\n}(ChangeDetectorRef));\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two {@link TemplateRef}s:\n *\n * Outer {@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner {@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate {@link TemplateRef}s.\n *\n * The outer/inner {@link TemplateRef}s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * @experimental\n */\nvar EmbeddedViewRef$1 = /** @class */ (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef$1));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for compiler\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventListener = /** @class */ (function () {\n    function EventListener(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n    return EventListener;\n}());\n/**\n * @experimental All debugging apis are currently experimental.\n */\nvar DebugNode = /** @class */ (function () {\n    function DebugNode(nativeNode, parent, _debugContext) {\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement) {\n            parent.addChild(this);\n        }\n        else {\n            this.parent = null;\n        }\n        this.listeners = [];\n    }\n    Object.defineProperty(DebugNode.prototype, \"injector\", {\n        get: function () { return this._debugContext.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n        get: function () { return this._debugContext.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"context\", {\n        get: function () { return this._debugContext.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"references\", {\n        get: function () { return this._debugContext.references; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n        get: function () { return this._debugContext.providerTokens; },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode;\n}());\n/**\n * @experimental All debugging apis are currently experimental.\n */\nvar DebugElement = /** @class */ (function (_super) {\n    __extends(DebugElement, _super);\n    function DebugElement(nativeNode, parent, _debugContext) {\n        var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n        _this.properties = {};\n        _this.attributes = {};\n        _this.classes = {};\n        _this.styles = {};\n        _this.childNodes = [];\n        _this.nativeElement = nativeNode;\n        return _this;\n    }\n    DebugElement.prototype.addChild = function (child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    };\n    DebugElement.prototype.removeChild = function (child) {\n        var childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    };\n    DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n        var _this = this;\n        var siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n            newChildren.forEach(function (c) {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                c.parent = _this;\n            });\n        }\n        var _a;\n    };\n    DebugElement.prototype.insertBefore = function (refChild, newChild) {\n        var refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    };\n    DebugElement.prototype.query = function (predicate) {\n        var results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    DebugElement.prototype.queryAll = function (predicate) {\n        var matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    };\n    DebugElement.prototype.queryAllNodes = function (predicate) {\n        var matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    };\n    Object.defineProperty(DebugElement.prototype, \"children\", {\n        get: function () {\n            return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement;\n}(DebugNode));\n/**\n * @experimental\n */\nfunction asNativeElements(debugEls) {\n    return debugEls.map(function (el) { return el.nativeElement; });\n}\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(function (node) {\n        if (node instanceof DebugElement) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nvar _nativeNodeToDebugNode = new Map();\n/**\n * @experimental\n */\nfunction getDebugNode(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Change detection enables data binding in Angular.\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef, deps: [Injector] },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/**\n * This platform has to be included in any other platform\n *\n * @experimental\n */\nvar platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provide this token to set the locale of your application.\n * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n * DecimalPipe and PercentPipe) and by ICU expressions.\n *\n * See the {@linkDocs guide/i18n#setting-up-locale i18n guide} for more information.\n *\n * ### Example\n *\n * ```typescript\n * import { LOCALE_ID } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\nvar LOCALE_ID = new InjectionToken('LocaleId');\n/**\n * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n * `xlf` or `xlf2`) when you want to translate your application in another language.\n *\n * See the {@linkDocs guide/i18n#merge i18n guide} for more information.\n *\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * // content of your translation file\n * const translations = '....';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\nvar TRANSLATIONS = new InjectionToken('Translations');\n/**\n * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n * `xlf` or `xlf2`.\n *\n * See the {@linkDocs guide/i18n#merge i18n guide} for more information.\n *\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS_FORMAT } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\nvar TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n/**\n * Use this enum at bootstrap as an option of `bootstrapModule` to define the strategy\n * that the compiler should use in case of missing translations:\n * - Error: throw if you have missing translations.\n * - Warning (default): show a warning in the console and/or shell.\n * - Ignore: do nothing.\n *\n * See the {@linkDocs guide/i18n#missing-translation i18n guide} for more information.\n *\n * ### Example\n * ```typescript\n * import { MissingTranslationStrategy } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   missingTranslation: MissingTranslationStrategy.Error\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\n\n(function (MissingTranslationStrategy) {\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n})(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\nfunction _localeFactory(locale) {\n    return locale || 'en-US';\n}\nvar APPLICATION_MODULE_PROVIDERS = [\n    {\n        provide: ApplicationRef,\n        useClass: ApplicationRef,\n        deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver$1, ApplicationInitStatus]\n    },\n    {\n        provide: ApplicationInitStatus,\n        useClass: ApplicationInitStatus,\n        deps: [[new Optional(), APP_INITIALIZER]]\n    },\n    { provide: Compiler, useClass: Compiler, deps: [] },\n    APP_ID_RANDOM_PROVIDER,\n    { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n    { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n    {\n        provide: LOCALE_ID,\n        useFactory: _localeFactory,\n        deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n    },\n];\n/**\n * This module includes the providers of @angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n *\n * @experimental\n */\nvar ApplicationModule = /** @class */ (function () {\n    // Inject ApplicationRef to make it eager...\n    function ApplicationModule(appRef) {\n    }\n    ApplicationModule = __decorate([\n        NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n        __metadata(\"design:paramtypes\", [ApplicationRef])\n    ], ApplicationModule);\n    return ApplicationModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n * that needs sanitizing.\n * Depending upon browser support we must use one of three strategies for doing this.\n * Support: Safari 10.x -> XHR strategy\n * Support: Firefox -> DomParser strategy\n * Default: InertDocument strategy\n */\nvar InertBodyHelper = /** @class */ (function () {\n    function InertBodyHelper(defaultDoc) {\n        this.defaultDoc = defaultDoc;\n        this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n        this.inertBodyElement = this.inertDocument.body;\n        if (this.inertBodyElement == null) {\n            // usually there should be only one body element in the document, but IE doesn't have any, so\n            // we need to create one.\n            var inertHtml = this.inertDocument.createElement('html');\n            this.inertDocument.appendChild(inertHtml);\n            this.inertBodyElement = this.inertDocument.createElement('body');\n            inertHtml.appendChild(this.inertBodyElement);\n        }\n        this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n        if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n            // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n            // so use the XHR strategy.\n            this.getInertBodyElement = this.getInertBodyElement_XHR;\n            return;\n        }\n        this.inertBodyElement.innerHTML =\n            '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n        if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n            // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n            // so use the DOMParser strategy, if it is available.\n            // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n            // fall through to the default strategy below.\n            if (isDOMParserAvailable()) {\n                this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                return;\n            }\n        }\n        // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n        this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n    }\n    /**\n     * Use XHR to create and fill an inert body element (on Safari 10.1)\n     * See\n     * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n     */\n    InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n        // We add these extra elements to ensure that the rest of the content is parsed as expected\n        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n        // `<head>` tag.\n        html = '<body><remove></remove>' + html + '</body>';\n        try {\n            html = encodeURI(html);\n        }\n        catch (e) {\n            return null;\n        }\n        var xhr = new XMLHttpRequest();\n        xhr.responseType = 'document';\n        xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n        xhr.send(null);\n        var body = xhr.response.body;\n        body.removeChild(body.firstChild);\n        return body;\n    };\n    /**\n     * Use DOMParser to create and fill an inert body element (on Firefox)\n     * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n     *\n     */\n    InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n        // We add these extra elements to ensure that the rest of the content is parsed as expected\n        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n        // `<head>` tag.\n        html = '<body><remove></remove>' + html + '</body>';\n        try {\n            var body = new window\n                .DOMParser()\n                .parseFromString(html, 'text/html')\n                .body;\n            body.removeChild(body.firstChild);\n            return body;\n        }\n        catch (e) {\n            return null;\n        }\n    };\n    /**\n     * Use an HTML5 `template` element, if supported, or an inert body element created via\n     * `createHtmlDocument` to create and fill an inert DOM element.\n     * This is the default sane strategy to use if the browser does not require one of the specialised\n     * strategies above.\n     */\n    InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n        // Prefer using <template> element if supported.\n        var templateEl = this.inertDocument.createElement('template');\n        if ('content' in templateEl) {\n            templateEl.innerHTML = html;\n            return templateEl;\n        }\n        this.inertBodyElement.innerHTML = html;\n        // Support: IE 9-11 only\n        // strip custom-namespaced attributes on IE<=11\n        if (this.defaultDoc.documentMode) {\n            this.stripCustomNsAttrs(this.inertBodyElement);\n        }\n        return this.inertBodyElement;\n    };\n    /**\n     * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n     * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n     * 'ns1:xlink:foo').\n     *\n     * This is undesirable since we don't want to allow any of these custom attributes. This method\n     * strips them all.\n     */\n    InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n        var elAttrs = el.attributes;\n        // loop backwards so that we can support removals.\n        for (var i = elAttrs.length - 1; 0 < i; i--) {\n            var attrib = elAttrs.item(i);\n            var attrName = attrib.name;\n            if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                el.removeAttribute(attrName);\n            }\n        }\n        var childNode = el.firstChild;\n        while (childNode) {\n            if (childNode.nodeType === Node.ELEMENT_NODE)\n                this.stripCustomNsAttrs(childNode);\n            childNode = childNode.nextSibling;\n        }\n    };\n    return InertBodyHelper;\n}());\n/**\n * We need to determine whether the DOMParser exists in the global context.\n * The try-catch is because, on some browsers, trying to access this property\n * on window can actually throw an error.\n *\n * @suppress {uselessCode}\n */\nfunction isDOMParserAvailable() {\n    try {\n        return !!window.DOMParser;\n    }\n    catch (e) {\n        return false;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n *\n * This regular expression matches a subset of URLs that will not cause script\n * execution if used in URL context within a HTML document. Specifically, this\n * regular expression matches if (comment from here on and regex copied from\n * Soy's EscapingConventions):\n * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n * (2) or no protocol.  A protocol must be followed by a colon. The below\n *     allows that by allowing colons only after one of the characters [/?#].\n *     A colon after a hash (#) must be in the fragment.\n *     Otherwise, a colon after a (?) must be in a query.\n *     Otherwise, a colon after a single solidus (/) must be in a path.\n *     Otherwise, a colon after a double solidus (//) must be in the authority\n *     (before port).\n *\n * The pattern disallows &, used in HTML entity declarations before\n * one of the characters in [/?#]. This disallows HTML entities used in the\n * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n * It also disallows HTML entities in the first path part of a relative path,\n * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n * that. More importantly, it disallows masking of a colon,\n * e.g. \"javascript&#58;...\".\n *\n * This regular expression was taken from the Closure sanitization library.\n */\nvar SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n/** A pattern that matches safe data URLs. Only matches image, video and audio types. */\nvar DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\nfunction _sanitizeUrl(url) {\n    url = String(url);\n    if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n        return url;\n    if (isDevMode()) {\n        console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n    }\n    return 'unsafe:' + url;\n}\nfunction sanitizeSrcset(srcset) {\n    srcset = String(srcset);\n    return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction tagSet(tags) {\n    var res = {};\n    try {\n        for (var _a = __values(tags.split(',')), _b = _a.next(); !_b.done; _b = _a.next()) {\n            var t = _b.value;\n            res[t] = true;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return res;\n    var e_1, _c;\n}\nfunction merge$1() {\n    var sets = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sets[_i] = arguments[_i];\n    }\n    var res = {};\n    try {\n        for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n            var s = sets_1_1.value;\n            for (var v in s) {\n                if (s.hasOwnProperty(v))\n                    res[v] = true;\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return res;\n    var e_2, _a;\n}\n// Good source of info about elements and attributes\n// http://dev.w3.org/html5/spec/Overview.html#semantics\n// http://simon.html5.org/html-elements\n// Safe Void Elements - HTML5\n// http://dev.w3.org/html5/spec/Overview.html#void-elements\nvar VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n// Elements that you can, intentionally, leave open (and which close themselves)\n// http://dev.w3.org/html5/spec/Overview.html#optional-tags\nvar OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\nvar OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\nvar OPTIONAL_END_TAG_ELEMENTS = merge$1(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n// Safe Block Elements - HTML5\nvar BLOCK_ELEMENTS = merge$1(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n    'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n    'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n// Inline Elements - HTML5\nvar INLINE_ELEMENTS = merge$1(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n    'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n    'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\nvar VALID_ELEMENTS = merge$1(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n// Attributes that have href and hence need to be sanitized\nvar URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n// Attributes that have special href set hence need to be sanitized\nvar SRCSET_ATTRS = tagSet('srcset');\nvar HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n    'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n    'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n    'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n    'valign,value,vspace,width');\n// NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n// issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n// innerHTML is required, SVG attributes should be added here.\n// NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n// can be sanitized, but they increase security surface area without a legitimate use case, so they\n// are left out here.\nvar VALID_ATTRS = merge$1(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n/**\n * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n * attributes.\n */\nvar SanitizingHtmlSerializer = /** @class */ (function () {\n    function SanitizingHtmlSerializer() {\n        // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n        // because characters were re-encoded.\n        this.sanitizedSomething = false;\n        this.buf = [];\n    }\n    SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n        // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n        // However this code never accesses properties off of `document` before deleting its contents\n        // again, so it shouldn't be vulnerable to DOM clobbering.\n        var current = el.firstChild;\n        while (current) {\n            if (current.nodeType === Node.ELEMENT_NODE) {\n                this.startElement(current);\n            }\n            else if (current.nodeType === Node.TEXT_NODE) {\n                this.chars(current.nodeValue);\n            }\n            else {\n                // Strip non-element, non-text nodes.\n                this.sanitizedSomething = true;\n            }\n            if (current.firstChild) {\n                current = current.firstChild;\n                continue;\n            }\n            while (current) {\n                // Leaving the element. Walk up and to the right, closing tags as we go.\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.endElement(current);\n                }\n                var next = this.checkClobberedElement(current, current.nextSibling);\n                if (next) {\n                    current = next;\n                    break;\n                }\n                current = this.checkClobberedElement(current, current.parentNode);\n            }\n        }\n        return this.buf.join('');\n    };\n    SanitizingHtmlSerializer.prototype.startElement = function (element) {\n        var tagName = element.nodeName.toLowerCase();\n        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.sanitizedSomething = true;\n            return;\n        }\n        this.buf.push('<');\n        this.buf.push(tagName);\n        var elAttrs = element.attributes;\n        for (var i = 0; i < elAttrs.length; i++) {\n            var elAttr = elAttrs.item(i);\n            var attrName = elAttr.name;\n            var lower = attrName.toLowerCase();\n            if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                this.sanitizedSomething = true;\n                continue;\n            }\n            var value = elAttr.value;\n            // TODO(martinprobst): Special case image URIs for data:image/...\n            if (URI_ATTRS[lower])\n                value = _sanitizeUrl(value);\n            if (SRCSET_ATTRS[lower])\n                value = sanitizeSrcset(value);\n            this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n        }\n        this.buf.push('>');\n    };\n    SanitizingHtmlSerializer.prototype.endElement = function (current) {\n        var tagName = current.nodeName.toLowerCase();\n        if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.buf.push('</');\n            this.buf.push(tagName);\n            this.buf.push('>');\n        }\n    };\n    SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n    SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n        if (nextNode &&\n            (node.compareDocumentPosition(nextNode) &\n                Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n            throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n        }\n        return nextNode;\n    };\n    return SanitizingHtmlSerializer;\n}());\n// Regular Expressions for parsing tags and attributes\nvar SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n// ! to ~ is the ASCII range.\nvar NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n * @param value\n */\nfunction encodeEntities(value) {\n    return value.replace(/&/g, '&amp;')\n        .replace(SURROGATE_PAIR_REGEXP, function (match) {\n        var hi = match.charCodeAt(0);\n        var low = match.charCodeAt(1);\n        return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n    })\n        .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n}\nvar inertBodyHelper;\n/**\n * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n * the DOM in a browser environment.\n */\nfunction _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n    var inertBodyElement = null;\n    try {\n        inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n        // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n        var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n        inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n        // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n        var mXSSAttempts = 5;\n        var parsedHtml = unsafeHtml;\n        do {\n            if (mXSSAttempts === 0) {\n                throw new Error('Failed to sanitize html because the input is unstable');\n            }\n            mXSSAttempts--;\n            unsafeHtml = parsedHtml;\n            parsedHtml = inertBodyElement.innerHTML;\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        } while (unsafeHtml !== parsedHtml);\n        var sanitizer = new SanitizingHtmlSerializer();\n        var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n        if (isDevMode() && sanitizer.sanitizedSomething) {\n            console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n        }\n        return safeHtml;\n    }\n    finally {\n        // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n        if (inertBodyElement) {\n            var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n            while (parent_1.firstChild) {\n                parent_1.removeChild(parent_1.firstChild);\n            }\n        }\n    }\n}\nfunction getTemplateContent(el) {\n    return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n        el.content :\n        null;\n}\nfunction isTemplateElement(el) {\n    return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Regular expression for safe style values.\n *\n * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n *\n * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n * of XSS.\n *\n * The function expression checks only for XSS safety, not for CSS validity.\n *\n * This regular expression was taken from the Closure sanitization library, and augmented for\n * transformation values.\n */\nvar VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\nvar TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\nvar COLOR_FNS = '(?:rgb|hsl)a?';\nvar GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\nvar CSS3_FNS = '(?:calc|attr)';\nvar FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\nvar SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n    (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n    (FN_ARGS + \")$\"), 'g');\n/**\n * Matches a `url(...)` value with an arbitrary argument as long as it does\n * not contain parentheses.\n *\n * The URL value still needs to be sanitized separately.\n *\n * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n * by observing whether scroll bars are displayed, or character ranges used by a font face\n * definition.\n *\n * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n * binding a URL value without further cooperation from the page will cause an information leak, and\n * if so, it is just a leak, not a full blown XSS vulnerability.\n *\n * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n * code is permissive and allows URLs that sanitize otherwise.\n */\nvar URL_RE = /^url\\(([^)]+)\\)$/;\n/**\n * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n * that neither escape (\\) nor any other character that could result in\n * breaking out of a string parsing context are allowed;\n * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n *\n * This code was taken from the Closure sanitization library.\n */\nfunction hasBalancedQuotes(value) {\n    var outsideSingle = true;\n    var outsideDouble = true;\n    for (var i = 0; i < value.length; i++) {\n        var c = value.charAt(i);\n        if (c === '\\'' && outsideDouble) {\n            outsideSingle = !outsideSingle;\n        }\n        else if (c === '\"' && outsideSingle) {\n            outsideDouble = !outsideDouble;\n        }\n    }\n    return outsideSingle && outsideDouble;\n}\n/**\n * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n * value) and returns a value that is safe to use in a browser environment.\n */\nfunction _sanitizeStyle(value) {\n    value = String(value).trim(); // Make sure it's actually a string.\n    if (!value)\n        return '';\n    // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n    // reasoning behind this.\n    var urlMatch = value.match(URL_RE);\n    if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n        value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n        return value; // Safe style values.\n    }\n    if (isDevMode()) {\n        console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n    }\n    return 'unsafe';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property\n * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly\n * handled.\n *\n * See DomSanitizer for more details on security in Angular applications.\n *\n *\n */\n\n(function (SecurityContext) {\n    SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n    SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n    SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n    SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n    SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n    SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n})(exports.SecurityContext || (exports.SecurityContext = {}));\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n *\n */\nvar Sanitizer = /** @class */ (function () {\n    function Sanitizer() {\n    }\n    return Sanitizer;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n    flags |= 1 /* TypeElement */;\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var template = templateFactory ? resolveDefinition(templateFactory) : null;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        checkIndex: -1,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: {\n            ns: null,\n            name: null,\n            attrs: null, template: template,\n            componentProvider: null,\n            componentView: null,\n            componentRendererType: null,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n    if (fixedAttrs === void 0) { fixedAttrs = []; }\n    if (!handleEvent) {\n        handleEvent = NOOP;\n    }\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var ns = null;\n    var name = null;\n    if (namespaceAndName) {\n        _b = __read(splitNamespace(namespaceAndName), 2), ns = _b[0], name = _b[1];\n    }\n    bindings = bindings || [];\n    var bindingDefs = new Array(bindings.length);\n    for (var i = 0; i < bindings.length; i++) {\n        var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n        var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n        var securityContext = undefined;\n        var suffix = undefined;\n        switch (bindingFlags & 15 /* Types */) {\n            case 4 /* TypeElementStyle */:\n                suffix = suffixOrSecurityContext;\n                break;\n            case 1 /* TypeElementAttribute */:\n            case 8 /* TypeProperty */:\n                securityContext = suffixOrSecurityContext;\n                break;\n        }\n        bindingDefs[i] =\n            { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n    }\n    outputs = outputs || [];\n    var outputDefs = new Array(outputs.length);\n    for (var i = 0; i < outputs.length; i++) {\n        var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n        outputDefs[i] = {\n            type: 0 /* ElementOutput */,\n            target: target, eventName: eventName,\n            propName: null\n        };\n    }\n    fixedAttrs = fixedAttrs || [];\n    var attrs = fixedAttrs.map(function (_a) {\n        var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n        var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n        return [ns, name, value];\n    });\n    componentRendererType = resolveRendererType2(componentRendererType);\n    if (componentView) {\n        flags |= 33554432 /* ComponentView */;\n    }\n    flags |= 1 /* TypeElement */;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: bindingDefs,\n        bindingFlags: calcBindingFlags(bindingDefs),\n        outputs: outputDefs,\n        element: {\n            ns: ns,\n            name: name,\n            attrs: attrs,\n            template: null,\n            // will bet set by the view definition\n            componentProvider: null,\n            componentView: componentView || null,\n            componentRendererType: componentRendererType,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP,\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n    var _b;\n}\nfunction createElement(view, renderHost, def) {\n    var elDef = def.element;\n    var rootSelectorOrNode = view.root.selectorOrNode;\n    var renderer = view.renderer;\n    var el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        el = renderer.selectRootElement(rootSelectorOrNode);\n    }\n    if (elDef.attrs) {\n        for (var i = 0; i < elDef.attrs.length; i++) {\n            var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n            renderer.setAttribute(el, name_2, value, ns);\n        }\n    }\n    return el;\n}\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (var i = 0; i < def.outputs.length; i++) {\n        var output = def.outputs[i];\n        var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n        var listenTarget = output.target;\n        var listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n        view.disposables[def.outputIndex + i] = disposable;\n    }\n}\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindLen = def.bindings.length;\n    var changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding$1(view, def, bindingIdx, value)) {\n        return false;\n    }\n    var binding = def.bindings[bindingIdx];\n    var elData = asElementData(view, def.nodeIndex);\n    var renderNode$$1 = elData.renderElement;\n    var name = binding.name;\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode$$1, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode$$1, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode$$1, name, value);\n            break;\n    }\n    return true;\n}\nfunction setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n    var securityContext = binding.securityContext;\n    var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    var renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode$$1, name, ns);\n    }\n}\nfunction setElementClass(view, renderNode$$1, name, value) {\n    var renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode$$1, name);\n    }\n    else {\n        renderer.removeClass(renderNode$$1, name);\n    }\n}\nfunction setElementStyle(view, binding, renderNode$$1, name, value) {\n    var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        var unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    var renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode$$1, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode$$1, name);\n    }\n}\nfunction setElementProperty(view, binding, renderNode$$1, name, value) {\n    var securityContext = binding.securityContext;\n    var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode$$1, name, renderValue);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar UNDEFINED_VALUE = new Object();\nvar InjectorRefTokenKey$1 = tokenKey(Injector);\nvar INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\nvar NgModuleRefTokenKey = tokenKey(NgModuleRef$1);\nfunction moduleProvideDef(flags, token, value, deps) {\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the module definition\n        index: -1,\n        deps: depDefs, flags: flags, token: token, value: value\n    };\n}\nfunction moduleDef(providers) {\n    var providersByKey = {};\n    var modules = [];\n    var isRoot = false;\n    for (var i = 0; i < providers.length; i++) {\n        var provider = providers[i];\n        if (provider.token === APP_ROOT) {\n            isRoot = true;\n        }\n        if (provider.flags & 1073741824 /* TypeNgModule */) {\n            modules.push(provider.token);\n        }\n        provider.index = i;\n        providersByKey[tokenKey(provider.token)] = provider;\n    }\n    return {\n        // Will be filled later...\n        factory: null,\n        providersByKey: providersByKey,\n        providers: providers,\n        modules: modules,\n        isRoot: isRoot,\n    };\n}\nfunction initNgModule(data) {\n    var def = data._def;\n    var providers = data._providers = new Array(def.providers.length);\n    for (var i = 0; i < def.providers.length; i++) {\n        var provDef = def.providers[i];\n        if (!(provDef.flags & 4096 /* LazyProvider */)) {\n            // Make sure the provider has not been already initialized outside this loop.\n            if (providers[i] === undefined) {\n                providers[i] = _createProviderInstance$1(data, provDef);\n            }\n        }\n    }\n}\nfunction resolveNgModuleDep(data, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    var former = setCurrentInjector(data);\n    try {\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        if (depDef.flags & 1 /* SkipSelf */) {\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        var tokenKey_1 = depDef.tokenKey;\n        switch (tokenKey_1) {\n            case InjectorRefTokenKey$1:\n            case INJECTORRefTokenKey$1:\n            case NgModuleRefTokenKey:\n                return data;\n        }\n        var providerDef = data._def.providersByKey[tokenKey_1];\n        if (providerDef) {\n            var providerInstance = data._providers[providerDef.index];\n            if (providerInstance === undefined) {\n                providerInstance = data._providers[providerDef.index] =\n                    _createProviderInstance$1(data, providerDef);\n            }\n            return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n        }\n        else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n            var injectableDef = depDef.token.ngInjectableDef;\n            var index = data._providers.length;\n            data._def.providersByKey[depDef.tokenKey] = {\n                flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                value: injectableDef.factory,\n                deps: [], index: index,\n                token: depDef.token,\n            };\n            data._providers[index] = UNDEFINED_VALUE;\n            return (data._providers[index] =\n                _createProviderInstance$1(data, data._def.providersByKey[depDef.tokenKey]));\n        }\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    finally {\n        setCurrentInjector(former);\n    }\n}\nfunction moduleTransitivelyPresent(ngModule, scope) {\n    return ngModule._def.modules.indexOf(scope) > -1;\n}\nfunction targetsModule(ngModule, def) {\n    return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n        def.providedIn === 'root' && ngModule._def.isRoot);\n}\nfunction _createProviderInstance$1(ngModule, providerDef) {\n    var injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n    // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n    // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n    // set (ngOnDestroy was detected statically).\n    if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n        !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n        providerDef.flags |= 131072 /* OnDestroy */;\n    }\n    return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\nfunction _createClass(ngModule, ctor, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var depValues = new Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n    }\n}\nfunction _callFactory(ngModule, factory, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var depValues = Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return factory.apply(void 0, __spread(depValues));\n    }\n}\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n    var def = ngModule._def;\n    var destroyed = new Set();\n    for (var i = 0; i < def.providers.length; i++) {\n        var provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            var instance = ngModule._providers[i];\n            if (instance && instance !== UNDEFINED_VALUE) {\n                var onDestroy = instance.ngOnDestroy;\n                if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                    onDestroy.apply(instance);\n                    destroyed.add(instance);\n                }\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, viewIndex, view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\nfunction attachProjectedView(vcElementData, view) {\n    var dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even across component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    var projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n}\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    var parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\nfunction detachEmbeddedView(elementData, viewIndex) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    var view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\nfunction detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    var dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    var view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n        elementData.renderElement;\n    var parentNode = view.renderer.parentNode(prevRenderNode);\n    var nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\nfunction renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_CONTEXT = new Object();\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n    return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\nfunction getComponentViewDefinitionFactory(componentFactory) {\n    return componentFactory.viewDefFactory;\n}\nvar ComponentFactory_ = /** @class */ (function (_super) {\n    __extends(ComponentFactory_, _super);\n    function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.selector = selector;\n        _this.componentType = componentType;\n        _this._inputs = _inputs;\n        _this._outputs = _outputs;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.viewDefFactory = viewDefFactory;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n        get: function () {\n            var inputsArr = [];\n            var inputs = this._inputs;\n            for (var propName in inputs) {\n                var templateName = inputs[propName];\n                inputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return inputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n        get: function () {\n            var outputsArr = [];\n            for (var propName in this._outputs) {\n                var templateName = this._outputs[propName];\n                outputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return outputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new component.\n     */\n    ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        var viewDef = resolveDefinition(this.viewDefFactory);\n        var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n        var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        var component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    };\n    return ComponentFactory_;\n}(ComponentFactory$1));\nvar ComponentRef_ = /** @class */ (function (_super) {\n    __extends(ComponentRef_, _super);\n    function ComponentRef_(_view, _viewRef, _component) {\n        var _this = _super.call(this) || this;\n        _this._view = _view;\n        _this._viewRef = _viewRef;\n        _this._component = _component;\n        _this._elDef = _this._view.def.nodes[0];\n        _this.hostView = _viewRef;\n        _this.changeDetectorRef = _viewRef;\n        _this.instance = _component;\n        return _this;\n    }\n    Object.defineProperty(ComponentRef_.prototype, \"location\", {\n        get: function () {\n            return new ElementRef$1(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n        get: function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n        get: function () { return this._component.constructor; },\n        enumerable: true,\n        configurable: true\n    });\n    ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n    ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n    return ComponentRef_;\n}(ComponentRef$1));\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nvar ViewContainerRef_ = /** @class */ (function () {\n    function ViewContainerRef_(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * @internal\n         */\n        this._embeddedViews = [];\n    }\n    Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n        get: function () { return new ElementRef$1(this._data.renderElement); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n        get: function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n        get: function () {\n            var view = this._view;\n            var elDef = this._elDef.parent;\n            while (!elDef && view) {\n                elDef = viewParentEl(view);\n                view = view.parent;\n            }\n            return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ViewContainerRef_.prototype.clear = function () {\n        var len = this._embeddedViews.length;\n        for (var i = len - 1; i >= 0; i--) {\n            var view = detachEmbeddedView(this._data, i);\n            Services.destroyView(view);\n        }\n    };\n    ViewContainerRef_.prototype.get = function (index) {\n        var view = this._embeddedViews[index];\n        if (view) {\n            var ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    };\n    Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n        get: function () { return this._embeddedViews.length; },\n        enumerable: true,\n        configurable: true\n    });\n    ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n        var viewRef = templateRef.createEmbeddedView(context || {});\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        var contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef$1);\n        }\n        var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    ViewContainerRef_.prototype.insert = function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var viewRef_ = viewRef;\n        var viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.indexOf = function (viewRef) {\n        return this._embeddedViews.indexOf(viewRef._view);\n    };\n    ViewContainerRef_.prototype.remove = function (index) {\n        var viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    };\n    ViewContainerRef_.prototype.detach = function (index) {\n        var view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    };\n    return ViewContainerRef_;\n}());\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nvar ViewRef_ = /** @class */ (function () {\n    function ViewRef_(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n        get: function () { return rootRenderNodes(this._view); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"context\", {\n        get: function () { return this._view.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n        get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n        enumerable: true,\n        configurable: true\n    });\n    ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n    ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n    ViewRef_.prototype.detectChanges = function () {\n        var fs = this._view.root.rendererFactory;\n        if (fs.begin) {\n            fs.begin();\n        }\n        try {\n            Services.checkAndUpdateView(this._view);\n        }\n        finally {\n            if (fs.end) {\n                fs.end();\n            }\n        }\n    };\n    ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n    ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n    ViewRef_.prototype.onDestroy = function (callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(callback);\n    };\n    ViewRef_.prototype.destroy = function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    };\n    ViewRef_.prototype.detachFromAppRef = function () {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    };\n    ViewRef_.prototype.attachToAppRef = function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    return ViewRef_;\n}());\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nvar TemplateRef_ = /** @class */ (function (_super) {\n    __extends(TemplateRef_, _super);\n    function TemplateRef_(_parentView, _def) {\n        var _this = _super.call(this) || this;\n        _this._parentView = _parentView;\n        _this._def = _def;\n        return _this;\n    }\n    TemplateRef_.prototype.createEmbeddedView = function (context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n    };\n    Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n        get: function () {\n            return new ElementRef$1(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateRef_;\n}(TemplateRef$1));\nfunction createInjector$1(view, elDef) {\n    return new Injector_(view, elDef);\n}\nvar Injector_ = /** @class */ (function () {\n    function Injector_(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    Injector_.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n    };\n    return Injector_;\n}());\nfunction nodeValue(view, index) {\n    var def = view.def.nodes[index];\n    if (def.flags & 1 /* TypeElement */) {\n        var elData = asElementData(view, def.nodeIndex);\n        return def.element.template ? elData.template : elData.renderElement;\n    }\n    else if (def.flags & 2 /* TypeText */) {\n        return asTextData(view, def.nodeIndex).renderText;\n    }\n    else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n        return asProviderData(view, def.nodeIndex).instance;\n    }\n    throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n}\nfunction createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nvar RendererAdapter = /** @class */ (function () {\n    function RendererAdapter(delegate) {\n        this.delegate = delegate;\n    }\n    RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    };\n    RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n        var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        var el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    };\n    RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n    RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n        var comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    };\n    RendererAdapter.prototype.createText = function (parentElement, value) {\n        var node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    };\n    RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    };\n    RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n        var parentElement = this.delegate.parentNode(node);\n        var nextSibling = this.delegate.nextSibling(node);\n        for (var i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    };\n    RendererAdapter.prototype.detachView = function (viewRootNodes) {\n        for (var i = 0; i < viewRootNodes.length; i++) {\n            var node = viewRootNodes[i];\n            var parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    };\n    RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n        for (var i = 0; i < viewAllNodes.length; i++) {\n            this.delegate.destroyNode(viewAllNodes[i]);\n        }\n    };\n    RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, callback);\n    };\n    RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n        return this.delegate.listen(target, name, callback);\n    };\n    RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    };\n    RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n        var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    };\n    RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n    RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    };\n    RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    };\n    RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n        renderElement[methodName].apply(renderElement, args);\n    };\n    RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n    RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n    return RendererAdapter;\n}());\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nvar NgModuleRef_ = /** @class */ (function () {\n    function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        this.injector = this;\n        initNgModule(this);\n    }\n    NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n        var flags = 0;\n        if (injectFlags & 4 /* SkipSelf */) {\n            flags |= 1 /* SkipSelf */;\n        }\n        else if (injectFlags & 2 /* Self */) {\n            flags |= 4 /* Self */;\n        }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n    };\n    Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n        get: function () { return this.get(this._moduleType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n        get: function () { return this.get(ComponentFactoryResolver$1); },\n        enumerable: true,\n        configurable: true\n    });\n    NgModuleRef_.prototype.destroy = function () {\n        if (this._destroyed) {\n            throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n    };\n    NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n    return NgModuleRef_;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RendererV1TokenKey = tokenKey(Renderer);\nvar Renderer2TokenKey = tokenKey(Renderer2);\nvar ElementRefTokenKey = tokenKey(ElementRef$1);\nvar ViewContainerRefTokenKey = tokenKey(ViewContainerRef$1);\nvar TemplateRefTokenKey = tokenKey(TemplateRef$1);\nvar ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nvar InjectorRefTokenKey = tokenKey(Injector);\nvar INJECTORRefTokenKey = tokenKey(INJECTOR);\nfunction directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n    var bindings = [];\n    if (props) {\n        for (var prop in props) {\n            var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n            bindings[bindingIndex] = {\n                flags: 8 /* TypeProperty */,\n                name: prop, nonMinifiedName: nonMinifiedName,\n                ns: null,\n                securityContext: null,\n                suffix: null\n            };\n        }\n    }\n    var outputDefs = [];\n    if (outputs) {\n        for (var propName in outputs) {\n            outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n        }\n    }\n    flags |= 16384 /* TypeDirective */;\n    return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\nfunction pipeDef(flags, ctor, deps) {\n    flags |= 16 /* TypePipe */;\n    return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\nfunction providerDef(flags, matchedQueries, token, value, deps) {\n    return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\nfunction _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    if (!outputs) {\n        outputs = [];\n    }\n    if (!bindings) {\n        bindings = [];\n    }\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n        ngContentIndex: -1, childCount: childCount, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n        element: null,\n        provider: { token: token, value: value, deps: depDefs },\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction createProviderInstance(view, def) {\n    return _createProviderInstance(view, def);\n}\nfunction createPipeInstance(view, def) {\n    // deps are looked up from component.\n    var compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    // pipes can see the private services of the component\n    var allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n}\nfunction createDirectiveInstance(view, def) {\n    // components can see other private services, other directives can't.\n    var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    // directives are always eager and classes!\n    var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n    if (def.outputs.length) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var subscription = instance[output.propName].subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n            view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n        }\n    }\n    return instance;\n}\nfunction eventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var providerData = asProviderData(view, def.nodeIndex);\n    var directive = providerData.instance;\n    var changed = false;\n    var changes = undefined;\n    var bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    var providerData = asProviderData(view, def.nodeIndex);\n    var directive = providerData.instance;\n    var changed = false;\n    var changes = undefined;\n    for (var i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\nfunction _createProviderInstance(view, def) {\n    // private services can see other private services\n    var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    var providerDef = def.provider;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n        case 1024 /* TypeFactoryProvider */:\n            return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n        case 2048 /* TypeUseExistingProvider */:\n            return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n        case 256 /* TypeValueProvider */:\n            return providerDef.value;\n    }\n}\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var depValues = new Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n    }\n}\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var depValues = Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return factory.apply(void 0, __spread(depValues));\n    }\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nvar NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    var startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    var tokenKey$$1 = depDef.tokenKey;\n    if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && elDef.element.componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = elDef.parent;\n    }\n    var searchView = view;\n    while (searchView) {\n        if (elDef) {\n            switch (tokenKey$$1) {\n                case RendererV1TokenKey: {\n                    var compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    var compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef$1(asElementData(searchView, elDef.nodeIndex).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (elDef.element.template) {\n                        return asElementData(searchView, elDef.nodeIndex).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                    return createInjector$1(searchView, elDef);\n                default:\n                    var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                        elDef.element.publicProviders)[tokenKey$$1];\n                    if (providerDef_1) {\n                        var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                        if (!providerData) {\n                            providerData = { instance: _createProviderInstance(searchView, providerDef_1) };\n                            searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(searchView);\n        elDef = viewParentEl(searchView);\n        searchView = searchView.parent;\n        if (depDef.flags & 4 /* Self */) {\n            searchView = null;\n        }\n    }\n    var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\nfunction findCompView(view, elDef, allowPrivateServices) {\n    var compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.nodeIndex).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        var compView = asElementData(view, def.parent.nodeIndex).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    var binding = def.bindings[bindingIdx];\n    var propName = binding.name;\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n        var binding_1 = def.bindings[bindingIdx];\n        changes[binding_1.nonMinifiedName] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n// This function calls the ngAfterContentCheck, ngAfterContentInit,\n// ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n// flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n// called during a pre-order traversal of the view tree (that is calling the\n// parent hooks before the child hooks) these events are sent in using a\n// post-order traversal of the tree (children before parents). This changes the\n// meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n// expected nodeIndex which a ngOnInit should be called. When sending\n// ngAfterContentInit and ngAfterViewInit it is the expected count of\n// ngAfterContentInit or ngAfterViewInit methods that have been called. This\n// ensure that despite being called recursively or after picking up after an\n// exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n// correct nodes. Consider for example, the following (where E is an element\n// and D is a directive)\n//  Tree:       pre-order index  post-order index\n//    E1        0                6\n//      E2      1                1\n//       D3     2                0\n//      E4      3                5\n//       E5     4                4\n//        E6    5                2\n//        E7    6                3\n// As can be seen, the post-order index has an unclear relationship to the\n// pre-order index (postOrderIndex === preOrderIndex - parentCount +\n// childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n// are stable (will be the same for the same view regardless of exceptions or\n// recursion) we just need to count them which will roughly correspond to the\n// post-order index (it skips elements and directives that do not have\n// lifecycle hooks).\n//\n// For example, if an exception is raised in the E6.onAfterViewInit() the\n// initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n// initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n// not have their ngAfterViewInit() called but, starting with E7, the rest of\n// the view will begin getting ngAfterViewInit() called until a check and\n// pass is complete.\n//\n// This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n// indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n// initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n// D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n// When the recursion returns the initIndex will be 7 so E1 is skipped as it\n// has already been called in the recursively called checkAnUpdateView().\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    var nodes = view.def.nodes;\n    var initIndex = 0;\n    for (var i = 0; i < nodes.length; i++) {\n        var nodeDef = nodes[i];\n        var parent_1 = nodeDef.parent;\n        if (!parent_1 && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n            i === parent_1.nodeIndex + parent_1.childCount) {\n            // last child of an element\n            if (parent_1.directChildFlags & lifecycles) {\n                initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n            }\n            parent_1 = parent_1.parent;\n        }\n    }\n}\nfunction callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n    for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n    return initIndex;\n}\nfunction callProviderLifecycles(view, index, lifecycles, initIndex) {\n    var providerData = asProviderData(view, index);\n    if (!providerData) {\n        return;\n    }\n    var provider = providerData.instance;\n    if (!provider) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */ &&\n        shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */ &&\n        shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction queryDef(flags, id, bindings) {\n    var bindingDefs = [];\n    for (var propName in bindings) {\n        var bindingType = bindings[propName];\n        bindingDefs.push({ propName: propName, bindingType: bindingType });\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        // TODO(vicb): check\n        checkIndex: -1, flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        ngContentIndex: -1,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n        ngContent: null\n    };\n}\nfunction createQuery$1() {\n    return new QueryList$1();\n}\nfunction dirtyParentQueries(view) {\n    var queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        var tplDef = view.parentNodeDef;\n        view = view.parent;\n        // content queries\n        var end = tplDef.nodeIndex + tplDef.childCount;\n        for (var i = 0; i <= end; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (var i = 0; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction checkAndUpdateQuery(view, nodeDef) {\n    var queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (!queryList.dirty) {\n        return;\n    }\n    var directiveInstance;\n    var newValues = undefined;\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        var elementDef = nodeDef.parent.parent;\n        newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n        directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    var bindings = nodeDef.query.bindings;\n    var notify = false;\n    for (var i = 0; i < bindings.length; i++) {\n        var binding = bindings[i];\n        var boundValue = void 0;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = view.def.nodes[i];\n        var valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n            (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            var elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = elementData.viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    var embeddedView = embeddedViews[k];\n                    var dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            var projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (var k = 0; k < projectedViews.length; k++) {\n                    var projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                return asElementData(view, nodeDef.nodeIndex).renderElement;\n            case 0 /* ElementRef */:\n                return new ElementRef$1(asElementData(view, nodeDef.nodeIndex).renderElement);\n            case 2 /* TemplateRef */:\n                return asElementData(view, nodeDef.nodeIndex).template;\n            case 3 /* ViewContainerRef */:\n                return asElementData(view, nodeDef.nodeIndex).viewContainer;\n            case 4 /* Provider */:\n                return asProviderData(view, nodeDef.nodeIndex).instance;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction ngContentDef(ngContentIndex, index) {\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: -1,\n        flags: 8 /* TypeNgContent */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: { index: index }\n    };\n}\nfunction appendNgContent(view, renderHost, def) {\n    var parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    var ngContentIndex = def.ngContent.index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction purePipeDef(checkIndex, argCount) {\n    // argCount + 1 to include the pipe as first arg\n    return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n}\nfunction pureArrayDef(checkIndex, argCount) {\n    return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n}\nfunction pureObjectDef(checkIndex, propToIndex) {\n    var keys = Object.keys(propToIndex);\n    var nbKeys = keys.length;\n    var propertyNames = new Array(nbKeys);\n    for (var i = 0; i < nbKeys; i++) {\n        var key = keys[i];\n        var index = propToIndex[key];\n        propertyNames[index] = key;\n    }\n    return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n}\nfunction _pureExpressionDef(flags, checkIndex, propertyNames) {\n    var bindings = new Array(propertyNames.length);\n    for (var i = 0; i < propertyNames.length; i++) {\n        var prop = propertyNames[i];\n        bindings[i] = {\n            flags: 8 /* TypeProperty */,\n            name: prop,\n            ns: null,\n            nonMinifiedName: prop,\n            securityContext: null,\n            suffix: null\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        ngContentIndex: -1,\n        childCount: 0, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindings = def.bindings;\n    var changed = false;\n    var bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding$1(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding$1(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding$1(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding$1(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding$1(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding$1(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding$1(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding$1(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding$1(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding$1(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var data = asPureExpressionData(view, def.nodeIndex);\n        var value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[bindings[0].name] = v0;\n                if (bindLen > 1)\n                    value[bindings[1].name] = v1;\n                if (bindLen > 2)\n                    value[bindings[2].name] = v2;\n                if (bindLen > 3)\n                    value[bindings[3].name] = v3;\n                if (bindLen > 4)\n                    value[bindings[4].name] = v4;\n                if (bindLen > 5)\n                    value[bindings[5].name] = v5;\n                if (bindLen > 6)\n                    value[bindings[6].name] = v6;\n                if (bindLen > 7)\n                    value[bindings[7].name] = v7;\n                if (bindLen > 8)\n                    value[bindings[8].name] = v8;\n                if (bindLen > 9)\n                    value[bindings[9].name] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                var pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    var bindings = def.bindings;\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding$1(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var data = asPureExpressionData(view, def.nodeIndex);\n        var value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (var i = 0; i < values.length; i++) {\n                    value[bindings[i].name] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                var pipe = values[0];\n                var params = values.slice(1);\n                value = pipe.transform.apply(pipe, __spread(params));\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction textDef(checkIndex, ngContentIndex, staticText) {\n    var bindings = new Array(staticText.length - 1);\n    for (var i = 1; i < staticText.length; i++) {\n        bindings[i - 1] = {\n            flags: 8 /* TypeProperty */,\n            name: null,\n            ns: null,\n            nonMinifiedName: null,\n            securityContext: null,\n            suffix: staticText[i],\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: 2 /* TypeText */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0, bindings: bindings,\n        bindingFlags: 8 /* TypeProperty */,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: { prefix: staticText[0] },\n        query: null,\n        ngContent: null,\n    };\n}\nfunction createText(view, renderHost, def) {\n    var renderNode$$1;\n    var renderer = view.renderer;\n    renderNode$$1 = renderer.createText(def.text.prefix);\n    var parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode$$1);\n    }\n    return { renderText: renderNode$$1 };\n}\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var changed = false;\n    var bindings = def.bindings;\n    var bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding$1(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding$1(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding$1(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding$1(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding$1(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding$1(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding$1(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding$1(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding$1(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding$1(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var value = def.text.prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    var bindings = def.bindings;\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding$1(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var value = '';\n        for (var i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = def.text.prefix + value;\n        var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\nfunction _addInterpolationPart(value, binding) {\n    var valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction viewDef(flags, nodes, updateDirectives, updateRenderer) {\n    // clone nodes and set auto calculated values\n    var viewBindingCount = 0;\n    var viewDisposableCount = 0;\n    var viewNodeFlags = 0;\n    var viewRootNodeFlags = 0;\n    var viewMatchedQueries = 0;\n    var currentParent = null;\n    var currentRenderParent = null;\n    var currentElementHasPublicProviders = false;\n    var currentElementHasPrivateProviders = false;\n    var lastRenderRootNode = null;\n    for (var i = 0; i < nodes.length; i++) {\n        var node = nodes[i];\n        node.nodeIndex = i;\n        node.parent = currentParent;\n        node.bindingIndex = viewBindingCount;\n        node.outputIndex = viewDisposableCount;\n        node.renderParent = currentRenderParent;\n        viewNodeFlags |= node.flags;\n        viewMatchedQueries |= node.matchedQueryIds;\n        if (node.element) {\n            var elDef = node.element;\n            elDef.publicProviders =\n                currentParent ? currentParent.element.publicProviders : Object.create(null);\n            elDef.allProviders = elDef.publicProviders;\n            // Note: We assume that all providers of an element are before any child element!\n            currentElementHasPublicProviders = false;\n            currentElementHasPrivateProviders = false;\n            if (node.element.template) {\n                viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        validateNode(currentParent, node, nodes.length);\n        viewBindingCount += node.bindings.length;\n        viewDisposableCount += node.outputs.length;\n        if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n            lastRenderRootNode = node;\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            if (!currentElementHasPublicProviders) {\n                currentElementHasPublicProviders = true;\n                // Use prototypical inheritance to not get O(n^2) complexity...\n                currentParent.element.publicProviders =\n                    Object.create(currentParent.element.publicProviders);\n                currentParent.element.allProviders = currentParent.element.publicProviders;\n            }\n            var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n            var isComponent = (node.flags & 32768 /* Component */) !== 0;\n            if (!isPrivateService || isComponent) {\n                currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n            }\n            else {\n                if (!currentElementHasPrivateProviders) {\n                    currentElementHasPrivateProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.allProviders =\n                        Object.create(currentParent.element.publicProviders);\n                }\n                currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n            }\n            if (isComponent) {\n                currentParent.element.componentProvider = node;\n            }\n        }\n        if (currentParent) {\n            currentParent.childFlags |= node.flags;\n            currentParent.directChildFlags |= node.flags;\n            currentParent.childMatchedQueries |= node.matchedQueryIds;\n            if (node.element && node.element.template) {\n                currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        else {\n            viewRootNodeFlags |= node.flags;\n        }\n        if (node.childCount > 0) {\n            currentParent = node;\n            if (!isNgContainer(node)) {\n                currentRenderParent = node;\n            }\n        }\n        else {\n            // When the current node has no children, check if it is the last children of its parent.\n            // When it is, propagate the flags up.\n            // The loop is required because an element could be the last transitive children of several\n            // elements. We loop to either the root or the highest opened element (= with remaining\n            // children)\n            while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                var newParent = currentParent.parent;\n                if (newParent) {\n                    newParent.childFlags |= currentParent.childFlags;\n                    newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                }\n                currentParent = newParent;\n                // We also need to update the render parent & account for ng-container\n                if (currentParent && isNgContainer(currentParent)) {\n                    currentRenderParent = currentParent.renderParent;\n                }\n                else {\n                    currentRenderParent = currentParent;\n                }\n            }\n        }\n    }\n    var handleEvent = function (view, nodeIndex, eventName, event) {\n        return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n    };\n    return {\n        // Will be filled later...\n        factory: null,\n        nodeFlags: viewNodeFlags,\n        rootNodeFlags: viewRootNodeFlags,\n        nodeMatchedQueries: viewMatchedQueries, flags: flags,\n        nodes: nodes,\n        updateDirectives: updateDirectives || NOOP,\n        updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n        bindingCount: viewBindingCount,\n        outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n    };\n}\nfunction isNgContainer(node) {\n    return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n}\nfunction validateNode(parent, node, nodeCount) {\n    var template = node.element && node.element.template;\n    if (template) {\n        if (!template.lastRenderRootNode) {\n            throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n        }\n        if (template.lastRenderRootNode &&\n            template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n            throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.flags & 20224 /* CatProvider */) {\n        var parentFlags = parent ? parent.flags : 0;\n        if ((parentFlags & 1 /* TypeElement */) === 0) {\n            throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.query) {\n        if (node.flags & 67108864 /* TypeContentQuery */ &&\n            (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n            throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n        }\n        if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n            throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.childCount) {\n        var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n        if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n            throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n}\nfunction createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n    // embedded views are seen as siblings to the anchor, so we need\n    // to get the parent of the anchor and use it as parentIndex.\n    var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\nfunction createRootView(root, def, context) {\n    var view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    var rendererType = nodeDef.element.componentRendererType;\n    var compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n}\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    var nodes = new Array(def.nodes.length);\n    var disposables = def.outputCount ? new Array(def.outputCount) : null;\n    var view = {\n        def: def,\n        parent: parent,\n        viewContainerParent: null, parentNodeDef: parentNodeDef,\n        context: null,\n        component: null, nodes: nodes,\n        state: 13 /* CatInit */, root: root, renderer: renderer,\n        oldValues: new Array(def.bindingCount), disposables: disposables,\n        initIndex: -1\n    };\n    return view;\n}\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\nfunction createViewNodes(view) {\n    var renderHost;\n    if (isComponentView(view)) {\n        var hostDef = view.parentNodeDef;\n        renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n    }\n    var def = view.def;\n    var nodes = view.nodes;\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        var nodeData = void 0;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                var el = createElement(view, renderHost, nodeDef);\n                var componentView = undefined;\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = {\n                    renderElement: el,\n                    componentView: componentView,\n                    viewContainer: null,\n                    template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                };\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = createText(view, renderHost, nodeDef);\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                nodeData = nodes[i];\n                if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                    var instance = createProviderInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                }\n                break;\n            }\n            case 16 /* TypePipe */: {\n                var instance = createPipeInstance(view, nodeDef);\n                nodeData = { instance: instance };\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                nodeData = nodes[i];\n                if (!nodeData) {\n                    var instance = createDirectiveInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                }\n                if (nodeDef.flags & 32768 /* Component */) {\n                    var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                    initView(compView, nodeData.instance, nodeData.instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = createPureExpression(view, nodeDef);\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = createQuery$1();\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\nfunction checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\nfunction checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n}\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\nfunction markProjectedViewsForCheck(view) {\n    var def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            var projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                    var projectedView = projectedViews[i_1];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        default:\n            throw 'unreachable';\n    }\n}\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementDynamic(view, nodeDef, values);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextDynamic(view, nodeDef, values);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n        default:\n            throw 'unreachable';\n    }\n}\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (var i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    var queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\nfunction destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (var i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\nfunction destroyViewNodes(view) {\n    var len = view.def.nodes.length;\n    for (var i = 0; i < len; i++) {\n        var def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            view.renderer.destroyNode(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            view.renderer.destroyNode(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\nvar ViewAction;\n(function (ViewAction) {\n    ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n    ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n    ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n    ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n    ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n    ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n})(ViewAction || (ViewAction = {}));\nfunction execComponentViewsAction(view, action) {\n    var def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction execEmbeddedViewsAction(view, action) {\n    var def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            // a leaf\n            var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n            for (var k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction callViewAction(view, action) {\n    var viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    var nodeCount = view.def.nodes.length;\n    for (var i = 0; i < nodeCount; i++) {\n        var nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.nodeIndex);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar initialized = false;\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.overrideComponentView = services.overrideComponentView;\n    Services.clearOverrides = services.clearOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\nfunction createProdServices() {\n    return {\n        setCurrentNode: function () { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        overrideComponentView: NOOP,\n        clearOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: function (view, nodeIndex, eventName, event) {\n            return view.def.handleEvent(view, nodeIndex, eventName, event);\n        },\n        updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view); },\n        updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view); },\n    };\n}\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        overrideComponentView: debugOverrideComponentView,\n        clearOverrides: debugClearOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var rendererFactory = ngModule.injector.get(RendererFactory2);\n    var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    var defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    var sanitizer = ngModule.injector.get(Sanitizer);\n    var errorHandler = ngModule.injector.get(ErrorHandler);\n    var renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule: ngModule,\n        injector: elInjector, projectableNodes: projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n    };\n}\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n    var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\nfunction debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n    var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n    if (overrideComponentView) {\n        viewDef$$1 = overrideComponentView;\n    }\n    else {\n        viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n    }\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n}\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    var defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\nvar providerOverrides = new Map();\nvar providerOverridesWithScope = new Map();\nvar viewDefOverrides = new Map();\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n    if (typeof override.token === 'function' && override.token.ngInjectableDef &&\n        typeof override.token.ngInjectableDef.providedIn === 'function') {\n        providerOverridesWithScope.set(override.token, override);\n    }\n}\nfunction debugOverrideComponentView(comp, compFactory) {\n    var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n    var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n    viewDefOverrides.set(comp, compViewDef);\n}\nfunction debugClearOverrides() {\n    providerOverrides.clear();\n    providerOverridesWithScope.clear();\n    viewDefOverrides.clear();\n}\n// Notes about the algorithm:\n// 1) Locate the providers of an element and check if one of them was overwritten\n// 2) Change the providers of that element\n//\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = def.factory(function () { return NOOP; });\n    for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    function findElementIndicesWithOverwrittenProviders(def) {\n        var elIndicesWithOverwrittenProviders = [];\n        var lastElementDef = null;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(nodeDef.provider.token)) {\n                elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n        for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                var provider = nodeDef.provider;\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n// Notes about the algorithm:\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToNgModule(def) {\n    var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n    if (!hasOverrides) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = def.factory(function () { return NOOP; });\n    applyProviderOverrides(def);\n    return def;\n    function calcHasOverrides(def) {\n        var hasOverrides = false;\n        var hasDeprecatedOverrides = false;\n        if (providerOverrides.size === 0) {\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        def.providers.forEach(function (node) {\n            var override = providerOverrides.get(node.token);\n            if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                hasOverrides = true;\n                hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n            }\n        });\n        def.modules.forEach(function (module) {\n            providerOverridesWithScope.forEach(function (override, token) {\n                if (token.ngInjectableDef.providedIn === module) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n        });\n        return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n    }\n    function applyProviderOverrides(def) {\n        for (var i = 0; i < def.providers.length; i++) {\n            var provider = def.providers[i];\n            if (hasDeprecatedOverrides) {\n                // We had a bug where me made\n                // all providers lazy. Keep this logic behind a flag\n                // for migrating existing users.\n                provider.flags |= 4096 /* LazyProvider */;\n            }\n            var override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n        if (providerOverridesWithScope.size > 0) {\n            var moduleSet_1 = new Set(def.modules);\n            providerOverridesWithScope.forEach(function (override, token) {\n                if (moduleSet_1.has(token.ngInjectableDef.providedIn)) {\n                    var provider = {\n                        token: token,\n                        flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                        deps: splitDepsDsl(override.deps),\n                        value: override.value,\n                        index: def.providers.length,\n                    };\n                    def.providers.push(provider);\n                    def.providersByKey[tokenKey(token)] = provider;\n                }\n            });\n        }\n    }\n}\nfunction prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var nodeDef = view.def.nodes[checkIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\nfunction prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var nodeDef = view.def.nodes[checkIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\nvar DebugAction;\n(function (DebugAction) {\n    DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n    DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n    DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n    DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n    DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n})(DebugAction || (DebugAction = {}));\nvar _currentAction;\nvar _currentView;\nvar _currentNodeIndex;\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n    if (changed) {\n        var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            var bindingValues = {};\n            for (var i = 0; i < nodeDef.bindings.length; i++) {\n                var binding = nodeDef.bindings[i];\n                var value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            var elDef = nodeDef.parent;\n            var el = asElementData(view, elDef.nodeIndex).renderElement;\n            if (!elDef.element.name) {\n                // a comment.\n                view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n            }\n            else {\n                // a regular element.\n                for (var attr in bindingValues) {\n                    var value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n}\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return \"ng-reflect-\" + name;\n}\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return '-' + m[1].toLowerCase();\n    });\n}\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n        var nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nvar DebugContext_ = /** @class */ (function () {\n    function DebugContext_(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        var elDef = this.nodeDef;\n        var elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = elDef.parent;\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = viewParentEl(elView);\n                elView = elView.parent;\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n        get: function () {\n            // Has to be done lazily as we use the DebugContext also during creation of elements...\n            return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"injector\", {\n        get: function () { return createInjector$1(this.elView, this.elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"component\", {\n        get: function () { return this.elOrCompView.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"context\", {\n        get: function () { return this.elOrCompView.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n        get: function () {\n            var tokens = [];\n            if (this.elDef) {\n                for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        tokens.push(childDef.provider.token);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return tokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"references\", {\n        get: function () {\n            var references = {};\n            if (this.elDef) {\n                collectReferences(this.elView, this.elDef, references);\n                for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        collectReferences(this.elView, childDef, references);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return references;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n        get: function () {\n            var elData = findHostElement(this.elOrCompView);\n            return elData ? elData.renderElement : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n        get: function () {\n            return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                renderNode(this.elView, this.elDef);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DebugContext_.prototype.logError = function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        var logViewDef;\n        var logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.nodeIndex;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.nodeIndex;\n        }\n        // Note: we only generate a log function for text and element nodes\n        // to make the generated code as small as possible.\n        var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        var currRenderNodeIndex = -1;\n        var nodeLogger = function () {\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return (_a = console.error).bind.apply(_a, __spread([console], values));\n            }\n            else {\n                return NOOP;\n            }\n            var _a;\n        };\n        logViewDef.factory(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error.apply(console, __spread(values));\n        }\n    };\n    return DebugContext_;\n}());\nfunction getRenderNodeIndex(viewDef$$1, nodeIndex) {\n    var renderNodeIndex = -1;\n    for (var i = 0; i <= nodeIndex; i++) {\n        var nodeDef = viewDef$$1.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = view.parent;\n    }\n    if (view.parent) {\n        return asElementData(view.parent, viewParentEl(view).nodeIndex);\n    }\n    return null;\n}\nfunction collectReferences(view, nodeDef, references) {\n    for (var refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\nfunction callWithDebugContext(action, fn, self, args) {\n    var oldAction = _currentAction;\n    var oldView = _currentView;\n    var oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        var result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, getCurrentDebugContext());\n    }\n}\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nvar DebugRendererFactory2 = /** @class */ (function () {\n    function DebugRendererFactory2(delegate) {\n        this.delegate = delegate;\n    }\n    DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    };\n    DebugRendererFactory2.prototype.begin = function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    DebugRendererFactory2.prototype.end = function () {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    DebugRendererFactory2.prototype.whenRenderingDone = function () {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    };\n    return DebugRendererFactory2;\n}());\nvar DebugRenderer2 = /** @class */ (function () {\n    function DebugRenderer2(delegate) {\n        this.delegate = delegate;\n        this.data = this.delegate.data;\n    }\n    DebugRenderer2.prototype.destroyNode = function (node) {\n        removeDebugNodeFromIndex(getDebugNode(node));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    };\n    DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n    DebugRenderer2.prototype.createElement = function (name, namespace) {\n        var el = this.delegate.createElement(name, namespace);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            var debugEl = new DebugElement(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    };\n    DebugRenderer2.prototype.createComment = function (value) {\n        var comment = this.delegate.createComment(value);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(comment, null, debugCtx));\n        }\n        return comment;\n    };\n    DebugRenderer2.prototype.createText = function (value) {\n        var text = this.delegate.createText(value);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(text, null, debugCtx));\n        }\n        return text;\n    };\n    DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    };\n    DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(newChild);\n        var debugRefEl = getDebugNode(refChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    };\n    DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    };\n    DebugRenderer2.prototype.selectRootElement = function (selectorOrNode) {\n        var el = this.delegate.selectRootElement(selectorOrNode);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement(el, null, debugCtx));\n        }\n        return el;\n    };\n    DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    DebugRenderer2.prototype.addClass = function (el, name) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    };\n    DebugRenderer2.prototype.removeClass = function (el, name) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    };\n    DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    };\n    DebugRenderer2.prototype.setProperty = function (el, name, value) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    };\n    DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n        if (typeof target !== 'string') {\n            var debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    };\n    DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n    DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n    DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n    return DebugRenderer2;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction overrideProvider(override) {\n    initServicesIfNeeded();\n    return Services.overrideProvider(override);\n}\nfunction overrideComponentView(comp, componentFactory) {\n    initServicesIfNeeded();\n    return Services.overrideComponentView(comp, componentFactory);\n}\nfunction clearOverrides() {\n    initServicesIfNeeded();\n    return Services.clearOverrides();\n}\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n    return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\nvar NgModuleFactory_ = /** @class */ (function (_super) {\n    __extends(NgModuleFactory_, _super);\n    function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.moduleType = moduleType;\n        _this._bootstrapComponents = _bootstrapComponents;\n        _this._ngModuleDefFactory = _ngModuleDefFactory;\n        return _this;\n    }\n    NgModuleFactory_.prototype.create = function (parentInjector) {\n        initServicesIfNeeded();\n        var def = resolveDefinition(this._ngModuleDefFactory);\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    };\n    return NgModuleFactory_;\n}(NgModuleFactory$1));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BRAND = '__SANITIZER_TRUSTED_BRAND__';\n/**\n * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `html` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n *\n * @param unsafeHtml untrusted `html`, typically from the user.\n * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n * and urls have been removed.\n */\nfunction sanitizeHtml(unsafeHtml) {\n    var s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n    }\n    if (unsafeHtml instanceof String && unsafeHtml[BRAND] === 'Html') {\n        return unsafeHtml.toString();\n    }\n    return _sanitizeHtml(document, stringify$1(unsafeHtml));\n}\n/**\n * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `style` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n *\n * @param unsafeStyle untrusted `style`, typically from the user.\n * @returns `style` string which is safe to bind to the `style` properties, because all of the\n * dangerous javascript and urls have been removed.\n */\nfunction sanitizeStyle(unsafeStyle) {\n    var s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n    }\n    if (unsafeStyle instanceof String && unsafeStyle[BRAND] === 'Style') {\n        return unsafeStyle.toString();\n    }\n    return _sanitizeStyle(stringify$1(unsafeStyle));\n}\n/**\n * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n * dangerous\n * content.\n *\n * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n * removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n *\n * @param unsafeUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * all of the dangerous javascript has been removed.\n */\nfunction sanitizeUrl(unsafeUrl) {\n    var s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n    }\n    if (unsafeUrl instanceof String && unsafeUrl[BRAND] === 'Url') {\n        return unsafeUrl.toString();\n    }\n    return _sanitizeUrl(stringify$1(unsafeUrl));\n}\n/**\n * A `url` sanitizer which only lets trusted `url`s through.\n *\n * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n *\n * @param unsafeResourceUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * only trusted `url`s have been allowed to pass.\n */\nfunction sanitizeResourceUrl(unsafeResourceUrl) {\n    var s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n    }\n    if (unsafeResourceUrl instanceof String &&\n        unsafeResourceUrl[BRAND] === 'ResourceUrl') {\n        return unsafeResourceUrl.toString();\n    }\n    throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n}\n/**\n * A `script` sanitizer which only lets trusted javascript through.\n *\n * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n *\n * @param unsafeScript untrusted `script`, typically from the user.\n * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n * because only trusted `scripts`s have been allowed to pass.\n */\n\n/**\n * Mark `html` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n *\n * @param trustedHtml `html` string which needs to be implicitly trusted.\n * @returns a `html` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustHtml(trustedHtml) {\n    return bypassSanitizationTrustString(trustedHtml, 'Html');\n}\n/**\n * Mark `style` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link styleSanitizer} to be trusted implicitly.\n *\n * @param trustedStyle `style` string which needs to be implicitly trusted.\n * @returns a `style` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustStyle(trustedStyle) {\n    return bypassSanitizationTrustString(trustedStyle, 'Style');\n}\n/**\n * Mark `script` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n *\n * @param trustedScript `script` string which needs to be implicitly trusted.\n * @returns a `script` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustScript(trustedScript) {\n    return bypassSanitizationTrustString(trustedScript, 'Script');\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link urlSanitizer} to be trusted implicitly.\n *\n * @param trustedUrl `url` string which needs to be implicitly trusted.\n * @returns a `url` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustUrl(trustedUrl) {\n    return bypassSanitizationTrustString(trustedUrl, 'Url');\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n *\n * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n * @returns a `url` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n    return bypassSanitizationTrustString(trustedResourceUrl, 'ResourceUrl');\n}\nfunction bypassSanitizationTrustString(trustedString, mode) {\n    var trusted = new String(trustedString);\n    trusted[BRAND] = mode;\n    return trusted;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// clang-format off\n\n// clang-format on\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point from which you should import all public core APIs.\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexports.createPlatform = createPlatform;\nexports.assertPlatform = assertPlatform;\nexports.destroyPlatform = destroyPlatform;\nexports.getPlatform = getPlatform;\nexports.PlatformRef = PlatformRef;\nexports.ApplicationRef = ApplicationRef;\nexports.enableProdMode = enableProdMode;\nexports.isDevMode = isDevMode;\nexports.createPlatformFactory = createPlatformFactory;\nexports.NgProbeToken = NgProbeToken;\nexports.APP_ID = APP_ID;\nexports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\nexports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\nexports.PLATFORM_ID = PLATFORM_ID;\nexports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\nexports.APP_INITIALIZER = APP_INITIALIZER;\nexports.ApplicationInitStatus = ApplicationInitStatus;\nexports.DebugElement = DebugElement;\nexports.DebugNode = DebugNode;\nexports.asNativeElements = asNativeElements;\nexports.getDebugNode = getDebugNode;\nexports.Testability = Testability;\nexports.TestabilityRegistry = TestabilityRegistry;\nexports.setTestabilityGetter = setTestabilityGetter;\nexports.TRANSLATIONS = TRANSLATIONS;\nexports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\nexports.LOCALE_ID = LOCALE_ID;\nexports.ApplicationModule = ApplicationModule;\nexports.wtfCreateScope = wtfCreateScope;\nexports.wtfLeave = wtfLeave;\nexports.wtfStartTimeRange = wtfStartTimeRange;\nexports.wtfEndTimeRange = wtfEndTimeRange;\nexports.Type = Type;\nexports.EventEmitter = EventEmitter;\nexports.ErrorHandler = ErrorHandler;\nexports.Sanitizer = Sanitizer;\nexports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\nexports.Attribute = Attribute;\nexports.ContentChild = ContentChild;\nexports.ContentChildren = ContentChildren;\nexports.Query = Query;\nexports.ViewChild = ViewChild;\nexports.ViewChildren = ViewChildren;\nexports.Component = Component;\nexports.Directive = Directive;\nexports.HostBinding = HostBinding;\nexports.HostListener = HostListener;\nexports.Input = Input;\nexports.Output = Output;\nexports.Pipe = Pipe;\nexports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\nexports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\nexports.NgModule = NgModule;\nexports.Version = Version;\nexports.VERSION = VERSION;\nexports.defineInjectable = defineInjectable;\nexports.defineInjector = defineInjector;\nexports.forwardRef = forwardRef;\nexports.resolveForwardRef = resolveForwardRef;\nexports.Injectable = Injectable;\nexports.inject = inject;\nexports.INJECTOR = INJECTOR;\nexports.Injector = Injector;\nexports.ReflectiveInjector = ReflectiveInjector;\nexports.createInjector = createInjector;\nexports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\nexports.ReflectiveKey = ReflectiveKey;\nexports.InjectionToken = InjectionToken;\nexports.Inject = Inject;\nexports.Optional = Optional;\nexports.Self = Self;\nexports.SkipSelf = SkipSelf;\nexports.Host = Host;\nexports.NgZone = NgZone;\nexports.RenderComponentType = RenderComponentType;\nexports.Renderer = Renderer;\nexports.Renderer2 = Renderer2;\nexports.RendererFactory2 = RendererFactory2;\nexports.RootRenderer = RootRenderer;\nexports.COMPILER_OPTIONS = COMPILER_OPTIONS;\nexports.Compiler = Compiler;\nexports.CompilerFactory = CompilerFactory;\nexports.ModuleWithComponentFactories = ModuleWithComponentFactories;\nexports.ComponentFactory = ComponentFactory$1;\nexports.ComponentRef = ComponentRef$1;\nexports.ComponentFactoryResolver = ComponentFactoryResolver$1;\nexports.ElementRef = ElementRef$1;\nexports.NgModuleFactory = NgModuleFactory$1;\nexports.NgModuleRef = NgModuleRef$1;\nexports.NgModuleFactoryLoader = NgModuleFactoryLoader;\nexports.getModuleFactory = getModuleFactory;\nexports.QueryList = QueryList$1;\nexports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\nexports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\nexports.TemplateRef = TemplateRef$1;\nexports.ViewContainerRef = ViewContainerRef$1;\nexports.EmbeddedViewRef = EmbeddedViewRef$1;\nexports.ViewRef = ViewRef$1;\nexports.ChangeDetectorRef = ChangeDetectorRef;\nexports.DefaultIterableDiffer = DefaultIterableDiffer;\nexports.IterableDiffers = IterableDiffers;\nexports.KeyValueDiffers = KeyValueDiffers;\nexports.SimpleChange = SimpleChange;\nexports.WrappedValue = WrappedValue;\nexports.platformCore = platformCore;\nexports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\nexports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\nexports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\nexports.ÉµdevModeEqual = devModeEqual;\nexports.ÉµisListLikeIterable = isListLikeIterable;\nexports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\nexports.ÉµConsole = Console;\nexports.Éµinject = inject;\nexports.ÉµsetCurrentInjector = setCurrentInjector;\nexports.ÉµAPP_ROOT = APP_ROOT;\nexports.ÉµivyEnabled = ivyEnabled;\nexports.ÉµComponentFactory = ComponentFactory$1;\nexports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\nexports.ÉµReflectionCapabilities = ReflectionCapabilities;\nexports.ÉµRenderDebugInfo = RenderDebugInfo;\nexports.Éµ_sanitizeHtml = _sanitizeHtml;\nexports.Éµ_sanitizeStyle = _sanitizeStyle;\nexports.Éµ_sanitizeUrl = _sanitizeUrl;\nexports.Éµglobal = _global;\nexports.ÉµlooseIdentical = looseIdentical;\nexports.Éµstringify = stringify;\nexports.ÉµmakeDecorator = makeDecorator;\nexports.ÉµisObservable = isObservable;\nexports.ÉµisPromise = isPromise;\nexports.ÉµclearOverrides = clearOverrides;\nexports.ÉµoverrideComponentView = overrideComponentView;\nexports.ÉµoverrideProvider = overrideProvider;\nexports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\nexports.ÉµdefineComponent = defineComponent;\nexports.ÉµdefineDirective = defineDirective;\nexports.ÉµdefinePipe = definePipe;\nexports.ÉµdetectChanges = detectChanges;\nexports.ÉµrenderComponent = renderComponent;\nexports.ÉµdirectiveInject = directiveInject;\nexports.ÉµinjectTemplateRef = injectTemplateRef;\nexports.ÉµinjectViewContainerRef = injectViewContainerRef;\nexports.ÉµinjectChangeDetectorRef = injectChangeDetectorRef;\nexports.ÉµinjectAttribute = injectAttribute;\nexports.ÉµPublicFeature = PublicFeature;\nexports.ÉµNgOnChangesFeature = NgOnChangesFeature;\nexports.ÉµmarkDirty = markDirty;\nexports.ÉµNC = NO_CHANGE;\nexports.ÉµC = container;\nexports.ÉµE = elementStart;\nexports.ÉµL = listener;\nexports.ÉµT = text;\nexports.ÉµV = embeddedViewStart;\nexports.ÉµQ = query;\nexports.Éµd = loadDirective;\nexports.ÉµP = projection;\nexports.Éµb = bind;\nexports.Éµi1 = interpolation1;\nexports.Éµi2 = interpolation2;\nexports.Éµi3 = interpolation3;\nexports.Éµi4 = interpolation4;\nexports.Éµi5 = interpolation5;\nexports.Éµi6 = interpolation6;\nexports.Éµi7 = interpolation7;\nexports.Éµi8 = interpolation8;\nexports.ÉµiV = interpolationV;\nexports.Éµpb1 = pipeBind1;\nexports.Éµpb2 = pipeBind2;\nexports.Éµpb3 = pipeBind3;\nexports.Éµpb4 = pipeBind4;\nexports.ÉµpbV = pipeBindV;\nexports.Éµf0 = pureFunction0;\nexports.Éµf1 = pureFunction1;\nexports.Éµf2 = pureFunction2;\nexports.Éµf3 = pureFunction3;\nexports.Éµf4 = pureFunction4;\nexports.Éµf5 = pureFunction5;\nexports.Éµf6 = pureFunction6;\nexports.Éµf7 = pureFunction7;\nexports.Éµf8 = pureFunction8;\nexports.ÉµfV = pureFunctionV;\nexports.ÉµcR = containerRefreshStart;\nexports.Éµcr = containerRefreshEnd;\nexports.ÉµqR = queryRefresh;\nexports.Éµe = elementEnd;\nexports.Éµp = elementProperty;\nexports.ÉµpD = projectionDef;\nexports.ÉµrS = reserveSlots;\nexports.Éµa = elementAttribute;\nexports.Éµs = elementStyle;\nexports.Éµsn = elementStyleNamed;\nexports.Éµk = elementClass;\nexports.Éµkn = elementClassNamed;\nexports.Éµt = textBinding;\nexports.Éµv = embeddedViewEnd;\nexports.Éµst = store;\nexports.Éµld = load;\nexports.ÉµPp = pipe;\nexports.ÉµwhenRendered = whenRendered;\nexports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\nexports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\nexports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\nexports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\nexports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\nexports.ÉµsanitizeHtml = sanitizeHtml;\nexports.ÉµsanitizeStyle = sanitizeStyle;\nexports.ÉµsanitizeUrl = sanitizeUrl;\nexports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\nexports.ÉµregisterModuleFactory = registerModuleFactory;\nexports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$1;\nexports.ÉµEMPTY_MAP = EMPTY_MAP;\nexports.Éµand = anchorDef;\nexports.Éµccf = createComponentFactory;\nexports.Éµcmf = createNgModuleFactory;\nexports.Éµcrt = createRendererType2;\nexports.Éµdid = directiveDef;\nexports.Éµeld = elementDef;\nexports.ÉµelementEventFullName = elementEventFullName;\nexports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\nexports.ÉµinlineInterpolate = inlineInterpolate;\nexports.Éµinterpolate = interpolate;\nexports.Éµmod = moduleDef;\nexports.Éµmpd = moduleProvideDef;\nexports.Éµncd = ngContentDef;\nexports.Éµnov = nodeValue;\nexports.Éµpid = pipeDef;\nexports.Éµprd = providerDef;\nexports.Éµpad = pureArrayDef;\nexports.Éµpod = pureObjectDef;\nexports.Éµppd = purePipeDef;\nexports.Éµqud = queryDef;\nexports.Éµted = textDef;\nexports.Éµunv = unwrapValue;\nexports.Éµvid = viewDef;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}