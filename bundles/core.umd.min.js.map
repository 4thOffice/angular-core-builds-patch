{"version":3,"sources":["core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","Rx","Observable","prototype","this","rxjs_Observable","rxjs_observable_merge","rxjs_operator_share","rxjs_Subject","rxjs_Subscription","__extends","d","b","__","constructor","extendStatics","Object","create","isType","v","getSymbolIterator","_symbolIterator","Symbol_1","_global","iterator","keys","getOwnPropertyNames","Map","i","length","key","scheduleMicroTask","fn","Zone","promise","then","apply","current","looseIdentical","a","isNaN","stringify","token","Array","map","join","overriddenName","name","res","toString","newLineIndex","indexOf","substring","makeDecorator","props","parentClass","chainFn","typeFn","DecoratorFactory","args","_i","arguments","metaCtor","call","concat","annotationInstance","_a","bind","TypeDecorator","cls","hasOwnProperty","ANNOTATIONS","defineProperty","value","push","makeMetadataCtor","ngMetadataName","annotationCls","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","unusedKey","index","parameters","PARAMETERS","annotation","makePropDecorator","PropDecoratorFactory","decoratorInstance","target","meta","PROP_METADATA","unshift","convertTsickleDecoratorIntoMetadata","decoratorInvocations","decoratorInvocation","decoratorType","type","annotationArgs","getParentCtor","ctor","parentProto","getPrototypeOf","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","resolveProvider","provider","deps","computeDeps","IDENT","EMPTY","useNew","provide","USE_VALUE$1","useValue","useFactory","useExisting","useClass","staticError","multiProviderMixError","recursivelyProcessProviders","records","resolvedProvider","multi","multiProvider","get","MULTI_PROVIDER_FN","set","options","record","tryResolveToken","parent","notFoundValue","flags","resolveToken","e","Error","path","NG_TEMP_TOKEN_PATH","CIRCULAR","NO_NEW_LINE","depRecords","depRecord","childRecord","undefined","NULL_INJECTOR","Injector","THROW_IF_NOT_FOUND","providerDeps","j","annotations","Optional","SkipSelf","Self","Inject","formatError","text","obj","source","charAt","substr","context","parts","JSON","replace","NEW_LINE","setCurrentInjector","injector","former","_currentInjector","inject","injectArgs","types","arg","isArray","defaultValue","__proto__","convertInjectableProviderToFactory","reflectionCapabilities","ReflectionCapabilities","deps_1","USE_VALUE","valueProvider_1","existingProvider_1","factoryProvider_1","EMPTY_ARRAY","classProvider_1","deps_2","deps_3","defineInjectable","opts","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ChangeDetectionStrategy","Default","getDebugContext","error","ERROR_DEBUG_CONTEXT","getOriginalError","ERROR_ORIGINAL_ERROR","getErrorLogger","ERROR_LOGGER","defaultErrorLogger","console","wrappedError","message","originalError","msg","findFirstClosedCycle","constructResolvingPath","slice","reverse","k","injectionError","constructResolvingMessage","errMsg","addKey","injectors","noProviderError","cyclicDependencyError","instantiationError","originalException","originalStack","first","invalidProviderError","noAnnotationError","typeOrFunc","params","signature","ii","parameter","outOfBoundsError","mixingMultiProvidersWithRegularProvidersError","provider1","provider2","resolveReflectiveFactory","factoryFn","resolvedDeps","reflector","_dependenciesFor","aliasInstance","ReflectiveDependency","fromKey","ReflectiveKey","constructDependencies","_EMPTY_LIST","ResolvedReflectiveFactory","resolveReflectiveProvider","ResolvedReflectiveProvider_","resolveReflectiveProviders","providers","normalized","_normalizeProviders","resolved","resolvedProviderMap","mergeResolvedReflectiveProviders","from","normalizedProvidersMap","existing","id","resolvedFactories","forEach","Type","dependencies","params_1","t","_extractToken","some","p","metadata","optional","_createDependency","visibility","paramMetadata","InjectionToken","_mapProviders","_providers","getProviderAtIndex","isPromise","isObservable","subscribe","_appIdRandomProviderFactory","_randomChar","String","fromCharCode","Math","floor","random","_throwError","noComponentFactoryError","component","ERROR_COMPONENT","detectWTF","wtf","trace","events","createScope","leave","scope","returnValue","leaveScope","startTimeRange","rangeType","action","beginTimeRange","endTimeRange","range","noopScope","arg0","arg1","noop","checkStable","zone","_nesting","hasPendingMicrotasks","isStable","onMicrotaskEmpty","emit","runOutsideAngular","onStable","forkInnerZoneWithAngularBehavior","_inner","fork","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","callback","invoke","onHasTask","hasTaskState","hasTask","change","microTask","hasPendingMacrotasks","macroTask","onHandleError","handleError","onError","onUnstable","setTestabilityGetter","getter","_testabilityGetter","enableProdMode","_runModeLocked","_devMode","isDevMode","createPlatform","_platform","destroyed","ALLOW_MULTIPLE_PLATFORMS","PlatformRef","inits","PLATFORM_INITIALIZER","init","createPlatformFactory","parentPlatformFactory","desc","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","destroyPlatform","destroy","getNgZone","ngZoneOption","NoopNgZone","NgZone","enableLongStackTrace","_callAndReportToErrorHandler","errorHandler","ngZone","result","catch","optionsReducer","dst","objs","reduce","__assign","remove","list","el","splice","registerModuleFactory","moduleFactories","moduleType","getModuleFactory","flatten","flat","item","flatItem","checkNotEmpty","modulePath","exportName","asNativeElements","debugEls","nativeElement","_queryElementChildren","element","predicate","matches","childNodes","node","DebugElement","_queryNodeChildren","parentNode","getDebugNode","nativeNode","_nativeNodeToDebugNode","indexDebugNode","removeDebugNodeFromIndex","delete","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","isAObject","isBObject","isJsObject","comparator","iterator1","iterator2","item1","next","item2","done","iterateListLike","o","getPreviousIndex","addRemoveOffset","moveOffsets","previousIndex","moveOffset","getTypeNameForDebugging","_iterableDiffersFactory","defaultIterableDiffers","_keyValueDiffersFactory","defaultKeyValueDiffers","_localeFactory","locale","isDOMParserAvailable","DOMParser","_sanitizeUrl","url","match","SAFE_URL_PATTERN","DATA_URL_PATTERN","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","merge$1","sets","sets_1","s","encodeEntities","SURROGATE_PAIR_REGEXP","charCodeAt","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","defaultDoc","unsafeHtmlInput","inertBodyElement","inertBodyHelper","InertBodyHelper","unsafeHtml","getInertBodyElement","mXSSAttempts","parsedHtml","innerHTML","sanitizer","SanitizingHtmlSerializer","safeHtml","sanitizeChildren","getTemplateContent","sanitizedSomething","parent_1","firstChild","removeChild","isTemplateElement","content","nodeType","Node","ELEMENT_NODE","nodeName","hasBalancedQuotes","outsideSingle","outsideDouble","c","_sanitizeStyle","urlMatch","URL_RE","SAFE_STYLE_VALUE","shiftInitState","view","priorInitState","newInitState","state","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","expressionChangedAfterItHasBeenCheckedError","oldValue","currValue","isFirstCheck","viewDebugError","viewWrappedDebugError","err","_addDebugContext","logError","isViewDebugError","viewDestroyedError","tokenKey","_tokenKeyCache","size","unwrapValue","nodeIdx","bindingIdx","WrappedValue","isWrapped","unwrap","globalBindingIdx","def","bindingIndex","oldValues","createRendererType2","UNDEFINED_RENDERER_TYPE_ID","styles","encapsulation","data","resolveRendererType2","isFilled","ViewEncapsulation","None","_renderCompCount","EMPTY_RENDERER_TYPE_ID","checkBinding","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","Services","createDebugContext","nodeIndex","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","eventName","event","componentView","handleEvent","root","declaredViewContainer","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","SOURCE","configurable","getParentRenderElement","renderHost","renderParent","componentRendererType","Native","resolveDefinition","DEFINITION_CACHE","NOOP","rootRenderNodes","renderNodes","visitRootRenderNodes","nextSibling","renderer","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostView","hostElDef","projectedNodes","projectableNodes","execRenderNodeAction","rn","bindingFlags","embeddedViews","_embeddedViews","appendChild","insertBefore","splitNamespace","NS_PREFIX_RE","calcBindingFlags","interpolate","valueCount","constAndInterp","_toStringWithNull","inlineInterpolate","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","anchorDef","templateFactory","outputIndex","checkIndex","childFlags","directChildFlags","childMatchedQueries","outputs","ns","attrs","template","componentProvider","publicProviders","allProviders","query","ngContent","elementDef","namespaceAndName","fixedAttrs","_b","bindingDefs","_c","namespaceAndName_1","suffixOrSecurityContext","_d","ns_1","name_1","securityContext","suffix","nonMinifiedName","outputDefs","_e","createElement","elDef","rootSelectorOrNode","selectorOrNode","createComment","parentEl","selectRootElement","name_2","setAttribute","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","checkAndUpdateElementInline","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","bindLen","changed","checkAndUpdateElementValue","checkAndUpdateElementDynamic","binding","elData","renderNode$$1","setElementAttribute","setElementClass","setElementStyle","setElementProperty","renderValue","sanitize","removeAttribute","addClass","removeClass","SecurityContext","STYLE","unit","setStyle","removeStyle","setProperty","moduleProvideDef","moduleDef","providersByKey","modules","isRoot","APP_ROOT_SCOPE","initNgModule","_def","provDef","_createProviderInstance$1","resolveNgModuleDep","depDef","_parent","tokenKey$$1","InjectorRefTokenKey$1","NgModuleRefTokenKey","providerDef","providerInstance","UNDEFINED_VALUE","ngInjectableDef","targetsModule","injectableDef_1","moduleTransitivelyPresent","ngModule","injectable","_createClass","_callFactory","len","depValues","callNgModuleLifecycle","lifecycles","instance","ngOnDestroy","attachEmbeddedView","parentView","elementData","viewIndex","addToArray","attachProjectedView","dirtyParentQueries","renderAttachEmbeddedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","viewDef","nodeFlags","parentNodeDef","detachEmbeddedView","removeFromArray","renderDetachView","detachProjectedView","moveEmbeddedView","oldViewIndex","newViewIndex","prevView","prevRenderNode","arr","pop","createComponentFactory","selector","componentType","viewDefFactory","inputs","ngContentSelectors","ComponentFactory_","getComponentViewDefinitionFactory","componentFactory","createViewContainerData","ViewContainerRef_","createChangeDetectorRef","ViewRef_","createTemplateData","TemplateRef_","createInjector","Injector_","nodeValue","createRendererV1","RendererAdapter","createNgModuleRef","bootstrapComponents","NgModuleRef_","directiveDef","prop","pipeDef","depDefs","createProviderInstance","_createProviderInstance","createPipeInstance","createClass","createDirectiveInstance","allowPrivateServices","subscription","eventHandlerClosure","unsubscribe","checkAndUpdateDirectiveInline","providerData","directive","changes","updateProp","ngOnChanges","ngOnInit","ngDoCheck","checkAndUpdateDirectiveDynamic","callFactory","resolveDep","startView","ChangeDetectorRefTokenKey","searchView","RendererV1TokenKey","findCompView","Renderer2TokenKey","ElementRefTokenKey","ElementRef","ViewContainerRefTokenKey","viewContainer","TemplateRefTokenKey","InjectorRefTokenKey","providerDef_1","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","SimpleChange","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","setCurrentNode","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","queryDef","bindingType","filterId","createQuery","QueryList","queryIds","nodeMatchedQueries","tplDef","end","setDirty","checkAndUpdateQuery","queryList","dirty","directiveInstance","newValues","calcQueryValues","reset","notify","boundValue","notifyOnChanges","getQueryValue","embeddedView","dvc","projectedView","queryValueType","ngContentDef","appendNgContent","purePipeDef","argCount","_pureExpressionDef","pureArrayDef","pureObjectDef","propToIndex","nbKeys","propertyNames","createPureExpression","checkAndUpdatePureExpressionInline","pipe","transform","checkAndUpdatePureExpressionDynamic","textDef","staticText","prefix","createText","checkAndUpdateTextInline","_addInterpolationPart","setValue","checkAndUpdateTextDynamic","updateDirectives","updateRenderer","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","lastRenderRootNode","validateNode","isPrivateService","isComponent","isNgContainer","newParent","rootNodeFlags","bindingCount","outputCount","nodeCount","parentEnd","createEmbeddedView","anchorDef$$1","createView","initView","createViewNodes","createRootView","createComponentView","hostElement","compRenderer","rendererType","rendererFactory","createRenderer","disposables","hostDef","nodeData","compViewDef","execComponentViewsAction","ViewAction","CreateViewNodes","execQueriesAction","checkNoChangesView","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","checkAndUpdateView","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","checkAndUpdateNodeInline","checkAndUpdateNodeDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","destroyView","Destroy","destroyNode","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","initialized","services","createDebugServices","createProdServices","overrideProvider","overrideComponentView","clearOverrides","createProdRootView","DebugContext_","prodCheckAndUpdateNode","prodCheckNoChangesNode","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","elInjector","createRootData","RendererFactory2","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","Sanitizer","ErrorHandler","viewDef$$1","viewDefOverrides","parentInjector","applyProviderOverridesToNgModule","override","providerOverrides","comp","compFactory","hostViewDef","clear","elementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","has","elIndex","hasOverrides","hasDeprecatedOverrides","deprecatedBehavior","detectChanges","checkNoChanges","_currentView","_currentNodeIndex","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextDirectiveWithBinding","_currentAction","debugCheckRenderNodeFn","nextRenderNodeWithBinding","givenValues","bindingValues","normalizeDebugBindingName","normalizeDebugBindingValue","attr","camelCaseToDashCase","input","CAMEL_CASE_REGEXP","m","toLowerCase","getRenderNodeIndex","renderNodeIndex","findHostElement","collectReferences","refName","self","oldAction","oldView","oldNodeIndex","getCurrentDebugContext","createNgModuleFactory","ngModuleType","defFactory","NgModuleFactory_","assertEqual","actual","expected","throwError","assertNotEqual","assertSame","assertLessThan","assertNull","assertNotNull","queueInitHooks","onInit","doCheck","tView","firstTemplatePass","initHooks","checkHooks","queueLifecycleHooks","currentView","start","queueContentHooks","queueViewHooks","queueDestroyHooks","afterContentInit","contentHooks","afterContentChecked","contentCheckHooks","afterViewInit","viewHooks","afterViewChecked","viewCheckHooks","onDestroy","destroyHooks","executeInitHooks","creationMode","lifecycleStage","executeHooks","executeContentHooks","allHooks","hooksToCall","callHooks","assertNodeType","typeName","assertNodeOfPossibleTypes","isProceduralRenderer","findNextRNodeSibling","stopNode","currentNode","pNextOrParent","pNextOrParentType","findFirstRNode","currentSibling","parentType","getNextLNodeWithProjection","getNextOrParentSiblingNode","initialNode","rootNode","nextNode","native","childContainerData","views","child","head","addRemoveViewFromContainer","container","insertMode","beforeNode","ngDevMode","destroyViewTree","rootView","viewOrContainer","cleanUpView","getParentState","insertView","newView","setViewNext","nextIndex","containerNextNativeNode","removeView","removeIndex","viewNode","queries","removeListeners","executeOnDestroys","cleanup","removeEventListener","canInsertNativeNode","insertChild","nativeSibling","appendProjectedNode","lContainer","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","isNodeMatchingSimpleSelector","tNode","noOfSelectorParts","tagNameInSelector","tagName","attrsInNode","attrNameInSelector","attrIdxInNode","attrValInSelector","attrValInNode","isNodeMatchingSelectorWithNegations","positiveSelector","negativeSelectors","isNodeMatchingSelector","getProjectAsAttrValue","nodeAttrs","ngProjectAsAttrIdx","NG_PROJECT_AS_ATTR_NAME","matchingSelectorIndex","selectors","textSelectors","ngProjectAsAttrVal","isDifferent","stringify$1","notImplemented","flatten$1","getRenderer","getPreviousOrParentNode","previousOrParentNode","getCurrentQueries","QueryType","currentQueries","getCreationMode","enterView","host","bindingStartIndex","tData","isParent","leaveView","createLView","viewId","tail","dynamicViewCount","createLNode","isState","nodeInjector","assertDataNext","resetApplicationState","renderEmbeddedTemplate","_isParent","_previousOrParentNode","cm","createTView","refreshDynamicChildren","renderComponentOrTemplate","componentOrContext","begin","directiveRefresh","elementStart","nameOrComponentType","directiveTypes","localRefs","node_1","isHostElement","hostComponentDef","ngComponentDef","tag","getOrCreateTView","addToViewTree","onPush","queryName","hack_findQueryName","assertDataInRange","createTNode","setUpAttributes","n","directiveCreate","initChangeDetectorIfExisting","hack_declareDirectives","changeDetectorRef","_setComponentContext","directiveType","ngDirectiveDef","defaultExport","exportAs","local","toExportAs","ngPrivateData","isProc","attrName","attrVal","createError","locateHostElement","elementOrSelector","defaultRenderer","rNode","querySelector","listener","listenerFn","useCapture","assertPreviousIsParent","cleanupFns","wrappedListener","wrapListenerWithDirtyLogic","cleanupFn","wrapListenerWithDirtyAndDefault","addEventListener","generatePropertyAliases","outputData","createOutput","elementEnd","assertHasParent","addNode","elementAttribute","NO_CHANGE","strValue","elementProperty","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","localName","localNames","initialInputs","lNodeFlags","direction","propStore","isInput","propertyAliasMap","publicName","internalName","hasProperty","elementClass","className","lElement","classList","add","elementStyle","styleName","suffixOrSanitizer","RendererStyleFlags3","DashCase","style","removeProperty","textNode","createTextNode","textBinding","existingNode","textContent","NG_HOST_SYMBOL","enumerable","tNode_1","diPublic","attributes","setInputsFromAttrs","directiveIndex","initialInputData","generateInitialInputs","minifiedInputName","containerRefreshStart","containerRefreshEnd","container_1","embeddedViewStart","viewBlockId","existingView","viewUpdateMode","getOrCreateEmbeddedTView","tContainer","embeddedViewEnd","containerState","previousView","elementIndex","detectChangesInternal","getDirectiveInstance","projectionDef","noOfNodeBuckets","distributedNodes","componentNode","findComponentHost","componentChild","appendToProjectionNode","projectionNode","appendedFirst","appendedLast","projectionNodeData","projection","localIndex","selectorIndex","nodesForSelector","nodeToProject","previouslyProjected","lastNodeToProject","lView","viewRootLNode","markViewDirty","preventDefault","scheduleTick","rootContext","clean","_CLEAN_PROMISE","res_1","Promise","r","scheduler","tick","getRootView","rootComponent","hostNode","_getComponentHostLElementNode","lElementNode","componentIndex","initBindings","interpolationV","different","bindingUpdated","interpolation1","interpolation2","i0","bindingUpdated2","interpolation3","i1","interpolation4","i2","bindingUpdated4","interpolation5","i3","interpolation6","i4","interpolation7","i5","interpolation8","i6","store","load","consumeBinding","checkAndUpdateBinding$1","exp1","exp2","exp3","exp4","getTView","instanceOrArray","createViewRef","addDestroyable","ViewRef$1","destroyFn","renderComponent","domRendererFactory3","componentDef","requestAnimationFrame","CLEAN_PROMISE","elementNode","hostFeatures","feature","bloomAdd","NG_ELEMENT_ID","nextNgElementId","bloomBit","BLOOM_SIZE","mask","bf0","bf1","bf2","bf3","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","cbf0","cbf1","cbf2","cbf3","templateRef","viewContainerRef","elementRef","createInjectionError","text$$1","diPublicInInjector","di","inject$1","getOrCreateInjectable","injectTemplateRef","getOrCreateTemplateRef","injectViewContainerRef","getOrCreateContainerRef","injectChangeDetectorRef","getOrCreateChangeDetectorRef","injectAttribute","tElement","getOrCreateHostChangeDetector","getClosestComponentAncestor","hostInjector","existingRef","bloomHash","bloomHashBit","moduleInjector","bloomFindPossibleInjector","flags_1","startInjector","getOrCreateElementRef","ElementRef$1","ViewContainerRef$1","TemplateRef$1","defineComponent","componentDefinition","h","hostBindings","noop$1","invertObject","inputsPropertyName","methods","changeDetection","OnPush","features","NgOnChangesFeature","definition","onChangesWrapper","delegateHook","simpleChanges","PRIVATE_PREFIX","proto","writable","pubKey","minKey","propertyName","privateMinKey","existingDesc","getOwnPropertyDescriptor","isFirstChange","PublicFeature","EMPTY$1","newObj","minifiedKey","definePipe","pure","pureFunction0","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","firstInstance","pipeInstance","pipeBind1","isPure","pipeBind2","pipeBind3","pipeBind4","pipeBindV","getIdxOfMatchingSelector","geIdxOfMatchingDirective","readFromNodeInjector","read","directiveIdx","ReadFromInjectorFn","matchingIdx","addMatch","matchingValue","createPredicate","createQuery$1","previous","_valuesTree","memoryIndex","descend","QueryList$1","LQueries_","track","queryRefresh","queryListImpl","sanitizeHtml","BRAND","document","sanitizeStyle","unsafeStyle","sanitizeUrl","unsafeUrl","sanitizeResourceUrl","unsafeResourceUrl","bypassSanitizationTrustHtml","trustedHtml","bypassSanitizationTrustString","bypassSanitizationTrustStyle","trustedStyle","bypassSanitizationTrustScript","trustedScript","bypassSanitizationTrustUrl","trustedUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","trustedString","mode","trusted","trigger$1","definitions","animate$1","timings","group$1","steps","sequence$1","style$1","tokens","offset","state$1","keyframes$1","transition$1","stateChangeExpr","expr","animation","trigger$$1","animate$$1","group$$1","sequence$$1","style$$1","state$$1","keyframes$$1","transition$$1","setPrototypeOf","assign","Function","__window","window","__self","WorkerGlobalScope","__global","resolve","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","decorators","getOwnMetadata","fill","_ownAnnotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","setter","method","functionBody","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","Host","_THROW_IF_NOT_FOUND","_NullInjector","StaticInjector","NULL","GET_PROPERTY_NAME$1","ɵ2","objWithPropertyToExtract","_records","tokenPath","GET_PROPERTY_NAME","ɵ0","Injectable","injectableType","_desc","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","Query","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ChangeDetectorStatus","CheckOnce","Checked","CheckAlways","Detached","Errored","Destroyed","Directive","dir","Component","Pipe","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","NgModule","Emulated","Version","full","major","minor","patch","VERSION","_console","_findOriginalError","_findContext","errorLogger","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","Reflector","updateCapabilities","caps","identifier","resolvedFactory","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_constructionCounter","keyIds","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","_new","_getMaxNumberOfObjects","_instantiate","ResolvedReflectiveFactory$$1","_this","dep","_getByReflectiveDependency","stack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","inj_","APP_INITIALIZER","ApplicationInitStatus","appInits","donePromise","rej","reject","runInitializers","asyncInitPromises","complete","initResult","all","APP_ID","APP_ID_RANDOM_PROVIDER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","COMPILER_OPTIONS","CompilerFactory","ComponentRef","ComponentFactory","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_ngModule","_factories","ComponentFactoryBoundToModule","_super","NgModuleRef","NgModuleFactory","wtfEnabled","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","EventEmitter","isAsync","__isAsync","generatorOrNext","schedulerFn","errorFn","completeFn","setTimeout","sink","Subscription","Subject","assertZonePatched","_outer","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","cancelTask","runGuarded","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","registry","NgProbeToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZoneInjector","moduleRef","exceptionHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","createCompiler","appRef","ApplicationRef","_bootstrapComponents","f","bootstrap","ngDoBootstrap","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","components","isCurrentlyStable","observer","stableSub","unstableSub","merge","share","componentOrFactory","compRef","_unloadComponent","location","_loadComponent","_tickScope","attachView","viewRef","attachToAppRef","detachView","detachFromAppRef","componentRef","RenderComponentType","templateUrl","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererStyleFlags2","Important","Renderer2","NgModuleFactoryLoader","_results","filter","find","toArray","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","loadFactory","loadAndCompile","System","import","factoryClassSuffix","TemplateRef","ViewContainerRef","ChangeDetectorRef","ViewRef","EmbeddedViewRef","EventListener","DebugNode","_debugContext","addChild","listeners","providerTokens","classes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","queryAllNodes","triggerEventHandler","eventObj","wrapped","wrap","previousValue","currentValue","firstChange","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","adjPreviousIndex","currentIndex","_nextRemoved","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","IterableDiffers","copied","extend","iterable","KeyValueDiffers","kv","keyValDiff","iterableDiff","_CORE_PLATFORM_PROVIDERS","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","MissingTranslationStrategy","Warning","Ignore","ApplicationModule","inertDocument","implementation","createHTMLDocument","body","inertHtml","getInertBodyElement_XHR","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","response","parseFromString","templateEl","documentMode","stripCustomNsAttrs","elAttrs","attrib","childNode","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","buf","startElement","TEXT_NODE","chars","endElement","checkClobberedElement","elAttr","lower","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","RegExp","NONE","HTML","SCRIPT","URL","RESOURCE_URL","DebugContext","WeakMap","EMPTY_ARRAY$1","EMPTY_MAP","EMPTY_CONTEXT","_inputs","_outputs","inputsArr","templateName","outputsArr","componentNodeIndex","ComponentRef_","_view","_viewRef","_component","_elDef","_data","ref","attachToViewContainerRef","insert","createComponent","ngModuleRef","contextInjector","viewRef_","viewData","move","detach","_viewContainerRef","_appRef","markForCheck","fs","reattach","vcRef","_parentView","createViewRoot","createTemplateAnchor","parentElement","comment","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleValue","invokeElementMethod","methodName","setText","animate","_moduleType","injectFlags","elView","elOrCompView","childDef","logViewDef","logNodeIndex","currRenderNodeIndex","nodeLogger","renderData","DebugRenderer2","whenRenderingDone","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","fullName","_ngModuleDefFactory","EmbeddedViewRef$1","_lViewNode","_node","_renderer","_template","defineDirective","deep","shallow","containerValues","clonedQuery","viewValues","removed","QueryList_","_values","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdevModeEqual","ɵisListLikeIterable","ɵChangeDetectorStatus","ɵisDefaultChangeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵComponentFactory","ɵCodegenComponentFactoryResolver","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdefineComponent","ɵdefineDirective","ɵdefinePipe","ɵdetectChanges","ɵrenderComponent","ɵinject","ɵinjectTemplateRef","ɵinjectViewContainerRef","ɵinjectChangeDetectorRef","ɵinjectAttribute","ɵPublicFeature","ɵNgOnChangesFeature","ɵNC","ɵC","ɵE","ɵL","ɵT","ɵV","ɵQ","ɵP","ɵb","ɵi1","ɵi2","ɵi3","ɵi4","ɵi5","ɵi6","ɵi7","ɵi8","ɵiV","ɵpb1","ɵpb2","ɵpb3","ɵpb4","ɵpbV","ɵf0","ɵf1","ɵf2","ɵf3","ɵf4","ɵf5","ɵf6","ɵf7","ɵf8","ɵfV","ɵcR","ɵcr","ɵqR","ɵe","ɵp","ɵpD","ɵa","ɵk","ɵs","ɵt","ɵv","ɵr","ɵst","ɵld","ɵPp","ɵbypassSanitizationTrustHtml","ɵbypassSanitizationTrustStyle","ɵbypassSanitizationTrustScript","ɵbypassSanitizationTrustUrl","ɵbypassSanitizationTrustResourceUrl","ɵsanitizeHtml","ɵsanitizeStyle","ɵsanitizeUrl","ɵsanitizeResourceUrl","ɵregisterModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","ɵccf","ɵcmf","ɵcrt","ɵdid","ɵeld","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","ɵinterpolate","ɵmod","ɵmpd","ɵncd","ɵnov","ɵpid","ɵprd","ɵpad","ɵpod","ɵppd","ɵqud","ɵted","ɵunv","ɵvid","AUTO_STYLE","trigger","group","sequence","keyframes","transition","ɵbr","ɵbs","ɵbw","ɵbt","ɵbv","ɵbu","ɵbx","ɵbq","ɵo","ɵq","ɵu","ɵi","ɵj","ɵl","ɵm","ɵn","ɵf","ɵg","ɵh","ɵw","ɵy","ɵx","ɵbb","ɵz","ɵba","ɵbf","ɵbh","ɵbg","ɵbe","ɵbi","ɵbl","ɵbn","ɵbo","ɵbm","ɵbk","ɵbj","ɵc","ɵd","ɵbc","ɵbd"],"mappings":";;;;;CAKC,SAAUA,OAAQC,SACC,gBAAZC,UAA0C,mBAAXC,QAAyBF,QAAQC,QAASE,QAAQ,mBAAoBA,QAAQ,yBAA0BA,QAAQ,uBAAwBA,QAAQ,gBAAiBA,QAAQ,sBAC7L,kBAAXC,SAAyBA,OAAOC,IAAMD,OAAO,iBAAkB,UAAW,kBAAmB,wBAAyB,sBAAuB,eAAgB,qBAAsBJ,SACzLA,SAASD,OAAOO,GAAKP,OAAOO,OAAUP,OAAOO,GAAGC,SAAWR,OAAOS,GAAGT,OAAOS,GAAGC,WAAWV,OAAOS,GAAGC,WAAWC,UAAUX,OAAOS,GAAGT,OAAOS,KAC1IG,KAAM,SAAWV,QAAQW,gBAAgBC,sBAAsBC,oBAAoBC,aAAaC,mBAAqB,YAsBvH,SAASC,WAAUC,EAAGC,GAElB,QAASC,MAAOT,KAAKU,YAAcH,EADnCI,cAAcJ,EAAGC,GAEjBD,EAAER,UAAkB,OAANS,EAAaI,OAAOC,OAAOL,IAAMC,GAAGV,UAAYS,EAAET,UAAW,GAAIU,KA0CnF,QAASK,QAAOC,GACZ,MAAoB,kBAANA,GAwBlB,QAASC,qBACL,IAAKC,gBAAiB,CAClB,GAAqBC,UAAWC,QAAgB,MAChD,IAAID,UAAYA,SAASE,SACrBH,gBAAkBC,SAASE,aAK3B,KAAK,GADgBC,MAAOT,OAAOU,oBAAoBC,IAAIxB,WACjCyB,EAAI,EAAGA,EAAIH,KAAKI,SAAUD,EAAG,CACnD,GAAqBE,KAAML,KAAKG,EACpB,aAARE,KAA6B,SAARA,KACrB,IAAyB3B,UAAU2B,OAASH,IAAIxB,UAAmB,UACnEkB,gBAAkBS,MAKlC,MAAOT,iBAMX,QAASU,mBAAkBC,IACH,mBAATC,MAEPC,QAAQC,KAAK,WAAcH,IAAMA,GAAGI,MAAM,KAAM,QAGhDH,KAAKI,QAAQN,kBAAkB,oBAAqBC,IAQ5D,QAASM,gBAAeC,EAAG3B,GACvB,MAAO2B,KAAM3B,GAAkB,gBAAN2B,IAA+B,gBAAN3B,IAAkB4B,MAAMD,IAAMC,MAAM5B,GAM1F,QAAS6B,WAAUC,OACf,GAAqB,gBAAVA,OACP,MAAOA,MAEX,IAAIA,gBAAiBC,OACjB,MAAO,IAAMD,MAAME,IAAIH,WAAWI,KAAK,MAAQ,GAEnD,IAAa,MAATH,MACA,MAAO,GAAKA,KAEhB,IAAIA,MAAMI,eACN,MAAO,GAAKJ,MAAMI,cAEtB,IAAIJ,MAAMK,KACN,MAAO,GAAKL,MAAMK,IAEtB,IAAqBC,KAAMN,MAAMO,UACjC,IAAW,MAAPD,IACA,MAAO,GAAKA,GAEhB,IAAqBE,cAAeF,IAAIG,QAAQ,KAChD,QAAyB,IAAlBD,aAAsBF,IAAMA,IAAII,UAAU,EAAGF,cAyCxD,QAASG,eAAcN,KAAMO,MAAOC,YAAaC,QAASC,QAMtD,QAASC,oBAEL,IAAK,GADDC,SACKC,GAAK,EAAGA,GAAKC,UAAUhC,OAAQ+B,KACpCD,KAAKC,IAAMC,UAAUD,GAEzB,IAAIxD,eAAgBsD,kBAEhB,MADAI,UAASC,KAAK3B,MAAM0B,UAAW1D,MAAM4D,OAAOL,OACrCvD,IAEX,IAAqB6D,oBAAqB,KAAMC,GAAK,kBAAuCC,KAAK/B,MAAM8B,QAAK,IAAQF,OAAOL,QACtGS,cAAiC,SAAwBC,KAQ1E,MAPAZ,SAAUA,OAAOrB,UAAM,IAASiC,KAAKL,OAAOL,QAGTU,IAAIC,eAAeC,aAClD,IAAyBA,aACzBvD,OAAOwD,eAAeH,IAAKE,aAAeE,WAAaF,cAC/CG,KAAKT,oBACVI,IAIX,OAFIb,UACAA,QAAQY,eACLA,aACP,IAAIF,IA5BR,GAAqBJ,UAAWa,iBAAiBrB,MAmCjD,OALIC,eACAG,iBAAiBvD,UAAYa,OAAOC,OAAOsC,YAAYpD,YAE3DuD,iBAAiBvD,UAAUyE,eAAiB7B,KAC5C,iBAAsC8B,cAAgBnB,iBAC9B,iBAM5B,QAASiB,kBAAiBrB,OACtB,MAAO,YAEH,IAAK,GADDK,SACKC,GAAK,EAAGA,GAAKC,UAAUhC,OAAQ+B,KACpCD,KAAKC,IAAMC,UAAUD,GAEzB,IAAIN,MAAO,CACP,GAAqBwB,QAASxB,MAAMlB,UAAM,GAAQuB,KAClD,KAAK,GAAqBoB,YAAYD,QAClC1E,KAAK2E,UAAYD,OAAOC,YAWxC,QAASC,oBAAmBjC,KAAMO,MAAOC,aAMrC,QAAS0B,yBAkBL,QAASC,gBAAeb,IAAKc,UAAWC,OAQpC,IALA,GAAqBC,YAAahB,IAAIC,eAAegB,YACjD,IAAyBA,YACzBtE,OAAOwD,eAAeH,IAAKiB,YAAcb,WAAaa,YAGnDD,WAAWxD,QAAUuD,OACxBC,WAAWX,KAAK,KAGpB,QADCW,WAAWD,OAASC,WAAWD,YAAcV,KAAKT,oBAC5CI,IA5BX,IAAK,GADDV,SACKC,GAAK,EAAGA,GAAKC,UAAUhC,OAAQ+B,KACpCD,KAAKC,IAAMC,UAAUD,GAEzB,IAAIxD,eAAgB6E,uBAEhB,MADAnB,UAAS1B,MAAMhC,KAAMuD,MACdvD,IAEX,IAAqB6D,oBAAqB,KAAMC,GAAK,uBAA4CC,KAAK/B,MAAM8B,QAAK,IAAQF,OAAOL,OAEhI,OADA,gBAAoC4B,WAAatB,mBAC1CiB,cAqBP,IAAIhB,IArCR,GAAqBJ,UAAWa,iBAAiBrB,MA4CjD,OALIC,eACA0B,sBAAsB9E,UAAYa,OAAOC,OAAOsC,YAAYpD,YAEhE8E,sBAAsB9E,UAAUyE,eAAiB7B,KACjD,sBAA2C8B,cAAgBI,sBACpDA,sBAQX,QAASO,mBAAkBzC,KAAMO,MAAOC,aAMpC,QAASkC,wBAEL,IAAK,GADD9B,SACKC,GAAK,EAAGA,GAAKC,UAAUhC,OAAQ+B,KACpCD,KAAKC,IAAMC,UAAUD,GAEzB,IAAIxD,eAAgBqF,sBAEhB,MADA3B,UAAS1B,MAAMhC,KAAMuD,MACdvD,IAEX,IAAqBsF,mBAAoB,KAAMxB,GAAK,sBAA2CC,KAAK/B,MAAM8B,QAAK,IAAQF,OAAOL,OAC9H,OAAO,UAAuBgC,OAAQ5C,MAClC,GAAqBjC,aAAc6E,OAAO7E,YAGrB8E,KAAO9E,YAAYwD,eAAeuB,eACnD,YAAiCA,eACjC7E,OAAOwD,eAAe1D,YAAa+E,eAAiBpB,WAAaoB,cACrED,MAAK7C,MAAQ6C,KAAKtB,eAAevB,OAAS6C,KAAK7C,UAC/C6C,KAAK7C,MAAM+C,QAAQJ,mBAEvB,IAAIxB,IAzBR,GAAqBJ,UAAWa,iBAAiBrB,MAgCjD,OALIC,eACAkC,qBAAqBtF,UAAYa,OAAOC,OAAOsC,YAAYpD,YAE/DsF,qBAAqBtF,UAAUyE,eAAiB7B,KAChD,qBAA0C8B,cAAgBY,qBACnDA,qBAsYX,QAASM,qCAAoCC,sBACzC,MAAKA,sBAGEA,qBAAqBpD,IAAI,SAAUqD,qBACtC,GAAqBC,eAAgBD,oBAAoBE,KACpCtB,cAAgBqB,cAAcrB,cAC9BuB,eAAiBH,oBAAoBtC,KAAOsC,oBAAoBtC,OACrF,OAAO,KAAKkB,cAAcV,KAAK/B,MAAMyC,mBAAgB,IAAQb,OAAOoC,uBAO5E,QAASC,eAAcC,MACnB,GAAqBC,aAAcD,KAAKnG,UAAYa,OAAOwF,eAAeF,KAAKnG,WAAa,IAI5F,QAHkCoG,YAAcA,YAAYzF,YAAc,OAGrDE;;;;;;;AAgEzB,QAASyF,YAAWC,cAGhB,MAFA,cAAkCC,gBAAkBF,WACpD,aAAkCxD,SAAW,WAAc,MAAOR,WAAUrC,SACrE,aAgBX,QAASwG,mBAAkBT,MACvB,MAAoB,kBAATA,OAAuBA,KAAK7B,eAAe,oBAClD6B,KAAKQ,kBAAoBF,WAClB,OAGAN,KAiQf,QAASU,iBAAgBC,UACrB,GAAqBC,MAAOC,YAAYF,UACnB9E,GAAKiF,MACLxC,MAAQyC,MACRC,QAAS,EACTC,QAAUR,kBAAkBE,SAASM,QAC1D,IAAIC,cAAeP,UAEfrC,MAAQ,SAA8B6C,aAErC,IAAI,SAA8BC,WACnCvF,GAAK,SAA8BuF,eAElC,IAAI,SAA8BC,iBAGlC,IAAI,SAA8BC,SACnCN,QAAS,EACTnF,GAAK4E,kBAAkB,SAA8Ba,cAEpD,CAAA,GAAsB,kBAAXL,SAKZ,KAAMM,aAAY,sGAAuGZ,SAJzHK,SAAS,EACTnF,GAAKoF,QAKT,OAASL,KAAMA,KAAM/E,GAAIA,GAAImF,OAAQA,OAAQ1C,MAAOA,OAMxD,QAASkD,uBAAsBjF,OAC3B,MAAOgF,aAAY,mDAAoDhF,OAO3E,QAASkF,6BAA4BC,QAASf,UAC1C,GAAIA,SAEA,IADAA,SAAWF,kBAAkBE,oBACLnE,OAEpB,IAAK,GAAqBf,GAAI,EAAGA,EAAIkF,SAASjF,OAAQD,IAClDgG,4BAA4BC,QAASf,SAASlF,QAGjD,CAAA,GAAwB,kBAAbkF,UAGZ,KAAMY,aAAY,+BAAgCZ,SAEjD,KAAIA,UAAgC,gBAAbA,YAAyBA,SAASM,QAiC1D,KAAMM,aAAY,sBAAuBZ,SA/BzC,IAAqBpE,OAAQkE,kBAAkBE,SAASM,SACnCU,iBAAmBjB,gBAAgBC,SACxD,KAAuB,IAAnBA,SAASiB,MAAgB,CAEzB,GAAqBC,eAAgBH,QAAQI,IAAIvF,MACjD,IAAIsF,eACA,GAAIA,cAAchG,KAAOkG,kBACrB,KAAMP,uBAAsBjF,WAKhCmF,SAAQM,IAAIzF,MAAOsF,eACftF,MAAOoE,SAASM,QAChBL,QACAI,QAAQ,EACRnF,GAAIkG,kBACJzD,MAAOyC,OAIfxE,OAAQoE,SACRkB,cAAcjB,KAAKrC,MAAOhC,MAAOA,MAAO0F,QAAS,IAErD,GAAqBC,QAASR,QAAQI,IAAIvF,MAC1C,IAAI2F,QAAUA,OAAOrG,IAAMkG,kBACvB,KAAMP,uBAAsBjF,MAEhCmF,SAAQM,IAAIzF,MAAOoF,mBAgB/B,QAASQ,iBAAgB5F,MAAO2F,OAAQR,QAASU,OAAQC,cAAeC,OACpE,IACI,MAAOC,cAAahG,MAAO2F,OAAQR,QAASU,OAAQC,cAAeC,OAEvE,MAAwBE,GAEdA,YAAaC,SACfD,EAAI,GAAIC,OAAMD,GAElB,IAAqBE,MAAOF,EAAEG,oBAAsBH,EAAEG,uBAMtD,MALAD,MAAK/C,QAAQpD,OACT2F,QAAUA,OAAO5D,OAASsE,WAE1BV,OAAO5D,MAAQyC,OAEbyB,GAYd,QAASD,cAAahG,MAAO2F,OAAQR,QAASU,OAAQC,cAAeC,OACjE,GAAqBhE,MACrB,KAAI4D,QAAoB,EAARI,MA+BG,EAARA,QACPhE,MAAQ8D,OAAON,IAAIvF,MAAO8F,cAAe,QAhCF,CAIvC,IADA/D,MAAQ4D,OAAO5D,QACFsE,SACT,KAAMH,OAAMI,YAAc,sBAEzB,IAAIvE,QAAUyC,MAAO,CACtBmB,OAAO5D,MAAQsE,QACf,IACqB5B,QAASkB,OAAOlB,OAChBnF,GAAKqG,OAAOrG,GACZiH,WAAaZ,OAAOtB,KACpBA,KAAOG,KAC5B,IAAI+B,WAAWpH,OAAQ,CACnBkF,OACA,KAAK,GAAqBnF,GAAI,EAAGA,EAAIqH,WAAWpH,OAAQD,IAAK,CACzD,GAAqBsH,WAAYD,WAAWrH,GACvBwG,QAAUc,UAAUd,QACpBe,YAAwB,EAAVf,QAA8BP,QAAQI,IAAIiB,UAAUxG,WAAS0G,EAChGrC,MAAKrC,KAAK4D,gBAEVY,UAAUxG,MAAOyG,YAAatB,QAG7BsB,aAA2B,EAAVf,QAAiDG,OAAhBc,cAAkC,EAAVjB,QAA6B,KAAOkB,SAASC,mBAAoB,KAGpJlB,OAAO5D,MAAQA,MAAQ0C,OAAS,KAAMjD,GAAK,IAAyBC,KAAK/B,MAAM8B,QAAK,IAAQF,OAAO+C,QAAY/E,GAAGI,UAnBvFgH,GAmBkGrC,OAMrI,MAAOtC,MACP,IAAIP,IAMR,QAAS8C,aAAYF,UACjB,GAAqBC,MAAOG,MACPsC,aAAe,SAA8BzC,IAClE,IAAIyC,cAAgBA,aAAa3H,OAAQ,CACrCkF,OACA,KAAK,GAAqBnF,GAAI,EAAGA,EAAI4H,aAAa3H,OAAQD,IAAK,CAC3D,GAAqBwG,SAAU,EACV1F,MAAQkE,kBAAkB4C,aAAa5H,GAC5D,IAAIc,gBAAiBC,OACjB,IAAK,GAAqB8G,GAAI,EAAoBC,YAAchH,MAAO+G,EAAIC,YAAY7H,OAAQ4H,IAAK,CAChG,GAAqBlE,YAAamE,YAAYD,EAC1ClE,sBAAsBoE,WAAYpE,YAAcoE,SAChDvB,SAAoB,EAEf7C,qBAAsBqE,WAAYrE,YAAcqE,SACrDxB,UAAoB,EAEf7C,qBAAsBsE,OAAQtE,YAAcsE,KACjDzB,UAAoB,EAGpB1F,MADK6C,qBAAsBuE,QACnB,WAAgCpH,MAGhCkE,kBAAkBrB,YAItCwB,KAAKrC,MAAOhC,MAAOA,MAAO0F,QAASA,eAGtC,IAAI,SAA8BZ,YAAa,CAChD,GAAqB9E,OAAQkE,kBAAkB,SAA8BY,YAC7ET,QAAUrE,MAAOA,MAAO0F,QAAS,QAEhC,MAAKoB,cAAkBnC,cAAeP,WAEvC,KAAMY,aAAY,kBAAqBZ,SAE3C,OAAOC,MAQX,QAASgD,aAAYC,KAAMC,IAAKC,YACb,KAAXA,SAAqBA,OAAS,MAClCF,KAAOA,MAA2B,OAAnBA,KAAKG,OAAO,IAAeH,KAAKG,OAAO,IAAMnB,YAAcgB,KAAKI,OAAO,GAAKJ,IAC3F,IAAqBK,SAAU5H,UAAUwH,IACzC,IAAIA,cAAetH,OACf0H,QAAUJ,IAAIrH,IAAIH,WAAWI,KAAK,YAEjC,IAAmB,gBAARoH,KAAkB,CAC9B,GAAqBK,SACrB,KAAK,GAAqBxI,OAAOmI,KAC7B,GAAIA,IAAI3F,eAAexC,KAAM,CACzB,GAAqB2C,OAAQwF,IAAInI,IACjCwI,OAAM5F,KAAK5C,IAAM,KAAwB,gBAAV2C,OAAqB8F,KAAK9H,UAAUgC,OAAShC,UAAUgC,SAG9F4F,QAAU,IAAMC,MAAMzH,KAAK,MAAQ,IAEvC,MAAO,uBAAyBqH,OAAS,IAAMA,OAAS,IAAM,IAAM,IAAMG,QAAU,MAAQL,KAAKQ,QAAQC,SAAU,QAOvH,QAAS/C,aAAYsC,KAAMC,KACvB,MAAO,IAAIrB,OAAMmB,YAAYC,KAAMC,MAoBvC,QAASS,oBAAmBC,UACxB,GAAqBC,QAASC,gBAE9B,OADAA,kBAAmBF,SACZC,OASX,QAASE,QAAOpI,MAAO8F,cAAeC,OAElC,OADc,KAAVA,QAAoBA,MAAQ,GACP,OAArBoC,iBACA,KAAM,IAAIjC,OAAM,oDAEpB,OAAOiC,kBAAiB5C,IAAIvF,MAAO8F,cAAeC,OAMtD,QAASsC,YAAWC,OAEhB,IAAK,GADgBrH,SACK/B,EAAI,EAAGA,EAAIoJ,MAAMnJ,OAAQD,IAAK,CACpD,GAAqBqJ,KAAMD,MAAMpJ,EACjC,IAAIe,MAAMuI,QAAQD,KAAM,CACpB,GAAmB,IAAfA,IAAIpJ,OACJ,KAAM,IAAI+G,OAAM,uCAKpB,KAAK,GAHgBzC,UAAOiD,GACP+B,iBAAe/B,GACfX,MAAQ,EACHgB,EAAI,EAAGA,EAAIwB,IAAIpJ,OAAQ4H,IAAK,CAClD,GAAqB7D,MAAOqF,IAAIxB,EAC5B7D,gBAAgB+D,WAA8C,aAAlC/D,KAAKwF,UAAUxG,eAC3CuG,aAAe,KAEVvF,eAAgBgE,WAA8C,aAAlChE,KAAKwF,UAAUxG,eAChD6D,OAAS,EAEJ7C,eAAgBiE,OAA0C,SAAlCjE,KAAKwF,UAAUxG,eAC5C6D,OAAS,EAGTtC,KADKP,eAAgBkE,QACdlE,KAAKlD,MAGLkD,KAGfjC,KAAKe,KAAKoG,OAAwB,KAAUK,aAAc,QAG1DxH,MAAKe,KAAKoG,OAAOG,MAGzB,MAAOtH,MA8BX,QAAS0H,oCAAmClF,KAAMW,UAC9C,IAAKA,SAAU,CACX,GAAqBwE,wBAAyB,GAAIC,wBAC7BC,OAASF,uBAAuBjG,WAAWc,KAEhE,OAAO,YAAc,MAAO,KAAKA,KAAKhC,KAAK/B,MAAM+D,UAAO,IAAQnC,OAAO+G,WAA4B,YAEvG,GAAIU,YAAa3E,UAAU,CACvB,GAAqB4E,iBAAkB,QACvC,OAAO,YAAc,MAAOA,iBAAgBpE,UAE3C,GAAI,SAA8BE,YAAa,CAChD,GAAqBmE,oBAAqB,QAC1C,OAAO,YAAc,MAAOb,QAAOa,mBAAmBnE,cAErD,GAAI,SAA8BD,WAAY,CAC/C,GAAqBqE,mBAAoB,QACzC,OAAO,YAAc,MAAOA,mBAAkBrE,WAAWnF,MAAMwJ,kBAAmBb,WAAWa,kBAAkB7E,MAAQ8E,eAEtH,GAAI,SAA8BpE,SAAU,CAC7C,GAAqBqE,iBAAkB,SAClBC,OAAS,SAA8BhF,IAC5D,KAAKgF,OAAQ,CACT,GAAqBT,wBAAyB,GAAIC,uBAClDQ,QAAST,uBAAuBjG,WAAWc,MAE/C,MAAO,YACH,MAAO,MAAMjC,GAAK4H,gBAAgBrE,UAAUtD,KAAK/B,MAAM8B,QAAK,IAAQF,OAAO+G,WAAWgB,UACtF,IAAI7H,KAIR,GAAqB8H,QAAS,SAA8BjF,IAC5D,KAAKiF,OAAQ,CACT,GAAqBV,wBAAyB,GAAIC,uBAClDS,QAASV,uBAAuBjG,WAAWc,MAE/C,MAAO,YAAc,MAAO,KAAKA,KAAKhC,KAAK/B,MAAM+D,UAAO,IAAQnC,OAAO+G,WAA4B,YAU3G,QAASkB,kBAAiBC,MACtB,MAAOA,MA2SX,QAASC,kCAAiCC,yBACtC,MAAkC,OAA3BA,yBACHA,0BAA4BC,wBAAwBC,QAgS5D,QAASC,iBAAgBC,OACrB,MAAO,OAA2BC,qBAMtC,QAASC,kBAAiBF,OACtB,MAAO,OAA2BG,sBAMtC,QAASC,gBAAeJ,OACpB,MAAO,OAA2BK,eAAiBC,mBAOvD,QAASA,oBAAmBC,SAExB,IAAK,GADDjI,WACKlB,GAAK,EAAGA,GAAKC,UAAUhC,OAAQ+B,KACpCkB,OAAOlB,GAAK,GAAKC,UAAUD,GAE/BmJ,SAAQP,MAAMpK,MAAM2K,QAASjI,QAgHjC,QAASkI,cAAaC,QAASC,eAC3B,GAAqBC,KAAMF,QAAU,gBAAkBC,wBAAyBtE,OAAQsE,cAAcD,QAAUC,eAC3FV,MAAQ5D,MAAMuE,IAEnC,OADA,OAA2BR,sBAAwBO,cAC5CV;;;;;;;AAkBX,QAASY,sBAAqB3L,MAE1B,IAAK,GADgBuB,QACKpB,EAAI,EAAGA,EAAIH,KAAKI,SAAUD,EAAG,CACnD,GAAIoB,IAAIG,QAAQ1B,KAAKG,KAAO,EAExB,MADAoB,KAAI0B,KAAKjD,KAAKG,IACPoB,GAEXA,KAAI0B,KAAKjD,KAAKG,IAElB,MAAOoB,KAMX,QAASqK,wBAAuB5L,MAC5B,GAAIA,KAAKI,OAAS,EAAG,CAGjB,MAAO,KAFyBuL,qBAAqB3L,KAAK6L,QAAQC,WACxB3K,IAAI,SAAU4K,GAAK,MAAO/K,WAAU+K,EAAE9K,SACxDG,KAAK,QAAU,IAE3C,MAAO,GAaX,QAAS4K,gBAAe9C,SAAU7I,IAAK4L,0BAA2BR,eAC9D,GAAqBzL,OAAQK,KACR6L,OAASD,0BAA0BjM,MACnC+K,MAA2BU,cAAgBF,aAAaW,OAAQT,eAAiBtE,MAAM+E,OAM5G,OALAnB,OAAMoB,OAASA,OACfpB,MAAM/K,KAAOA,KACb+K,MAAMqB,WAAalD,UACnB6B,MAAMkB,0BAA4BA,0BAClC,MAA2Bf,sBAAwBO,cAC5CV,MAQX,QAASoB,QAAOjD,SAAU7I,KACtB1B,KAAKyN,UAAUnJ,KAAKiG,UACpBvK,KAAKqB,KAAKiD,KAAK5C,KAEf1B,KAAK6M,QAAU7M,KAAKsN,0BAA0BtN,KAAKqB,MAmBvD,QAASqM,iBAAgBnD,SAAU7I,KAC/B,MAAO2L,gBAAe9C,SAAU7I,IAAK,SAAUL,MAE3C,MAAO,mBADsBgB,UAAUhB,KAAK,GAAGiB,OACX,IAAM2K,uBAAuB5L,QAsBzE,QAASsM,uBAAsBpD,SAAU7I,KACrC,MAAO2L,gBAAe9C,SAAU7I,IAAK,SAAUL,MAC3C,MAAO,wCAA0C4L,uBAAuB5L,QAiChF,QAASuM,oBAAmBrD,SAAUsD,kBAAmBC,cAAepM,KACpE,MAAO2L,gBAAe9C,SAAU7I,IAAK,SAAUL,MAC3C,GAAqB0M,OAAQ1L,UAAUhB,KAAK,GAAGiB,MAC/C,OAAOuL,mBAAkBhB,QAAU,mCAAqCkB,MAAQ,IAAMd,uBAAuB5L,MAAQ,KACtHwM,mBAcP,QAASG,sBAAqBtH,UAC1B,MAAO8B,OAAM,4EAA8E9B,UAkC/F,QAASuH,mBAAkBC,WAAYC,QAEnC,IAAK,GADgBC,cACK5M,EAAI,EAAoB6M,GAAKF,OAAO1M,OAAQD,EAAI6M,GAAI7M,IAAK,CAC/E,GAAqB8M,WAAYH,OAAO3M,EACnC8M,YAAiC,GAApBA,UAAU7M,OAIxB2M,UAAU9J,KAAKgK,UAAU9L,IAAIH,WAAWI,KAAK,MAH7C2L,UAAU9J,KAAK,KAMvB,MAAOkE,OAAM,sCAAyCnG,UAAU6L,YAAc,KAC1EE,UAAU3L,KAAK,MAAQ,2GAEvBJ,UAAU6L,YAAc,mCAkBhC,QAASK,kBAAiBvJ,OACtB,MAAOwD,OAAM,SAAWxD,MAAQ,sBAiBpC,QAASwJ,+CAA8CC,UAAWC,WAC9D,MAAOlG,OAAM,0DAA4DiG,UAAY,IAAMC,WA4W/F,QAASC,0BAAyBjI,UAC9B,GAAqBkI,WACAC,YACrB,IAAInI,SAASW,SAAU,CACnB,GAAqBA,UAAWb,kBAAkBE,SAASW,SAC3DuH,WAAYE,UAAUzP,QAAQgI,UAC9BwH,aAAeE,iBAAiB1H,cAE3BX,UAASU,aACdwH,UAAY,SAAUI,eAAiB,MAAOA,gBAC9CH,cAAgBI,qBAAqBC,QAAQC,cAActH,IAAInB,SAASU,gBAEnEV,SAASS,YACdyH,UAAYlI,SAASS,WACrB0H,aAAeO,sBAAsB1I,SAASS,WAAYT,SAASC,QAGnEiI,UAAY,WAAc,MAAOlI,UAASQ,UAC1C2H,aAAeQ,YAEnB,OAAO,IAAIC,2BAA0BV,UAAWC,cAUpD,QAASU,2BAA0B7I,UAC/B,MAAO,IAAI8I,6BAA4BL,cAActH,IAAInB,SAASM,UAAW2H,yBAAyBjI,WAAYA,SAASiB,QAAS,GAOxI,QAAS8H,4BAA2BC,WAChC,GAAqBC,YAAaC,oBAAoBF,cACjCG,SAAWF,WAAWnN,IAAI+M,2BAC1BO,oBAAsBC,iCAAiCF,SAAU,GAAItO,KAC1F,OAAOgB,OAAMyN,KAAKF,oBAAoBpL,UAU1C,QAASqL,kCAAiCL,UAAWO,wBACjD,IAAK,GAAqBzO,GAAI,EAAGA,EAAIkO,UAAUjO,OAAQD,IAAK,CACxD,GAAqBkF,UAAWgJ,UAAUlO,GACrB0O,SAAWD,uBAAuBpI,IAAInB,SAAShF,IAAIyO,GACxE,IAAID,SAAU,CACV,GAAIxJ,SAASkB,gBAAkBsI,SAAStI,cACpC,KAAM4G,+CAA8C0B,SAAUxJ,SAElE,IAAIA,SAASkB,cACT,IAAK,GAAqByB,GAAI,EAAGA,EAAI3C,SAAS0J,kBAAkB3O,OAAQ4H,IACpE6G,SAASE,kBAAkB9L,KAAKoC,SAAS0J,kBAAkB/G,QAI/D4G,wBAAuBlI,IAAIrB,SAAShF,IAAIyO,GAAIzJ,cAG/C,CACD,GAAqBgB,sBAAmB,EAEpCA,kBADAhB,SAASkB,cACU,GAAI4H,6BAA4B9I,SAAShF,IAAKgF,SAAS0J,kBAAkBlD,QAASxG,SAASkB,eAG3FlB,SAEvBuJ,uBAAuBlI,IAAIrB,SAAShF,IAAIyO,GAAIzI,mBAGpD,MAAOuI,wBAOX,QAASL,qBAAoBF,UAAW9M,KAepC,MAdA8M,WAAUW,QAAQ,SAAU7P,GACxB,GAAIA,YAAa8P,MACb1N,IAAI0B,MAAO0C,QAASxG,EAAG6G,SAAU7G,QAEhC,IAAIA,GAAiB,gBAALA,QAAoDwI,KAAnC,EAAuBhC,QACzDpE,IAAI0B,KAAsB,OAEzB,CAAA,KAAI9D,YAAa+B,QAIlB,KAAMyL,sBAAqBxN,EAH3BoP,qBAAoBpP,EAAGoC,QAMxBA,IAOX,QAASwM,uBAAsBlB,WAAYqC,cACvC,GAAKA,aAGA,CACD,GAAqBC,UAAWD,aAAa/N,IAAI,SAAUiO,GAAK,OAAQA,IACxE,OAAOF,cAAa/N,IAAI,SAAUiO,GAAK,MAAOC,eAAcxC,WAAYuC,EAAGD,YAJ3E,MAAOzB,kBAAiBb,YAWhC,QAASa,kBAAiBb,YACtB,GAAqBC,QAASW,UAAU7J,WAAWiJ,WACnD,KAAKC,OACD,QACJ,IAAIA,OAAOwC,KAAK,SAAUC,GAAK,MAAY,OAALA,IAClC,KAAM3C,mBAAkBC,WAAYC,OAExC,OAAOA,QAAO3L,IAAI,SAAUoO,GAAK,MAAOF,eAAcxC,WAAY0C,EAAGzC,UAQzE,QAASuC,eAAcxC,WAAY2C,SAAU1C,QACzC,GAAqB7L,OAAQ,KACRwO,UAAW,CAChC,KAAKvO,MAAMuI,QAAQ+F,UACf,MAAIA,oBAAoBnH,QACbqH,kBAAkBF,SAASvO,MAAOwO,SAAU,MAG5CC,kBAAkBF,SAAUC,SAAU,KAIrD,KAAK,GADgBE,YAAa,KACRxP,EAAI,EAAGA,EAAIqP,SAASpP,SAAUD,EAAG,CACvD,GAAqByP,eAAgBJ,SAASrP,EAC1CyP,yBAAyBX,MACzBhO,MAAQ2O,cAEHA,wBAAyBvH,QAC9BpH,MAAQ2O,cAAc3O,MAEjB2O,wBAAyB1H,UAC9BuH,UAAW,EAENG,wBAAyBxH,OAAQwH,wBAAyBzH,UAC/DwH,WAAaC,cAERA,wBAAyBC,kBAC9B5O,MAAQ2O,eAIhB,GAAa,OADb3O,MAAQkE,kBAAkBlE,QAEtB,MAAOyO,mBAAkBzO,MAAOwO,SAAUE,WAG1C,MAAM/C,mBAAkBC,WAAYC,QAS5C,QAAS4C,mBAAkBzO,MAAOwO,SAAUE,YACxC,MAAO,IAAI/B,sBAAqBE,cAActH,IAAIvF,OAAQwO,SAAUE,YAkpBxE,QAASG,eAAc5G,SAAU3I,IAE7B,IAAK,GADgBgB,KAAM,GAAIL,OAAMgI,SAAS6G,WAAW3P,QAC/BD,EAAI,EAAGA,EAAI+I,SAAS6G,WAAW3P,SAAUD,EAC/DoB,IAAIpB,GAAKI,GAAG2I,SAAS8G,mBAAmB7P,GAE5C,OAAOoB;;;;;;;;;;;;;;AA4DX,QAAS0O,WAAUzH,KAGf,QAASA,KAA2B,kBAAbA,KAAI9H,KAO/B,QAASwP,cAAa1H,KAElB,QAASA,KAAgC,kBAAlBA,KAAI2H,UAuG/B,QAASC,+BACL,MAAO,GAAKC,cAAgBA,cAAgBA,cAchD,QAASA,eACL,MAAOC,QAAOC,aAAa,GAAKC,KAAKC,MAAsB,GAAhBD,KAAKE,WAoGpD,QAASC,eACL,KAAM,IAAIxJ,OAAM;;;;;;;AA2LpB,QAASyJ,yBAAwBC,WAC7B,GAAqB9F,OAAQ5D,MAAM,kCAAoCnG,UAAU6P,WAAa,iDAE9F,OADA,OAA2BC,iBAAmBD,UACvC9F,MA2KX,QAASgG,aACL,GAAqBC,KAAM,QAAsE,GACjG,UAAIA,OACAC,MAAQD,IAAW,UAEfE,OAASD,MAAc,QAChB,GAUnB,QAASE,aAAYpE,UAAW/F,OAE5B,WADc,KAAVA,QAAoBA,MAAQ,MACzBkK,OAAOC,YAAYpE,UAAW/F,OAQzC,QAASoK,OAAMC,MAAOC,aAElB,MADAL,OAAMM,WAAWF,MAAOC,aACjBA,YAOX,QAASE,gBAAeC,UAAWC,QAC/B,MAAOT,OAAMU,eAAeF,UAAWC,QAM3C,QAASE,cAAaC,OAClBZ,MAAMW,aAAaC,OAuBvB,QAASC,WAAUC,KAAMC,MACrB,MAAO,MA2hBX,QAASC,SAMT,QAASC,aAAYC,MACjB,GAAqB,GAAjBA,KAAKC,WAAkBD,KAAKE,uBAAyBF,KAAKG,SAC1D,IACIH,KAAKC,WACLD,KAAKI,iBAAiBC,KAAK,MAE/B,QAEI,GADAL,KAAKC,YACAD,KAAKE,qBACN,IACIF,KAAKM,kBAAkB,WAAc,MAAON,MAAKO,SAASF,KAAK,QAEnE,QACIL,KAAKG,UAAW,IAUpC,QAASK,kCAAiCR,MACtCA,KAAKS,OAAST,KAAKS,OAAOC,MACtBvR,KAAM,UACNwR,YAAgCC,eAAiB,GACjDC,aAAc,SAAUC,SAAUrS,QAASsD,OAAQgP,KAAMC,UAAWC,WAChE,IAEI,MADAC,SAAQlB,MACDc,SAASK,WAAWpP,OAAQgP,KAAMC,UAAWC,WAExD,QACIG,QAAQpB,QAGhBqB,SAAU,SAAUP,SAAUrS,QAASsD,OAAQuP,SAAUN,UAAWC,UAAW3K,QAC3E,IAEI,MADA4K,SAAQlB,MACDc,SAASS,OAAOxP,OAAQuP,SAAUN,UAAWC,UAAW3K,QAEnE,QACI8K,QAAQpB,QAGhBwB,UAAW,SAAUV,SAAUrS,QAASsD,OAAQ0P,cAC5CX,SAASY,QAAQ3P,OAAQ0P,cACrBhT,UAAYsD,SAGe,aAAvB0P,aAAaE,QACb3B,KAAKE,qBAAuBuB,aAAaG,UACzC7B,YAAYC,OAEgB,aAAvByB,aAAaE,SAClB3B,KAAK6B,qBAAuBJ,aAAaK,aAIrDC,cAAe,SAAUjB,SAAUrS,QAASsD,OAAQ6G,OAGhD,MAFAkI,UAASkB,YAAYjQ,OAAQ6G,OAC7BoH,KAAKM,kBAAkB,WAAc,MAAON,MAAKiC,QAAQ5B,KAAKzH,UACvD,KAQnB,QAASsI,SAAQlB,MACbA,KAAKC,WACDD,KAAKG,WACLH,KAAKG,UAAW,EAChBH,KAAKkC,WAAW7B,KAAK,OAO7B,QAASe,SAAQpB,MACbA,KAAKC,WACLF,YAAYC,MAqbhB,QAASmC,sBAAqBC,QAC1BC,mBAAqBD,OA8BzB,QAASE,kBACL,GAAIC,eACA,KAAM,IAAIvN,OAAM,gDAEpBwN,WAAW,EAWf,QAASC,aAEL,MADAF,iBAAiB,EACVC,SAsBX,QAASE,gBAAe3L,UACpB,GAAI4L,YAAcA,UAAUC,YACvBD,UAAU5L,SAAS1C,IAAIwO,0BAA0B,GAClD,KAAM,IAAI7N,OAAM,gFAEpB2N,WAAY5L,SAAS1C,IAAIyO,YACzB,IAAqBC,OAAQhM,SAAS1C,IAAI2O,qBAAsB,KAGhE,OAFID,QACAA,MAAMlG,QAAQ,SAAUoG,MAAQ,MAAOA,UACpCN,UAWX,QAASO,uBAAsBC,sBAAuBhU,KAAM+M,eACtC,KAAdA,YAAwBA,aAC5B,IAAqBkH,MAAO,aAAejU,KACtBkU,OAAS,GAAI3F,gBAAe0F,KACjD,OAAO,UAAUE,oBACU,KAAnBA,iBAA6BA,kBACjC,IAAqBC,UAAWC,aAChC,KAAKD,UAAYA,SAASxM,SAAS1C,IAAIwO,0BAA0B,GAC7D,GAAIM,sBACAA,sBAAsBjH,UAAU9L,OAAOkT,gBAAgBlT,QAASoD,QAAS6P,OAAQ3P,UAAU,SAE1F,CACD,GAAqB+P,mBAAoBvH,UAAU9L,OAAOkT,gBAAgBlT,QAASoD,QAAS6P,OAAQ3P,UAAU,GAC9GgP,gBAAehN,SAASrI,QAAS6O,UAAWuH,kBAAmBtU,KAAMiU,QAG7E,MAAOM,gBAAeL,SAU9B,QAASK,gBAAeC,eACpB,GAAqBJ,UAAWC,aAChC,KAAKD,SACD,KAAM,IAAIvO,OAAM,sBAEpB,KAAKuO,SAASxM,SAAS1C,IAAIsP,cAAe,MACtC,KAAM,IAAI3O,OAAM,uFAEpB,OAAOuO,UAQX,QAASK,mBACDjB,YAAcA,UAAUC,WACxBD,UAAUkB,UASlB,QAASL,eACL,MAAOb,aAAcA,UAAUC,UAAYD,UAAY,KA8R3D,QAASmB,WAAUC,cASf,MAPqB,SAAjBA,aACS,GAAIC,aAGc,YAAjBD,iBAA6BvO,GAAYuO,eAC/C,GAAIE,SAASC,qBAAsBzB,cAU/C,QAAS0B,8BAA6BC,aAAcC,OAAQ/C,UACxD,IACI,GAAqBgD,QAAShD,UAC9B,OAAIxD,WAAUwG,QACHA,OAAOC,MAAM,SAAUxP,GAG1B,KAFAsP,QAAO/D,kBAAkB,WAAc,MAAO8D,cAAapC,YAAYjN,KAEjEA,IAGPuP,OAEX,MAAwBvP,GAGpB,KAFAsP,QAAO/D,kBAAkB,WAAc,MAAO8D,cAAapC,YAAYjN,KAEjEA,GASd,QAASyP,gBAAeC,IAAKC,MAOzB,MALID,KADA1V,MAAMuI,QAAQoN,MACRA,KAAKC,OAAOH,eAAgBC,KAG5BG,YAAaH,IAAK,MA8UhC,QAASI,QAAOC,KAAMC,IAClB,GAAqBvT,OAAQsT,KAAKvV,QAAQwV,GACtCvT,QAAS,GACTsT,KAAKE,OAAOxT,MAAO,GA2L3B,QAASyT,uBAAsBtI,GAAI9Q,SAC/B,GAAqB6Q,UAAWwI,gBAAgB7Q,IAAIsI,GACpD,IAAID,SACA,KAAM,IAAI1H,OAAM,mCAAqC2H,GAAK,MAAQD,SAASyI,WAAWhW,KAAO,OAAStD,QAAQsZ,WAAWhW,KAE7H+V,iBAAgB3Q,IAAIoI,GAAI9Q,SAc5B,QAASuZ,kBAAiBzI,IACtB,GAAqB9Q,SAAUqZ,gBAAgB7Q,IAAIsI,GACnD,KAAK9Q,QACD,KAAM,IAAImJ,OAAM,qBAAuB2H,GAAK,UAChD,OAAO9Q,SA0OX,QAASwZ,SAAQP,MACb,MAAOA,MAAKH,OAAO,SAAUW,KAAMC,MAC/B,GAAqBC,UAAWzW,MAAMuI,QAAQiO,MAAQF,QAAQE,MAAQA,IACtE,OAAO,MAA0BnV,OAAOoV,eA4GhD,QAASC,eAAc5U,MAAO6U,WAAYC,YACtC,IAAK9U,MACD,KAAM,IAAImE,OAAM,gBAAkB2Q,WAAa,SAAWD,WAAa,IAE3E,OAAO7U,OA4aX,QAAS+U,kBAAiBC,UACtB,MAAOA,UAAS7W,IAAI,SAAU+V,IAAM,MAAOA,IAAGe,gBAQlD,QAASC,uBAAsBC,QAASC,UAAWC,SAC/CF,QAAQG,WAAWtJ,QAAQ,SAAUuJ,MAC7BA,eAAgBC,gBACZJ,UAAUG,OACVF,QAAQpV,KAAKsV,MAEjBL,sBAAsBK,KAAMH,UAAWC,YAUnD,QAASI,oBAAmBC,WAAYN,UAAWC,SAC3CK,qBAAsBF,eACtBE,WAAWJ,WAAWtJ,QAAQ,SAAUuJ,MAChCH,UAAUG,OACVF,QAAQpV,KAAKsV,MAEbA,eAAgBC,eAChBC,mBAAmBF,KAAMH,UAAWC,WAYpD,QAASM,cAAaC,YAClB,MAAOC,wBAAuBrS,IAAIoS,aAAe,KAUrD,QAASE,gBAAeP,MACpBM,uBAAuBnS,IAAI6R,KAAKK,WAAYL,MAMhD,QAASQ,0BAAyBR,MAC9BM,uBAAuBG,OAAOT,KAAKK;;;;;;;AA0BvC,QAASK,cAAanY,EAAG3B,GACrB,GAAqB+Z,qBAAsBC,mBAAmBrY,GACzCsY,oBAAsBD,mBAAmBha,EAC9D,IAAI+Z,qBAAuBE,oBACvB,MAAOC,mBAAkBvY,EAAG3B,EAAG8Z,aAG/B,IAAqBK,WAAYxY,IAAmB,gBAANA,IAA+B,kBAANA,IAClDyY,UAAYpa,IAAmB,gBAANA,IAA+B,kBAANA,GACvE,SAAK+Z,sBAAuBI,WAAcF,sBAAuBG,YAItD1Y,eAAeC,EAAG3B,GAoGrC,QAASga,oBAAmB3Q,KACxB,QAAKgR,WAAWhR,OAETtH,MAAMuI,QAAQjB,QACdA,cAAetI,OAEdP,qBAAuB6I,MAQnC,QAAS6Q,mBAAkBvY,EAAG3B,EAAGsa,YAG7B,IAFA,GAAqBC,WAAY5Y,EAAEnB,uBACdga,UAAYxa,EAAEQ,yBACtB,CACT,GAAqBia,OAAQF,UAAUG,OAClBC,MAAQH,UAAUE,MACvC,IAAID,MAAMG,MAAQD,MAAMC,KACpB,OAAO,CACX,IAAIH,MAAMG,MAAQD,MAAMC,KACpB,OAAO,CACX,KAAKN,WAAWG,MAAM5W,MAAO8W,MAAM9W,OAC/B,OAAO,GAQnB,QAASgX,iBAAgBxR,IAAKjI,IAC1B,GAAIW,MAAMuI,QAAQjB,KACd,IAAK,GAAqBrI,GAAI,EAAGA,EAAIqI,IAAIpI,OAAQD,IAC7CI,GAAGiI,IAAIrI,QAMX,KAFA,GAAqBJ,UAAWyI,IAAI7I,uBACf+X,SAAO,KAClBA,KAAO3X,SAAS8Z,QAAY,MAClCtZ,GAAGmX,KAAK1U,OAQpB,QAASwW,YAAWS,GAChB,MAAa,QAANA,IAA4B,kBAANA,IAAiC,gBAANA,IAmmC5D,QAASC,kBAAiBxC,KAAMyC,gBAAiBC,aAC7C,GAAqBC,eAAgB3C,KAAK2C,aAC1C,IAAsB,OAAlBA,cACA,MAAOA,cACX,IAAqBC,YAAa,CAIlC,OAHIF,cAAeC,cAAgBD,YAAYha,SAC3Cka,WAAaF,YAAYC,gBAEtBA,cAAgBF,gBAAkBG,WAmmB7C,QAASC,yBAAwB7V,MAC7B,MAAOA,MAAW,YAAYA;;;;;;;AAuUlC,QAAS8V,2BACL,MAAOC,wBAKX,QAASC,2BACL,MAAOC,wBAMX,QAASC,gBAAeC,QACpB,MAAOA,SAAU,QAwOrB,QAASC,wBACL,IACI,QAAS,OAA4BC,UAEzC,MAAwB7T,GACpB,OAAO,GAkDf,QAAS8T,cAAaC,KAElB,MADAA,KAAM3K,OAAO2K,KACTA,IAAIC,MAAMC,mBAAqBF,IAAIC,MAAME,kBAClCH,KACPrG,aACAtJ,QAAQ+P,KAAK,wCAA0CJ,IAAM,sCAE1D,UAAYA,KAMvB,QAASK,gBAAeC,QAEpB,MADAA,QAASjL,OAAOiL,QACTA,OAAOC,MAAM,KAAKra,IAAI,SAAUoa,QAAU,MAAOP,cAAaO,OAAOE,UAAYra,KAAK;;;;;;;AAkBjG,QAASsa,QAAOC,MAEZ,IAAK,GADgBpa,QACZY,GAAK,EAAGM,GAAKkZ,KAAKH,MAAM,KAAMrZ,GAAKM,GAAGrC,OAAQ+B,KAAM,CAEzDZ,IADQkB,GAAGN,MACF,EAEb,MAAOZ,KAMX,QAASqa,WAEL,IAAK,GADDC,SACK1Z,GAAK,EAAGA,GAAKC,UAAUhC,OAAQ+B,KACpC0Z,KAAK1Z,IAAMC,UAAUD,GAGzB,KAAK,GADgBZ,QACZkB,GAAK,EAAGqZ,OAASD,KAAMpZ,GAAKqZ,OAAO1b,OAAQqC,KAAM,CACtD,GAAIsZ,GAAID,OAAOrZ,GACf,KAAK,GAAqB/C,KAAKqc,GACvBA,EAAElZ,eAAenD,KACjB6B,IAAI7B,IAAK,GAGrB,MAAO6B,KAqLX,QAASya,gBAAehZ,OACpB,MAAOA,OAAM+F,QAAQ,KAAM,SACtBA,QAAQkT,sBAAuB,SAAUf,OAG1C,MAAO,MAAyB,MAFNA,MAAMgB,WAAW,GAErB,QADKhB,MAAMgB,WAAW,GACI,OAAU,OAAW,MAEpEnT,QAAQoT,wBAAyB,SAAUjB,OAAS,MAAO,KAAOA,MAAMgB,WAAW,GAAK,MACxFnT,QAAQ,KAAM,QACdA,QAAQ,KAAM,QAUvB,QAASqT,eAAcC,WAAYC,iBAC/B,GAAqBC,kBAAmB,IACxC,KACIC,gBAAkBA,iBAAmB,GAAIC,iBAAgBJ,WAEzD,IAAqBK,YAAaJ,gBAAkBhM,OAAOgM,iBAAmB,EAC9EC,kBAAmBC,gBAAgBG,oBAAoBD,WAGvD,IAAqBE,cAAe,EACfC,WAAaH,UAClC,GAAG,CACC,GAAqB,IAAjBE,aACA,KAAM,IAAIzV,OAAM,wDAEpByV,gBACAF,WAAaG,WACbA,WAA8B,iBAAqBC,UACnDP,iBAAmBC,gBAAgBG,oBAAoBD,kBAClDA,aAAeG,WACxB,IAAqBE,WAAY,GAAIC,0BAChBC,SAAWF,UAAUG,iBAAmCC,mBAAoC,mBAA0BZ,iBAI3I,OAHI3H,cAAemI,UAAUK,oBACzB9R,QAAQ+P,KAAK,qFAEV4B,SAEX,QAEI,GAAIV,iBAEA,IADA,GAAqBc,UAAWF,mBAAmBZ,mBAAqBA,iBACjEc,SAASC,YACZD,SAASE,YAAYF,SAASC,aAS9C,QAASH,oBAAmBjG,IACxB,MAAO,WAAaA,KAAMsG,kBAAkBtG,IAAMA,GAAGuG,QAAU,KAMnE,QAASD,mBAAkBtG,IACvB,MAAOA,IAAGwG,WAAaC,KAAKC,cAAgC,aAAhB1G,GAAG2G,SAkEnD,QAASC,mBAAkB9a,OAGvB,IAAK,GAFgB+a,gBAAgB,EAChBC,eAAgB,EACX7d,EAAI,EAAGA,EAAI6C,MAAM5C,OAAQD,IAAK,CACpD,GAAqB8d,GAAIjb,MAAM0F,OAAOvI,EAC5B,OAAN8d,GAAcD,cACdD,eAAiBA,cAEN,MAANE,GAAaF,gBAClBC,eAAiBA,eAGzB,MAAOD,gBAAiBC,cAQ5B,QAASE,gBAAelb,OAEpB,KADAA,MAAQsN,OAAOtN,OAAOyY,QAElB,MAAO,EAGX,IAAqB0C,UAAWnb,MAAMkY,MAAMkD,OAC5C,OAAKD,WAAYnD,aAAamD,SAAS,MAAQA,SAAS,IACpDnb,MAAMkY,MAAMmD,mBAAqBP,kBAAkB9a,OAC5CA,OAEP4R,aACAtJ,QAAQ+P,KAAK,0CAA4CrY,MAAQ,uCAE9D;;;;;;;AA2KX,QAASsb,gBAAeC,KAAMC,eAAgBC,cAU1C,GAAqBC,OAAQH,KAAKG,MACbC,UAAoB,KAARD,KACjC,OAAIC,aAAcH,gBACdD,KAAKG,OAAiB,KAARA,MAAsCD,aACpDF,KAAKK,WAAa,GACX,GAEJD,YAAcF,aAQzB,QAASI,6BAA4BN,KAAMI,UAAWhb,OAClD,OAAkB,KAAb4a,KAAKG,SAAuCC,WAAaJ,KAAKK,WAAajb,QAC5E4a,KAAKK,UAAYjb,MAAQ,GAClB,GAqBf,QAASmb,YAAWP,KAAM5a,OACtB,MAAyB4a,MAAKQ,MAAMpb,OAuBxC,QAASqb,eAAcT,KAAM5a,OACzB,MAAyB4a,MAAKQ,MAAMpb,OAexC,QAASsb,gBAAeV,KAAM5a,OAC1B,MAAyB4a,MAAKQ,MAAMpb,OAexC,QAASub,sBAAqBX,KAAM5a,OAChC,MAAyB4a,MAAKQ,MAAMpb,OAQxC,QAASwb,aAAYZ,KAAM5a,OACvB,MAAyB4a,MAAKQ,MAAMpb;;;;;;;AA4DxC,QAASyb,6CAA4CxW,QAASyW,SAAUC,UAAWC,cAC/E,GAAqB7T,KAAM,8GAAgH2T,SAAW,sBAAwBC,UAAY,IAM1L,OALIC,gBACA7T,KACI,wJAGD8T,eAAe9T,IAAK9C,SAO/B,QAAS6W,uBAAsBC,IAAK9W,SAOhC,MANM8W,eAAevY,SAGjBuY,IAAM,GAAIvY,OAAMuY,IAAIle,aAExBme,iBAAiBD,IAAK9W,SACf8W,IAOX,QAASF,gBAAe9T,IAAK9C,SACzB,GAAqB8W,KAAM,GAAIvY,OAAMuE,IAErC,OADAiU,kBAAiBD,IAAK9W,SACf8W,IAOX,QAASC,kBAAiBD,IAAK9W,SAC3B,IAAyBoC,qBAAuBpC,QAChD,IAAyBwC,cAAgBxC,QAAQgX,SAASld,KAAKkG,SAMnE,QAASiX,kBAAiBH,KACtB,QAAS5U,gBAAgB4U,KAM7B,QAASI,oBAAmBpO,QACxB,MAAO,IAAIvK,OAAM,wDAA0DuK,QAoB/E,QAASqO,UAAS9e,OACd,GAAqBZ,KAAM2f,eAAexZ,IAAIvF,MAK9C,OAJKZ,OACDA,IAAMW,UAAUC,OAAS,IAAM+e,eAAeC,KAC9CD,eAAetZ,IAAIzF,MAAOZ,MAEvBA,IASX,QAAS6f,aAAY3B,KAAM4B,QAASC,WAAYpd,OAC5C,GAAIqd,aAAaC,UAAUtd,OAAQ,CAC/BA,MAAQqd,aAAaE,OAAOvd,MAC5B,IAAqBwd,kBAAmBjC,KAAKkC,IAAI1B,MAAMoB,SAASO,aAAeN,WAC1Df,SAAWgB,aAAaE,OAAOhC,KAAKoC,UAAUH,kBACnEjC,MAAKoC,UAAUH,kBAAoB,GAAIH,cAAahB,UAExD,MAAOrc,OAQX,QAAS4d,qBAAoBvd,QACzB,OACIyL,GAAI+R,2BACJC,OAAQzd,OAAOyd,OACfC,cAAe1d,OAAO0d,cACtBC,KAAM3d,OAAO2d,MAQrB,QAASC,sBAAqBvc,MAC1B,GAAIA,MAAQA,KAAKoK,KAAO+R,2BAA4B,CAEhD,GAAqBK,UAAmC,MAAtBxc,KAAKqc,eAAyBrc,KAAKqc,gBAAkBI,kBAAkBC,MACrG1c,KAAKoc,OAAO1gB,QAAUb,OAAOS,KAAK0E,KAAKsc,MAAM5gB,MAE7CsE,MAAKoK,GADLoS,SACU,IAAMG,mBAGNC,uBAMlB,MAHI5c,OAAQA,KAAKoK,KAAOwS,yBACpB5c,KAAO,MAEJA,MAAQ,KASnB,QAAS6c,cAAahD,KAAMkC,IAAKL,WAAYpd,OACzC,GAAqB2d,WAAYpC,KAAKoC,SACtC,WAAkB,EAAbpC,KAAKG,QACL7d,eAAe8f,UAAUF,IAAIC,aAAeN,YAAapd,QAYlE,QAASwe,uBAAsBjD,KAAMkC,IAAKL,WAAYpd,OAClD,QAAIue,aAAahD,KAAMkC,IAAKL,WAAYpd,SACpCub,KAAKoC,UAAUF,IAAIC,aAAeN,YAAcpd,OACzC,GAWf,QAASye,uBAAsBlD,KAAMkC,IAAKL,WAAYpd,OAClD,GAAqBqc,UAAWd,KAAKoC,UAAUF,IAAIC,aAAeN,WAClE,IAAkB,EAAb7B,KAAKG,QAAsCzF,aAAaoG,SAAUrc,OAAQ,CAC3E,GAAqB0e,aAAcjB,IAAIkB,SAASvB,YAAY9e,IAC5D,MAAM8d,6CAA4CwC,SAASC,mBAAmBtD,KAAMkC,IAAIqB,WAAYJ,YAAc,KAAOrC,SAAUqC,YAAc,KAAO1e,MAAmD,IAA9B,EAAbub,KAAKG,SAO7K,QAASqD,yBAAwBxD,MAE7B,IADA,GAAqByD,UAAWzD,KACzByD,UACsB,EAArBA,SAASvB,IAAIzZ,QACbgb,SAAStD,OAAS,GAEtBsD,SAAWA,SAASC,qBAAuBD,SAASlb,OAQ5D,QAASob,uCAAsC3D,KAAM4D,SAEjD,IADA,GAAqBH,UAAWzD,KACzByD,UAAYA,WAAaG,SAC5BH,SAAStD,OAAS,GAClBsD,SAAWA,SAASC,qBAAuBD,SAASlb,OAU5D,QAASsb,eAAc7D,KAAMuD,UAAWO,UAAWC,OAC/C,IAMI,MADAP,yBAHiD,SADlBxD,KAAKkC,IAAI1B,MAAM+C,WACL9a,MACrCgY,cAAcT,KAAMuD,WAAWS,cAC/BhE,MAEGqD,SAASY,YAAYjE,KAAMuD,UAAWO,UAAWC,OAE5D,MAAwBpb,GAEpBqX,KAAKkE,KAAKlM,aAAapC,YAAYjN,IAO3C,QAASwb,uBAAsBnE,MAC3B,GAAIA,KAAKzX,OAAQ,CAEb,MAAOkY,eAD2BT,KAAKzX,OACayX,KAAmB,cAAEuD,WAE7E,MAAO,MASX,QAASa,cAAapE,MAElB,MADkCA,MAAKzX,OAETyX,KAAmB,cAAEzX,OAGxC,KAQf,QAAS8b,YAAWrE,KAAMkC,KACtB,OAAoB,UAAZA,IAAIzZ,OACR,IAAK,GACD,MAAOgY,eAAcT,KAAMkC,IAAIqB,WAAWe,aAC9C,KAAK,GACD,MAAO/D,YAAWP,KAAMkC,IAAIqB,WAAWgB,YAQnD,QAASC,sBAAqB7e,OAAQ5C,MAClC,MAAO4C,QAASA,OAAS,IAAM5C,KAAOA,KAM1C,QAAS0hB,iBAAgBzE,MACrB,QAASA,KAAKzX,WAA6D,MAA7ByX,KAAmB,cAAEvX,OAMvE,QAASic,gBAAe1E,MACpB,SAASA,KAAKzX,QAA4D,MAA7ByX,KAAmB,cAAEvX,OAMtE,QAASkc,eAAcC,SACnB,MAAO,IAAMA,QAAU,GAM3B,QAASC,wBAAuBC,mBAC5B,GAAqBC,mBACAC,gBAAkB,EAClBC,aAarB,OAZIH,oBACAA,kBAAkBrU,QAAQ,SAAUvM,IAChC,GAAI0gB,SAAU1gB,GAAG,GAAIghB,UAAYhhB,GAAG,EACb,iBAAZ0gB,UACPG,eAAeH,SAAWM,UAC1BF,iBAAmBL,cAAcC,UAGjCK,WAAWL,SAAWM,aAIzBH,eAAgBA,eAAgBE,WAAYA,WAAYD,gBAAiBA,iBAOtF,QAASG,cAAape,KAAMqe,YACxB,MAAOre,MAAKnE,IAAI,SAAU6B,OACtB,GAAqB/B,OACA+F,KAWrB,OAVI9F,OAAMuI,QAAQzG,QACdgE,MAAQhE,MAAM,GAAI/B,MAAQ+B,MAAM,KAGhCgE,MAAQ,EACR/F,MAAQ+B,OAER/B,QAA2B,kBAAVA,QAAyC,gBAAVA,SAAuB0iB,YACvEpkB,OAAOwD,eAAe9B,MAAO2iB,QAAU5gB,MAAO2gB,WAAYE,cAAc,KAEnE7c,MAAOA,MAAO/F,MAAOA,MAAO8e,SAAUA,SAAS9e,UAShE,QAAS6iB,wBAAuBvF,KAAMwF,WAAYtD,KAC9C,GAAqBuD,cAAevD,IAAIuD,YACxC,OAAIA,cACmD,IAAzB,EAArBA,aAAahd,QAC0C,IAAlC,SAArBgd,aAAahd,QACMgd,aAAqB,QAAEC,uBAA+DD,aAAqB,QAAwB,sBAAEjD,gBAAkBI,kBAAkB+C,OAGtLlF,cAAcT,KAAyBkC,IAAiB,aAAEqB,WAAWe,kBALhF,GASOkB,WASf,QAASI,mBAAkBnmB,SACvB,GAAqBgF,OAA4BohB,iBAAiB5d,IAAIxI,QAMtE,OALKgF,SACDA,MAAQhF,QAAQ,WAAc,MAAOqmB,QACrCrhB,MAAMhF,QAAUA,QAChBomB,iBAAiB1d,IAAI1I,QAASgF,QAE3BA,MAMX,QAASshB,iBAAgB/F,MACrB,GAAqBgG,eAErB,OADAC,sBAAqBjG,KAAM,MAAiB5W,OAAWA,GAAW4c,aAC3DA,YAUX,QAASC,sBAAqBjG,KAAM7M,OAAQgH,WAAY+L,YAAavgB,QAElD,IAAXwN,SACAgH,WAAa6F,KAAKmG,SAAShM,WAAWkK,WAAWrE,KAAyBA,KAAKkC,IAAuB,sBAE1GkE,wBAAwBpG,KAAM7M,OAAQ,EAAG6M,KAAKkC,IAAI1B,MAAM3e,OAAS,EAAGsY,WAAY+L,YAAavgB,QAYjG,QAASygB,yBAAwBpG,KAAM7M,OAAQkT,WAAYC,SAAUnM,WAAY+L,YAAavgB,QAC1F,IAAK,GAAqB/D,GAAIykB,WAAYzkB,GAAK0kB,SAAU1kB,IAAK,CAC1D,GAAqB2kB,SAAUvG,KAAKkC,IAAI1B,MAAM5e,EAC1B,IAAhB2kB,QAAQ9d,OACR+d,gBAAgBxG,KAAMuG,QAASpT,OAAQgH,WAAY+L,YAAavgB,QAGpE/D,GAAK2kB,QAAQE,YAYrB,QAASC,2BAA0B1G,KAAM2G,eAAgBxT,OAAQgH,WAAY+L,YAAavgB,QAEtF,IADA,GAAqBihB,UAAW5G,KACzB4G,WAAanC,gBAAgBmC,WAChCA,SAAWA,SAASre,MAMxB,KAAK,GAJgBse,UAA4B,SAAate,OACzCue,UAAY1C,aAA8B,UAC1CiC,WAA8B,UAAc9C,UAAY,EACxD+C,SAA4B,UAAc/C,UAA6B,UAAckD,WAChF7kB,EAAIykB,WAAYzkB,GAAK0kB,SAAU1kB,IAAK,CAC1D,GAAqB2kB,SAA2B,SAAarE,IAAI1B,MAAM5e,EACnE2kB,SAAQI,iBAAmBA,gBAC3BH,gBAAiC,SAAcD,QAASpT,OAAQgH,WAAY+L,YAAavgB,QAG7F/D,GAAK2kB,QAAQE,WAEjB,IAAsB,SAAale,OAAQ,CAEvC,GAAqBwe,gBAAiB/G,KAAKkE,KAAK8C,iBAAiBL,eACjE,IAAII,eACA,IAAK,GAAqBnlB,GAAI,EAAGA,EAAImlB,eAAellB,OAAQD,IACxDqlB,qBAAqBjH,KAAM+G,eAAenlB,GAAIuR,OAAQgH,WAAY+L,YAAavgB,SAc/F,QAAS6gB,iBAAgBxG,KAAMuG,QAASpT,OAAQgH,WAAY+L,YAAavgB,QACrE,GAAoB,EAAhB4gB,QAAQ9d,MACRie,0BAA0B1G,KAAyBuG,QAAkB,UAAEnhB,MAAO+N,OAAQgH,WAAY+L,YAAavgB,YAE9G,CACD,GAAqBuhB,IAAK7C,WAAWrE,KAAMuG,QAC3C,IAAe,IAAXpT,QAAmD,SAAhBoT,QAAQ9d,OACnB,GAAvB8d,QAAQY,cAKT,GAH2B,GAAvBZ,QAAQY,cACRF,qBAAqBjH,KAAMkH,GAAI/T,OAAQgH,WAAY+L,YAAavgB,QAEzC,GAAvB4gB,QAAQY,aAAiD,CACzD,GAAqBP,UAAWnG,cAAcT,KAAMuG,QAAQhD,WAAWS,aACvEiD,sBAAqBL,SAAUM,GAAI/T,OAAQgH,WAAY+L,YAAavgB,aAIxEshB,sBAAqBjH,KAAMkH,GAAI/T,OAAQgH,WAAY+L,YAAavgB,OAEpE,IAAoB,SAAhB4gB,QAAQ9d,MAER,IAAK,GADgB2e,eAAmC3G,cAAcT,KAAMuG,QAAQhD,WAAyB,cAAE8D,eACrF7Z,EAAI,EAAGA,EAAI4Z,cAAcvlB,OAAQ2L,IACvDyY,qBAAqBmB,cAAc5Z,GAAI2F,OAAQgH,WAAY+L,YAAavgB,OAG5D,GAAhB4gB,QAAQ9d,QAAmD8d,QAAgB,QAAExjB,MAC7EqjB,wBAAwBpG,KAAM7M,OAAQoT,QAAQhD,UAAY,EAAGgD,QAAQhD,UAAYgD,QAAQE,WAAYtM,WAAY+L,YAAavgB,SAa1I,QAASshB,sBAAqBjH,KAAMqE,WAAYlR,OAAQgH,WAAY+L,YAAavgB,QAC7E,GAAqBwgB,UAAWnG,KAAKmG,QACrC,QAAQhT,QACJ,IAAK,GACDgT,SAASmB,YAAYnN,WAAYkK,WACjC,MACJ,KAAK,GACD8B,SAASoB,aAAapN,WAAYkK,WAAY6B,YAC9C,MACJ,KAAK,GACDC,SAASnH,YAAY7E,WAAYkK,WACjC,MACJ,KAAK,GACgB,OAAW3f,KAAK2f,aAS7C,QAASmD,gBAAezkB,MACpB,GAAgB,MAAZA,KAAK,GAAY,CACjB,GAAqB4Z,OAA2B5Z,KAAK4Z,MAAM8K,aAC3D,QAAQ9K,MAAM,GAAIA,MAAM,IAE5B,OAAQ,GAAI5Z,MAMhB,QAAS2kB,kBAAiBtE,UAEtB,IAAK,GADgB3a,OAAQ,EACH7G,EAAI,EAAGA,EAAIwhB,SAASvhB,OAAQD,IAClD6G,OAAS2a,SAASxhB,GAAG6G,KAEzB,OAAOA,OAOX,QAASkf,aAAYC,WAAYC,gBAE7B,IAAK,GADgB3P,QAAS,GACJtW,EAAI,EAAGA,EAAiB,EAAbgmB,WAAgBhmB,GAAQ,EACzDsW,OAASA,OAAS2P,eAAejmB,GAAKkmB,kBAAkBD,eAAejmB,EAAI,GAE/E,OAAOsW,QAAS2P,eAA4B,EAAbD,YAyBnC,QAASG,mBAAkBH,WAAYI,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,IAC3G,OAAQtB,YACJ,IAAK,GACD,MAAOI,IAAKF,kBAAkBG,IAAMC,EACxC,KAAK,GACD,MAAOF,IAAKF,kBAAkBG,IAAMC,GAAKJ,kBAAkBK,IAAMC,EACrE,KAAK,GACD,MAAOJ,IAAKF,kBAAkBG,IAAMC,GAAKJ,kBAAkBK,IAAMC,GAAKN,kBAAkBO,IACpFC,EACR,KAAK,GACD,MAAON,IAAKF,kBAAkBG,IAAMC,GAAKJ,kBAAkBK,IAAMC,GAAKN,kBAAkBO,IACpFC,GAAKR,kBAAkBS,IAAMC,EACrC,KAAK,GACD,MAAOR,IAAKF,kBAAkBG,IAAMC,GAAKJ,kBAAkBK,IAAMC,GAAKN,kBAAkBO,IACpFC,GAAKR,kBAAkBS,IAAMC,GAAKV,kBAAkBW,IAAMC,EAClE,KAAK,GACD,MAAOV,IAAKF,kBAAkBG,IAAMC,GAAKJ,kBAAkBK,IAAMC,GAAKN,kBAAkBO,IACpFC,GAAKR,kBAAkBS,IAAMC,GAAKV,kBAAkBW,IAAMC,GAAKZ,kBAAkBa,IAAMC,EAC/F,KAAK,GACD,MAAOZ,IAAKF,kBAAkBG,IAAMC,GAAKJ,kBAAkBK,IAAMC,GAAKN,kBAAkBO,IACpFC,GAAKR,kBAAkBS,IAAMC,GAAKV,kBAAkBW,IAAMC,GAAKZ,kBAAkBa,IACjFC,GAAKd,kBAAkBe,IAAMC,EACrC,KAAK,GACD,MAAOd,IAAKF,kBAAkBG,IAAMC,GAAKJ,kBAAkBK,IAAMC,GAAKN,kBAAkBO,IACpFC,GAAKR,kBAAkBS,IAAMC,GAAKV,kBAAkBW,IAAMC,GAAKZ,kBAAkBa,IACjFC,GAAKd,kBAAkBe,IAAMC,GAAKhB,kBAAkBiB,IAAMC,EAClE,KAAK,GACD,MAAOhB,IAAKF,kBAAkBG,IAAMC,GAAKJ,kBAAkBK,IAAMC,GAAKN,kBAAkBO,IACpFC,GAAKR,kBAAkBS,IAAMC,GAAKV,kBAAkBW,IAAMC,GAAKZ,kBAAkBa,IACjFC,GAAKd,kBAAkBe,IAAMC,GAAKhB,kBAAkBiB,IAAMC,GAAKlB,kBAAkBmB,IAAMC,EAC/F,SACI,KAAM,IAAItgB,OAAM,6CAO5B,QAASkf,mBAAkB3mB,GACvB,MAAY,OAALA,EAAYA,EAAE8B,WAAa;;;;;;;AAyBtC,QAASkmB,WAAU1gB,MAAOqc,kBAAmB6B,eAAgBF,WAAYxC,YAAamF,iBAClF3gB,OAAS,CACT,IAAIvE,IAAK2gB,uBAAuBC,mBAAoBC,eAAiB7gB,GAAG6gB,eAAgBE,WAAa/gB,GAAG+gB,UAExG,QAEI1B,WAAY,EACZhb,OAAQ,KACRkd,aAAc,KACdtD,cAAe,EACfkH,aAAc,EAEd5gB,MAAOA,MACP6gB,YAAa,EACbC,WAAY,EACZC,iBAAkB,EAClBC,oBAAqB,EAAG1E,eAAgBA,eAAgBC,gBAd0E9gB,GAAG8gB,gBAc3CC,WAAYA,WAAY0B,eAAgBA,eAAgBF,WAAYA,WAC9JrD,YACA+D,aAAc,EACduC,WACA9P,SACI+P,GAAI,KACJ5mB,KAAM,KACN6mB,MAAO,KAAMC,SApBWT,gBAAkBxD,kBAAkBwD,iBAAmB,KAqB/EU,kBAAmB,KACnB9F,cAAe,KACf0B,sBAAuB,KACvBqE,gBAAiB,KACjBC,aAAc,KACd/F,YAAaA,aAAe6B,MAEhChf,SAAU,KACVkD,KAAM,KACNigB,MAAO,KACPC,UAAW,MAkBnB,QAASC,YAAWb,WAAY7gB,MAAOqc,kBAAmB6B,eAAgBF,WAAY2D,iBAAkBC,WAAYjH,SAAUsG,QAASzF,YAAaD,cAAe0B,2BAC5I,KAAf2E,aAAyBA,eACxBpG,cACDA,YAAc6B,KAElB,IAAI5hB,IAAK2gB,uBAAuBC,mBAAoBC,eAAiB7gB,GAAG6gB,eAAgBE,WAAa/gB,GAAG+gB,WAAYD,gBAAkB9gB,GAAG8gB,gBACpH2E,GAAsB,KACtB5mB,KAAwB,IACzCqnB,oBACAE,GAAK9C,eAAe4C,kBAAmBT,GAAKW,GAAG,GAAIvnB,KAAOunB,GAAG,IAEjElH,SAAWA,YAEX,KAAK,GADgBmH,aAAc,GAAI5nB,OAAMygB,SAASvhB,QAC5BD,EAAI,EAAGA,EAAIwhB,SAASvhB,OAAQD,IAAK,CACvD,GAAI4oB,IAAKpH,SAASxhB,GAAIulB,aAAeqD,GAAG,GAAIC,mBAAqBD,GAAG,GAAIE,wBAA0BF,GAAG,GACjGG,GAAKnD,eAAeiD,oBAAqBG,KAAOD,GAAG,GAAIE,OAASF,GAAG,GAClDG,oBAAmC,GACnCC,WAA0B,EAC/C,QAAuB,GAAf5D,cACJ,IAAK,GACD4D,OAA0B,uBAC1B,MACJ,KAAK,GACL,IAAK,GACDD,gBAAmC,wBAG3CP,YAAY3oB,IACN6G,MAAO0e,aAAcwC,GAAIiB,KAAM7nB,KAAM8nB,OAAQG,gBAAiBH,OAAQC,gBAAiBA,gBAAiBC,OAAQA,QAE1HrB,QAAUA,WAEV,KAAK,GADgBuB,YAAa,GAAItoB,OAAM+mB,QAAQ7nB,QAC1BD,EAAI,EAAGA,EAAI8nB,QAAQ7nB,OAAQD,IAAK,CACtD,GAAIspB,IAAKxB,QAAQ9nB,GAAI+D,OAASulB,GAAG,GAAIpH,UAAYoH,GAAG,EACpDD,YAAWrpB,IACPuE,KAAM,EACNR,OAAyB,OAAUme,UAAWA,UAC9C/e,SAAU,MAGlBslB,WAAaA,cACb,IAAqBT,OAA0BS,WAAWznB,IAAI,SAAUsB,IACpE,GAAIkmB,kBAAmBlmB,GAAG,GAAIO,MAAQP,GAAG,GACrComB,GAAK9C,eAAe4C,iBACxB,QADgDE,GAAG,GAAWA,GAAG,GAC/C7lB,QAOtB,OALAihB,uBAAwBhD,qBAAqBgD,uBACzC1B,gBACAvb,OAAS,UAEbA,OAAS,GAGL8a,WAAY,EACZhb,OAAQ,KACRkd,aAAc,KACdtD,cAAe,EACfkH,aAAc,EAEdC,WAAYA,WACZ7gB,MAAOA,MACP8gB,WAAY,EACZC,iBAAkB,EAClBC,oBAAqB,EAAG1E,eAAgBA,eAAgBC,gBAAiBA,gBAAiBC,WAAYA,WAAY0B,eAAgBA,eAAgBF,WAAYA,WAC9JrD,SAAUmH,YACVpD,aAAcO,iBAAiB6C,aAC/Bb,QAASuB,WACTrR,SACI+P,GAAIA,GACJ5mB,KAAMA,KACN6mB,MAAOA,MACPC,SAAU,KAEVC,kBAAmB,KACnB9F,cAAeA,eAAiB,KAChC0B,sBAAuBA,sBACvBqE,gBAAiB,KACjBC,aAAc,KACd/F,YAAaA,aAAe6B,MAEhChf,SAAU,KACVkD,KAAM,KACNigB,MAAO,KACPC,UAAW,KAEf,IAAII,IAQR,QAASa,eAAcnL,KAAMwF,WAAYtD,KACrC,GAGqBvJ,IAHAyS,MAA2BlJ,IAAY,QACvCmJ,mBAAqBrL,KAAKkE,KAAKoH,eAC/BnF,SAAWnG,KAAKmG,QAErC,IAAInG,KAAKzX,SAAW8iB,mBAAoB,CAEhC1S,GADAyS,MAAMroB,KACDojB,SAASgF,cAAcC,MAAMroB,KAAMqoB,MAAMzB,IAGzCxD,SAASoF,cAAc,GAEhC,IAAqBC,UAAWjG,uBAAuBvF,KAAMwF,WAAYtD,IACrEsJ,WACArF,SAASmB,YAAYkE,SAAU7S,QAInCA,IAAKwN,SAASsF,kBAAkBJ,mBAEpC,IAAID,MAAMxB,MACN,IAAK,GAAqBhoB,GAAI,EAAGA,EAAIwpB,MAAMxB,MAAM/nB,OAAQD,IAAK,CAC1D,GAAIsC,IAAKknB,MAAMxB,MAAMhoB,GAAI+nB,GAAKzlB,GAAG,GAAIwnB,OAASxnB,GAAG,GAAIO,MAAQP,GAAG,EAChEiiB,UAASwF,aAAahT,GAAI+S,OAAQjnB,MAAOklB,IAGjD,MAAOhR,IASX,QAASiT,wBAAuB5L,KAAM4G,SAAU1E,IAAKvJ,IACjD,IAAK,GAAqB/W,GAAI,EAAGA,EAAIsgB,IAAIwH,QAAQ7nB,OAAQD,IAAK,CAC1D,GAAqBiqB,QAAS3J,IAAIwH,QAAQ9nB,GACrBkqB,mBAAqBC,0BAA0B/L,KAAMkC,IAAIqB,UAAWiB,qBAAqBqH,OAAOlmB,OAAQkmB,OAAO/H,YAC/GkI,aAAeH,OAAOlmB,OACtBsmB,aAAejM,IACd,eAAlB6L,OAAOlmB,SACPqmB,aAAe,KACfC,aAAerF,SAEnB,IAAqBsF,YAA+BD,aAAa9F,SAASgG,OAAOH,cAAgBrT,GAAIkT,OAAO/H,UAAWgI,mBACrH9L,MAAiB,YAAEkC,IAAImH,YAAcznB,GAAKsqB,YASpD,QAASH,2BAA0B/L,KAAM5a,MAAO0e,WAC5C,MAAO,UAAUC,OAAS,MAAOF,eAAc7D,KAAM5a,MAAO0e,UAAWC,QAiB3E,QAASqI,6BAA4BpM,KAAMkC,IAAKmK,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,IAChF,GAAqBC,SAAU7K,IAAIkB,SAASvhB,OACvBmrB,SAAU,CAqB/B,OApBID,SAAU,GAAKE,2BAA2BjN,KAAMkC,IAAK,EAAGmK,MACxDW,SAAU,GACVD,QAAU,GAAKE,2BAA2BjN,KAAMkC,IAAK,EAAGoK,MACxDU,SAAU,GACVD,QAAU,GAAKE,2BAA2BjN,KAAMkC,IAAK,EAAGqK,MACxDS,SAAU,GACVD,QAAU,GAAKE,2BAA2BjN,KAAMkC,IAAK,EAAGsK,MACxDQ,SAAU,GACVD,QAAU,GAAKE,2BAA2BjN,KAAMkC,IAAK,EAAGuK,MACxDO,SAAU,GACVD,QAAU,GAAKE,2BAA2BjN,KAAMkC,IAAK,EAAGwK,MACxDM,SAAU,GACVD,QAAU,GAAKE,2BAA2BjN,KAAMkC,IAAK,EAAGyK,MACxDK,SAAU,GACVD,QAAU,GAAKE,2BAA2BjN,KAAMkC,IAAK,EAAG0K,MACxDI,SAAU,GACVD,QAAU,GAAKE,2BAA2BjN,KAAMkC,IAAK,EAAG2K,MACxDG,SAAU,GACVD,QAAU,GAAKE,2BAA2BjN,KAAMkC,IAAK,EAAG4K,MACxDE,SAAU,GACPA,QAQX,QAASE,8BAA6BlN,KAAMkC,IAAKpd,QAE7C,IAAK,GADgBkoB,UAAU,EACLprB,EAAI,EAAGA,EAAIkD,OAAOjD,OAAQD,IAC5CqrB,2BAA2BjN,KAAMkC,IAAKtgB,EAAGkD,OAAOlD,MAChDorB,SAAU,EAElB,OAAOA,SASX,QAASC,4BAA2BjN,KAAMkC,IAAKL,WAAYpd,OACvD,IAAKwe,sBAAsBjD,KAAMkC,IAAKL,WAAYpd,OAC9C,OAAO,CAEX,IAAqB0oB,SAAUjL,IAAIkB,SAASvB,YACvBuL,OAAS3M,cAAcT,KAAMkC,IAAIqB,WACjC8J,cAAgBD,OAAO9I,cACvBvhB,KAA0BoqB,QAAa,IAC5D,QAAwB,GAAhBA,QAAQ1kB,OACZ,IAAK,GACD6kB,oBAAoBtN,KAAMmN,QAASE,cAAeF,QAAQxD,GAAI5mB,KAAM0B,MACpE,MACJ,KAAK,GACD8oB,gBAAgBvN,KAAMqN,cAAetqB,KAAM0B,MAC3C,MACJ,KAAK,GACD+oB,gBAAgBxN,KAAMmN,QAASE,cAAetqB,KAAM0B,MACpD,MACJ,KAAK,GAKDgpB,mBAJ6C,SAAZvL,IAAIzZ,OACjB,GAAhB0kB,QAAQ1kB,MACR2kB,OAAOpJ,cACPhE,KACyBmN,QAASE,cAAetqB,KAAM0B,OAGnE,OAAO,EAWX,QAAS6oB,qBAAoBtN,KAAMmN,QAASE,cAAe1D,GAAI5mB,KAAM0B,OACjE,GAAqBqmB,iBAAkBqC,QAAQrC,gBAC1B4C,YAAc5C,gBAAkB9K,KAAKkE,KAAK1F,UAAUmP,SAAS7C,gBAAiBrmB,OAASA,KAC5GipB,aAA6B,MAAfA,YAAsBA,YAAYzqB,WAAa,IAC7D,IAAqBkjB,UAAWnG,KAAKmG,QACxB,OAAT1hB,MACA0hB,SAASwF,aAAa0B,cAAetqB,KAAM2qB,YAAa/D,IAGxDxD,SAASyH,gBAAgBP,cAAetqB,KAAM4mB,IAUtD,QAAS4D,iBAAgBvN,KAAMqN,cAAetqB,KAAM0B,OAChD,GAAqB0hB,UAAWnG,KAAKmG,QACjC1hB,OACA0hB,SAAS0H,SAASR,cAAetqB,MAGjCojB,SAAS2H,YAAYT,cAAetqB,MAW5C,QAASyqB,iBAAgBxN,KAAMmN,QAASE,cAAetqB,KAAM0B,OACzD,GAAqBipB,aAAc1N,KAAKkE,KAAK1F,UAAUmP,SAASI,gBAAgBC,MAAwB,MACxG,IAAmB,MAAfN,YAAqB,CACrBA,YAAcA,YAAYzqB,UAC1B,IAAqBgrB,MAAOd,QAAQpC,MACxB,OAARkD,OACAP,aAA4BO,UAIhCP,aAAc,IAElB,IAAqBvH,UAAWnG,KAAKmG,QAClB,OAAfuH,YACAvH,SAAS+H,SAASb,cAAetqB,KAAM2qB,aAGvCvH,SAASgI,YAAYd,cAAetqB,MAW5C,QAAS0qB,oBAAmBzN,KAAMmN,QAASE,cAAetqB,KAAM0B,OAC5D,GAAqBqmB,iBAAkBqC,QAAQrC,gBAC1B4C,YAAc5C,gBAAkB9K,KAAKkE,KAAK1F,UAAUmP,SAAS7C,gBAAiBrmB,OAASA,KAC5Gub,MAAKmG,SAASiI,YAAYf,cAAetqB,KAAM2qB,aA8BnD,QAASW,kBAAiB5lB,MAAO/F,MAAO+B,MAAOsC,MAM3C,MAFAtC,OAAQmC,kBAAkBnC,QAItBW,OAAQ,EACR2B,KAJ2Boe,aAAape,KAAMtE,UAAUC,QAIzC+F,MAAOA,MAAO/F,MAAOA,MAAO+B,MAAOA,OAO1D,QAAS6pB,WAAUxe,WAIf,IAAK,GAHgBye,mBACAC,WACAC,QAAS,EACJ7sB,EAAI,EAAGA,EAAIkO,UAAUjO,OAAQD,IAAK,CACxD,GAAqBkF,UAAWgJ,UAAUlO,EACtCkF,UAASpE,QAAUgsB,iBACnBD,QAAS,GAEQ,WAAjB3nB,SAAS2B,OACT+lB,QAAQ9pB,KAAKoC,SAASpE,OAE1BoE,SAAS1B,MAAQxD,EACjB2sB,eAAe/M,SAAS1a,SAASpE,QAAUoE,SAE/C,OAEIrH,QAAS,KACT8uB,eAAgBA,eAChBze,UAAWA,UACX0e,QAASA,QACTC,OAAQA,QAOhB,QAASE,cAAalM,MAGlB,IAAK,GAFgBP,KAAMO,KAAKmM,KACX9e,UAAY2S,KAAKjR,WAAa,GAAI7O,OAAMuf,IAAIpS,UAAUjO,QACjDD,EAAI,EAAGA,EAAIsgB,IAAIpS,UAAUjO,OAAQD,IAAK,CAC5D,GAAqBitB,SAAU3M,IAAIpS,UAAUlO,EACvB,MAAhBitB,QAAQpmB,QACVqH,UAAUlO,GAAKktB,0BAA0BrM,KAAMoM,WAU3D,QAASE,oBAAmBtM,KAAMuM,OAAQxmB,eAEtC,OADsB,KAAlBA,gBAA4BA,cAAgBc,SAASC,oBACtC,EAAfylB,OAAOvmB,MACP,MAAOumB,QAAOtsB,KAKlB,IAHmB,EAAfssB,OAAOvmB,QACPD,cAAgB,MAED,EAAfwmB,OAAOvmB,MACP,MAAOga,MAAKwM,QAAQhnB,IAAI+mB,OAAOtsB,MAAO8F,cAE1C,IAAqB0mB,aAAcF,OAAOxN,QAC1C,QAAQ0N,aACJ,IAAKC,uBACL,IAAKC,qBACD,MAAO3M,MAEf,GAAqB4M,aAAc5M,KAAKmM,KAAKL,eAAeW,YAC5D,IAAIG,YAAa,CACb,GAAqBC,kBAAmB7M,KAAKjR,WAAW6d,YAAYjqB,MAKpE,YAJyBgE,KAArBkmB,mBACAA,iBAAmB7M,KAAKjR,WAAW6d,YAAYjqB,OAC3C0pB,0BAA0BrM,KAAM4M,cAEjCC,mBAAqBC,oBAAkBnmB,GAAYkmB,iBAEzD,GAAIN,OAAOtsB,MAAM8sB,iBAAmBC,cAAchN,KAAMuM,OAAOtsB,MAAM8sB,iBAAkB,CACxF,GAAqBE,iBAAoCV,OAAOtsB,MAAqB,gBAEhE0C,MAAQqd,KAAKjR,WAAW3P,MAC7C4gB,MAAKmM,KAAKL,eAAeS,OAAOxN,WAC5B/Y,MAAO,KACPhE,MAAOirB,gBAAgBjwB,QACvBsH,QAAU3B,MAAOA,MACjB1C,MAAOssB,OAAOtsB,MAElB,IAAqBkI,QAASF,mBAAmB+X,KACjD,KAEI,MADAA,MAAKjR,WAAWpM,OAASmqB,gBACjB9M,KAAKjR,WAAWpM,OACpB0pB,0BAA0BrM,KAAMA,KAAKmM,KAAKL,eAAeS,OAAOxN,WAExE,QACI9W,mBAAmBE,SAG3B,MAAO6X,MAAKwM,QAAQhnB,IAAI+mB,OAAOtsB,MAAO8F,eAO1C,QAASmnB,2BAA0BC,SAAU9c,OACzC,MAAO8c,UAAShB,KAAKJ,QAAQrrB,QAAQ2P,QAAU,EAOnD,QAAS2c,eAAcG,SAAU1N,KAC7B,MAAoB,OAAbA,IAAIpP,QAAkB6c,0BAA0BC,SAAU1N,IAAIpP,QACjEoP,IAAIpP,QAAU4b,gBAAkBkB,SAAShB,KAAKH,QAOtD,QAASK,2BAA0Bc,SAAUP,aACzC,GAAqBQ,WACrB,QAA4B,UAApBR,YAAY5mB,OAChB,IAAK,KACDonB,WAAaC,aAAaF,SAAUP,YAAY5qB,MAAO4qB,YAAYtoB,KACnE,MACJ,KAAK,MACD8oB,WAAaE,aAAaH,SAAUP,YAAY5qB,MAAO4qB,YAAYtoB,KACnE,MACJ,KAAK,MACD8oB,WAAad,mBAAmBa,SAAUP,YAAYtoB,KAAK,GAC3D,MACJ,KAAK,KACD8oB,WAAaR,YAAY5qB,MAGjC,WAAsB2E,KAAfymB,WAA2BN,gBAAkBM,WAQxD,QAASC,cAAaF,SAAUtpB,KAAMS,MAClC,GAAqBipB,KAAMjpB,KAAKlF,MAChC,QAAQmuB,KACJ,IAAK,GACD,MAAO,IAAI1pB,KACf,KAAK,GACD,MAAO,IAAIA,MAAKyoB,mBAAmBa,SAAU7oB,KAAK,IACtD,KAAK,GACD,MAAO,IAAIT,MAAKyoB,mBAAmBa,SAAU7oB,KAAK,IAAKgoB,mBAAmBa,SAAU7oB,KAAK,IAC7F,KAAK,GACD,MAAO,IAAIT,MAAKyoB,mBAAmBa,SAAU7oB,KAAK,IAAKgoB,mBAAmBa,SAAU7oB,KAAK,IAAKgoB,mBAAmBa,SAAU7oB,KAAK,IACpI,SAEI,IAAK,GADgBkpB,WAAY,GAAIttB,OAAMqtB,KACjBpuB,EAAI,EAAGA,EAAIouB,IAAKpuB,IACtCquB,UAAUruB,GAAKmtB,mBAAmBa,SAAU7oB,KAAKnF,GAErD,OAAO,KAAK0E,KAAKnC,KAAK/B,MAAMkE,UAAO,IAAQtC,OAAOisB,cAS9D,QAASF,cAAaH,SAAUnwB,QAASsH,MACrC,GAAqBipB,KAAMjpB,KAAKlF,MAChC,QAAQmuB,KACJ,IAAK,GACD,MAAOvwB,UACX,KAAK,GACD,MAAOA,SAAQsvB,mBAAmBa,SAAU7oB,KAAK,IACrD,KAAK,GACD,MAAOtH,SAAQsvB,mBAAmBa,SAAU7oB,KAAK,IAAKgoB,mBAAmBa,SAAU7oB,KAAK,IAC5F,KAAK,GACD,MAAOtH,SAAQsvB,mBAAmBa,SAAU7oB,KAAK,IAAKgoB,mBAAmBa,SAAU7oB,KAAK,IAAKgoB,mBAAmBa,SAAU7oB,KAAK,IACnI,SAEI,IAAK,GADgBkpB,WAAYttB,MAAMqtB,KACbpuB,EAAI,EAAGA,EAAIouB,IAAKpuB,IACtCquB,UAAUruB,GAAKmtB,mBAAmBa,SAAU7oB,KAAKnF,GAErD,OAAOnC,SAAQ2C,UAAM,GAAQ6tB,YAQzC,QAASC,uBAAsBN,SAAUO,YAErC,IAAK,GADgBjO,KAAM0N,SAAShB,KACVhtB,EAAI,EAAGA,EAAIsgB,IAAIpS,UAAUjO,OAAQD,IAAK,CAE5D,GAAoB,OADWsgB,IAAIpS,UAAUlO,GACjC6G,MAAgC,CACxC,GAAqB2nB,UAAWR,SAASpe,WAAW5P,EAChDwuB,WAAYA,WAAab,iBACzBa,SAASC;;;;;;;AAwBzB,QAASC,oBAAmBC,WAAYC,YAAaC,UAAWzQ,MAC5D,GAAqBoH,eAAmCoJ,YAA0B,cAAEnJ,cAClE,QAAdoJ,eAAoCrnB,KAAdqnB,YACtBA,UAAYrJ,cAAcvlB,QAE9Bme,KAAK0D,oBAAsB6M,WAC3BG,WAAWtJ,cAAgC,UAAepH,MAC1D2Q,oBAAoBH,YAAaxQ,MACjCqD,SAASuN,mBAAmB5Q,MAE5B6Q,yBAAyBL,YADwB,UAAgB,EAAIpJ,cAA+B,UAAgB,GAAK,KACzEpH,MAOpD,QAAS2Q,qBAAoBG,cAAe9Q,MACxC,GAAqB+Q,gBAAiB5M,sBAAsBnE,KAC5D,IAAK+Q,gBAAkBA,iBAAmBD,iBACzB,GAAb9Q,KAAKG,OADT,CAWAH,KAAKG,OAAS,EACd,IAAqB6Q,gBAAiBD,eAAelH,SAASoH,eACzDD,kBACDA,eAAiBD,eAAelH,SAASoH,oBAE7CD,eAAetsB,KAAKsb,MAGpBkR,4BAA+ClR,KAAY,OAAEkC,IAAwBlC,KAAmB,gBAO5G,QAASkR,6BAA4BC,QAAS5K,SAC1C,KAAoB,EAAhBA,QAAQ9d,OAAZ,CAGA0oB,QAAQC,WAAa,EACrB7K,QAAQ9d,OAAS,CAEjB,KADA,GAAqB4oB,eAAgB9K,QAAQhe,OACtC8oB,eACHA,cAAc9H,YAAc,EAC5B8H,cAAgBA,cAAc9oB,QAQtC,QAAS+oB,oBAAmBd,YAAaC,WACrC,GAAqBrJ,eAAmCoJ,YAA0B,cAAEnJ,cAIpF,KAHiB,MAAboJ,WAAqBA,WAAarJ,cAAcvlB,UAChD4uB,UAAYrJ,cAAcvlB,OAAS,GAEnC4uB,UAAY,EACZ,MAAO,KAEX,IAAqBzQ,MAAOoH,cAAcqJ,UAM1C,OALAzQ,MAAK0D,oBAAsB,KAC3B6N,gBAAgBnK,cAAeqJ,WAE/BpN,SAASuN,mBAAmB5Q,MAC5BwR,iBAAiBxR,MACVA,KAMX,QAASyR,qBAAoBzR,MACzB,GAAmB,GAAbA,KAAKG,MAAX,CAGA,GAAqB4Q,gBAAiB5M,sBAAsBnE,KAC5D,IAAI+Q,eAAgB,CAChB,GAAqBC,gBAAiBD,eAAelH,SAASoH,eAC1DD,kBACAO,gBAAgBP,eAAgBA,eAAe7tB,QAAQ6c,OACvDqD,SAASuN,mBAAmB5Q,SAUxC,QAAS0R,kBAAiBlB,YAAamB,aAAcC,cACjD,GAAqBxK,eAAmCoJ,YAA0B,cAAEnJ,eAC/DrH,KAAOoH,cAAcuK,aAY1C,OAXAJ,iBAAgBnK,cAAeuK,cACX,MAAhBC,eACAA,aAAexK,cAAcvlB,QAEjC6uB,WAAWtJ,cAAewK,aAAc5R,MAGxCqD,SAASuN,mBAAmB5Q,MAC5BwR,iBAAiBxR,MAEjB6Q,yBAAyBL,YADOoB,aAAe,EAAIxK,cAAcwK,aAAe,GAAK,KACrC5R,MACzCA,KAQX,QAAS6Q,0BAAyBL,YAAaqB,SAAU7R,MACrD,GAAqB8R,gBAAiBD,SAAWxN,WAAWwN,SAA6BA,SAAS3P,IAAuB,oBACrHsO,YAAYlM,aAKhB2B,sBAAqBjG,KAAM,EAJOA,KAAKmG,SAAShM,WAAW2X,gBACxB9R,KAAKmG,SAASD,YAAY4L,oBAGa1oB,IAM9E,QAASooB,kBAAiBxR,MACtBiG,qBAAqBjG,KAAM,EAAqB,KAAM,SAAM5W,IAQhE,QAASsnB,YAAWqB,IAAK3sB,MAAOX,OAExBW,OAAS2sB,IAAIlwB,OACbkwB,IAAIrtB,KAAKD,OAGTstB,IAAInZ,OAAOxT,MAAO,EAAGX,OAQ7B,QAAS8sB,iBAAgBQ,IAAK3sB,OAEtBA,OAAS2sB,IAAIlwB,OAAS,EACtBkwB,IAAIC,MAGJD,IAAInZ,OAAOxT,MAAO,GAyB1B,QAAS6sB,wBAAuBC,SAAUC,cAAeC,eAAgBC,OAAQ3I,QAAS4I,oBACtF,MAAO,IAAIC,mBAAkBL,SAAUC,cAAeC,eAAgBC,OAAQ3I,QAAS4I,oBAM3F,QAASE,mCAAkCC,kBACvC,MAAO,kBAAsCL,eAiJjD,QAASM,yBAAwB1S,KAAMoL,MAAOgC,QAC1C,MAAO,IAAIuF,mBAAkB3S,KAAMoL,MAAOgC,QAiN9C,QAASwF,yBAAwB5S,MAC7B,MAAO,IAAI6S,UAAS7S,MA2JxB,QAAS8S,oBAAmB9S,KAAMkC,KAC9B,MAAO,IAAI6Q,cAAa/S,KAAMkC,KAsClC,QAAS8Q,gBAAehT,KAAMoL,OAC1B,MAAO,IAAI6H,WAAUjT,KAAMoL,OA6B/B,QAAS8H,WAAUlT,KAAM5a,OACrB,GAAqB8c,KAAMlC,KAAKkC,IAAI1B,MAAMpb,MAC1C,IAAgB,EAAZ8c,IAAIzZ,MAA6B,CACjC,GAAqB2kB,QAAS3M,cAAcT,KAAMkC,IAAIqB,UACtD,OAA0BrB,KAAY,QAAE2H,SAAWuD,OAAOvD,SAAWuD,OAAO9I,cAE3E,GAAgB,EAAZpC,IAAIzZ,MACT,MAAO8X,YAAWP,KAAMkC,IAAIqB,WAAWgB,UAEtC,IAAgB,MAAZrC,IAAIzZ,MACT,MAAOiY,gBAAeV,KAAMkC,IAAIqB,WAAW6M,QAE/C,MAAM,IAAIxnB,OAAM,gDAAkDxD,OAMtE,QAAS+tB,kBAAiBnT,MACtB,MAAO,IAAIoT,iBAAgBpT,KAAKmG,UA2SpC,QAASkN,mBAAkBta,WAAYxQ,OAAQ+qB,oBAAqBpR,KAChE,MAAO,IAAIqR,cAAaxa,WAAYxQ,OAAQ+qB,oBAAqBpR,KA4GrE,QAASsR,cAAalK,WAAY7gB,MAAOsc,eAAgB0B,WAAYngB,KAAMS,KAAMzD,MAAOomB,SACpF,GAAqBtG,YACrB,IAAI9f,MACA,IAAK,GAAqBmwB,QAAQnwB,OAAO,CACrC,GAAIY,IAAKZ,MAAMmwB,MAAOtR,aAAeje,GAAG,GAAI8mB,gBAAkB9mB,GAAG,EACjEkf,UAASjB,eACL1Z,MAAO,EACP1F,KAAM0wB,KAAMzI,gBAAiBA,gBAC7BrB,GAAI,KACJmB,gBAAiB,KACjBC,OAAQ,MAIpB,GAAqBE,cACrB,IAAIvB,QACA,IAAK,GAAqB3kB,YAAY2kB,SAClCuB,WAAWvmB,MAAOyB,KAAM,EAAyBpB,SAAUA,SAAUY,OAAQ,KAAMme,UAAW4F,QAAQ3kB,WAI9G,OADA0D,QAAS,MACFmmB,KAAKtF,WAAY7gB,MAAOsc,eAAgB0B,WAAYngB,KAAMA,KAAMS,KAAMqc,SAAU6H,YAQ3F,QAASyI,SAAQjrB,MAAOnC,KAAMS,MAE1B,MADA0B,QAAS,GACFmmB,MAAM,EAAGnmB,MAAO,KAAM,EAAGnC,KAAMA,KAAMS,MAUhD,QAASsoB,aAAY5mB,MAAOsc,eAAgBriB,MAAO+B,MAAOsC,MACtD,MAAO6nB,OAAM,EAAGnmB,MAAOsc,eAAgB,EAAGriB,MAAO+B,MAAOsC,MAc5D,QAAS6nB,MAAKtF,WAAY7gB,MAAOqc,kBAAmB2B,WAAY/jB,MAAO+B,MAAOsC,KAAMqc,SAAUsG,SAC1F,GAAIxlB,IAAK2gB,uBAAuBC,mBAAoBC,eAAiB7gB,GAAG6gB,eAAgBE,WAAa/gB,GAAG+gB,WAAYD,gBAAkB9gB,GAAG8gB,eACpI0E,WACDA,YAECtG,WACDA,aAKJ3e,MAAQmC,kBAAkBnC,MAC1B,IAAqBkvB,SAAUxO,aAAape,KAAMtE,UAAUC,OAC5D,QAEI6gB,WAAY,EACZhb,OAAQ,KACRkd,aAAc,KACdtD,cAAe,EACfkH,aAAc,EAEdC,WAAYA,WACZ7gB,MAAOA,MACP8gB,WAAY,EACZC,iBAAkB,EAClBC,oBAAqB,EAAG1E,eAAgBA,eAAgBC,gBAAiBA,gBAAiBC,WAAYA,WACtG0B,gBAAiB,EAAGF,WAAYA,WAAYrD,SAAUA,SACtD+D,aAAcO,iBAAiBtE,UAAWsG,QAASA,QACnD9P,QAAS,KACT9S,UAAYpE,MAAOA,MAAO+B,MAAOA,MAAOsC,KAAM4sB,SAC9C3pB,KAAM,KACNigB,MAAO,KACPC,UAAW,MAQnB,QAAS0J,wBAAuB5T,KAAMkC,KAClC,MAAO2R,yBAAwB7T,KAAMkC,KAOzC,QAAS4R,oBAAmB9T,KAAMkC,KAG9B,IADA,GAAqB0E,UAAW5G,KACzB4G,SAASre,SAAWkc,gBAAgBmC,WACvCA,SAAWA,SAASre,MAKxB,OAAOwrB,aAA+BnN,SAAgB,OAAsBxC,aAAawC,WAF7C,EAEmG1E,IAAa,SAAEzd,MAA0Byd,IAAa,SAAEnb,MAO3M,QAASitB,yBAAwBhU,KAAMkC,KAEnC,GAAqB+R,uBAAoC,MAAZ/R,IAAIzZ,OAAiC,EAE7D2nB,SAAW2D,YAAY/T,KAAyBkC,IAAW,OAAG+R,qBAAyC/R,IAAa,SAAEzd,MAA0Byd,IAAa,SAAEnb,KACpL,IAAImb,IAAIwH,QAAQ7nB,OACZ,IAAK,GAAqBD,GAAI,EAAGA,EAAIsgB,IAAIwH,QAAQ7nB,OAAQD,IAAK,CAC1D,GAAqBiqB,QAAS3J,IAAIwH,QAAQ9nB,GACrBsyB,aAAe9D,SAA4BvE,OAAgB,UAAGja,UAAUuiB,oBAAoBnU,KAAyBkC,IAAW,OAAEqB,UAAWsI,OAAO/H,WACvK9D,MAAiB,YAAEkC,IAAImH,YAAcznB,GAAKsyB,aAAaE,YAAYjwB,KAAK+vB,cAGlF,MAAO9D,UAQX,QAAS+D,qBAAoBnU,KAAM5a,MAAO0e,WACtC,MAAO,UAAUC,OAAS,MAAOF,eAAc7D,KAAM5a,MAAO0e,UAAWC,QAiB3E,QAASsQ,+BAA8BrU,KAAMkC,IAAKmK,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,IAClF,GAAqBwH,cAAe5T,eAAeV,KAAMkC,IAAIqB,WACxCgR,UAAYD,aAAalE,SACzBpD,SAAU,EACVwH,YAA2B,GAC3BzH,QAAU7K,IAAIkB,SAASvhB,MAmD5C,OAlDIkrB,SAAU,GAAK/J,aAAahD,KAAMkC,IAAK,EAAGmK,MAC1CW,SAAU,EACVwH,QAAUC,WAAWzU,KAAMsU,aAAcpS,IAAK,EAAGmK,GAAImI,UAErDzH,QAAU,GAAK/J,aAAahD,KAAMkC,IAAK,EAAGoK,MAC1CU,SAAU,EACVwH,QAAUC,WAAWzU,KAAMsU,aAAcpS,IAAK,EAAGoK,GAAIkI,UAErDzH,QAAU,GAAK/J,aAAahD,KAAMkC,IAAK,EAAGqK,MAC1CS,SAAU,EACVwH,QAAUC,WAAWzU,KAAMsU,aAAcpS,IAAK,EAAGqK,GAAIiI,UAErDzH,QAAU,GAAK/J,aAAahD,KAAMkC,IAAK,EAAGsK,MAC1CQ,SAAU,EACVwH,QAAUC,WAAWzU,KAAMsU,aAAcpS,IAAK,EAAGsK,GAAIgI,UAErDzH,QAAU,GAAK/J,aAAahD,KAAMkC,IAAK,EAAGuK,MAC1CO,SAAU,EACVwH,QAAUC,WAAWzU,KAAMsU,aAAcpS,IAAK,EAAGuK,GAAI+H,UAErDzH,QAAU,GAAK/J,aAAahD,KAAMkC,IAAK,EAAGwK,MAC1CM,SAAU,EACVwH,QAAUC,WAAWzU,KAAMsU,aAAcpS,IAAK,EAAGwK,GAAI8H,UAErDzH,QAAU,GAAK/J,aAAahD,KAAMkC,IAAK,EAAGyK,MAC1CK,SAAU,EACVwH,QAAUC,WAAWzU,KAAMsU,aAAcpS,IAAK,EAAGyK,GAAI6H,UAErDzH,QAAU,GAAK/J,aAAahD,KAAMkC,IAAK,EAAG0K,MAC1CI,SAAU,EACVwH,QAAUC,WAAWzU,KAAMsU,aAAcpS,IAAK,EAAG0K,GAAI4H,UAErDzH,QAAU,GAAK/J,aAAahD,KAAMkC,IAAK,EAAG2K,MAC1CG,SAAU,EACVwH,QAAUC,WAAWzU,KAAMsU,aAAcpS,IAAK,EAAG2K,GAAI2H,UAErDzH,QAAU,GAAK/J,aAAahD,KAAMkC,IAAK,EAAG4K,MAC1CE,SAAU,EACVwH,QAAUC,WAAWzU,KAAMsU,aAAcpS,IAAK,EAAG4K,GAAI0H,UAErDA,SACAD,UAAUG,YAAYF,SAET,MAAZtS,IAAIzZ,OACL6X,4BAA4BN,KAAM,IAAmCkC,IAAIqB,YACzEgR,UAAUI,WAEE,OAAZzS,IAAIzZ,OACJ8rB,UAAUK,YAEP5H,QAQX,QAAS6H,gCAA+B7U,KAAMkC,IAAKpd,QAK/C,IAAK,GAJgBwvB,cAAe5T,eAAeV,KAAMkC,IAAIqB,WACxCgR,UAAYD,aAAalE,SACzBpD,SAAU,EACVwH,YAA2B,GACtB5yB,EAAI,EAAGA,EAAIkD,OAAOjD,OAAQD,IAC5CohB,aAAahD,KAAMkC,IAAKtgB,EAAGkD,OAAOlD,MAClCorB,SAAU,EACVwH,QAAUC,WAAWzU,KAAMsU,aAAcpS,IAAKtgB,EAAGkD,OAAOlD,GAAI4yB,SAapE,OAVIA,UACAD,UAAUG,YAAYF,SAET,MAAZtS,IAAIzZ,OACL6X,4BAA4BN,KAAM,IAAmCkC,IAAIqB,YACzEgR,UAAUI,WAEE,OAAZzS,IAAIzZ,OACJ8rB,UAAUK,YAEP5H,QAOX,QAAS6G,yBAAwB7T,KAAMkC,KAEnC,GAAqB+R,uBAAoC,KAAZ/R,IAAIzZ,OAAsC,EAClE4mB,YAAcnN,IAAIpb,QACvC,QAAoB,UAAZob,IAAIzZ,OACR,IAAK,KACD,MAAOsrB,aAAY/T,KAAyBkC,IAAW,OAAG+R,qBAAuC,YAAgBxvB,MAAwB,YAAgBsC,KAC7J,KAAK,MACD,MAAO+tB,aAAY9U,KAAyBkC,IAAW,OAAG+R,qBAAuC,YAAgBxvB,MAAwB,YAAgBsC,KAC7J,KAAK,MACD,MAAOguB,YAAW/U,KAAyBkC,IAAW,OAAG+R,qBAAuC,YAAgBltB,KAAK,GACzH,KAAK,KACD,MAAwB,aAAgBtC,OAWpD,QAASsvB,aAAY/T,KAAMoL,MAAO6I,qBAAsB3tB,KAAMS,MAC1D,GAAqBipB,KAAMjpB,KAAKlF,MAChC,QAAQmuB,KACJ,IAAK,GACD,MAAO,IAAI1pB,KACf,KAAK,GACD,MAAO,IAAIA,MAAKyuB,WAAW/U,KAAMoL,MAAO6I,qBAAsBltB,KAAK,IACvE,KAAK,GACD,MAAO,IAAIT,MAAKyuB,WAAW/U,KAAMoL,MAAO6I,qBAAsBltB,KAAK,IAAKguB,WAAW/U,KAAMoL,MAAO6I,qBAAsBltB,KAAK,IAC/H,KAAK,GACD,MAAO,IAAIT,MAAKyuB,WAAW/U,KAAMoL,MAAO6I,qBAAsBltB,KAAK,IAAKguB,WAAW/U,KAAMoL,MAAO6I,qBAAsBltB,KAAK,IAAKguB,WAAW/U,KAAMoL,MAAO6I,qBAAsBltB,KAAK,IACvL,SAEI,IAAK,GADgBkpB,WAAY,GAAIttB,OAAMqtB,KACjBpuB,EAAI,EAAGA,EAAIouB,IAAKpuB,IACtCquB,UAAUruB,GAAKmzB,WAAW/U,KAAMoL,MAAO6I,qBAAsBltB,KAAKnF,GAEtE,OAAO,KAAK0E,KAAKnC,KAAK/B,MAAMkE,UAAO,IAAQtC,OAAOisB,cAW9D,QAAS6E,aAAY9U,KAAMoL,MAAO6I,qBAAsBx0B,QAASsH,MAC7D,GAAqBipB,KAAMjpB,KAAKlF,MAChC,QAAQmuB,KACJ,IAAK,GACD,MAAOvwB,UACX,KAAK,GACD,MAAOA,SAAQs1B,WAAW/U,KAAMoL,MAAO6I,qBAAsBltB,KAAK,IACtE,KAAK,GACD,MAAOtH,SAAQs1B,WAAW/U,KAAMoL,MAAO6I,qBAAsBltB,KAAK,IAAKguB,WAAW/U,KAAMoL,MAAO6I,qBAAsBltB,KAAK,IAC9H,KAAK,GACD,MAAOtH,SAAQs1B,WAAW/U,KAAMoL,MAAO6I,qBAAsBltB,KAAK,IAAKguB,WAAW/U,KAAMoL,MAAO6I,qBAAsBltB,KAAK,IAAKguB,WAAW/U,KAAMoL,MAAO6I,qBAAsBltB,KAAK,IACtL,SAEI,IAAK,GADgBkpB,WAAYttB,MAAMqtB,KACbpuB,EAAI,EAAGA,EAAIouB,IAAKpuB,IACtCquB,UAAUruB,GAAKmzB,WAAW/U,KAAMoL,MAAO6I,qBAAsBltB,KAAKnF,GAEtE,OAAOnC,SAAQ2C,UAAM,GAAQ6tB,YA6BzC,QAAS8E,YAAW/U,KAAMoL,MAAO6I,qBAAsBjF,OAAQxmB,eAE3D,OADsB,KAAlBA,gBAA4BA,cAAgBc,SAASC,oBACtC,EAAfylB,OAAOvmB,MACP,MAAOumB,QAAOtsB,KAElB,IAAqBsyB,WAAYhV,IACd,GAAfgP,OAAOvmB,QACPD,cAAgB,KAEpB,IAAqB0mB,aAAcF,OAAOxN,QACtC0N,eAAgB+F,4BAGhBhB,wBAA0B7I,QAA4BA,MAAc,QAAEpH,gBAEtEoH,OAAyB,EAAf4D,OAAOvmB,QACjBwrB,sBAAuB,EACvB7I,MAA2BA,MAAa,OAG5C,KADA,GAAqB8J,YAAalV,KAC3BkV,YAAY,CACf,GAAI9J,MACA,OAAQ8D,aACJ,IAAKiG,oBACD,GAAqBvO,UAAWwO,aAAaF,WAAY9J,MAAO6I,qBAChE,OAAOd,kBAAiBvM,SAE5B,KAAKyO,mBACD,GAAqBzO,UAAWwO,aAAaF,WAAY9J,MAAO6I,qBAChE,OAAOrN,UAAST,QAEpB,KAAKmP,oBACD,MAAO,IAAIC,YAAW9U,cAAcyU,WAAY9J,MAAM7H,WAAWe,cACrE,KAAKkR,0BACD,MAAO/U,eAAcyU,WAAY9J,MAAM7H,WAAWkS,aACtD,KAAKC,qBACD,GAAuBtK,MAAc,QAAEvB,SACnC,MAAOpJ,eAAcyU,WAAY9J,MAAM7H,WAAWsG,QAEtD,MAEJ,KAAKoL,2BAED,MAAOrC,yBADuBwC,aAAaF,WAAY9J,MAAO6I,sBAGlE,KAAK0B,qBACD,MAAO3C,gBAAekC,WAAY9J,MACtC,SACI,GAAqBwK,gBAAoC3B,qBAA0C7I,MAAc,QAAEpB,aAAkCoB,MAAc,QAAErB,iBAAmBmF,YACxL,IAAI0G,cAAe,CACf,GAAqBtB,cAAe5T,eAAewU,WAAYU,cAAcrS,UAK7E,OAJK+Q,gBACDA,cAAiBlE,SAAUyD,wBAAwBqB,WAAYU,gBAC/DV,WAAW1U,MAAMoV,cAAcrS,WAA8B,cAE1D+Q,aAAalE,UAIpC6D,qBAAuBxP,gBAAgByQ,YACvC9J,MAA2BhH,aAAa8Q,YACxCA,WAAgCA,WAAkB,OAC/B,EAAflG,OAAOvmB,QACPysB,WAAa,MAGrB,GAAqBzwB,OAAQuwB,UAAU9Q,KAAKvZ,SAAS1C,IAAI+mB,OAAOtsB,MAAOmzB,sCACvE,OAAIpxB,SAAUoxB,uCACVrtB,gBAAkBqtB,sCAMXpxB,MAEJuwB,UAAU9Q,KAAK0L,SAASjlB,SAAS1C,IAAI+mB,OAAOtsB,MAAO8F,eAQ9D,QAAS4sB,cAAapV,KAAMoL,MAAO6I,sBAC/B,GAAqBrN,SACrB,IAAIqN,qBACArN,SAAWnG,cAAcT,KAAMoL,MAAM7H,WAAWS,kBAIhD,KADA4C,SAAW5G,KACJ4G,SAASre,SAAWkc,gBAAgBmC,WACvCA,SAAWA,SAASre,MAG5B,OAAOqe,UAWX,QAAS6N,YAAWzU,KAAMsU,aAAcpS,IAAKL,WAAYpd,MAAO+vB,SAC5D,GAAgB,MAAZtS,IAAIzZ,MAA+B,CACnC,GAAqBme,UAAWnG,cAAcT,KAAyBkC,IAAW,OAAEqB,WAAWS,aACtE,GAArB4C,SAAS1E,IAAIzZ,QACbme,SAASzG,OAAS,GAG1B,GAAqBgN,SAAUjL,IAAIkB,SAASvB,YACvB9c,SAA8BooB,QAAa,IAKhE,IADAmH,aAAalE,SAASrrB,UAAYN,MAClB,OAAZyd,IAAIzZ,MAAgC,CACpC+rB,QAAUA,WACV,IAAqB1T,UAAWgB,aAAaE,OAAOhC,KAAKoC,UAAUF,IAAIC,aAAeN,YAEtF2S,SADiCtS,IAAIkB,SAASvB,YACO,iBACjD,GAAIiU,cAAahV,SAAUrc,MAA6C,IAAxB,EAAbub,KAAKG,QAGhD,MADAH,MAAKoC,UAAUF,IAAIC,aAAeN,YAAcpd,MACzC+vB,QAOX,QAASuB,iCAAgC/V,KAAMmQ,YAC3C,GAAMnQ,KAAKkC,IAAIkP,UAAYjB,WAK3B,IAAK,GAFgB3P,OAAQR,KAAKkC,IAAI1B,MACjBH,UAAY,EACPze,EAAI,EAAGA,EAAI4e,MAAM3e,OAAQD,IAAK,CACpD,GAAqB2kB,SAAU/F,MAAM5e,GAChBkd,SAAWyH,QAAQhe,MASxC,MARKuW,UAAYyH,QAAQ9d,MAAQ0nB,YAE7B6F,uBAAuBhW,KAAMpe,EAAG2kB,QAAQ9d,MAAQ0nB,WAAY9P,aAEtB,IAArCkG,QAAQgD,WAAa4G,cAEtBvuB,GAAK2kB,QAAQE,YAEV3H,UAA8B,EAAjBA,SAASrW,OACzB7G,IAAMkd,SAASyE,UAAYzE,SAAS2H,YAEhC3H,SAAS0K,iBAAmB2G,aAC5B9P,UAAY4V,+BAA+BjW,KAAMlB,SAAUqR,WAAY9P,YAE3EvB,SAAWA,SAASvW,QAWhC,QAAS0tB,gCAA+BjW,KAAMoL,MAAO+E,WAAY9P,WAC7D,IAAK,GAAqBze,GAAIwpB,MAAM7H,UAAY,EAAG3hB,GAAKwpB,MAAM7H,UAAY6H,MAAM3E,WAAY7kB,IAAK,CAC7F,GAAqB2kB,SAAUvG,KAAKkC,IAAI1B,MAAM5e,EAC1C2kB,SAAQ9d,MAAQ0nB,YAChB6F,uBAAuBhW,KAAMpe,EAAG2kB,QAAQ9d,MAAQ0nB,WAAY9P,aAGhEze,GAAK2kB,QAAQE,WAEjB,MAAOpG,WASX,QAAS2V,wBAAuBhW,KAAM5a,MAAO+qB,WAAY9P,WACrD,GAAqBiU,cAAe5T,eAAeV,KAAM5a,MACzD,IAAKkvB,aAAL,CAGA,GAAqBxtB,UAAWwtB,aAAalE,QACxCtpB,YAGLuc,SAAS6S,eAAelW,KAAM5a,OACb,QAAb+qB,YACA7P,4BAA4BN,KAAM,IAA6CK,YAC/EvZ,SAASqvB,qBAEI,QAAbhG,YACArpB,SAASsvB,wBAEI,QAAbjG,YACA7P,4BAA4BN,KAAM,IAA0CK,YAC5EvZ,SAASuvB,kBAEI,QAAblG,YACArpB,SAASwvB,qBAEI,OAAbnG,YACArpB,SAASupB;;;;;;;AAqBjB,QAASkG,UAAS9tB,MAAO8H,GAAI6S,UACzB,GAAqBmH,eACrB,KAAK,GAAqBxlB,YAAYqe,UAAU,CAC5C,GAAqBoT,aAAcpT,SAASre,SAC5CwlB,aAAY7lB,MAAOK,SAAUA,SAAUyxB,YAAaA,cAExD,OAEIjT,WAAY,EACZhb,OAAQ,KACRkd,aAAc,KACdtD,cAAe,EACfkH,aAAc,EAGdC,YAAa,EAAG7gB,MAAOA,MACvB8gB,WAAY,EACZC,iBAAkB,EAClBC,oBAAqB,EACrB9C,gBAAiB,EACjB5B,kBACAC,gBAAiB,EACjBC,cACAwB,WAAY,EACZrD,YACA+D,aAAc,EACduC,WACA9P,QAAS,KACT9S,SAAU,KACVkD,KAAM,KACNigB,OAAS1Z,GAAIA,GAAIkmB,SAAU9R,cAAcpU,IAAK6S,SAAUmH,aACxDL,UAAW,MAMnB,QAASwM,eACL,MAAO,IAAIC,WAMf,QAAS/F,oBAAmB5Q,MAExB,IADA,GAAqB4W,UAAW5W,KAAKkC,IAAI2U,mBAClC7W,KAAKzX,QAAUmc,eAAe1E,OAAO,CACxC,GAAqB8W,QAA4B9W,KAAmB,aACpEA,MAAOA,KAAKzX,MAGZ,KAAK,GADgBwuB,KAAMD,OAAOvT,UAAYuT,OAAOrQ,WAC3B7kB,EAAI,EAAGA,GAAKm1B,IAAKn1B,IAAK,CAC5C,GAAqB2kB,SAAUvG,KAAKkC,IAAI1B,MAAM5e,EACzB,UAAhB2kB,QAAQ9d,OACQ,UAAhB8d,QAAQ9d,QACW8d,QAAc,MAAEkQ,SAAWG,YAAiCrQ,QAAc,MAAEkQ,UAChG7V,YAAYZ,KAAMpe,GAAGo1B,aAEJ,EAAhBzQ,QAAQ9d,OAA+B7G,EAAI2kB,QAAQE,WAAaqQ,OAAOvT,YACjD,SAArBgD,QAAQgD,YACa,UAArBhD,QAAQgD,aAEV3nB,GAAK2kB,QAAQE,aAKzB,GAAyB,UAArBzG,KAAKkC,IAAIkP,UACT,IAAK,GAAqBxvB,GAAI,EAAGA,EAAIoe,KAAKkC,IAAI1B,MAAM3e,OAAQD,IAAK,CAC7D,GAAqB2kB,SAAUvG,KAAKkC,IAAI1B,MAAM5e,EACzB,WAAhB2kB,QAAQ9d,OAA2D,UAAhB8d,QAAQ9d,OAC5DmY,YAAYZ,KAAMpe,GAAGo1B,WAGzBp1B,GAAK2kB,QAAQE,YASzB,QAASwQ,qBAAoBjX,KAAMuG,SAC/B,GAAqB2Q,WAAYtW,YAAYZ,KAAMuG,QAAQhD,UAC3D,IAAK2T,UAAUC,MAAf,CAGA,GAAqBC,mBACAC,cAA6B,EAClD,IAAoB,SAAhB9Q,QAAQ9d,MAAyC,CACjD,GAAqB0hB,YAAmD5D,QAAe,OAAS,MAChG8Q,WAAYC,gBAAgBtX,KAAMmK,WAAW5G,UAAW4G,WAAW5G,UAAY4G,WAAW1D,WAA+BF,QAAc,UACvI6Q,kBAAoB1W,eAAeV,KAAyBuG,QAAe,OAAEhD,WAAW6M,aAEnE,WAAhB7J,QAAQ9d,QACb4uB,UAAYC,gBAAgBtX,KAAM,EAAGA,KAAKkC,IAAI1B,MAAM3e,OAAS,EAAsB0kB,QAAc,UACjG6Q,kBAAoBpX,KAAK1N,UAE7B4kB,WAAUK,MAAMF,UAGhB,KAAK,GAFgBjU,UAA8BmD,QAAc,MAAEnD,SAC9CoU,QAAS,EACJ51B,EAAI,EAAGA,EAAIwhB,SAASvhB,OAAQD,IAAK,CACvD,GAAqBurB,SAAU/J,SAASxhB,GACnB61B,eAAa,EAClC,QAAQtK,QAAQqJ,aACZ,IAAK,GACDiB,WAAaP,UAAU/oB,KACvB,MACJ,KAAK,GACDspB,WAAaP,UACbM,QAAS,EAGjBJ,kBAAkBjK,QAAQpoB,UAAY0yB,WAEtCD,QACAN,UAAUQ,mBAWlB,QAASJ,iBAAgBtX,KAAMqG,WAAYC,SAAUiQ,SAAUzxB,QAC3D,IAAK,GAAqBlD,GAAIykB,WAAYzkB,GAAK0kB,SAAU1kB,IAAK,CAC1D,GAAqB2kB,SAAUvG,KAAKkC,IAAI1B,MAAM5e,GACzBsjB,UAAYqB,QAAQxB,eAAewR,SAAShmB,GAIjE,IAHiB,MAAb2U,WACApgB,OAAOJ,KAAKizB,cAAc3X,KAAMuG,QAASrB,YAEzB,EAAhBqB,QAAQ9d,OAAkD8d,QAAgB,QAAEsD,WACrCtD,QAAgB,QAAW,SAAEsQ,mBAAqBN,SAASE,YAC9FF,SAASE,SAAU,CACvB,GAAqBjG,aAAc/P,cAAcT,KAAMpe,EAOvD,KAJK2kB,QAAQkD,oBAAsB8M,SAASE,YAAcF,SAASE,WAC/Da,gBAAgBtX,KAAMpe,EAAI,EAAGA,EAAI2kB,QAAQE,WAAY8P,SAAUzxB,QAC/DlD,GAAK2kB,QAAQE,YAEG,SAAhBF,QAAQ9d,MAER,IAAK,GADgB2e,eAAmCoJ,YAA0B,cAAEnJ,eAC1D7Z,EAAI,EAAGA,EAAI4Z,cAAcvlB,OAAQ2L,IAAK,CAC5D,GAAqBoqB,cAAexQ,cAAc5Z,GAC7BqqB,IAAM1T,sBAAsByT,aAC7CC,MAAOA,MAAQrH,aACf8G,gBAAgBM,aAAc,EAAGA,aAAa1V,IAAI1B,MAAM3e,OAAS,EAAG00B,SAAUzxB,QAI1F,GAAqBksB,gBAAiBR,YAAY3G,SAASoH,eAC3D,IAAID,eACA,IAAK,GAAqBxjB,GAAI,EAAGA,EAAIwjB,eAAenvB,OAAQ2L,IAAK,CAC7D,GAAqBsqB,eAAgB9G,eAAexjB,EACpD8pB,iBAAgBQ,cAAe,EAAGA,cAAc5V,IAAI1B,MAAM3e,OAAS,EAAG00B,SAAUzxB,UAIvFyhB,QAAQkD,oBAAsB8M,SAASE,YAAcF,SAASE,WAE/D70B,GAAK2kB,QAAQE,YAGrB,MAAO3hB,QAQX,QAAS6yB,eAAc3X,KAAMuG,QAASwR,gBAClC,GAAsB,MAAlBA,eAEA,OAAQA,gBACJ,IAAK,GACD,MAAOtX,eAAcT,KAAMuG,QAAQhD,WAAWe,aAClD,KAAK,GACD,MAAO,IAAIiR,YAAW9U,cAAcT,KAAMuG,QAAQhD,WAAWe,cACjE,KAAK,GACD,MAAO7D,eAAcT,KAAMuG,QAAQhD,WAAWsG,QAClD,KAAK,GACD,MAAOpJ,eAAcT,KAAMuG,QAAQhD,WAAWkS,aAClD,KAAK,GACD,MAAO/U,gBAAeV,KAAMuG,QAAQhD,WAAW6M;;;;;;;AAqB/D,QAAS4H,cAAarR,eAAgBvhB,OAClC,OAEIme,WAAY,EACZhb,OAAQ,KACRkd,aAAc,KACdtD,cAAe,EACfkH,aAAc,EAEdC,YAAa,EACb7gB,MAAO,EACP8gB,WAAY,EACZC,iBAAkB,EAClBC,oBAAqB,EACrB1E,kBACAC,gBAAiB,EACjBC,cAAgB0B,eAAgBA,eAChCF,WAAY,EACZrD,YACA+D,aAAc,EACduC,WACA9P,QAAS,KACT9S,SAAU,KACVkD,KAAM,KACNigB,MAAO,KACPC,WAAa9kB,MAAOA,QAS5B,QAAS6yB,iBAAgBjY,KAAMwF,WAAYtD,KACvC,GAAqBsJ,UAAWjG,uBAAuBvF,KAAMwF,WAAYtD,IACzE,IAAKsJ,SAAL,CAKA9E,0BAA0B1G,KAD+BkC,IAAc,UAAE9c,MACzB,EAAqBomB,SAAU,SAAMpiB;;;;;;;AAmBzF,QAAS8uB,aAAY5O,WAAY6O,UAE7B,MAAOC,oBAAmB,IAAwB9O,WAAY,GAAI3mB,OAAMw1B,SAAW,IAOvF,QAASE,cAAa/O,WAAY6O,UAC9B,MAAOC,oBAAmB,GAAwB9O,WAAY,GAAI3mB,OAAMw1B,WAO5E,QAASG,eAAchP,WAAYiP,aAI/B,IAAK,GAHgB92B,MAAOT,OAAOS,KAAK82B,aACnBC,OAAS/2B,KAAKI,OACd42B,cAAgB,GAAI91B,OAAM61B,QACrB52B,EAAI,EAAGA,EAAI42B,OAAQ52B,IAAK,CAC9C,GAAqBE,KAAML,KAAKG,EAEhC62B,eAD6BF,YAAYz2B,MAClBA,IAE3B,MAAOs2B,oBAAmB,GAAyB9O,WAAYmP,eAQnE,QAASL,oBAAmB3vB,MAAO6gB,WAAYmP,eAE3C,IAAK,GADgBrV,UAAW,GAAIzgB,OAAM81B,cAAc52B,QAC9BD,EAAI,EAAGA,EAAI62B,cAAc52B,OAAQD,IAAK,CAC5D,GAAqB6xB,MAAOgF,cAAc72B,EAC1CwhB,UAASxhB,IACL6G,MAAO,EACP1F,KAAM0wB,KACN9J,GAAI,KACJqB,gBAAiByI,KACjB3I,gBAAiB,KACjBC,OAAQ,MAGhB,OAEIxH,WAAY,EACZhb,OAAQ,KACRkd,aAAc,KACdtD,cAAe,EACfkH,aAAc,EAEdC,WAAYA,WACZ7gB,MAAOA,MACP8gB,WAAY,EACZC,iBAAkB,EAClBC,oBAAqB,EACrB1E,kBACAC,gBAAiB,EACjBC,cACA0B,gBAAiB,EACjBF,WAAY,EAAGrD,SAAUA,SACzB+D,aAAcO,iBAAiBtE,UAC/BsG,WACA9P,QAAS,KACT9S,SAAU,KACVkD,KAAM,KACNigB,MAAO,KACPC,UAAW,MAQnB,QAASwO,sBAAqB1Y,KAAMkC,KAChC,OAASzd,UAAO2E,IAiBpB,QAASuvB,oCAAmC3Y,KAAMkC,IAAKmK,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,IACvF,GAAqB1J,UAAWlB,IAAIkB,SACf4J,SAAU,EACVD,QAAU3J,SAASvhB,MAqBxC,IApBIkrB,QAAU,GAAK9J,sBAAsBjD,KAAMkC,IAAK,EAAGmK,MACnDW,SAAU,GACVD,QAAU,GAAK9J,sBAAsBjD,KAAMkC,IAAK,EAAGoK,MACnDU,SAAU,GACVD,QAAU,GAAK9J,sBAAsBjD,KAAMkC,IAAK,EAAGqK,MACnDS,SAAU,GACVD,QAAU,GAAK9J,sBAAsBjD,KAAMkC,IAAK,EAAGsK,MACnDQ,SAAU,GACVD,QAAU,GAAK9J,sBAAsBjD,KAAMkC,IAAK,EAAGuK,MACnDO,SAAU,GACVD,QAAU,GAAK9J,sBAAsBjD,KAAMkC,IAAK,EAAGwK,MACnDM,SAAU,GACVD,QAAU,GAAK9J,sBAAsBjD,KAAMkC,IAAK,EAAGyK,MACnDK,SAAU,GACVD,QAAU,GAAK9J,sBAAsBjD,KAAMkC,IAAK,EAAG0K,MACnDI,SAAU,GACVD,QAAU,GAAK9J,sBAAsBjD,KAAMkC,IAAK,EAAG2K,MACnDG,SAAU,GACVD,QAAU,GAAK9J,sBAAsBjD,KAAMkC,IAAK,EAAG4K,MACnDE,SAAU,GACVA,QAAS,CACT,GAAqBvK,MAAO9B,qBAAqBX,KAAMkC,IAAIqB,WACtC9e,UAAQ,EAC7B,QAAoB,UAAZyd,IAAIzZ,OACR,IAAK,IACDhE,MAAQ,GAAI9B,OAAMygB,SAASvhB,QACvBkrB,QAAU,IACVtoB,MAAM,GAAK4nB,IACXU,QAAU,IACVtoB,MAAM,GAAK6nB,IACXS,QAAU,IACVtoB,MAAM,GAAK8nB,IACXQ,QAAU,IACVtoB,MAAM,GAAK+nB,IACXO,QAAU,IACVtoB,MAAM,GAAKgoB,IACXM,QAAU,IACVtoB,MAAM,GAAKioB,IACXK,QAAU,IACVtoB,MAAM,GAAKkoB,IACXI,QAAU,IACVtoB,MAAM,GAAKmoB,IACXG,QAAU,IACVtoB,MAAM,GAAKooB,IACXE,QAAU,IACVtoB,MAAM,GAAKqoB,GACf,MACJ,KAAK,IACDroB,SACIsoB,QAAU,IACVtoB,MAAyB2e,SAAS,GAAQ,MAAKiJ,IAC/CU,QAAU,IACVtoB,MAAyB2e,SAAS,GAAQ,MAAKkJ,IAC/CS,QAAU,IACVtoB,MAAyB2e,SAAS,GAAQ,MAAKmJ,IAC/CQ,QAAU,IACVtoB,MAAyB2e,SAAS,GAAQ,MAAKoJ,IAC/CO,QAAU,IACVtoB,MAAyB2e,SAAS,GAAQ,MAAKqJ,IAC/CM,QAAU,IACVtoB,MAAyB2e,SAAS,GAAQ,MAAKsJ,IAC/CK,QAAU,IACVtoB,MAAyB2e,SAAS,GAAQ,MAAKuJ,IAC/CI,QAAU,IACVtoB,MAAyB2e,SAAS,GAAQ,MAAKwJ,IAC/CG,QAAU,IACVtoB,MAAyB2e,SAAS,GAAQ,MAAKyJ,IAC/CE,QAAU,IACVtoB,MAAyB2e,SAAS,GAAQ,MAAK0J,GACnD,MACJ,KAAK,KACD,GAAqB8L,MAAOvM,EAC5B,QAAQU,SACJ,IAAK,GACDtoB,MAAQm0B,KAAKC,UAAUxM,GACvB,MACJ,KAAK,GACD5nB,MAAQm0B,KAAKC,UAAUvM,GACvB,MACJ,KAAK,GACD7nB,MAAQm0B,KAAKC,UAAUvM,GAAIC,GAC3B,MACJ,KAAK,GACD9nB,MAAQm0B,KAAKC,UAAUvM,GAAIC,GAAIC,GAC/B,MACJ,KAAK,GACD/nB,MAAQm0B,KAAKC,UAAUvM,GAAIC,GAAIC,GAAIC,GACnC,MACJ,KAAK,GACDhoB,MAAQm0B,KAAKC,UAAUvM,GAAIC,GAAIC,GAAIC,GAAIC,GACvC,MACJ,KAAK,GACDjoB,MAAQm0B,KAAKC,UAAUvM,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAC3C,MACJ,KAAK,GACDloB,MAAQm0B,KAAKC,UAAUvM,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAC/C,MACJ,KAAK,GACDnoB,MAAQm0B,KAAKC,UAAUvM,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GACnD,MACJ,KAAK,IACDpoB,MAAQm0B,KAAKC,UAAUvM,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,KAKvErK,KAAKhe,MAAQA,MAEjB,MAAOuoB,SAQX,QAAS8L,qCAAoC9Y,KAAMkC,IAAKpd,QAGpD,IAAK,GAFgBse,UAAWlB,IAAIkB,SACf4J,SAAU,EACLprB,EAAI,EAAGA,EAAIkD,OAAOjD,OAAQD,IAG5CqhB,sBAAsBjD,KAAMkC,IAAKtgB,EAAGkD,OAAOlD,MAC3CorB,SAAU,EAGlB,IAAIA,QAAS,CACT,GAAqBvK,MAAO9B,qBAAqBX,KAAMkC,IAAIqB,WACtC9e,UAAQ,EAC7B,QAAoB,UAAZyd,IAAIzZ,OACR,IAAK,IACDhE,MAAQK,MACR,MACJ,KAAK,IACDL,QACA,KAAK,GAAqB7C,GAAI,EAAGA,EAAIkD,OAAOjD,OAAQD,IAChD6C,MAAyB2e,SAASxhB,GAAQ,MAAKkD,OAAOlD,EAE1D,MACJ,KAAK,KACD,GAAqBg3B,MAAO9zB,OAAO,GACdyJ,OAASzJ,OAAOwI,MAAM,EAC3C7I,OAAQm0B,KAAKC,UAAUz2B,MAAMw2B,KAAMrqB,QAG3CkU,KAAKhe,MAAQA,MAEjB,MAAOuoB;;;;;;;AAoBX,QAAS+L,SAAQzP,WAAY3C,eAAgBqS,YAEzC,IAAK,GADgB5V,UAAW,GAAIzgB,OAAMq2B,WAAWn3B,OAAS,GACpCD,EAAI,EAAGA,EAAIo3B,WAAWn3B,OAAQD,IACpDwhB,SAASxhB,EAAI,IACT6G,MAAO,EACP1F,KAAM,KACN4mB,GAAI,KACJqB,gBAAiB,KACjBF,gBAAiB,KACjBC,OAAQiO,WAAWp3B,GAG3B,QAEI2hB,WAAY,EACZhb,OAAQ,KACRkd,aAAc,KACdtD,cAAe,EACfkH,aAAc,EAEdC,WAAYA,WACZ7gB,MAAO,EACP8gB,WAAY,EACZC,iBAAkB,EAClBC,oBAAqB,EACrB1E,kBACAC,gBAAiB,EACjBC,cAAgB0B,eAAgBA,eAChCF,WAAY,EAAGrD,SAAUA,SACzB+D,aAAc,EACduC,WACA9P,QAAS,KACT9S,SAAU,KACVkD,MAAQivB,OAAQD,WAAW,IAC3B/O,MAAO,KACPC,UAAW,MASnB,QAASgP,YAAWlZ,KAAMwF,WAAYtD,KAClC,GAAqBmL,eACAlH,SAAWnG,KAAKmG,QACrCkH,eAAgBlH,SAAS+S,WAA8BhX,IAAS,KAAE+W,OAClE,IAAqBzN,UAAWjG,uBAAuBvF,KAAMwF,WAAYtD,IAIzE,OAHIsJ,WACArF,SAASmB,YAAYkE,SAAU6B,gBAE1B9I,WAAY8I,eAiBzB,QAAS8L,0BAAyBnZ,KAAMkC,IAAKmK,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,IAC7E,GAAqBE,UAAU,EACV5J,SAAWlB,IAAIkB,SACf2J,QAAU3J,SAASvhB,MAqBxC,IApBIkrB,QAAU,GAAK9J,sBAAsBjD,KAAMkC,IAAK,EAAGmK,MACnDW,SAAU,GACVD,QAAU,GAAK9J,sBAAsBjD,KAAMkC,IAAK,EAAGoK,MACnDU,SAAU,GACVD,QAAU,GAAK9J,sBAAsBjD,KAAMkC,IAAK,EAAGqK,MACnDS,SAAU,GACVD,QAAU,GAAK9J,sBAAsBjD,KAAMkC,IAAK,EAAGsK,MACnDQ,SAAU,GACVD,QAAU,GAAK9J,sBAAsBjD,KAAMkC,IAAK,EAAGuK,MACnDO,SAAU,GACVD,QAAU,GAAK9J,sBAAsBjD,KAAMkC,IAAK,EAAGwK,MACnDM,SAAU,GACVD,QAAU,GAAK9J,sBAAsBjD,KAAMkC,IAAK,EAAGyK,MACnDK,SAAU,GACVD,QAAU,GAAK9J,sBAAsBjD,KAAMkC,IAAK,EAAG0K,MACnDI,SAAU,GACVD,QAAU,GAAK9J,sBAAsBjD,KAAMkC,IAAK,EAAG2K,MACnDG,SAAU,GACVD,QAAU,GAAK9J,sBAAsBjD,KAAMkC,IAAK,EAAG4K,MACnDE,SAAU,GACVA,QAAS,CACT,GAAqBvoB,OAA2Byd,IAAS,KAAE+W,MACvDlM,SAAU,IACVtoB,OAAS20B,sBAAsB/M,GAAIjJ,SAAS,KAC5C2J,QAAU,IACVtoB,OAAS20B,sBAAsB9M,GAAIlJ,SAAS,KAC5C2J,QAAU,IACVtoB,OAAS20B,sBAAsB7M,GAAInJ,SAAS,KAC5C2J,QAAU,IACVtoB,OAAS20B,sBAAsB5M,GAAIpJ,SAAS,KAC5C2J,QAAU,IACVtoB,OAAS20B,sBAAsB3M,GAAIrJ,SAAS,KAC5C2J,QAAU,IACVtoB,OAAS20B,sBAAsB1M,GAAItJ,SAAS,KAC5C2J,QAAU,IACVtoB,OAAS20B,sBAAsBzM,GAAIvJ,SAAS,KAC5C2J,QAAU,IACVtoB,OAAS20B,sBAAsBxM,GAAIxJ,SAAS,KAC5C2J,QAAU,IACVtoB,OAAS20B,sBAAsBvM,GAAIzJ,SAAS,KAC5C2J,QAAU,IACVtoB,OAAS20B,sBAAsBtM,GAAI1J,SAAS,IAChD,IAAqBiK,eAAgB9M,WAAWP,KAAMkC,IAAIqB,WAAWgB,UACrEvE,MAAKmG,SAASkT,SAAShM,cAAe5oB,OAE1C,MAAOuoB,SAQX,QAASsM,2BAA0BtZ,KAAMkC,IAAKpd,QAG1C,IAAK,GAFgBse,UAAWlB,IAAIkB,SACf4J,SAAU,EACLprB,EAAI,EAAGA,EAAIkD,OAAOjD,OAAQD,IAG5CqhB,sBAAsBjD,KAAMkC,IAAKtgB,EAAGkD,OAAOlD,MAC3CorB,SAAU,EAGlB,IAAIA,QAAS,CAET,IAAK,GADgBvoB,OAAQ,GACH7C,EAAI,EAAGA,EAAIkD,OAAOjD,OAAQD,IAChD6C,OAAgB20B,sBAAsBt0B,OAAOlD,GAAIwhB,SAASxhB,GAE9D6C,OAA2Byd,IAAS,KAAE+W,OAASx0B,KAC/C,IAAqB4oB,eAAgB9M,WAAWP,KAAMkC,IAAIqB,WAAWgB,UACrEvE,MAAKmG,SAASkT,SAAShM,cAAe5oB,OAE1C,MAAOuoB,SAOX,QAASoM,uBAAsB30B,MAAO0oB,SAElC,OADyC,MAAT1oB,MAAgBA,MAAMxB,WAAa,IACjDkqB,QAAQpC;;;;;;;AAqB9B,QAASoG,SAAQ1oB,MAAO+X,MAAO+Y,iBAAkBC,gBAY7C,IAAK,GAVgBC,kBAAmB,EACnBC,oBAAsB,EACtBC,cAAgB,EAChBC,kBAAoB,EACpBC,mBAAqB,EACrBC,cAAgB,KAChBC,oBAAsB,KACtBC,kCAAmC,EACnCC,mCAAoC,EACpCC,mBAAqB,KAChBt4B,EAAI,EAAGA,EAAI4e,MAAM3e,OAAQD,IAAK,CACpD,GAAqBoY,MAAOwG,MAAM5e,EAQlC,IAPAoY,KAAKuJ,UAAY3hB,EACjBoY,KAAKzR,OAASuxB,cACd9f,KAAKmI,aAAesX,iBACpBzf,KAAKqP,YAAcqQ,oBACnB1f,KAAKyL,aAAesU,oBACpBJ,eAAiB3f,KAAKvR,MACtBoxB,oBAAsB7f,KAAKgL,gBACvBhL,KAAKJ,QAAS,CACd,GAAqBwR,OAAQpR,KAAKJ,OAClCwR,OAAMrB,gBACF+P,cAAmCA,cAAsB,QAAE/P,gBAAkB/oB,OAAOC,OAAO,MAC/FmqB,MAAMpB,aAAeoB,MAAMrB,gBAE3BiQ,kCAAmC,EACnCC,mCAAoC,EAChCjgB,KAAKJ,QAAQiQ,WACbgQ,oBAAsB7f,KAAKJ,QAAQiQ,SAASgN,oBASpD,GANAsD,aAAaL,cAAe9f,KAAMwG,MAAM3e,QACxC43B,kBAAoBzf,KAAKoJ,SAASvhB,OAClC63B,qBAAuB1f,KAAK0P,QAAQ7nB,QAC/Bk4B,qBAAqC,EAAb/f,KAAKvR,QAC9ByxB,mBAAqBlgB,MAER,MAAbA,KAAKvR,MAAiC,CACjCuxB,mCACDA,kCAAmC,EAChB,cAA0B,QAAEjQ,gBAAkB/oB,OAAOC,OAA2C,cAA0B,QAAE8oB,iBAC5H,cAA0B,QAAEC,aAAmD,cAA0B,QAAED,gBAElI,IAAqBqQ,kBAAiE,IAAhC,KAAbpgB,KAAKvR,OACzB4xB,YAAuD,IAA3B,MAAbrgB,KAAKvR,QACpC2xB,kBAAoBC,YACkC,cAA0B,QAAkB,gBAAE7Y,SAA4BxH,KAAc,SAAEtX,QAAUsX,MAGtJigB,oCACDA,mCAAoC,EACjB,cAA0B,QAAEjQ,aAAehpB,OAAOC,OAA2C,cAA0B,QAAE8oB,kBAE1G,cAA0B,QAAe,aAAEvI,SAA4BxH,KAAc,SAAEtX,QAAUsX,MAEvIqgB,cACoC,cAA0B,QAAEvQ,kBAAoB9P,MAc5F,GAXI8f,eACAA,cAAcvQ,YAAcvP,KAAKvR,MACjCqxB,cAActQ,kBAAoBxP,KAAKvR,MACvCqxB,cAAcrQ,qBAAuBzP,KAAKgL,gBACtChL,KAAKJ,SAAWI,KAAKJ,QAAQiQ,WAC7BiQ,cAAcrQ,qBAAuBzP,KAAKJ,QAAQiQ,SAASgN,qBAI/D+C,mBAAqB5f,KAAKvR,MAE1BuR,KAAKyM,WAAa,EAClBqT,cAAgB9f,KACXsgB,cAActgB,QACf+f,oBAAsB/f,UAS1B,MAAO8f,eAAiBl4B,IAAMk4B,cAAcvW,UAAYuW,cAAcrT,YAAY,CAC9E,GAAqB8T,WAAYT,cAAcvxB,MAC3CgyB,aACAA,UAAUhR,YAAcuQ,cAAcvQ,WACtCgR,UAAU9Q,qBAAuBqQ,cAAcrQ,qBAEnDqQ,cAAgBS,UAGZR,oBADAD,eAAiBQ,cAAcR,eACTA,cAAcrU,aAGdqU,eAKtC,GAAqB7V,aAAc,SAAUjE,KAAMuD,UAAWO,UAAWC,OAAS,MAA4BvD,OAAM+C,WAAmB,QAAc,YAAEvD,KAAM8D,UAAWC,OACxK,QAEItkB,QAAS,KACT2xB,UAAWuI,cACXa,cAAeZ,kBACf/C,mBAAoBgD,mBAAoBpxB,MAAOA,MAC/C+X,MAAOA,MACP+Y,iBAAkBA,kBAAoBzT,KACtC0T,eAAgBA,gBAAkB1T,KAAM7B,YAAaA,YACrDwW,aAAchB,iBACdiB,YAAahB,oBAAqBQ,mBAAoBA,oBAO9D,QAASI,eAActgB,MACnB,MAA8C,KAAzB,EAAbA,KAAKvR,QAAiF,OAAxBuR,KAAa,QAAEjX,KAQzF,QAASo3B,cAAa5xB,OAAQyR,KAAM2gB,WAChC,GAAqB9Q,UAAW7P,KAAKJ,SAAWI,KAAKJ,QAAQiQ,QAC7D,IAAIA,SAAU,CACV,IAAKA,SAASqQ,mBACV,KAAM,IAAItxB,OAAM,mEAEpB,IAAIihB,SAASqQ,oBAC2B,SAApCrQ,SAASqQ,mBAAmBzxB,MAC5B,KAAM,IAAIG,OAAM,mFAAqFoR,KAAKuJ,UAAY,KAG9H,GAAiB,MAAbvJ,KAAKvR,MAAiC,CAEtC,GAA4C,IAAzB,GADgBF,OAASA,OAAOE,MAAQ,IAEvD,KAAM,IAAIG,OAAM,sGAAwGoR,KAAKuJ,UAAY,KAGjJ,GAAIvJ,KAAKiQ,MAAO,CACZ,GAAiB,SAAbjQ,KAAKvR,SACHF,QAAyD,IAA/B,MAAfA,OAAOE,QACpB,KAAM,IAAIG,OAAM,kFAAoFoR,KAAKuJ,UAAY,IAEzH,IAAiB,UAAbvJ,KAAKvR,OAAyCF,OAC9C,KAAM,IAAIK,OAAM,wEAA0EoR,KAAKuJ,UAAY,KAGnH,GAAIvJ,KAAKyM,WAAY,CACjB,GAAqBmU,WAAYryB,OAASA,OAAOgb,UAAYhb,OAAOke,WAAakU,UAAY,CAC7F,IAAI3gB,KAAKuJ,WAAaqX,WAAa5gB,KAAKuJ,UAAYvJ,KAAKyM,WAAamU,UAClE,KAAM,IAAIhyB,OAAM,uEAAyEoR,KAAKuJ,UAAY,MAWtH,QAASsX,oBAAmBtyB,OAAQuyB,aAAc3J,QAAS9mB,SAGvD,GAAqB2V,MAAO+a,WAAWxyB,OAAO2b,KAAM3b,OAAO4d,SAAU5d,OAAQuyB,aAAc3J,QAG3F,OAFA6J,UAAShb,KAAMzX,OAAO+J,UAAWjI,SACjC4wB,gBAAgBjb,MACTA,KAQX,QAASkb,gBAAehX,KAAMhC,IAAK7X,SAC/B,GAAqB2V,MAAO+a,WAAW7W,KAAMA,KAAKiC,SAAU,KAAM,KAAMjE,IAGxE,OAFA8Y,UAAShb,KAAM3V,QAASA,SACxB4wB,gBAAgBjb,MACTA,KASX,QAASmb,qBAAoB5K,WAAYhK,QAAS4K,QAASiK,aACvD,GACqBC,cADAC,aAAkC/U,QAAgB,QAAEb,qBAQzE,OAFI2V,cAJCC,aAIc/K,WAAWrM,KAAKqX,gBAAgBC,eAAeJ,YAAaE,cAH5D/K,WAAWrM,KAAKiC,SAK5B4U,WAAWxK,WAAWrM,KAAMmX,aAAc9K,WAA+BhK,QAAgB,QAAEuD,kBAAmBqH,SAUzH,QAAS4J,YAAW7W,KAAMiC,SAAU5d,OAAQ8oB,cAAenP,KACvD,GAAqB1B,OAAQ,GAAI7d,OAAMuf,IAAI1B,MAAM3e,QAC5B45B,YAAcvZ,IAAIwY,YAAc,GAAI/3B,OAAMuf,IAAIwY,aAAe,IAWlF,QATIxY,IAAKA,IACL3Z,OAAQA,OACRmb,oBAAqB,KAAM2N,cAAeA,cAC1ChnB,QAAS,KACTiI,UAAW,KAAMkO,MAAOA,MACxBL,MAAO,GAAkB+D,KAAMA,KAAMiC,SAAUA,SAC/C/D,UAAW,GAAIzf,OAAMuf,IAAIuY,cAAegB,YAAaA,YACrDpb,WAAY,GAUpB,QAAS2a,UAAShb,KAAM1N,UAAWjI,SAC/B2V,KAAK1N,UAAYA,UACjB0N,KAAK3V,QAAUA,QAMnB,QAAS4wB,iBAAgBjb,MACrB,GAAqBwF,WACrB,IAAIf,gBAAgBzE,MAAO,CACvB,GAAqB0b,SAAU1b,KAAKqR,aACpC7L,YAAa/E,cAAiCT,KAAY,OAAuC,QAAmB,OAAEuD,WAAWe,cAIrI,IAAK,GAFgBpC,KAAMlC,KAAKkC,IACX1B,MAAQR,KAAKQ,MACR5e,EAAI,EAAGA,EAAIsgB,IAAI1B,MAAM3e,OAAQD,IAAK,CACxD,GAAqB2kB,SAAUrE,IAAI1B,MAAM5e,EACzCyhB,UAAS6S,eAAelW,KAAMpe,EAC9B,IAAqB+5B,cAAW,EAChC,QAAwB,UAAhBpV,QAAQ9d,OACZ,IAAK,GACD,GAAqBkQ,IAAuBwS,cAAcnL,KAAMwF,WAAYe,SACvDvC,kBAAiC,EACtD,IAAoB,SAAhBuC,QAAQ9d,MAAsC,CAC9C,GAAqBmzB,aAAchW,kBAAwDW,QAAgB,QAAgB,cAC3HvC,eAAgBX,SAAS8X,oBAAoBnb,KAAMuG,QAASqV,YAAajjB,IAE7EiT,uBAAuB5L,KAAMgE,cAAeuC,QAAS5N,IACrDgjB,UACIrX,cAAe3L,GACfqL,cAAeA,cACfyR,cAAe,KACf5L,SAA6BtD,QAAgB,QAAEsD,SAAWiJ,mBAAmB9S,KAAMuG,aAAWnd,IAE9E,SAAhBmd,QAAQ9d,QACRkzB,SAASlG,cAAgB/C,wBAAwB1S,KAAMuG,QAASoV,UAEpE,MACJ,KAAK,GACDA,SAA6BzC,WAAWlZ,KAAMwF,WAAYe,QAC1D,MACJ,KAAK,KACL,IAAK,MACL,IAAK,MACL,IAAK,KAED,MADAoV,SAAWnb,MAAM5e,KACkB,KAAhB2kB,QAAQ9d,OAAkC,CACzD,GAAqB2nB,UAAWwD,uBAAuB5T,KAAMuG,QAC7DoV,WAA+BvL,SAAUA,UAE7C,KAEJ,KAAK,IACD,GAAqBA,UAAW0D,mBAAmB9T,KAAMuG,QACzDoV,WAA+BvL,SAAUA,SACzC,MAEJ,KAAK,OAED,KADAuL,SAAWnb,MAAM5e,IACF,CACX,GAAqBwuB,UAAW4D,wBAAwBhU,KAAMuG,QAC9DoV,WAA+BvL,SAAUA,UAE7C,GAAoB,MAAhB7J,QAAQ9d,MAA+B,CAEvCuyB,SADgCva,cAAcT,KAAyBuG,QAAe,OAAEhD,WAAWS,cAChF2X,SAASvL,SAAUuL,SAASvL,UAEnD,KAEJ,KAAK,IACL,IAAK,IACL,IAAK,KACDuL,SAA6BjD,qBAAqB1Y,KAAMuG,QACxD,MACJ,KAAK,UACL,IAAK,WACDoV,SAA6BjF,aAC7B,MACJ,KAAK,GACDuB,gBAAgBjY,KAAMwF,WAAYe,SAElCoV,aAAWvyB,GAGnBoX,MAAM5e,GAAK+5B,SAIfE,yBAAyB7b,KAAM8b,WAAWC,iBAE1CC,kBAAkBhc,KAAM,UAAiE,UAA6B,GAM1H,QAASic,oBAAmBjc,MACxBkc,2BAA2Blc,MAC3BqD,SAASkW,iBAAiBvZ,KAAM,GAChCmc,wBAAwBnc,KAAM8b,WAAWM,gBACzC/Y,SAASmW,eAAexZ,KAAM,GAC9B6b,yBAAyB7b,KAAM8b,WAAWM,gBAG1Cpc,KAAKG,QAAS,GAMlB,QAASkc,oBAAmBrc,MACP,EAAbA,KAAKG,OACLH,KAAKG,QAAS,EACdH,KAAKG,OAAS,GAGdH,KAAKG,QAAS,EAElBJ,eAAeC,KAAM,EAA8B,KACnDkc,2BAA2Blc,MAC3BqD,SAASkW,iBAAiBvZ,KAAM,GAChCmc,wBAAwBnc,KAAM8b,WAAWQ,gBACzCN,kBAAkBhc,KAAM,SAAiC,UAA8B,EACvF,IAAqBuc,UAAWxc,eAAeC,KAAM,IAAmC,IACxF+V,iCAAgC/V,KAAM,SAAqCuc,SAAW,QAAiC,IACvHlZ,SAASmW,eAAexZ,KAAM,GAC9B6b,yBAAyB7b,KAAM8b,WAAWQ,gBAC1CN,kBAAkBhc,KAAM,UAA+B,UAA8B,GACrFuc,SAAWxc,eAAeC,KAAM,IAA6C,KAC7E+V,gCAAgC/V,KAAM,SAAkCuc,SAAW,QAA8B,IAC5F,EAAjBvc,KAAKkC,IAAIzZ,QACTuX,KAAKG,QAAS,GAElBH,KAAKG,QAAS,GACdJ,eAAeC,KAAM,IAA0C,MAkBnE,QAASwc,oBAAmBxc,KAAMuG,QAASkW,SAAUpQ,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,IACrF,MAAiB,KAAb2P,SACOC,yBAAyB1c,KAAMuG,QAAS8F,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,IAG5E6P,0BAA0B3c,KAAMuG,QAAS8F,IAOxD,QAAS6P,4BAA2Blc,MAChC,GAAqBkC,KAAMlC,KAAKkC,GAChC,IAAsB,EAAhBA,IAAIkP,UAGV,IAAK,GAAqBxvB,GAAI,EAAGA,EAAIsgB,IAAI1B,MAAM3e,OAAQD,IAAK,CACxD,GAAqB2kB,SAAUrE,IAAI1B,MAAM5e,EACzC,IAAoB,EAAhB2kB,QAAQ9d,MAAmC,CAC3C,GAAqBuoB,gBAAiBvQ,cAAcT,KAAMpe,GAAGioB,SAASoH,eACtE,IAAID,eACA,IAAK,GAAqB4L,KAAM,EAAGA,IAAM5L,eAAenvB,OAAQ+6B,MAAO,CACnE,GAAqB9E,eAAgB9G,eAAe4L,IACpD9E,eAAc3X,OAAS,GACvBwD,sCAAsCmU,cAAe9X,WAIH,KAA/B,EAArBuG,QAAQgD,cAId3nB,GAAK2kB,QAAQE,aAmBzB,QAASiW,0BAAyB1c,KAAMuG,QAAS8F,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,IACjF,OAAwB,UAAhBvG,QAAQ9d,OACZ,IAAK,GACD,MAAO2jB,6BAA4BpM,KAAMuG,QAAS8F,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAC1F,KAAK,GACD,MAAOqM,0BAAyBnZ,KAAMuG,QAAS8F,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GACvF,KAAK,OACD,MAAOuH,+BAA8BrU,KAAMuG,QAAS8F,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAC5F,KAAK,IACL,IAAK,IACL,IAAK,KACD,MAAO6L,oCAAmC3Y,KAAMuG,QAAS8F,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GACjG,SACI,KAAM,eASlB,QAAS6P,2BAA0B3c,KAAMuG,QAASzhB,QAC9C,OAAwB,UAAhByhB,QAAQ9d,OACZ,IAAK,GACD,MAAOykB,8BAA6BlN,KAAMuG,QAASzhB,OACvD,KAAK,GACD,MAAOw0B,2BAA0BtZ,KAAMuG,QAASzhB,OACpD,KAAK,OACD,MAAO+vB,gCAA+B7U,KAAMuG,QAASzhB,OACzD,KAAK,IACL,IAAK,IACL,IAAK,KACD,MAAOg0B,qCAAoC9Y,KAAMuG,QAASzhB,OAC9D,SACI,KAAM,eAmBlB,QAAS+3B,oBAAmB7c,KAAMuG,QAASkW,SAAUpQ,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,IAQrF,MAPiB,KAAb2P,SACAK,yBAAyB9c,KAAMuG,QAAS8F,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,IAG5EiQ,0BAA0B/c,KAAMuG,QAAS8F,KAGtC,EAiBX,QAASyQ,0BAAyB9c,KAAMuG,QAAS8F,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,IACjF,GAAqBC,SAAUxG,QAAQnD,SAASvhB,MAC5CkrB,SAAU,GACV7J,sBAAsBlD,KAAMuG,QAAS,EAAG8F,IACxCU,QAAU,GACV7J,sBAAsBlD,KAAMuG,QAAS,EAAG+F,IACxCS,QAAU,GACV7J,sBAAsBlD,KAAMuG,QAAS,EAAGgG,IACxCQ,QAAU,GACV7J,sBAAsBlD,KAAMuG,QAAS,EAAGiG,IACxCO,QAAU,GACV7J,sBAAsBlD,KAAMuG,QAAS,EAAGkG,IACxCM,QAAU,GACV7J,sBAAsBlD,KAAMuG,QAAS,EAAGmG,IACxCK,QAAU,GACV7J,sBAAsBlD,KAAMuG,QAAS,EAAGoG,IACxCI,QAAU,GACV7J,sBAAsBlD,KAAMuG,QAAS,EAAGqG,IACxCG,QAAU,GACV7J,sBAAsBlD,KAAMuG,QAAS,EAAGsG,IACxCE,QAAU,GACV7J,sBAAsBlD,KAAMuG,QAAS,EAAGuG,IAQhD,QAASiQ,2BAA0B/c,KAAMuG,QAASzhB,QAC9C,IAAK,GAAqBlD,GAAI,EAAGA,EAAIkD,OAAOjD,OAAQD,IAChDshB,sBAAsBlD,KAAMuG,QAAS3kB,EAAGkD,OAAOlD,IAUvD,QAASo7B,qBAAoBhd,KAAMuG,SAE/B,GADiC3F,YAAYZ,KAAMuG,QAAQhD,WAC7C4T,MACV,KAAMtW,6CAA4CwC,SAASC,mBAAmBtD,KAAMuG,QAAQhD,WAAY,SAA+BgD,QAAe,MAAEhW,GAAK,aAAc,SAA+BgW,QAAe,MAAEhW,GAAK,SAAsD,IAA9B,EAAbyP,KAAKG,QAOxP,QAAS8c,aAAYjd,MACjB,KAAiB,IAAbA,KAAKG,OAAT,CAMA,GAHAgc,wBAAwBnc,KAAM8b,WAAWoB,SACzCrB,yBAAyB7b,KAAM8b,WAAWoB,SAC1CnH,gCAAgC/V,KAAM,QAClCA,KAAKyb,YACL,IAAK,GAAqB75B,GAAI,EAAGA,EAAIoe,KAAKyb,YAAY55B,OAAQD,IAC1Doe,KAAKyb,YAAY75B,IAGzB6vB,qBAAoBzR,MAChBA,KAAKmG,SAASgX,aACdC,iBAAiBpd,MAEjByE,gBAAgBzE,OAChBA,KAAKmG,SAAS1O,UAElBuI,KAAKG,OAAS,KAMlB,QAASid,kBAAiBpd,MAEtB,IAAK,GADgBgQ,KAAMhQ,KAAKkC,IAAI1B,MAAM3e,OAChBD,EAAI,EAAGA,EAAIouB,IAAKpuB,IAAK,CAC3C,GAAqBsgB,KAAMlC,KAAKkC,IAAI1B,MAAM5e,EAC1B,GAAZsgB,IAAIzZ,MACeuX,KAAKmG,SAAqB,YAAE1F,cAAcT,KAAMpe,GAAG0iB,eAErD,EAAZpC,IAAIzZ,MACUuX,KAAKmG,SAAqB,YAAE5F,WAAWP,KAAMpe,GAAG2iB,aAElD,SAAZrC,IAAIzZ,OAAuD,UAAZyZ,IAAIzZ,QACxDmY,YAAYZ,KAAMpe,GAAG6V,WAwBjC,QAASokB,0BAAyB7b,KAAM7M,QACpC,GAAqB+O,KAAMlC,KAAKkC,GAChC,IAAsB,SAAhBA,IAAIkP,UAGV,IAAK,GAAqBxvB,GAAI,EAAGA,EAAIsgB,IAAI1B,MAAM3e,OAAQD,IAAK,CACxD,GAAqB2kB,SAAUrE,IAAI1B,MAAM5e,EACrB,UAAhB2kB,QAAQ9d,MAER40B,eAAe5c,cAAcT,KAAMpe,GAAGoiB,cAAe7Q,QAEQ,IAAlC,SAArBoT,QAAQgD,cAId3nB,GAAK2kB,QAAQE,aASzB,QAAS0V,yBAAwBnc,KAAM7M,QACnC,GAAqB+O,KAAMlC,KAAKkC,GAChC,IAAsB,SAAhBA,IAAIkP,UAGV,IAAK,GAAqBxvB,GAAI,EAAGA,EAAIsgB,IAAI1B,MAAM3e,OAAQD,IAAK,CACxD,GAAqB2kB,SAAUrE,IAAI1B,MAAM5e,EACzC,IAAoB,SAAhB2kB,QAAQ9d,MAGR,IAAK,GADgB2e,eAAmC3G,cAAcT,KAAMpe,GAAiB,cAAEylB,eACrE7Z,EAAI,EAAGA,EAAI4Z,cAAcvlB,OAAQ2L,IACvD6vB,eAAejW,cAAc5Z,GAAI2F,YAGwB,KAAlC,SAArBoT,QAAQgD,cAId3nB,GAAK2kB,QAAQE,aASzB,QAAS4W,gBAAerd,KAAM7M,QAC1B,GAAqBmqB,WAAYtd,KAAKG,KACtC,QAAQhN,QACJ,IAAK2oB,YAAWM,eAC8B,IAAzB,IAAZkB,aAC+C,KAA/B,GAAZA,WACDrB,mBAAmBjc,MAEF,GAAZsd,WACLC,yBAAyBvd,KAAM8b,WAAW0B,8BAGlD,MACJ,KAAK1B,YAAW0B,6BAC8B,IAAzB,IAAZF,aACe,GAAZA,UACArB,mBAAmBjc,MAEF,GAAZsd,WACLC,yBAAyBvd,KAAM7M,QAGvC,MACJ,KAAK2oB,YAAWQ,eAC8B,IAAzB,IAAZgB,aAC+C,KAA/B,GAAZA,WACDjB,mBAAmBrc,MAEF,GAAZsd,WACLC,yBAAyBvd,KAAM8b,WAAW2B,8BAGlD,MACJ,KAAK3B,YAAW2B,6BAC8B,IAAzB,IAAZH,aACe,GAAZA,UACAjB,mBAAmBrc,MAEF,GAAZsd,WACLC,yBAAyBvd,KAAM7M,QAGvC,MACJ,KAAK2oB,YAAWoB,QAGZD,YAAYjd,KACZ,MACJ,KAAK8b,YAAWC,gBACZd,gBAAgBjb,OAS5B,QAASud,0BAAyBvd,KAAM7M,QACpCgpB,wBAAwBnc,KAAM7M,QAC9B0oB,yBAAyB7b,KAAM7M,QASnC,QAAS6oB,mBAAkBhc,KAAM0d,WAAYC,uBAAwBC,WACjE,GAAM5d,KAAKkC,IAAIkP,UAAYsM,YAAiB1d,KAAKkC,IAAIkP,UAAYuM,uBAIjE,IAAK,GADgBhD,WAAY3a,KAAKkC,IAAI1B,MAAM3e,OACtBD,EAAI,EAAGA,EAAI+4B,UAAW/4B,IAAK,CACjD,GAAqB2kB,SAAUvG,KAAKkC,IAAI1B,MAAM5e,EAC9C,IAAK2kB,QAAQ9d,MAAQi1B,YAAgBnX,QAAQ9d,MAAQk1B,uBAEjD,OADAta,SAAS6S,eAAelW,KAAMuG,QAAQhD,WAC9Bqa,WACJ,IAAK,GACD3G,oBAAoBjX,KAAMuG,QAC1B,MACJ,KAAK,GACDyW,oBAAoBhd,KAAMuG,SAIhCA,QAAQgD,WAAamU,YAAiBnX,QAAQgD,WAAaoU,yBAG7D/7B,GAAK2kB,QAAQE,aAoBzB,QAASoX,wBACL,IAAIC,YAAJ,CAGAA,aAAc,CACd,IAAqBC,UAAW1nB,YAAc2nB,sBAAwBC,oBACtE5a,UAAS6S,eAAiB6H,SAAS7H,eACnC7S,SAAS6X,eAAiB6C,SAAS7C,eACnC7X,SAASwX,mBAAqBkD,SAASlD,mBACvCxX,SAAS8X,oBAAsB4C,SAAS5C,oBACxC9X,SAASgQ,kBAAoB0K,SAAS1K,kBACtChQ,SAAS6a,iBAAmBH,SAASG,iBACrC7a,SAAS8a,sBAAwBJ,SAASI,sBAC1C9a,SAAS+a,eAAiBL,SAASK,eACnC/a,SAASgZ,mBAAqB0B,SAAS1B,mBACvChZ,SAAS4Y,mBAAqB8B,SAAS9B,mBACvC5Y,SAAS4Z,YAAcc,SAASd,YAChC5Z,SAAS0R,WAAaA,WACtB1R,SAASC,mBAAqBya,SAASza,mBACvCD,SAASY,YAAc8Z,SAAS9Z,YAChCZ,SAASkW,iBAAmBwE,SAASxE,iBACrClW,SAASmW,eAAiBuE,SAASvE,eACnCnW,SAASuN,mBAAqBA,oBAKlC,QAASqN,sBACL,OACI/H,eAAgB,aAChBgF,eAAgBmD,mBAChBxD,mBAAoBA,mBACpBM,oBAAqBA,oBACrB9H,kBAAmBA,kBACnB6K,iBAAkBpY,KAClBqY,sBAAuBrY,KACvBsY,eAAgBtY,KAChBuW,mBAAoBA,mBACpBJ,mBAAoBA,mBACpBgB,YAAaA,YACb3Z,mBAAoB,SAAUtD,KAAMuD,WAAa,MAAO,IAAI+a,eAActe,KAAMuD,YAChFU,YAAa,SAAUjE,KAAMuD,UAAWO,UAAWC,OAC/C,MAAO/D,MAAKkC,IAAI+B,YAAYjE,KAAMuD,UAAWO,UAAWC,QAE5DwV,iBAAkB,SAAUvZ,KAAM4d,WAC9B,MAAO5d,MAAKkC,IAAIqX,iBAA+B,IAAdqE,UAAuCW,uBACpEC,uBAAwBxe,OAEhCwZ,eAAgB,SAAUxZ,KAAM4d,WAC5B,MAAO5d,MAAKkC,IAAIsX,eAA6B,IAAdoE,UAAuCW,uBAClEC,uBAAwBxe,QAOxC,QAASge,uBACL,OACI9H,eAAgBuI,oBAChBvD,eAAgBwD,oBAChB7D,mBAAoB8D,wBACpBxD,oBAAqByD,yBACrBvL,kBAAmBwL,uBACnBX,iBAAkBY,sBAClBX,sBAAuBY,2BACvBX,eAAgBY,oBAChB3C,mBAAoB4C,wBACpBhD,mBAAoBiD,wBACpBjC,YAAakC,iBACb7b,mBAAoB,SAAUtD,KAAMuD,WAAa,MAAO,IAAI+a,eAActe,KAAMuD,YAChFU,YAAamb,iBACb7F,iBAAkB8F,sBAClB7F,eAAgB8F,qBAYxB,QAASjB,oBAAmBkB,WAAYvY,iBAAkBqE,mBAAoBnJ,IAAK0N,SAAUvlB,SAEzF,MAAO6wB,gBAAesE,eAAeD,WAAY3P,SADVA,SAASjlB,SAAS1C,IAAIw3B,kBACezY,iBAAkBqE,oBAAqBnJ,IAAK7X,SAW5H,QAASq0B,qBAAoBa,WAAYvY,iBAAkBqE,mBAAoBnJ,IAAK0N,SAAUvlB,SAC1F,GAAqBkxB,iBAAkB3L,SAASjlB,SAAS1C,IAAIw3B,kBACxCvb,KAAOsb,eAAeD,WAAY3P,SAAU,GAAI8P,uBAAsBnE,iBAAkBvU,iBAAkBqE,oBAC1GsU,gBAAkBC,6BAA6B1d,IACpE,OAAO2d,sBAAqBC,YAAY7+B,OAAQi6B,eAAgB,MAAOhX,KAAMyb,gBAAiBt1B,UAUlG,QAASm1B,gBAAeD,WAAY3P,SAAU2L,gBAAiBvU,iBAAkBqE,oBAC7E,GAAqB7M,WAAYoR,SAASjlB,SAAS1C,IAAI83B,WAClC/nB,aAAe4X,SAASjlB,SAAS1C,IAAI+3B,aAE1D,QACIpQ,SAAUA,SACVjlB,SAAU40B,WAAYvY,iBAAkBA,iBACxCsE,eAAgBD,mBAAoB7M,UAAWA,UAAW+c,gBAAiBA,gBAAiBpV,SAJhEoV,gBAAgBC,eAAe,KAAM,MAI+CxjB,aAAcA,cAUtI,QAAS2mB,yBAAwBpO,WAAYpH,UAAW8W,WAAY51B,SAChE,GAAqBs1B,iBAAkBC,6BAA6BK,WACpE,OAAOJ,sBAAqBC,YAAY7+B,OAAQ45B,mBAAoB,MAAOtK,WAAYpH,UAAWwW,gBAAiBt1B,UASvH,QAASu0B,0BAAyBrO,WAAYhK,QAAS0Z,WAAY7E,aAC/D,GAAqB+C,uBAAwB+B,iBAAiBj4B,IAA6Dse,QAAgB,QAAoB,kBAAW,SAAE7jB,MAO5K,OALIu9B,YADA9B,uBAIayB,6BAA6BK,YAEvCJ,qBAAqBC,YAAY7+B,OAAQk6B,oBAAqB,MAAO5K,WAAYhK,QAAS0Z,WAAY7E,cASjH,QAASyD,wBAAuB9lB,WAAYonB,eAAgB7M,oBAAqBpR,KAE7E,MAAOmR,mBAAkBta,WAAYonB,eAAgB7M,oBADd8M,iCAAiCle,MAS5E,QAAS4c,uBAAsBuB,UAC3BC,kBAAkBn4B,IAAIk4B,SAAS39B,MAAO29B,UAO1C,QAAStB,4BAA2BwB,KAAMC,aACtC,GAAqBC,aAAc7a,kBAAkB4M,kCAAkCgO,cAClE5E,YAAchW,kBAAwD6a,YAAYjgB,MAAM,GAAW,QAAgB,cACxI0f,kBAAiB/3B,IAAIo4B,KAAM3E,aAK/B,QAASoD,uBACLsB,kBAAkBI,QAClBR,iBAAiBQ,QAMrB,QAASd,8BAA6B1d,KAClC,GAA+B,IAA3Boe,kBAAkB5e,KAClB,MAAOQ,IAEX,IAAqBye,wCAerB,SAAoDze,KAGhD,IAAK,GAFgB0e,sCACAC,eAAiB,KACZj/B,EAAI,EAAGA,EAAIsgB,IAAI1B,MAAM3e,OAAQD,IAAK,CACxD,GAAqB2kB,SAAUrE,IAAI1B,MAAM5e,EACrB,GAAhB2kB,QAAQ9d,QACRo4B,eAAiBta,SAEjBsa,gBAAkC,KAAhBta,QAAQ9d,OAC1B63B,kBAAkBQ,IAAuBva,QAAiB,SAAE7jB,SAC5Dk+B,kCAAkCl8B,KAAsB,eAAmB6e,WAC3Esd,eAAiB,MAGzB,MAAOD,oCA7B8F1e,IACzG,IAAsD,IAAlDye,uCAAuC9+B,OACvC,MAAOqgB,IAIXA,KAAyBA,IAAY,QAAE,WAAc,MAAO4D,OAC5D,KAAK,GAAqBlkB,GAAI,EAAGA,EAAI++B,uCAAuC9+B,OAAQD,KA6BpF,SAAyCq+B,WAAYc,SACjD,IAAK,GAAqBn/B,GAAIm/B,QAAU,EAAGn/B,EAAIq+B,WAAWzf,MAAM3e,OAAQD,IAAK,CACzE,GAAqB2kB,SAAU0Z,WAAWzf,MAAM5e,EAChD,IAAoB,EAAhB2kB,QAAQ9d,MAER,MAEJ,IAAoB,KAAhB8d,QAAQ9d,MAA2C,CACnD,GAAqB3B,UAA8Byf,QAAiB,SAC/C8Z,SAAWC,kBAAkBr4B,IAAInB,SAASpE,MAC3D29B,YACA9Z,QAAQ9d,OAAyB,KAAhB8d,QAAQ9d,MAA8C43B,SAAS53B,MAChF3B,SAASC,KAAOoe,aAAakb,SAASt5B,MACtCD,SAASrC,MAAQ47B,SAAS57B,UAzCNyd,IAAKye,uCAAuC/+B,GAEhF,OAAOsgB,KAiDX,QAASke,kCAAiCle,KACtC,GAAIhe,IAaJ,SAA0Bge,KACtB,GAAqB8e,eAAe,EACfC,wBAAyB,CAC9C,OAA+B,KAA3BX,kBAAkB5e,MACTsf,aAAcA,aAAcC,uBAAwBA,yBAEjE/e,IAAIpS,UAAUW,QAAQ,SAAUuJ,MAC5B,GAAqBqmB,UAAWC,kBAAkBr4B,IAAI+R,KAAKtX,MACzC,MAAbsX,KAAKvR,OAA8C43B,WACpDW,cAAe,EACfC,uBAAyBA,wBAA0BZ,SAASa,uBAG3DF,aAAcA,aAAcC,uBAAwBA,0BA1BvC/e,KAAM8e,aAAe98B,GAAG88B,aAAcC,uBAAyB/8B,GAAG+8B,sBAC5F,OAAKD,eAKL9e,IAAyBA,IAAY,QAAE,WAAc,MAAO4D,QA0B5D,SAAgC5D,KAC5B,IAAK,GAAqBtgB,GAAI,EAAGA,EAAIsgB,IAAIpS,UAAUjO,OAAQD,IAAK,CAC5D,GAAqBkF,UAAWob,IAAIpS,UAAUlO,EAC1Cq/B,0BAIAn6B,SAAS2B,OAAS,KAEtB,IAAqB43B,UAAWC,kBAAkBr4B,IAAInB,SAASpE,MAC3D29B,YACAv5B,SAAS2B,OAA0B,KAAjB3B,SAAS2B,MAA8C43B,SAAS53B,MAClF3B,SAASC,KAAOoe,aAAakb,SAASt5B,MACtCD,SAASrC,MAAQ47B,SAAS57B,SAtCfyd,KAChBA,KANIA,IAgEf,QAASqc,wBAAuBve,KAAMsJ,WAAYmT,SAAUpQ,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,IAC5F,GAAqBvG,SAAUvG,KAAKkC,IAAI1B,MAAM8I,WAE9C,OADAkT,oBAAmBxc,KAAMuG,QAASkW,SAAUpQ,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,IACxD,IAAhBvG,QAAQ9d,MACZkY,qBAAqBX,KAAMsJ,YAAY7kB,UACvC2E,GAkBR,QAASo1B,wBAAuBxe,KAAMsJ,WAAYmT,SAAUpQ,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,IAC5F,GAAqBvG,SAAUvG,KAAKkC,IAAI1B,MAAM8I,WAE9C,OADAuT,oBAAmB7c,KAAMuG,QAASkW,SAAUpQ,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GAAIC,IACxD,IAAhBvG,QAAQ9d,MACZkY,qBAAqBX,KAAMsJ,YAAY7kB,UACvC2E,GAMR,QAAS61B,yBAAwBjf,MAC7B,MAAO6f,sBAAqBC,YAAYqB,cAAe9E,mBAAoB,MAAOrc,OAMtF,QAASkf,yBAAwBlf,MAC7B,MAAO6f,sBAAqBC,YAAYsB,eAAgBnF,mBAAoB,MAAOjc,OAMvF,QAASmf,kBAAiBnf,MACtB,MAAO6f,sBAAqBC,YAAYroB,QAASwlB,YAAa,MAAOjd,OAuBzE,QAASye,qBAAoBze,KAAMuD,WAC/B8d,aAAerhB,KACfshB,kBAAoB/d,UASxB,QAAS6b,kBAAiBpf,KAAMuD,UAAWO,UAAWC,OAElD,MADA0a,qBAAoBze,KAAMuD,WACnBsc,qBAAqBC,YAAY7b,YAAajE,KAAKkC,IAAI+B,YAAa,MAAOjE,KAAMuD,UAAWO,UAAWC,QAOlH,QAASsb,uBAAsBrf,KAAM4d,WAajC,QAAS2D,wBAAuBvhB,KAAMuD,UAAWkZ,UAE7C,IAAK,GADD33B,WACKlB,GAAK,EAAGA,GAAKC,UAAUhC,OAAQ+B,KACpCkB,OAAOlB,GAAK,GAAKC,UAAUD,GAE/B,IAAqB2iB,SAAUvG,KAAKkC,IAAI1B,MAAM+C,UAU9C,OATkB,KAAdqa,UACA4D,wBAAwBxhB,KAAMuG,QAASkW,SAAU33B,QAGjD28B,wBAAwBzhB,KAAMuG,QAASkW,SAAU33B,QAEjC,MAAhByhB,QAAQ9d,OACRg2B,oBAAoBze,KAAM0hB,yBAAyB1hB,KAAMuD,YAErC,IAAhBgD,QAAQ9d,MACZkY,qBAAqBX,KAAMuG,QAAQhD,WAAW9e,UAC9C2E,GA7BR,GAAiB,IAAb4W,KAAKG,MACL,KAAMoB,oBAAmBue,YAAY6B,gBAGzC,OADAlD,qBAAoBze,KAAM0hB,yBAAyB1hB,KAAM,IAClDA,KAAKkC,IAAIqX,iBAAiBgI,uBAAwBvhB,MAiC7D,QAASsf,qBAAoBtf,KAAM4d,WAa/B,QAASgE,wBAAuB5hB,KAAMuD,UAAWkZ,UAE7C,IAAK,GADD33B,WACKlB,GAAK,EAAGA,GAAKC,UAAUhC,OAAQ+B,KACpCkB,OAAOlB,GAAK,GAAKC,UAAUD,GAE/B,IAAqB2iB,SAAUvG,KAAKkC,IAAI1B,MAAM+C,UAU9C,OATkB,KAAdqa,UACA4D,wBAAwBxhB,KAAMuG,QAASkW,SAAU33B,QAGjD28B,wBAAwBzhB,KAAMuG,QAASkW,SAAU33B,QAEjC,EAAhByhB,QAAQ9d,OACRg2B,oBAAoBze,KAAM6hB,0BAA0B7hB,KAAMuD,YAEtC,IAAhBgD,QAAQ9d,MACZkY,qBAAqBX,KAAMuG,QAAQhD,WAAW9e,UAC9C2E,GA7BR,GAAiB,IAAb4W,KAAKG,MACL,KAAMoB,oBAAmBue,YAAY6B,gBAGzC,OADAlD,qBAAoBze,KAAM6hB,0BAA0B7hB,KAAM,IACnDA,KAAKkC,IAAIsX,eAAeoI,uBAAwB5hB,MAmC3D,QAASwhB,yBAAwBxhB,KAAMuG,QAASkW,SAAUqF,aAEtD,GAD+B,mBAAwC1/B,UAAM,IAAS4d,KAAMuG,QAASkW,UAAUz4B,OAAO89B,cACzG,CACT,GAAqBh9B,QAAsB,IAAb23B,SAA+BqF,YAAY,GAAKA,WAC9E,IAAoB,MAAhBvb,QAAQ9d,MAAmC,CAE3C,IAAK,GADgBs5B,kBACKngC,EAAI,EAAGA,EAAI2kB,QAAQnD,SAASvhB,OAAQD,IAAK,CAC/D,GAAqBurB,SAAU5G,QAAQnD,SAASxhB,GAC3B6C,MAAQK,OAAOlD,EAChB,GAAhBurB,QAAQ1kB,QACRs5B,cAAcC,0BAA6C7U,QAAwB,kBAC/E8U,2BAA2Bx9B,QAGvC,GAAqB2mB,OAA2B7E,QAAe,OAC1C5N,GAAK8H,cAAcT,KAAMoL,MAAM7H,WAAWe,aAC/D,IAAwB8G,MAAc,QAAEroB,KAMpC,IAAK,GAAqBm/B,QAAQH,eAAe,CAC7C,GAAqBt9B,OAAQs9B,cAAcG,KAC9B,OAATz9B,MACAub,KAAKmG,SAASwF,aAAahT,GAAIupB,KAAMz9B,OAGrCub,KAAKmG,SAASyH,gBAAgBjV,GAAIupB,UAV1CliB,MAAKmG,SAASkT,SAAS1gB,GAAI,YAAcpO,KAAK9H,UAAUs/B,cAAe,KAAM,MAwB7F,QAASN,yBAAwBzhB,KAAMuG,QAASkW,SAAU33B,QACtD,mBAAwC1C,UAAM,IAAS4d,KAAMuG,QAASkW,UAAUz4B,OAAOc,SAM3F,QAASk9B,2BAA0Bj/B,MAG/B,MAAO,eADPA,KAAOo/B,oBAAoBp/B,KAAKyH,QAAQ,QAAS,OAQrD,QAAS23B,qBAAoBC,OACzB,MAAOA,OAAM53B,QAAQ63B,kBAAmB,WAEpC,IAAK,GADDC,MACK1+B,GAAK,EAAGA,GAAKC,UAAUhC,OAAQ+B,KACpC0+B,EAAE1+B,IAAMC,UAAUD,GAEtB,OAAO,IAAM0+B,EAAE,GAAGC,gBAO1B,QAASN,4BAA2Bx9B,OAChC,IAEI,MAAgB,OAATA,MAAgBA,MAAMxB,WAAWqK,MAAM,EAAG,IAAM7I,MAE3D,MAAwBkE,GACpB,MAAO,yDAQf,QAAS+4B,0BAAyB1hB,KAAMuD,WACpC,IAAK,GAAqB3hB,GAAI2hB,UAAW3hB,EAAIoe,KAAKkC,IAAI1B,MAAM3e,OAAQD,IAAK,CACrE,GAAqB2kB,SAAUvG,KAAKkC,IAAI1B,MAAM5e,EAC9C,IAAoB,MAAhB2kB,QAAQ9d,OAAqC8d,QAAQnD,UAAYmD,QAAQnD,SAASvhB,OAClF,MAAOD,GAGf,MAAO,MAOX,QAASigC,2BAA0B7hB,KAAMuD,WACrC,IAAK,GAAqB3hB,GAAI2hB,UAAW3hB,EAAIoe,KAAKkC,IAAI1B,MAAM3e,OAAQD,IAAK,CACrE,GAAqB2kB,SAAUvG,KAAKkC,IAAI1B,MAAM5e,EAC9C,IAAqB,EAAhB2kB,QAAQ9d,OAAkC8d,QAAQnD,UAAYmD,QAAQnD,SAASvhB,OAChF,MAAOD,GAGf,MAAO,MA8KX,QAAS4gC,oBAAmBvC,WAAY1c,WAEpC,IAAK,GADgBkf,kBAAmB,EACd7gC,EAAI,EAAGA,GAAK2hB,UAAW3hB,IAAK,CAE9B,EADWq+B,WAAWzf,MAAM5e,GACpC6G,OACRg6B,kBAGR,MAAOA,iBAMX,QAASC,iBAAgB1iB,MACrB,KAAOA,OAASyE,gBAAgBzE,OAC5BA,KAA0BA,KAAY,MAE1C,OAAIA,MAAKzX,OACEkY,cAAcT,KAAKzX,OAA2B6b,aAAapE,MAAQuD,WAEvE,KAQX,QAASof,mBAAkB3iB,KAAMuG,QAAStB,YACtC,IAAK,GAAqB2d,WAAWrc,SAAQtB,WACzCA,WAAW2d,SAAWjL,cAAc3X,KAAMuG,QAASA,QAAQtB,WAAW2d,UAU9E,QAAS/C,sBAAqB1sB,OAAQnR,GAAI6gC,KAAMl/B,MAC5C,GAAqBm/B,WAAYnB,eACZoB,QAAU1B,aACV2B,aAAe1B,iBACpC,KACIK,eAAiBxuB,MACjB,IAAqB+E,QAASlW,GAAGI,MAAMygC,KAAMl/B,KAI7C,OAHA09B,cAAe0B,QACfzB,kBAAoB0B,aACpBrB,eAAiBmB,UACV5qB,OAEX,MAAwBvP,GACpB,GAAI2Y,iBAAiB3Y,KAAO04B,aACxB,KAAM14B,EAEV,MAAMuY,uBAAsBvY,EAAsBs6B,2BAM1D,QAASA,0BACL,MAAO5B,cAAe,GAAI/C,eAAc+C,aAAcC,mBAAqB;;;;;;;AAyZ/E,QAASpD,kBAAiBmC,UAEtB,MADAxC,wBACOxa,SAAS6a,iBAAiBmC,UAOrC,QAASlC,uBAAsBoC,KAAM9N,kBAEjC,MADAoL,wBACOxa,SAAS8a,sBAAsBoC,KAAM9N,kBAKhD,QAAS2L,kBAEL,MADAP,wBACOxa,SAAS+a,iBAQpB,QAAS8E,uBAAsBC,aAAc7P,oBAAqB8P,YAC9D,MAAO,IAAIC,kBAAiBF,aAAc7P,oBAAqB8P;;;;;;;;;;;;;;;;;;;;;AAiFnE,QAASE,aAAYC,OAAQC,SAAUr2B,KAC/Bo2B,QAAUC,UACVC,WAAWt2B,KAUnB,QAASu2B,gBAAeH,OAAQC,SAAUr2B,KAClCo2B,QAAUC,UACVC,WAAWt2B,KAUnB,QAASw2B,YAAWJ,OAAQC,SAAUr2B,KAC9Bo2B,SAAWC,UACXC,WAAWt2B,KAUnB,QAASy2B,gBAAeL,OAAQC,SAAUr2B,KAClCo2B,QAAUC,UACVC,WAAWt2B,KASnB,QAAS02B,YAAWN,OAAQp2B,KACV,MAAVo2B,QACAE,WAAWt2B,KASnB,QAAS22B,eAAcP,OAAQp2B,KACb,MAAVo2B,QACAE,WAAWt2B,KAOnB,QAASs2B,YAAWt2B,KAChB,KAAM,IAAIvE,OAAM,oBAAsBuE;;;;;;;AA4B1C,QAAS42B,gBAAe3+B,MAAO4+B,OAAQC,QAASC,QACZ,IAA5BA,MAAMC,oBACQ,MAAVH,SACCE,MAAME,YAAcF,MAAME,eAAiB1/B,KAAKU,MAAO4+B,QAE7C,MAAXC,WACCC,MAAME,YAAcF,MAAME,eAAiB1/B,KAAKU,MAAO6+B,UACvDC,MAAMG,aAAeH,MAAMG,gBAAkB3/B,KAAKU,MAAO6+B,WAWtE,QAASK,qBAAoB77B,MAAO87B,aAChC,GAAqBL,OAAQK,YAAYL,KACzC,KAAgC,IAA5BA,MAAMC,kBAMN,IAAK,GALgBziB,OAAgB,KAARjZ,QAAiC,EACzC+7B,MAAQ/7B,OAAS,GAIZ7G,EAAI4iC,MAAwBzN,IAAMyN,MAAQ9iB,KAAM9f,EAAIm1B,IAAKn1B,IAAK,CACpF,GAAqBsgB,KAAyBgiB,MAAMzhB,KAAK7gB,EACzD6iC,mBAAkBviB,IAAKgiB,MAAOtiC,GAC9B8iC,eAAexiB,IAAKgiB,MAAOtiC,GAC3B+iC,kBAAkBziB,IAAKgiB,MAAOtiC,IAW1C,QAAS6iC,mBAAkBviB,IAAKgiB,MAAOtiC,GACP,MAAxBsgB,IAAI0iB,mBACHV,MAAMW,eAAiBX,MAAMW,kBAAoBngC,KAAK9C,EAAGsgB,IAAI0iB,kBAEnC,MAA3B1iB,IAAI4iB,uBACHZ,MAAMW,eAAiBX,MAAMW,kBAAoBngC,KAAK9C,EAAGsgB,IAAI4iB,sBAC7DZ,MAAMa,oBAAsBb,MAAMa,uBAAyBrgC,KAAK9C,EAAGsgB,IAAI4iB,sBAUhF,QAASJ,gBAAexiB,IAAKgiB,MAAOtiC,GACP,MAArBsgB,IAAI8iB,gBACHd,MAAMe,YAAcf,MAAMe,eAAiBvgC,KAAK9C,EAAGsgB,IAAI8iB,eAEhC,MAAxB9iB,IAAIgjB,oBACHhB,MAAMe,YAAcf,MAAMe,eAAiBvgC,KAAK9C,EAAGsgB,IAAIgjB,mBACvDhB,MAAMiB,iBAAmBjB,MAAMiB,oBAAsBzgC,KAAK9C,EAAGsgB,IAAIgjB,mBAU1E,QAASP,mBAAkBziB,IAAKgiB,MAAOtiC,GACd,MAAjBsgB,IAAIkjB,YACHlB,MAAMmB,eAAiBnB,MAAMmB,kBAAoB3gC,KAAK9C,EAAGsgB,IAAIkjB,WAWtE,QAASE,kBAAiBf,YAAaL,MAAOqB,cACP,IAA/BhB,YAAYiB,iBACZC,aAAalB,YAAY9hB,KAAMyhB,MAAME,UAAWF,MAAMG,WAAYkB,cAClEhB,YAAYiB,eAAiB,GAYrC,QAASE,qBAAoBnB,YAAaL,MAAOqB,cACzChB,YAAYiB,eAAiB,IAC7BC,aAAalB,YAAY9hB,KAAMyhB,MAAMW,aAAcX,MAAMa,kBAAmBQ,cAC5EhB,YAAYiB,eAAiB,GAYrC,QAASC,cAAahjB,KAAMkjB,SAAUtB,WAAYkB,cAC9C,GAAqBK,aAAcL,aAAeI,SAAWtB,UAC1C,OAAfuB,aACAC,UAAUpjB,KAAMmjB,aAWxB,QAASC,WAAUpjB,KAAMsP,KACrB,IAAK,GAAqBnwB,GAAI,EAAGA,EAAImwB,IAAIlwB,OAAQD,GAAK,EAC/BmwB,IAAQ,EAAJnwB,GAASmC,KAAK0e,KAAuBsP,IAAInwB;;;;;;;AA4DxE,QAASkkC,gBAAe9rB,KAAM7T,MAC1B29B,cAAc9pB,KAAM,gCACpBspB,YAAyB,EAAbtpB,KAAKvR,MAA2BtC,KAAM,eAAiB4/B,SAAS5/B,OAOhF,QAAS6/B,2BAA0BhsB,MAE/B,IAAK,GADDhP,UACKpH,GAAK,EAAGA,GAAKC,UAAUhC,OAAQ+B,KACpCoH,MAAMpH,GAAK,GAAKC,UAAUD,GAE9BkgC,eAAc9pB,KAAM,+BACpB,IAAqBmF,UAAwB,EAAbnF,KAAKvR,KAErC66B,aAD6Bt4B,MAAM+F,KAAK,SAAU5K,MAAQ,MAAOgZ,YAAahZ,QAC3D,EAAM,oBAAsB6E,MAAMpI,IAAImjC,UAAUljC,KAAK,OAM5E,QAASkjC,UAAS5/B,MACd,MAAY,IAARA,KACO,aACC,GAARA,KACO,YACC,GAARA,KACO,OACC,GAARA,KACO,UACJ,YAuIX,QAAS8/B,sBAAqB9f,UAC1B,QAAU,SAAoC;;;;;;;;;;;;;;AAgHlD,QAAS+f,sBAAqBlsB,KAAMmsB,UAEhC,IADA,GAAqBC,aAAcpsB,KAC5BosB,aAAeA,cAAgBD,UAAU,CAC5C,GAAqBE,eAAgBD,YAAYC,aACjD,IAAIA,cAAe,CAEf,IADA,GAAqBC,mBAA0C,EAAtBD,cAAc59B,MAC1B,IAAtB69B,mBAA0C,CAC7C,GAAqBjsB,YAAaksB,eAAeF,cACjD,IAAIhsB,WACA,MAAOA,WAEXgsB,eAAmCA,cAA4B,cAEnED,YAAcC,kBAEb,CAED,IADA,GAAqBG,gBAAiBJ,YAAY9qB,KAC3CkrB,gBAAgB,CACnB,GAAqBnsB,YAAaksB,eAAeC,eACjD,IAAInsB,WACA,MAAOA,WAEXmsB,gBAAiBA,eAAelrB,KAEpC,GAAqBnB,YAAaisB,YAAY79B,MAE9C,IADA69B,YAAc,KACVjsB,WAAY,CACZ,GAAqBssB,YAAgC,EAAnBtsB,WAAW1R,KAC1B,KAAfg+B,YAAmD,IAAfA,aACpCL,YAAcjsB,cAK9B,MAAO,MASX,QAASusB,4BAA2B1sB,MAChC,GAAqBqsB,eAAgBrsB,KAAKqsB,aAC1C,IAAIA,cAAe,CAIf,MAFyF,KAAvB,EAAtBA,cAAc59B,OAE7B,KAAO49B,cAGxC,MAAOrsB,MAAKsB,KAahB,QAASqrB,4BAA2BC,YAAaC,UAG7C,IAFA,GAAqB7sB,MAAO4sB,YACPE,SAAWJ,2BAA2B1sB,MACpDA,OAAS8sB,UAAU,CAItB,IADA9sB,KAAOA,KAAKqsB,eAAiBrsB,KAAKzR,UACrBs+B,SACT,MAAO,KAEXC,UAAW9sB,MAAQ0sB,2BAA2B1sB,MAElD,MAAO8sB,UAQX,QAASP,gBAAeM,UAEpB,IADA,GAAqB7sB,MAAO6sB,SACrB7sB,MAAM,CACT,GAAqB7T,MAAoB,EAAb6T,KAAKvR,MACZq+B,SAAW,IAChC,IAAa,IAAT3gC,KAEA,MAAO,MAA0B4gC,MAEhC,IAAa,IAAT5gC,KAA4B,CAEjC,GAAqB6gC,oBAAqB,KAA0BvkB,IACpEqkB,UAAWE,mBAAmBC,MAAMplC,OAASmlC,mBAAmBC,MAAM,GAAGC,MAAQ,SAIjFJ,UAFc,IAAT3gC,KAEM,KAA0Bsc,KAAK0kB,KAI/B,KAA0BD,KAEzCltB,MAAoB,OAAb8sB,SAAoBH,2BAA2B3sB,KAAM6sB,UAAYC,SAE5E,MAAO,MASX,QAASM,4BAA2BC,UAAWR,SAAUS,WAAYC,YACjEC,WAAa1B,eAAeuB,UAAW,GACvCG,WAAa1B,eAAee,SAAU,EACtC,IAAqB1sB,YAAaktB,UAAU5kB,KAAKgD,aAC5Bld,OAAS4R,WAAaA,WAAW4sB,OAAS,KAC1C/sB,KAAO6sB,SAASK,KACrC,IAAI3+B,OACA,KAAOyR,MAAM,CACT,GAAqB7T,MAAoB,EAAb6T,KAAKvR,MACZq+B,SAAW,KACX3gB,SAAWkhB,UAAUrnB,KAAKmG,QAC/C,IAAa,IAAThgB,KACImhC,WACArB,qBAAqB9f,UACjBA,SAASoB,aAAahf,OAA2ByR,KAAY,OAAoB,YACjFzR,OAAOgf,aAAgCvN,KAAY,OAAoB,YAAc,GAGzFisB,qBAAqB9f,UAAYA,SAASnH,YAA6B,OAA6BhF,KAAY,QAC5GzR,OAAOyW,YAA+BhF,KAAY,QAE1D8sB,SAAW9sB,KAAKsB,SAEf,IAAa,IAATnV,KAA4B,CAGjC,GAAqB6gC,oBAAqB,KAA0BvkB,IACpEukB,oBAAmBvhB,aAAetL,WAClC2sB,SAAWE,mBAAmBC,MAAMplC,OAASmlC,mBAAmBC,MAAM,GAAGC,MAAQ,SAGjFJ,UADc,IAAT3gC,KACM,KAA0Bsc,KAAK0kB,KAG/B,KAA0BD,KAGrCltB,MADa,OAAb8sB,SACOH,2BAA2B3sB,KAAM6sB,UAGjCC,UAoBvB,QAASW,iBAAgBC,UAErB,IADA,GAAqBC,iBAAkBD,SAChCC,iBAAiB,CACpB,GAAqBrsB,MAAO,IAW5B,IAVIqsB,gBAAgBV,OAASU,gBAAgBV,MAAMplC,OAC/CyZ,KAAOqsB,gBAAgBV,MAAM,GAAGxkB,KAE3BklB,gBAAgBT,MACrB5rB,KAAOqsB,gBAAgBT,MAElBS,gBAAgBrsB,OACrBssB,YAA6B,iBAC7BtsB,KAAOqsB,gBAAgBrsB,MAEf,MAARA,KAAc,CAGd,KAAOqsB,kBAAqC,gBAAoBrsB,MAAQqsB,kBAAoBD,UACxFE,YAA6B,iBAC7BD,gBAAkBE,eAAeF,gBAAiBD,SAEtDE,aAA6B,iBAAqBF,UAClDpsB,KAAOqsB,iBAAmBA,gBAAgBrsB,KAE9CqsB,gBAAkBrsB,MAgB1B,QAASwsB,YAAWT,UAAWU,QAAS3iC,OACpC,GAAqB+a,OAAQknB,UAAU5kB,KAClBwkB,MAAQ9mB,MAAM8mB,KAmBnC,IAlBI7hC,MAAQ,GAER4iC,YAAYf,MAAM7hC,MAAQ,GAAI2iC,SAE9B3iC,MAAQ6hC,MAAMplC,QAAUolC,MAAM7hC,OAAOqd,KAAKlS,KAAOw3B,QAAQtlB,KAAKlS,IAE9Dy3B,YAAYD,QAASd,MAAM7hC,QAC3B6hC,MAAMruB,OAAOxT,MAAO,EAAG2iC,UAElB3iC,OAAS6hC,MAAMplC,QACpBolC,MAAMviC,KAAKqjC,SAEX5nB,MAAM8nB,WAAa7iC,OACnB+a,MAAM8nB,YAK0B,OAAhCZ,UAAU5kB,KAAKgD,aAAuB,CACtC,GAAqB8hB,YAAarB,qBAAqB6B,QAASV,UAChE,KAAKE,WAAY,CACb,GAAqBW,yBAA0Bb,UAAUN,WACzB39B,KAA5B8+B,0BACAA,wBAA0Bb,UAAUN,OAASb,qBAAqBmB,UAAW,OAEjFE,WAAaW,wBAEjBd,2BAA2BC,UAAWU,SAAS,EAAMR,YAEzD,MAAOQ,SAaX,QAASI,YAAWd,UAAWe,aAC3B,GAAqBnB,OAAQI,UAAU5kB,KAAKwkB,MACvBoB,SAAWpB,MAAMmB,YAStC,OARIA,aAAc,GACdJ,YAAYf,MAAMmB,YAAc,GAAIC,SAAS/sB,MAEjD2rB,MAAMruB,OAAOwvB,YAAa,GAC1BX,gBAAgBY,SAAS5lB,MACzB2kB,2BAA2BC,UAAWgB,UAAU,GAEhDhB,UAAU5kB,KAAK6lB,SAAWjB,UAAU5kB,KAAK6lB,QAAQH,WAAWC,aACrDC,SAWX,QAASL,aAAYhoB,KAAM1E,MACvB0E,KAAK1E,KAAOA,KACZ0E,KAAKyC,KAAKnH,KAAOA,KAAOA,KAAKmH,KAAO,KAcxC,QAASolB,gBAAe1nB,MAAOunB,UAC3B,GAAqB1tB,KACrB,QAAKA,KAAwB,MAA+BA,OAA8C,IAAvB,EAAbA,KAAKvR,OAG5CuR,KAAY,OAAM,KAItCmG,MAAM5X,SAAWm/B,SAAW,KAAOvnB,MAAM5X,OASxD,QAASq/B,aAAY5nB,MACjBuoB,gBAAgBvoB,MAChBwoB,kBAAkBxoB,MAOtB,QAASuoB,iBAAgBvoB,MACrB,GAAqByoB,SAA6BzoB,KAAa,OAC/D,IAAe,MAAXyoB,QAAiB,CACjB,IAAK,GAAqB7mC,GAAI,EAAGA,EAAI6mC,QAAQ5mC,OAAS,EAAGD,GAAK,EAChC,gBAAf6mC,SAAQ7mC,IACE,QAAYA,EAAI,GAAG8mC,oBAAoBD,QAAQ7mC,GAAI6mC,QAAQ7mC,EAAI,GAAI6mC,QAAQ7mC,EAAI,IAChGA,GAAK,GAGL6mC,QAAQ7mC,GAAGmC,KAAK0kC,QAAQ7mC,EAAI,GAGpCoe,MAAKyoB,QAAU,MAQvB,QAASD,mBAAkBxoB,MACvB,GACqBqlB,cADAnB,MAAQlkB,KAAKkkB,KAErB,OAATA,OAAwD,OAAtCmB,aAAenB,MAAMmB,eACvCQ,UAAU7lB,KAAKyC,KAAM4iB,cAoB7B,QAASsD,qBAAoBpgC,OAAQg8B,aAEjC,MAD8E,KAAvB,EAAfh8B,OAAOE,SAE1CF,OAAOyX,OAASukB,aAA+B,OAAhBh8B,OAAOka,MAY/C,QAAS6E,aAAY/e,OAAQ2+B,MAAO3C,aAChC,GAAc,OAAV2C,OAAkByB,oBAAoBpgC,OAAQg8B,aAAc,CAE5D,GAAqBpe,UAAWoe,YAAYpe,QAE5C,OADA8f,sBAAqB9f,UAAYA,SAASmB,YAAgC/e,OAAe,OAAG2+B,OAA4B3+B,OAAc,OAAE+e,YAAY4f,QAC7I,EAEX,OAAO,EAWX,QAAS0B,aAAY5uB,KAAMuqB,aACvB,GAAqBh8B,QAA4ByR,KAAY,MAC7D,IAAI2uB,oBAAoBpgC,OAAQg8B,aAAc,CAC1C,GAAqBsE,eAAgB3C,qBAAqBlsB,KAAM,MAC3CmM,SAAWoe,YAAYpe,QAC5C8f,sBAAqB9f,UACjBA,SAASoB,aAAgChf,OAAc,OAAsByR,KAAY,OAAG6uB,eAAoCtgC,OAAc,OAAEgf,aAAgCvN,KAAY,OAAG6uB,eAAe,IAY1N,QAASC,qBAAoB9uB,KAAM8f,cAAeyK,aAC9C,GAAyC,IAAvB,EAAbvqB,KAAKvR,OACN6e,YAAYwS,cAAe,KAA0BiN,OAAQxC,iBAE5D,IAAIoE,oBAAoB7O,cAAeyK,aAAc,CAMtD,GAAqBwE,YAAa,KAA0BtmB,IAC5DsmB,YAAWtjB,aAAgC,aAE3C,KAAK,GADgBwhB,OAAQ8B,WAAW9B,MACdrlC,EAAI,EAAGA,EAAIqlC,MAAMplC,OAAQD,IAC/CwlC,2BAA4C,KAAQH,MAAMrlC,IAAI,EAAM;;;;;;;AAqBhF,QAASonC,oBAAmBC,iBAAkBC,iBAC1C,GAAqBC,gBAAiBF,iBAAiBpnC,OAClCunC,WAA8B,iBAAqBjmC,QAAQ+lC,iBAC3DG,YAAcD,WAAaF,gBAAgBrnC,MAChE,UAAoB,IAAhBunC,YACIA,WAAa,GAA+D,MAAzC,iBAAqBA,WAAa,IAEpEC,YAAcF,gBAAyE,MAAtC,iBAAqBE,cAYnF,QAASC,8BAA6BC,MAAOrX,UACzC,GAAqBsX,mBAAoBtX,SAASrwB,MAClD2lC,YAAa1D,cAAc5R,SAAS,GAAI,sCACxC,IAAqBuX,mBAAoBvX,SAAS,EAElD,IAA0B,KAAtBuX,mBAA4BA,oBAAsBF,MAAMG,QACxD,OAAO,CAGX,IAA0B,IAAtBF,kBACA,OAAO,CAGX,IAAIA,kBAAoB,IAAMD,MAAM3f,MAChC,OAAO,CAGX,KAAK,GADgB+f,aAAiCJ,MAAY,MACxC3nC,EAAI,EAAGA,EAAI4nC,kBAAmB5nC,GAAK,EAAG,CAC5D,GAAqBgoC,oBAAqB1X,SAAStwB,GAC9BioC,cAAgBF,YAAYxmC,QAAQymC,mBACzD,IAAIC,cAAgB,GAAM,EAEtB,OAAO,CAGP,IAAqBC,mBAAoB5X,SAAStwB,EAAI,EACtD,IAA0B,KAAtBkoC,kBAA0B,CAE1B,GAAqBC,eAAgBJ,YAAYE,cAAgB,EACjE,IAA2B,UAAvBD,oBAEA,IAAKhoC,IAAKA,EAAI4nC,kBAAmB5nC,IAC7B,IAAKonC,mBAAmBe,cAAe7X,SAAStwB,IAC5C,OAAO,MAId,IAAIkoC,oBAAsBC,cAC3B,OAAO,GAKvB,OAAO,EAOX,QAASC,qCAAoCT,MAAOrX,UAChD,GAAqB+X,kBAAmB/X,SAAS,EACjD,IAAwB,MAApB+X,mBAA6BX,6BAA6BC,MAAOU,kBACjE,OAAO,CAGX,IAAqBC,mBAAoBhY,SAAS,EAClD,IAAIgY,kBACA,IAAK,GAAqBtoC,GAAI,EAAGA,EAAIsoC,kBAAkBroC,OAAQD,IAE3D,GAAI0nC,6BAA6BC,MAAOW,kBAAkBtoC,IACtD,OAAO,CAInB,QAAO,EAOX,QAASuoC,wBAAuBZ,MAAOrX,UACnC,IAAK,GAAqBtwB,GAAI,EAAGA,EAAIswB,SAASrwB,OAAQD,IAClD,GAAIooC,oCAAoCT,MAAOrX,SAAStwB,IACpD,OAAO,CAGf,QAAO,EAMX,QAASwoC,uBAAsBb,OAC3B,GAAqBc,WAAYd,MAAM3f,KACvC,IAAiB,MAAbygB,UAAmB,CACnB,GAAqBC,oBAAqBD,UAAUlnC,QAAQonC,wBAG5D,IAAiC,IAAP,EAArBD,oBACD,MAAOD,WAAUC,mBAAqB,GAG9C,MAAO,MAaX,QAASE,uBAAsBjB,MAAOkB,UAAWC,eAE7C,IAAK,GADgBC,oBAAqBP,sBAAsBb,OACtC3nC,EAAI,EAAGA,EAAI6oC,UAAU5oC,OAAQD,IAGnD,GAAI+oC,qBAAuBD,cAAc9oC,IACd,OAAvB+oC,oBAA+BR,uBAAuBZ,MAAOkB,UAAU7oC,IACvE,MAAOA,GAAI,CAGnB,OAAO;;;;;;;AAoBX,QAASgpC,aAAYroC,EAAG3B,GAGpB,QAAS2B,IAAMA,GAAK3B,IAAMA,IAAM2B,IAAM3B,EAM1C,QAASiqC,aAAYpmC,OACjB,MAAoB,kBAATA,OACAA,MAAM1B,MAAQ0B,MACL,gBAATA,OACAA,MACE,MAATA,MACO,GACJ,GAAKA,MAQhB,QAASqmC,kBACL,MAAO,IAAIliC,OAAM,kBAOrB,QAASmiC,WAAUryB,MAGf,IAFA,GAAqBR,WACAtW,EAAI,EAClBA,EAAI8W,KAAK7W,QAAQ,CACpB,GAAqBsX,MAAOT,KAAK9W,EAC7Be,OAAMuI,QAAQiO,MACVA,KAAKtX,OAAS,GACd6W,KAAOS,KAAKnV,OAAO0U,KAAKpL,MAAM1L,EAAI,IAClCA,EAAI,GAGJA,KAIJsW,OAAOxT,KAAKyU,MACZvX,KAGR,MAAOsW,QA+CX,QAAS8yB,eAEL,MAAO7kB,UASX,QAAS8kB,2BAEL,MAAOC,sBA+BX,QAASC,mBAAkBC,WAEvB,MAAOC,kBAAmBA,eAAiB,GAAID,YASnD,QAASE,mBAEL,MAAO/F,cAyCX,QAASgG,WAAUxD,QAASyD,MACxB,GAAqBzI,SAAUwB,WAa/B,OAZA9hB,MAAOslB,SAAWA,QAAQtlB,KAC1BN,aAAe4lB,SAAWA,QAAQ0D,mBAAqB,EACvDC,MAAQ3D,SAAWA,QAAQ7D,MAAMzhB,KACjC8iB,aAAewC,SAAsD,IAA1B,EAAhBA,QAAQt/B,OACnCggC,QAAUV,SAAWA,QAAQU,QAC7BtiB,SAAW4hB,SAAWA,QAAQ5hB,SAClB,MAARqlB,OACAN,qBAAuBM,KACvBG,UAAW,GAEfpH,YAAcwD,QACdsD,eAAiBtD,SAAWA,QAAQO,QACZ,QAQ5B,QAASsD,WAAU7D,SACftC,aAAalB,YAAY9hB,KAAM8hB,YAAYL,MAAMe,UAAWV,YAAYL,MAAMiB,eAAgBI,cAE9FhB,YAAY97B,QAAS,EACrB87B,YAAYiB,eAAiB,EAC7BjB,YAAYL,MAAMC,mBAAoB,EACtCoH,UAAUxD,QAAS,MAWvB,QAAS8D,aAAYC,OAAQ3lB,SAAU+d,MAAOra,SAAUxf,QAAS5B,OAsB7D,OApBIF,OAAQg8B,YACRh0B,GAAIu7B,OAEJrjC,MAAe,EAARA,MACPuR,KAAuB,KAEvByI,QACAyhB,MAAOA,MACPuE,QAAS,KACTtiB,SAAUA,SACV+gB,MAAO,KACP6E,KAAM,KACNzwB,KAAM,KACNmwB,kBAAmB,KACnB5hB,SAAUA,SACVxf,QAASA,QACT2hC,iBAAkB,EAClBxG,eAAgB,EAChB8C,QAAS,MAWjB,QAAS2D,aAAY7mC,MAAOe,KAAM4gC,OAAQ5mB,OACtC,GAAqB5X,QAASojC,SAAWT,qBACrCA,sBAA0CA,qBAA2B,OACpD5C,SAAWqD,SAAWN,eAAiBH,sBAAwBA,qBAAqB5C,UACrG//B,QAAUA,OAAO+/B,SAAW//B,OAAO+/B,QAAQpB,QAC1BgF,QAAmB,MAAT/rB,MACVnG,MACjBvR,MAAOtC,KACP4gC,OAAyB,OACzB/mB,KAAMukB,YACNh8B,OAAyB,OACzB2+B,MAAO,KACP5rB,KAAM,KACN6wB,aAAc5jC,OAASA,OAAO4jC,aAAe,KAC7C1pB,KAAMypB,QAA2B,MAAU,KAC3C5D,QAASA,QACTiB,MAAO,KACPlD,cAAe,KAuCnB,OArCuC,KAA3B,EAAPlgC,OAA2D+lC,UAG5D1E,WAAa3D,WAAW,MAA2B7pB,KAAM,+CACzD,MAA6BA,KAAOA,MAE3B,MAAT5U,QAEAoiC,WAAa4E,eAAehnC,OAC5Bqd,KAAKrd,OAAS4U,KAEV5U,OAASsmC,MAAM7pC,OACf6pC,MAAMtmC,OAAS,KAGf4U,KAAKuvB,MAA0BmC,MAAMtmC,OAGrCumC,UACAN,eAAiB,KACbH,qBAAqBlrB,OAASukB,aACuB,IAAvB,EAA7B2G,qBAAqBziC,SAEtB++B,WAAa3D,WAAWqH,qBAAqBhE,MAAO,0DACpDgE,qBAAqBhE,MAAQltB,OAM5BkxB,uBACL1D,WAAa3D,WAAWqH,qBAAqB5vB,KAAM,kEACnD4vB,qBAAqB5vB,KAAOtB,OAGpCkxB,qBAAuBlxB,KACvB2xB,UAAW,EACJ3xB,KAMX,QAASqyB,yBACLV,UAAW,EACXT,qBAAwC,KAqB5C,QAASoB,wBAAuBjE,SAAUxe,SAAUxf,QAAS8b,UACzD,GAAqBomB,WAAYZ,SACZa,sBAAwBtB,oBAC7C,KACIS,UAAW,EACXT,qBAAwC,IACxC,IAAqBuB,KAAK,CAC1B,IAAgB,MAAZpE,SAAkB,CAElBA,SAAW4D,YAAY,KAAM,EAAc,KADfJ,aAAa,EAAG1lB,SAAUumB,cAAe7iB,SAAUxf,QAAS,IAExFoiC,IAAK,EAETlB,UAAUlD,SAAS5lB,KAAM4lB,UACzBxe,SAASxf,QAASoiC,IAEtB,QACIE,yBACAf,UAA8C,YAAuB,QACrED,SAAWY,UACXrB,qBAAuBsB,sBAE3B,MAAOnE,UAUX,QAASuE,2BAA0B5yB,KAAM6M,SAAUgmB,mBAAoBhjB,UACnE,GAAqBkZ,SAAUwI,UAAU1kB,SAAU7M,KACnD,KACQuhB,gBAAgBuR,OAChBvR,gBAAgBuR,QAEhBjjB,SACAA,SAA0B,mBAAwB0b,cAKlDwH,iBAAiB,EAAG,GAG5B,QACQxR,gBAAgBxE,KAChBwE,gBAAgBxE,MAEpB6U,UAAU7I,UAiBlB,QAASiK,cAAa5nC,MAAO6nC,oBAAqBrjB,MAAOsjB,eAAgBC,WACrE,GAAqBnzB,MACA+sB,MACrB,IAA2B,MAAvBkG,oBAA6B,CAE7B,GAAqBG,QAA4B3qB,KAAKrd,MACtD2hC,QAASqG,QAAU,OAA4BrG,WAE9C,CACDS,WACI3D,WAAWU,YAAYkH,kBAAmB,iDAC9C,IAAqB4B,eAA+C,gBAAxBJ,qBAOvBK,iBAAmBD,cAAgB,oBAAyCE,eAAiB,KAC7F1iB,OAASwiB,cAAiC,iBAAqBG,IAAuB,mBAC3G,IAAe,OAAX3iB,OAEA,KAAM,0BAGNkc,QAAS5gB,SAASgF,cAAcN,OAChC,IAAqB7G,eAAgB,IACrC,IAAIqpB,cAAe,CACf,GAAqBnJ,OAAQuJ,iBAAkC,iBAAqB5jB,SAEpF7F,eAAgB0pB,cADgB7B,aAAa,EAAGtQ,gBAAgBC,eAAeuL,OAAyB,iBAAqBzL,cAAe4I,MAAO,KAAM,KAAuB,iBAAqByJ,OAAS,EAAgB,IAKlO3zB,KAAOiyB,YAAY7mC,MAAO,EAAiB2hC,OAAQ/iB,cAEnD,IAAqB4pB,WAAYC,mBAAmBP,iBAAkBH,UAAW,GASjF,IARkB,MAAdnzB,KAAKuvB,QACL/B,WAAasG,kBAAkB1oC,MAAQ,GACvC4U,KAAKuvB,MAAQmC,MAAMtmC,OACf2oC,YAAYljB,OAAQjB,OAAS,KAAM,KAAM0jB,iBAAmB,KAAOM,YAEvEhkB,OACAokB,gBAAgBjH,OAAQnd,OAC5BtC,YAA+BtN,KAAY,OAAG+sB,OAAQxC,aAClD+I,iBAAkB,CAGlB,GAAqBld,UAAWkd,iBAAiBW,GACjDC,mBAAkB9oC,MAAOgrB,SAAUkd,iBAAkBM,WACrDO,6BAA6Bn0B,KAAKmyB,aAAc/b,UAEpDge,uBAAuBhpC,MAAO8nC,eAAgBC,WAGtD,MAAOpG,QAQX,QAASoH,8BAA6BxjC,SAAUylB,UACxCzlB,UAA0C,MAA9BA,SAAS0jC,mBACF1jC,SAA2B,kBAAE2jC,qBAAqBle,UAW7E,QAASge,wBAAuBhpC,MAAO8nC,eAAgBC,WACnD,GAAID,eAGA,IAAK,GAAqBtrC,GAAI,EAAGA,EAAIsrC,eAAerrC,OAAQD,IAAK,CAO7D,GAAqB2sC,eAAgBrB,eAAetrC,GAC/B4xB,aAAe+a,cAAcC,cAClDN,mBAAkB9oC,MAAOouB,aAAaya,IAAKza,aAAcqa,mBAAmBra,aAAc2Z,aAYtG,QAASU,oBAAmBra,aAAc2Z,UAAWsB,eACjD,GAAqBC,UAAWlb,cAAgBA,aAAakb,UAAYD,aACzE,IAAgB,MAAZC,UAAoBvB,UACpB,IAAK,GAAqBvrC,GAAI,EAAGA,EAAIurC,UAAUtrC,OAAQD,GAAQ,EAAG,CAC9D,GAAqB+sC,OAAQxB,UAAUvrC,GAClBgtC,WAAazB,UAAc,EAAJvrC,EAC5C,IAAIgtC,aAAeF,UAAYE,aAAeH,cAC1C,MAAOE,OAInB,MAAO,MASX,QAASlB,kBAAiB5jB,UACtB,MAAOA,UAASglB,gBAAkBhlB,SAASglB,cAAkCnC,eAMjF,QAASA,eACL,OACIjqB,QACA0hB,mBAAmB,EACnBC,UAAW,KACXC,WAAY,KACZQ,aAAc,KACdE,kBAAmB,KACnBE,UAAW,KACXE,eAAgB,KAChBE,aAAc,MAQtB,QAAS2I,iBAAgBjH,OAAQnd,OAC7B4d,WAAalE,YAAY1Z,MAAM/nB,OAAS,EAAG,EAAG,+CAE9C,KAAK,GADgBitC,QAAS7I,qBAAqB9f,UACzBvkB,EAAI,EAAGA,EAAIgoB,MAAM/nB,OAAQD,GAAK,EAAG,CACvD,GAAqBmtC,UAAWnlB,MAAMhoB,EACtC,IAAImtC,WAAaxE,wBAAyB,CACtC,GAAqByE,SAAUplB,MAAMhoB,EAAI,EACzCktC,QAAS,SAA8BnjB,aAAaob,OAAQgI,SAAUC,SAClEjI,OAAOpb,aAAaojB,SAAUC,WAS9C,QAASC,aAAYjlC,KAAMtH,OACvB,MAAO,IAAIkG,OAAM,aAAeoB,KAAO,KAAO6gC,YAAYnoC,OAAS,KASvE,QAASwsC,mBAAkBzvC,QAAS0vC,mBAChC3H,WAAasG,mBAAmB,GAChCvS,gBAAkB97B,OAClB,IAAqB2vC,iBAAkB3vC,QAAQ+7B,eAAe,KAAM,MAC/C6T,MAAqC,gBAAtBF,mBAC/BlJ,qBAAqBmJ,iBAClBA,gBAAgB3jB,kBAAkB0jB,mBAClCC,gBAAgBE,cAAcH,mBAClCA,iBACJ,IAAI3H,YAAc6H,MACd,KAAiC,gBAAtBF,mBACDF,YAAY,qCAAsCE,mBAGlDF,YAAY,yBAA0BE,kBAGpD,OAAOE,OAUX,QAASjU,aAAYiU,MAAOntB,KAExB,MADAmqB,yBACOJ,YAAY,EAAG,EAAiBoD,MAAOxD,aAAa,EAAG1lB,SAAUsnB,iBAAiBvrB,IAAI2H,UAAW,KAAM,KAAM3H,IAAIyrB,OAAS,EAAgB,IAarJ,QAAS4B,UAASzrB,UAAW0rB,WAAYC,gBAClB,KAAfA,aAAyBA,YAAa,GAC1CjI,WAAakI,wBACb,IAAqB11B,MAAOkxB,qBACPnE,OAA2B/sB,KAAW,OAGtC21B,WAAalH,UAAYA,QAAUlE,YAAYkE,WACpE,IAAIxC,qBAAqB9f,UAAW,CAChC,GAAqBypB,iBAAkBC,2BAA2BtL,YAAaiL,YAC1DM,UAAY3pB,SAASgG,OAAO4a,OAAQjjB,UAAW8rB,gBACpED,YAAWjrC,KAAKorC,UAAW,UAE1B,CACD,GAAqBF,iBAAkBG,gCAAgCxL,YAAaiL,WACpFzI,QAAOiJ,iBAAiBlsB,UAAW8rB,gBAAiBH,YACpDE,WAAWjrC,KAAKof,UAAWijB,OAAQ6I,gBAAiBH,YAExD,GAAqBlG,OAA2BvvB,KAAW,UACrC5Q,KAAlBmgC,MAAM7f,UAGN6f,MAAM7f,QAAUumB,wBAAwBj2B,KAAKvR,MAAO,GAExD,IACqBynC,YADAxmB,QAAU6f,MAAM7f,OAEjCA,WAAYwmB,WAAaxmB,QAAQ5F,aACjCqsB,aAAaD,WAAYV,YAUjC,QAASW,cAAazmB,QAAS6lB,UAC3B,IAAK,GAAqB3tC,GAAI,EAAGA,EAAI8nB,QAAQ7nB,OAAQD,GAAK,EAAG,CACzD4lC,WAAasG,kBAAoCpkB,QAAQ9nB,GACzD,IAAqBsyB,cAAezR,KAAuBiH,QAAQ9nB,IAAK8nB,QAAY,EAAJ9nB,IAAQgQ,UAAU29B,SAClG,SAAY7qC,KAAKwvB,aAAaE,YAAaF,eAOnD,QAASkc,cACDzE,SACAA,UAAW,GAGXnE,WAAa6I,kBACbnF,qBAA0CA,qBAA4B,QAE1E1D,WAAa1B,eAAeoF,qBAAsB,EAClD,IAAqB5C,SAAU4C,qBAAqB5C,OACpDA,UAAWA,QAAQgI,QAAQpF,sBAC3B5G,oBAAoB4G,qBAAqBziC,MAAO87B,aAYpD,QAASgM,kBAAiBnrC,MAAOrC,KAAM0B,MAAO+Z,WAC1C,GAAI/Z,QAAU+rC,UAAW,CACrB,GAAqB52B,SAAU6I,KAAKrd,MACpC,IAAa,MAATX,MACAwhC,qBAAqB9f,UAAYA,SAASyH,gBAAgBhU,QAAQmtB,OAAQhkC,MACtE6W,QAAQmtB,OAAOnZ,gBAAgB7qB,UAElC,CACD,GAAqB0tC,UAAwB,MAAbjyB,UAAoBqsB,YAAYpmC,OAAS+Z,UAAU/Z,MACnFwhC,sBAAqB9f,UAAYA,SAASwF,aAAa/R,QAAQmtB,OAAQhkC,KAAM0tC,UACzE72B,QAAQmtB,OAAOpb,aAAa5oB,KAAM0tC,YAmBlD,QAASC,iBAAgBtrC,MAAOL,SAAUN,MAAO+Z,WAC7C,GAAI/Z,QAAU+rC,UAAd,CAEA,GAAqBx2B,MAAyByI,KAAKrd,OAC9BmkC,MAA2BvvB,KAAW,UAGtC5Q,KAAjBmgC,MAAMlX,SAENkX,MAAMlX,OAAS4d,wBAAwBj2B,KAAKvR,MAAO,GAEvD,IACqBkoC,WADAC,UAAYrH,MAAMlX,MAEvC,IAAIue,YAAcD,UAAYC,UAAU7rC,WACpC8rC,qBAAqBF,UAAWlsC,OAChCqsC,kBAAkB92B,UAEjB,CACDvV,MAAwC,MAAb+Z,UAAoBA,UAAU/Z,OAASomC,YAAYpmC,MAC9E,IAAqBsiC,QAAS/sB,KAAK+sB,MACnCd,sBAAqB9f,UAAYA,SAASiI,YAAY2Y,OAAQhiC,SAAUN,OACnEsiC,OAAO3Y,YAAc2Y,OAAO3Y,YAAYrpB,SAAUN,OAC/C,OAA4BM,UAAYN,QAYxD,QAASspC,aAAYrE,QAAS9f,MAAOnH,KAAMsuB,WACvC,OACIrH,QAASA,QACT9f,MAAOA,MACPonB,WAAYD,WAAaA,WAAY,GAAK,KAC1CE,kBAAe7nC,GACfipB,WAAQjpB,GACRsgB,YAAStgB,GACTqZ,KAAMA,MAUd,QAASouB,sBAAqBxe,OAAQ5tB,OAClC,IAAK,GAAqB7C,GAAI,EAAGA,EAAIywB,OAAOxwB,OAAQD,GAAK,EACrD4lC,WAAasG,kBAAoCzb,OAAOzwB,IACxD6gB,KAAuB4P,OAAOzwB,IAAKywB,OAAW,EAAJzwB,IAAU6C,MAU5D,QAASwrC,yBAAwBiB,WAAYC,WACzC,GAAqBzvB,OAAqB,KAAbwvB,aAAsC,EAC9CE,UAAY,IACjC,IAAI1vB,KAAO,EAGP,IAAK,GAFgB8iB,OAAQ0M,YAAc,GACtBG,QAAwB,IAAdF,UACLvvC,EAAI4iC,MAAwB/1B,GAAK+1B,MAAQ9iB,KAAM9f,EAAI6M,GAAI7M,IAAK,CAClF,GAAqB4xB,cAAiC,MAAU5xB,GAC3C0vC,iBAAmBD,QAAU7d,aAAanB,OAASmB,aAAa9J,OACrF,KAAK,GAAqB6nB,cAAcD,kBACpC,GAAIA,iBAAiBhtC,eAAeitC,YAAa,CAC7CH,UAAYA,aACZ,IAAqBI,cAAeF,iBAAiBC,YAChCE,YAAcL,UAAU9sC,eAAeitC,WAC5DE,aAAcL,UAAUG,YAAY7sC,KAAK9C,EAAG4vC,cACvCJ,UAAUG,aAAe3vC,EAAG4vC,eAKjD,MAAOJ,WAcX,QAASM,cAAatsC,MAAOusC,UAAWltC,OACpC,GAAIA,QAAU+rC,UAAW,CACrB,GAAqBoB,UAA6BnvB,KAAKrd,MACnDX,OACAwhC,qBAAqB9f,UAAYA,SAAS0H,SAAS+jB,SAAS7K,OAAQ4K,WAChEC,SAAS7K,OAAO8K,UAAUC,IAAIH,WAGlC1L,qBAAqB9f,UAAYA,SAAS2H,YAAY8jB,SAAS7K,OAAQ4K,WACnEC,SAAS7K,OAAO8K,UAAUp5B,OAAOk5B,YAYjD,QAASI,cAAa3sC,MAAO4sC,UAAWvtC,MAAOwtC,mBAC3C,GAAIxtC,QAAU+rC,UAAW,CACrB,GAAqBoB,UAA6BnvB,KAAKrd,MACvD,IAAa,MAATX,MACAwhC,qBAAqB9f,UACjBA,SAASgI,YAAYyjB,SAAS7K,OAAQiL,UAAWE,oBAAoBC,UACrEP,SAAS7K,OAAOqL,MAAMC,eAAeL,eAExC,CACD,GAAqBvB,UAAuC,kBAArBwB,mBAAkCA,kBAAkBxtC,OAASomC,YAAYpmC,MAChF,iBAArBwtC,qBACPxB,UAAsBwB,mBAC1BhM,qBAAqB9f,UACjBA,SAAS+H,SAAS0jB,SAAS7K,OAAQiL,UAAWvB,SAAUyB,oBAAoBC,UAC5EP,SAAS7K,OAAOqL,MAAMhkB,YAAY4jB,UAAWvB,YAY7D,QAASzmC,MAAK5E,MAAOX,OACjB+iC,WACI3D,WAAWU,YAAYkH,kBAAmB,+CAC9C,IAAqB6G,UAAoB,MAAT7tC,MAC3BwhC,qBAAqB9f,UAAYA,SAAS+S,WAAW2R,YAAYpmC,QAC9D0hB,SAASosB,eAAe1H,YAAYpmC,QACxC,KACiBuV,KAAOiyB,YAAY7mC,MAAO,EAAiBktC,SAEhE3G,WAAW,EACXrkB,YAA+BtN,KAAY,OAAGs4B,SAAU/N,aAW5D,QAASiO,aAAYptC,MAAOX,OACxB+iC,WAAasG,kBAAkB1oC,MAC/B,IAAqBqtC,cAAiChwB,KAAKrd,MAC3DoiC,YAAa1D,cAAc2O,aAAc,iBACrCA,aAAa1L,OAEbtiC,QAAU+rC,YACLvK,qBAAqB9f,UAAYA,SAASkT,SAASoZ,aAAa1L,OAAQ8D,YAAYpmC,QACjFguC,aAAa1L,OAAO2L,YAAc7H,YAAYpmC,SAItDguC,aAAa1L,OAASd,qBAAqB9f,UACvCA,SAAS+S,WAAW2R,YAAYpmC,QAChC0hB,SAASosB,eAAe1H,YAAYpmC,QACxCmkC,YAAY6J,aAAclO,cAiBlC,QAAS2J,iBAAgB9oC,MAAOmvB,UAAWf,aAAcoa,WACrD,GAAqBxd,SACrBoX,YACI3D,WAAWU,YAAYkH,kBAAmB,oDAC9CjE,WAAakI,wBACb,IAAqBjnC,OAAyB,qBAAyBA,KAYvE,IAVa,IADuB,KAARA,OAExBA,MAASrD,OAAS,GAAuB,EAA4B,EAARqD,MAG7DA,OAAS,EAEb,qBAAyBA,MAAQA,MACjC++B,WAAasG,kBAAkB1oC,MAAQ,GACvCpE,OAAOwD,eAAe+vB,UAAWoe,gBAAkBC,YAAY,EAAOnuC,MAAOymC,uBAC7EzoB,KAAKrd,OAASgrB,SAAWmE,UACrBnvB,OAASsmC,MAAM7pC,SACf6pC,MAAMtmC,OAA0B,aAC5BwoC,WAAW,CACXpG,WAAa1D,cAAcoH,qBAAqB3B,MAAO,6BACvD,IAAqBsJ,SAA8C,qBAA+B,OACjGA,QAAQ7B,aAAe6B,QAAQ7B,gBAAkBtsC,KAAKkpC,UAAWxoC,OAG1E,GAAqB0tC,UAA4B,aAAiBA,QAC9DA,WACAA,SAA0B,cAEsB,MAA/B,aAAiBC,YAA0E,IAAtB,EAA7B7H,qBAAqBziC,QAC9EulC,gBAAgB,qBAA0CjH,OAA0B,aAA2B,WAEnH,IAAqBwC,OAA2B2B,qBAA2B,KAO3E,OANI3B,QAASA,MAAM3f,OACfopB,mBAAmB5iB,SAA2B,aAAiBiC,OAAQkX,OAI3ExF,eAAe3+B,MAAOouB,aAAawQ,OAAQxQ,aAAayQ,QAASM,YAAYL,OACtE9T,SAWX,QAAS4iB,oBAAmB5iB,SAAUiC,OAAQkX,OAC1C,GAAqB0J,kBAAgD,KAA7B/H,qBAAqBziC,QAAiC,GAAsB,EAC/FyqC,iBAAqC3J,MAAmB,mBACpDngC,KAArB8pC,kBAAkCD,gBAAkBC,iBAAiBrxC,UACrEqxC,iBAAmBC,sBAAsBF,eAAgB5gB,OAAQkX,OAErE,IAAqB0H,eAAgBiC,iBAAiBD,eACtD,IAAIhC,cACA,IAAK,GAAqBrvC,GAAI,EAAGA,EAAIqvC,cAAcpvC,OAAQD,GAAK,EAC5D,SAA8BqvC,cAAcrvC,IAAMqvC,cAAkB,EAAJrvC,GAoB5E,QAASuxC,uBAAsBF,eAAgB5gB,OAAQkX,OACnD,GAAqB2J,kBAAmB3J,MAAM0H,gBAAkB1H,MAAM0H,iBACtEiC,kBAAiBD,gBAAkB,IAEnC,KAAK,GADgBrpB,OAA2B2f,MAAY,MAClC3nC,EAAI,EAAGA,EAAIgoB,MAAM/nB,OAAQD,GAAK,EAAG,CACvD,GAAqBmtC,UAAWnlB,MAAMhoB,GACjBwxC,kBAAoB/gB,OAAO0c,SAChD,QAA0B3lC,KAAtBgqC,kBAAiC,EACIF,iBAAiBD,kBAAoBC,iBAAiBD,qBAC7EvuC,KAAK0uC,kBAAmBxpB,MAAU,EAAJhoB,KAGpD,MAAOsxC,kBAeX,QAAS7L,WAAUjiC,MAAO8nC,eAAgBrjB,SAAU6f,QAAS9f,MAAOujB,WAChE3F,WACI3D,WAAWU,YAAYkH,kBAAmB,wDAC9C,IAAqB3R,eAAgB6R,SAAWT,qBAA0CA,qBAA4B,MACtH1D,YAAa1D,cAAchK,cAAe,kCAC1C,IAAqBiP,aACjB9B,SACAgB,UAAW,EAGXxiB,aAAckjB,oBAAoB7O,cAAeyK,aAAezK,cAAgB,KAChFjQ,SAAsB,MAAZA,SAAmB,KAAOA,SACpCvO,KAAM,KACN/S,OAAQg8B,YACRyH,iBAAkB,EAClB1D,QAAS,MAEQtuB,KAAOiyB,YAAY7mC,MAAO,MAAmBgE,GAAW2/B,WAC7E,IAAkB,MAAd/uB,KAAKuvB,MAAe,CAEpB,GAAqBqE,WAAYC,mBAAmB,KAAMV,UAAW,GACrEnzB,MAAKuvB,MAAQmC,MAAMtmC,OAAS2oC,YAAYrE,SAAW,KAAM9f,OAAS,QAAUgkB,WAAa,MAI7FF,cAAc1zB,KAAKyI,MACnB2rB,uBAAuBhpC,MAAO8nC,eAAgBC,WAC9CxB,UAAW,EACXnE,WAAa1B,eAAeoF,qBAAsB,EAClD,IAAqB5C,SAAUtuB,KAAKsuB,OAChCA,WAEAA,QAAQgI,QAAQt2B,MAEhB+uB,WAAWT,QAAUA,QAAQjB,aASrC,QAASgM,uBAAsBjuC,OAC3BoiC,WAAasG,kBAAkB1oC,OAC/B8lC,qBAAyCzoB,KAAKrd,OAC9CoiC,WAAa1B,eAAeoF,qBAAsB,GAClDS,UAAW,EACX,qBAA0ClpB,KAAKwlB,UAAY,EAC3DT,WAAa7D,WAAW,qBAA0CoD,WAAQ39B,GAAW,gEAGrFk8B,iBAAiBf,YAAaA,YAAYL,MAAOqB,cAQrD,QAAS+N,uBACD3H,SACAA,UAAW,GAGXnE,WAAa1B,eAAeoF,qBAAsB,GAClD1D,WAAa6I,kBACbnF,qBAA0CA,qBAA4B,QAE1E1D,WAAa1B,eAAeoF,qBAAsB,EAClD,IAAqB7D,WAA6B,oBAClDA,WAAUN,WAAS39B,GACnBo+B,WAAa1B,eAAeuB,UAAW,EAEvC,KADA,GAAqBY,WAAYZ,UAAU5kB,KAAKwlB,UACzCA,UAAYZ,UAAU5kB,KAAKwkB,MAAMplC,QAEpCsmC,WAAWd,UAAWY,WAM9B,QAAS0E,0BACL,IAAK,GAAqBtqC,SAAUkiC,YAAY2C,MAAmB,OAAZ7kC,QAAkBA,QAAUA,QAAQiZ,KACvF,GAAiC,IAA7BjZ,QAAQ2pC,kBAA0B,QAA6B/E,MAE/D,IAAK,GADgBsM,aAA+B,QAC1B3xC,EAAI,EAAGA,EAAI2xC,YAAYtM,MAAMplC,OAAQD,IAAK,CAChE,GAAqBoe,MAAOuzB,YAAYtM,MAAMrlC,EAC9C0qC,wBAAuBtsB,KAAyBA,KAAKyC,KAAc,SAAsBzC,KAAKyC,KAAa,QAAG0D,WAW9H,QAASqtB,mBAAkBC,aACvB,GAAqBpM,WAA+BsE,SAAWT,qBAA0CA,qBAA4B,MACrI1D,YAAa1B,eAAeuB,UAAW,EACvC,IAAqB0B,YAAa1B,UAAU5kB,KACvBwkB,MAAQ8B,WAAW9B,MACnByM,cAAgBnO,cAAgBwD,WAAWd,UAAYhB,MAAMplC,QAAUolC,MAAM8B,WAAWd,WACxF0L,eAAiBD,cAAgBD,cAAgB,aAAkChxB,KAAKlS,EAC7G,IAAIojC,eACAzI,qBAAuBjE,MAAM8B,WAAWd,aACxCT,WAAa1B,eAAeoF,qBAAsB,GAClDS,UAAW,EACXJ,UAAU,aAAkC9oB,KAAuB,0BAElE,CAED,GAAqBslB,SAAU8D,YAAY4H,YAAattB,SAAUytB,yBAAyBH,YAAapM,WAAY,KAAM,KAAM,EAC5H0B,YAAWT,UACXP,QAAQO,QAAUS,WAAWT,QAAQiD,UAAUxC,WAAWd,YAE9DsD,UAAUxD,QAASkE,YAAY,KAAM,EAAc,KAAMlE,UACzDgB,WAAWd,YAEf,OAAQ0L,eAcZ,QAASC,0BAAyBnjB,UAAWloB,QACzCi/B,WAAa1B,eAAev9B,OAAQ,EACpC,IAAqBsrC,YAAgC,OAAiB,MAAEpxB,IAIxE,QAHIgO,WAAaojB,WAAWhyC,QAAmC,MAAzBgyC,WAAWpjB,cAC7CojB,WAAWpjB,WAAaic,eAErBmH,WAAWpjB,WAMtB,QAASqjB,mBACLnI,UAAW,CACX,IAAqBtD,UAAW6C,qBAAyC3G,YAAgB,KACpE8C,UAA8B6D,qBAA2B,MAC9E,IAAI7D,UAAW,CACXG,WAAa1B,eAAeuC,SAAU,GACtCb,WAAa1B,eAAeuB,UAAW,EACvC,IAAqB0M,gBAAiB1M,UAAU5kB,KAC3BuxB,aAAeD,eAAe9L,WAAa8L,eAAe9M,MAAMplC,OAA2BkyC,eAAe9M,MAAM8M,eAAe9L,UAAY,GAC5J,MACiD,MAAhB+L,cAA8BA,aAAavxB,KAAKlS,KAAO83B,SAAS5lB,KAAKlS,KAEtGu3B,WAAWT,UAAWgB,SAAU0L,eAAe9L,UAAY,GAGnE2D,UAA8C,YAAuB,QACrEpE,WAAalE,YAAYqI,UAAU,EAAO,YAC1CnE,WAAa1B,eAAeoF,qBAAsB,GAatD,QAAS6B,kBAAiBkG,eAAgBgB,cAItC,GAHA3O,iBAAiBf,YAAaA,YAAYL,MAAOqB,cACjDG,oBAAoBnB,YAAaA,YAAYL,MAAOqB,cAEpC,MADmCmG,MAAMuH,gBAAkBppB,SACrD,CAClB2d,WAAasG,kBAAkBmG,aAC/B,IAAqBr6B,SAA4B,KAASq6B,aAC1DzM,YAAa1B,eAAelsB,QAAS,GACrC4tB,WACI1D,cAAclqB,QAAQ6I,KAAM,uDAChC,IAAqBoE,UAA8BjN,QAAa,IAE3C,GAAjBiN,SAASpe,QACT++B,WAAasG,kBAAkBmF,gBAC/BiB,sBAAsBrtB,SAAUjN,QAASu6B,qBAAqB1xB,KAAKwwB,oBA2B/E,QAASmB,eAAchvC,MAAOqlC,UAAWC,eAGrC,IAAK,GAFgB2J,iBAAkB5J,UAAYA,UAAU5oC,OAAS,EAAI,EACrDyyC,iBAAmB,GAAI3xC,OAAM0xC,iBACxBzyC,EAAI,EAAGA,EAAIyyC,gBAAiBzyC,IAClD0yC,iBAAiB1yC,KAIrB,KAFA,GAAqB2yC,eAAgBC,kBAAkBjQ,aAClCkQ,eAAiBF,cAAcrN,MAC1B,OAAnBuN,gBAAyB,CAI5B,GAAIhK,WAAagK,eAAelL,MAAO,CAEnC+K,iBADkC9J,sBAAsBiK,eAAelL,MAAOkB,UAA4B,gBAC7E/lC,KAAK+vC,oBAGlCH,kBAAiB,GAAG5vC,KAAK+vC,eAE7BA,gBAAiBA,eAAen5B,KAEpCksB,WAAa4E,eAAehnC,OAC5Bqd,KAAKrd,OAASkvC,iBAUlB,QAASI,wBAAuBC,eAAgBC,cAAeC,cAE3D,GADArN,WAAalE,cAAcsR,gBAAiBC,aAAc,sEACrDA,aAAL,CAIA,GAAqBC,oBAAqBH,eAAelyB,IACrDqyB,oBAAmB/I,KACnB+I,mBAAmB/I,KAAK1F,cAAgBuO,cAGxCE,mBAAmB3N,KAAOyN,cAE9BE,mBAAmB/I,KAAO8I,aAC1BA,aAAaxO,cAAgBsO,gBAYjC,QAASI,YAAWxxB,UAAWyxB,WAAYC,cAAerrB,WAChC,KAAlBqrB,gBAA4BA,cAAgB,EAChD,IAAqBj7B,MAAOiyB,YAAY1oB,UAAW,EAAoB,MAAQ4jB,KAAM,KAAM4E,KAAM,MAC/E,OAAd/xB,KAAKuvB,QACLvvB,KAAKuvB,MAAQwE,YAAY,KAAMnkB,OAAS,KAAM,KAAM,OAExD+hB,UAAW,CAOX,KAAK,GANgB7R,eAAgB9f,KAAKzR,OAErBgsC,cAAgBC,kBAAkBjQ,aAElC2Q,iBAAyDX,cAAmB,KAAO,KAAES,YAAYC,eAE5FrzC,EAAI,EAAGA,EAAIszC,iBAAiBrzC,OAAQD,IAAK,CAC/D,GAAqBuzC,eAAgBD,iBAAiBtzC,EACtD,IAAkD,IAAvB,EAAtBuzC,cAAc1sC,OAAmD,CAClE,GAAqB2sC,qBAAsB,cAAmC3yB,IAC9EiyB,wBAAuB16B,KAAMo7B,oBAAoBjO,KAAMiO,oBAAoBrJ,UAG3E2I,wBAAuB16B,KAAuB,cAAkC,eAGxF,GAAI2uB,oBAAoB7O,cAAeyK,aAInC,IAFA,GAAqB4Q,eAAgBn7B,KAAKyI,KAAK0kB,KAC1BkO,kBAAoBr7B,KAAKyI,KAAKspB,KAC5CoJ,eACHrM,oBAAqC,cAAiBhP,cAAeyK,aACrE4Q,cAAgBA,gBAAkBE,kBAAoB,KAAOF,cAAc9O,cAUvF,QAASmO,mBAAkBc,OAEvB,IADA,GAAqBC,eAAgBD,MAAMt7B,KACU,IAAvB,EAAtBu7B,cAAc9sC,QAClB++B,WAAa1D,cAAcwR,MAAM/sC,OAAQ,gBACzC+sC,MAA2BA,MAAa,OACxCC,cAAgBD,MAAMt7B,IAI1B,OAFAwtB,YAAa1B,eAAeyP,cAAe,GAC3C/N,WAAa1D,cAAcyR,cAAc9yB,KAAM,aACvB,cAY5B,QAASirB,eAAcvtB,OAGnB,MAFAokB,aAAYwH,KAAQxH,YAAYwH,KAAKzwB,KAAO6E,MAAUokB,YAAY2C,MAAQ/mB,MAC1EokB,YAAYwH,KAAO5rB,MACZA,MAOX,QAAS2wB,mBAAkB92B,OAEnBA,KAAKyI,MAA4B,EAAlBzI,KAAKyI,KAAKha,QACzBuR,KAAKyI,KAAKha,OAAS,GAU3B,QAASonC,4BAA2B7vB,KAAMwvB,YACtC,MAAO,UAAU7mC,GAEb,MADA6sC,eAAcx1B,MACPwvB,WAAW7mC,IAU1B,QAASonC,iCAAgC/vB,KAAMwvB,YAC3C,MAAO,UAAU7mC,GACb6sC,cAAcx1B,OACQ,IAAlBwvB,WAAW7mC,KACXA,EAAE8sC,iBAEF9sC,EAAEoK,aAAc,IAS5B,QAASyiC,eAAcx1B,MAEnB,IADA,GAAqBukB,aAAcvkB,KACN,MAAtBukB,YAAYh8B,QACfg8B,YAAY97B,OAAS,EACrB87B,YAAcA,YAAYh8B,MAE9Bg8B,aAAY97B,OAAS,EACrB++B,WAAa1D,cAA+B,YAAgBz5B,QAAS,eACrEqrC,aAA+B,YAAuB,SAgB1D,QAASA,cAAaC,aAClB,GAAIA,YAAYC,OAASC,eAAgB,CACrC,GAAqBC,MACrBH,aAAYC,MAAQ,GAAIG,SAAQ,SAAUC,GAAK,MAAOF,OAAQE,IAC9DL,YAAYM,UAAU,WAClBC,KAAKP,YAAYrjC,WACjB,MAAU,MACVqjC,YAAYC,MAAQC,kBAmBhC,QAASK,MAAK5jC,WACV,GAAqBo1B,UAAWyO,YAAY7jC,WACvB8jC,cAAmC1O,SAAiB,QAAEp1B,UACtD+jC,SAAWC,8BAA8BF,cAC9D5O,YAAa1D,cAAcuS,SAAS5zB,KAAM,sDAC1CmqB,0BAA0ByJ,SAAU3O,SAAU0O,eASlD,QAASD,aAAY7jC,WACjBk1B,WAAa1D,cAAcxxB,UAAW,YAGtC,KAFA,GAAqBikC,cAAeD,8BAA8BhkC,WAC7CgjC,MAAQiB,aAAav2B,KACnCs1B,MAAM/sC,QACT+sC,MAAQA,MAAM/sC,MAElB,OAAO+sC,OAiBX,QAASnU,eAAc7uB,WACnB,GAAqB+jC,UAAWC,8BAA8BhkC,UAC9Dk1B,YAAa1D,cAAcuS,SAAS5zB,KAAM,sDAC1CyxB,sBAAwCmC,SAAa,KAAGA,SAAU/jC,WAUtE,QAAS4hC,uBAAsBrtB,SAAUwvB,SAAU/jC,WAC/C,GAAqBkkC,gBAAiBH,SAAS5tC,OAAS,GACnCohB,SAA8BwsB,SAASr2B,KAAKkkB,MAAMzhB,KAAK+zB,gBAAkB3sB,SACzEkZ,QAAUwI,UAAU1kB,SAAUwvB,SACnD,IAAgB,MAAZxsB,SACA,IACIA,SAASvX,UAAWizB,cAExB,QACIoH,yBACAf,UAAU7I,UAgCtB,QAAS0T,gBAELjP,WACIlE,YAAYiC,cAAc,EAAM,iEACC,MAAjChB,YAAYkH,oBACZtpB,aAAeoiB,YAAYkH,kBAAoBhpB,KAAK5gB,QAU5D,QAASsC,MAAKM,OACV,GAAI8gC,aAEA,MADAkR,gBACOh0B,KAAKN,gBAAkB1d,KAElC,IAAqBuoB,SAAUvoB,QAAU+rC,WAAa5F,YAAYnoB,KAAKN,cAAe1d,MAKtF,OAJIuoB,WACAvK,KAAKN,cAAgB1d,OAEzB0d,eACO6K,QAAUvoB,MAAQ+rC,UAgB7B,QAASkG,gBAAe5xC,QACpB0iC,WAAa5D,eAAe,EAAG9+B,OAAOjD,OAAQ,iCAC9C2lC,WAAalE,YAAYx+B,OAAOjD,OAAS,EAAG,EAAG,sCAE/C,KAAK,GADgB80C,YAAY,EACP/0C,EAAI,EAAGA,EAAIkD,OAAOjD,OAAQD,GAAK,EAErDg1C,eAAe9xC,OAAOlD,MAAQ+0C,WAAY,EAE9C,KAAKA,UACD,MAAOnG,UAIX,KAAK,GADgBtxB,SAAUpa,OAAO,GACZlD,EAAI,EAAGA,EAAIkD,OAAOjD,OAAQD,GAAK,EACrDsd,SAAW2rB,YAAY/lC,OAAOlD,IAAMkD,OAAOlD,EAAI,EAEnD,OAAOsd,SAUX,QAAS23B,gBAAe5d,OAAQ5M,GAAItB,QAEhC,MADiC6rB,gBAAevqB,IAC7B4M,OAAS4R,YAAYxe,IAAMtB,OAASylB,UAW3D,QAASsG,gBAAe7d,OAAQ5M,GAAI0qB,GAAIzqB,GAAIvB,QAExC,MADiCisB,iBAAgB3qB,GAAIC,IAClC2M,OAAS4R,YAAYxe,IAAM0qB,GAAKlM,YAAYve,IAAMvB,OAASylB,UAalF,QAASyG,gBAAehe,OAAQ5M,GAAI0qB,GAAIzqB,GAAI4qB,GAAI3qB,GAAIxB,QAChD,GAAqB4rB,WAAYK,gBAAgB3qB,GAAIC,GAErD,OADAqqB,WAAYC,eAAerqB,KAAOoqB,UAC3BA,UAAY1d,OAAS4R,YAAYxe,IAAM0qB,GAAKlM,YAAYve,IAAM4qB,GAAKrM,YAAYte,IAAMxB,OACxFylB,UAeR,QAAS2G,gBAAele,OAAQ5M,GAAI0qB,GAAIzqB,GAAI4qB,GAAI3qB,GAAI6qB,GAAI5qB,GAAIzB,QAExD,MADiCssB,iBAAgBhrB,GAAIC,GAAIC,GAAIC,IAEzDyM,OAAS4R,YAAYxe,IAAM0qB,GAAKlM,YAAYve,IAAM4qB,GAAKrM,YAAYte,IAAM6qB,GAAKvM,YAAYre,IACtFzB,OACJylB,UAiBR,QAAS8G,gBAAere,OAAQ5M,GAAI0qB,GAAIzqB,GAAI4qB,GAAI3qB,GAAI6qB,GAAI5qB,GAAI+qB,GAAI9qB,GAAI1B,QAChE,GAAqB4rB,WAAYU,gBAAgBhrB,GAAIC,GAAIC,GAAIC,GAE7D,OADAmqB,WAAYC,eAAenqB,KAAOkqB,UAC3BA,UACH1d,OAAS4R,YAAYxe,IAAM0qB,GAAKlM,YAAYve,IAAM4qB,GAAKrM,YAAYte,IAAM6qB,GAAKvM,YAAYre,IAAM+qB,GAC5F1M,YAAYpe,IAAM1B,OACtBylB,UAmBR,QAASgH,gBAAeve,OAAQ5M,GAAI0qB,GAAIzqB,GAAI4qB,GAAI3qB,GAAI6qB,GAAI5qB,GAAI+qB,GAAI9qB,GAAIgrB,GAAI/qB,GAAI3B,QACxE,GAAqB4rB,WAAYU,gBAAgBhrB,GAAIC,GAAIC,GAAIC,GAE7D,OADAmqB,WAAYK,gBAAgBvqB,GAAIC,KAAOiqB,UAChCA,UACH1d,OAAS4R,YAAYxe,IAAM0qB,GAAKlM,YAAYve,IAAM4qB,GAAKrM,YAAYte,IAAM6qB,GAAKvM,YAAYre,IAAM+qB,GAC5F1M,YAAYpe,IAAMgrB,GAAK5M,YAAYne,IAAM3B,OAC7CylB,UAqBR,QAASkH,gBAAeze,OAAQ5M,GAAI0qB,GAAIzqB,GAAI4qB,GAAI3qB,GAAI6qB,GAAI5qB,GAAI+qB,GAAI9qB,GAAIgrB,GAAI/qB,GAAIirB,GAAIhrB,GAAI5B,QAChF,GAAqB4rB,WAAYU,gBAAgBhrB,GAAIC,GAAIC,GAAIC,GAG7D,OAFAmqB,WAAYK,gBAAgBvqB,GAAIC,KAAOiqB,UACvCA,UAAYC,eAAejqB,KAAOgqB,UAC3BA,UACH1d,OAAS4R,YAAYxe,IAAM0qB,GAAKlM,YAAYve,IAAM4qB,GAAKrM,YAAYte,IAAM6qB,GAAKvM,YAAYre,IAAM+qB,GAC5F1M,YAAYpe,IAAMgrB,GAAK5M,YAAYne,IAAMirB,GAAK9M,YAAYle,IAAM5B,OACpEylB,UAuBR,QAASoH,gBAAe3e,OAAQ5M,GAAI0qB,GAAIzqB,GAAI4qB,GAAI3qB,GAAI6qB,GAAI5qB,GAAI+qB,GAAI9qB,GAAIgrB,GAAI/qB,GAAIirB,GAAIhrB,GAAIkrB,GAAIjrB,GAAI7B,QACxF,GAAqB4rB,WAAYU,gBAAgBhrB,GAAIC,GAAIC,GAAIC,GAE7D,OADAmqB,WAAYU,gBAAgB5qB,GAAIC,GAAIC,GAAIC,KAAO+pB,UACxCA,UACH1d,OAAS4R,YAAYxe,IAAM0qB,GAAKlM,YAAYve,IAAM4qB,GAAKrM,YAAYte,IAAM6qB,GAAKvM,YAAYre,IAAM+qB,GAC5F1M,YAAYpe,IAAMgrB,GAAK5M,YAAYne,IAAMirB,GAAK9M,YAAYle,IAAMkrB,GAAKhN,YAAYje,IAAM7B,OAC3FylB,UASR,QAASsH,OAAM1yC,MAAOX,OAGdW,OAASsmC,MAAM7pC,SACf6pC,MAAMtmC,OAAS,MAEnBqd,KAAKrd,OAASX,MAQlB,QAASszC,MAAK3yC,OAEV,MADAoiC,YAAasG,kBAAkB1oC,MAAOqd,MAC/BA,KAAKrd,OAMhB,QAAS4yC,kBAIL,MAHAxQ,YAAasG,kBAAkB3rB,cAC/BqlB,WACI9D,eAAejhB,KAAKN,cAAequB,UAAW,2CAC3C/tB,KAAKN,gBAOhB,QAASy0B,gBAAenyC,OAEpB,MADA+iC,YAAa9D,eAAej/B,MAAO+rC,UAAW,6CAC1CjL,cAAgBqF,YAAYnoB,KAAKN,cAAe1d,QAChD8gC,cAAgBkR,eAChBh0B,KAAKN,gBAAkB1d,OAChB,IAGP0d,gBACO,GAQf,QAAS81B,yBAAwBxzC,OAE7B,MADAmyC,gBAAenyC,OACRA,MAQX,QAASuyC,iBAAgBkB,KAAMC,MAC3B,GAAqBxB,WAAYC,eAAesB,KAChD,OAAOtB,gBAAeuB,OAASxB,UAUnC,QAASU,iBAAgBa,KAAMC,KAAMC,KAAMC,MACvC,GAAqB1B,WAAYK,gBAAgBkB,KAAMC,KACvD,OAAOnB,iBAAgBoB,KAAMC,OAAS1B,UAK1C,QAAS2B,YACL,MAAO/T,aAAYL,MAOvB,QAASiQ,sBAAqBoE,iBAG1B,MAAO51C,OAAMuI,QAAQqtC,iBAAmBA,gBAAgB,GAAKA,gBAKjE,QAAS7I,0BACLpM,YAAYqI,UAAU,EAAM,2CAKhC,QAAS0E,mBACLvM,cAAcoH,qBAAqB3iC,OAAQ,6CAO/C,QAASulC,mBAAkB1oC,MAAO2sB,KACnB,MAAPA,MACAA,IAAMtP,MACVmhB,eAAex+B,MAAO2sB,IAAMA,IAAIlwB,OAAS,EAAG,2CAMhD,QAASuqC,gBAAehnC,OACpBk+B,YAAY7gB,KAAK5gB,OAAQuD,MAAO,2CAOpC,QAASkxC,+BAA8BhkC,WACnCk1B,WAAa1D,cAAcxxB,UAAW,+BACtC,IAAqBikC,cAAiC,UAA+B5D,eAErF,OADAnL,YAAa1D,cAAcxxB,UAAW,6BAC/BikC,aAoGX,QAASiC,eAAcnuC,SAEnB,MAAOouC,gBAAe,GAAIC,WAAUruC,UAexC,QAASouC,gBAAexuC,KACpB,GAAqB0uC,WAAY,IAOjC,OANA1uC,KAAIuM,WAAY,EAChBvM,IAAIwN,QAAU,WACVkhC,WAAaA,UAAUloC,QAAQ,SAAUzO,IAAM,MAAOA,QACtD5B,KAAKoW,WAAY,GAErBvM,IAAIm7B,UAAY,SAAUpjC,IAAM,OAAQ22C,YAAcA,eAAiBj0C,KAAK1C,KACrEiI;;;;;;;AA6CX,QAAS2uC,iBAAgBzmB,cAAejmB,UACvB,KAATA,OAAmBA,QACvB,IAAqBqvB,iBAAkBrvB,KAAKqvB,iBAAmBsd,oBAC1CC,aAAiC3mB,cAA4B,cAC9E2mB,cAAa3yC,MAAQgsB,gBACrB2mB,aAAa3yC,KAAOgsB,cACxB,IAAqB7f,WACA+jC,SAAWnH,kBAAkB3T,gBAAiBrvB,KAAKs/B,MAAQsN,aAAatL,KACxEmI,aAEjBrjC,UAA4B,KAC5B2jC,UAAW/pC,KAAK+pC,WAAa8C,sBAC7BnD,MAAOoD,eAEUjW,QAAUwI,UAAUM,aAAa,EAAGtQ,gBAAgBC,eAAe6a,SAAUyC,aAAaxd,cAAeoR,cAAe,KAAMiJ,YAAamD,aAAanL,OAAS,EAAgB,GAAuC,KAC7O,KAEI,GAAqBsL,aAAc7d,YAAYib,SAAUyC,aAEzDxmC,WAAYqjC,YAAYrjC,UACpB6hC,qBAAqBjG,gBAAgB,EAAG4K,aAAa7K,IAAK6K,eAC9D3K,6BAA6B8K,YAAY9M,aAAc75B,WAE3D,QAIIi5B,UAAUxI,QAAS,MAIvB,MAFA72B,MAAKgtC,cAAgBhtC,KAAKgtC,aAAazoC,QAAQ,SAAU0oC,SAAW,MAAOA,SAAQ7mC,UAAWwmC,gBAC9F5C,KAAK5jC,WACEA,UA8FX,QAAS8mC,UAASzuC,SAAUxE,MACxB,GAAqBoK,IAAK,KAA0B8oC,cAG1C,OAAN9oC,KACAA,GAAK,KAA0B8oC,eAAiBC,kBAMpD,IAAqBC,UAAWhpC,GAAKipC,WAIhBC,KAAO,GAAKF,QAG7BA,UAAW,GACPA,SAAW,GAEX5uC,SAAS+uC,KAAOD,KAGhB9uC,SAASgvC,KAAOF,KAIhBF,SAAW,GACX5uC,SAASivC,KAAOH,KAGhB9uC,SAASkvC,KAAOJ,KAO5B,QAASK,2BAEL,MADAtS,YAAakI,yBACNqK,+BAAiD9O,2BAQ5D,QAAS8O,gCAA+B//B,MACpC,GAAqBmyB,cAAenyB,KAAKmyB,aACpBhM,eAAiBnmB,KAAKzR,QAAUyR,KAAKzR,OAAO4jC,YACjE,OAAIA,eAAgBhM,eACQ,aAErBnmB,KAAKmyB,cACR5jC,OAAQ43B,eACRnmB,KAAMA,KACN0/B,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLG,KAAwB,MAAlB7Z,eAAyB,EAAIA,eAAe6Z,KAAO7Z,eAAeuZ,IACxEO,KAAwB,MAAlB9Z,eAAyB,EAAIA,eAAe8Z,KAAO9Z,eAAewZ,IACxEO,KAAwB,MAAlB/Z,eAAyB,EAAIA,eAAe+Z,KAAO/Z,eAAeyZ,IACxEO,KAAwB,MAAlBha,eAAyB,EAAIA,eAAega,KAAOha,eAAe0Z,IACxElvC,SAAU,KACVyvC,YAAa,KACbC,iBAAkB,KAClBC,WAAY,KACZjM,kBAAmB,MAU3B,QAASkM,sBAAqBC,QAAS93C,OACnC,MAAO,IAAIkG,OAAM,oBAAsB4xC,QAAU,KAAO3P,YAAYnoC,OAAS,KASjF,QAAS+3C,oBAAmBC,GAAIx4B,KAC5Bk3B,SAASsB,GAAIx4B,IAAI/b,MAQrB,QAAS2sC,UAAS5wB,KACdu4B,mBAAmBX,0BAA2B53B,KA0BlD,QAASy4B,UAASj4C,MAAO+F,MAAO0C,cAC5B,MAAOyvC,uBAAsBd,0BAA2Bp3C,MAAO+F,MAAO0C,cAgB1E,QAAS0vC,qBACL,MAAOC,wBAAuBhB,2BAQlC,QAASiB,0BACL,MAAOC,yBAAwBlB,2BAMnC,QAASmB,2BACL,MAAOC,8BAA6BpB,0BAA2B,MAmCnE,QAASqB,iBAAgBpM,UACrBvH,WAAakI,wBACb,IAAqBkC,UAA6B3G,yBAClDzD,YAAa1B,eAAe8L,SAAU,EACtC,IAAqBwJ,UAA8BxJ,SAAe,KAClEpK,YAAa1D,cAAcsX,SAAU,kBACrC,IAAqBxxB,OAAQwxB,SAASxxB,KACtC,IAAIA,MACA,IAAK,GAAqBhoB,GAAI,EAAGA,EAAIgoB,MAAM/nB,OAAQD,GAAQ,EACvD,GAAIgoB,MAAMhoB,IAAMmtC,SACZ,MAAOnlB,OAAMhoB,EAAI,GAcjC,QAASs5C,8BAA6BR,GAAIrwC,SACtC,GAAIqwC,GAAGrM,kBACH,MAAOqM,IAAGrM,iBACd,IAAqBjI,aAAcsU,GAAG1gC,IACtC,OAAyB,QAArBosB,YAAY3jB,KAELi4B,GAAGrM,kBAAoBgN,8BAA8BjV,YAAYpmB,KAAKhG,MAE5B,IAAvB,EAApBosB,YAAY39B,OAEXiyC,GAAGrM,kBAAoBmK,cAAcnuC,SAExB,KAO5B,QAASgxC,+BAA8BjV,aACnC,GAAqBiQ,UAAWiF,4BAA4BlV,aACvCmV,aAAelF,SAASlK,aACxBqP,YAAcD,cAAgBA,aAAalN,iBAChE,OAAOmN,cACHhD,cAAcnC,SAASr2B,KAAKyC,KAAK4zB,SAAS5tC,OAAS,KAS3D,QAAS6yC,6BAA4BthC,MACjC,KAA4C,IAAvB,EAAbA,KAAKvR,QACTuR,KAAOA,KAAKgG,KAAKhG,IAErB,OAAwB,MAqB5B,QAAS4gC,uBAAsBF,GAAIh4C,MAAO+F,MAAO0C,cAC7C,GAAqBswC,WAAYC,aAAah5C,MAG9C,IAAkB,OAAd+4C,UAAoB,CACpB,GAAqBE,gBAAiBjB,GAAG/vC,QACzC,KAAKgxC,eAAgB,CACjB,GAAoB,MAAhBxwC,aACA,MAAOA,aAEX,MAAMovC,sBAAqB,WAAY73C,OAE3Ci5C,eAAe1zC,IAAIvF,WAInB,KADA,GAAqBiI,UAAW+vC,GACzB/vC,WAGHA,SAAWixC,0BAA0BjxC,SAAU8wC,aAHlC,CAWb,GAAqBzhC,MAAOrP,SAASqP,KAGhB6hC,QAAU7hC,KAAKvR,MACfiZ,MAAkB,KAAVm6B,UAAmC,CAChE,IAAa,IAATn6B,KAKA,IAAK,GAFgB8iB,OAAQqX,SAAW,GACnBnQ,MAAQ1xB,KAAKgG,KAAKkkB,MAAMzhB,KACnB7gB,EAAI4iC,MAAwB/1B,GAAK+1B,MAAQ9iB,KAAM9f,EAAI6M,GAAI7M,IAAK,CAGlF,GAAqB4xB,cAAiCkY,MAAM9pC,EAC5D,IAAI4xB,aAAasf,UAAYtf,aAAartB,MAAQzD,MAC9C,MAAOyxC,sBAAqBn6B,KAAKgG,KAAKyC,KAAK7gB,IAMvD+I,SAAWA,SAASpC,OAK5B,KAAMgyC,sBAAqB,YAAa73C,OAc5C,QAASg5C,cAAav1C,MAClB,GAAqBoK,IAAK,KAA0B8oC,cACpD,OAAqB,gBAAP9oC,IAAkBA,GAAKipC,WAAa,KAqBtD,QAASoC,2BAA0BE,cAAevC,UAQ9C,IAJA,GAAqBE,MAAO,GAAKF,SAGZ5uC,SAAWmxC,cACzBnxC,UAAU,CAIb,GAAqBlG,OAAQ80C,SAAW,GAAMA,SAAW,GAAK5uC,SAAS+uC,IAAM/uC,SAASgvC,IACjFJ,SAAW,GAAK5uC,SAASivC,IAAMjvC,SAASkvC,GAG7C,KAAKp1C,MAAQg1C,QAAUA,KACnB,MAAO9uC,SAIXlG,OAAQ80C,SAAW,GAAMA,SAAW,GAAK5uC,SAASqvC,KAAOrvC,SAASsvC,KAC7DV,SAAW,GAAK5uC,SAASuvC,KAAOvvC,SAASwvC,KAG9CxvC,SAAYlG,MAAQg1C,KAAQ9uC,SAASpC,OAAS,KAElD,MAAO,MAeX,QAASwzC,uBAAsBrB,IAC3B,MAAOA,IAAGJ,aACLI,GAAGJ,WAAa,GAAI0B,cAAsD,IAAvB,EAAhBtB,GAAG1gC,KAAKvR,OAAoD,KAC5FiyC,GAAG1gC,KAAK+sB,SAkCpB,QAASiU,yBAAwBN,IAC7B,MAAOA,IAAGL,mBACLK,GAAGL,iBAAmB,GAAI4B,oBAAqCvB,GAAO,OAsJ/E,QAASI,wBAAuBJ,IAC5BlT,WAAa1B,eAAe4U,GAAG1gC,KAAM,EACrC,IAAqByI,MAA0Bi4B,GAAQ,KAAEj4B,IACzD,OAAOi4B,IAAGN,cAAgBM,GAAGN,YAAc,GAAI8B,eAAcH,sBAAsBrB,IAAwBj4B,KAAc,SAAGuoB;;;;;;;AAoDhI,QAASmR,iBAAgBC,qBACrB,GAAqBj2C,MAAOi2C,oBAAoBj2C,KAC3B+b,KACjB/b,KAAMA,KACN2sC,SAAU,KACV7E,EAAGmO,oBAAoB38C,QACvB+tC,IAAK,oBAAyCA,KAAwB,KACtE3jB,SAAU,oBAAyCA,UAA6B,KAChFwyB,EAAGD,oBAAoBE,cAAgBC,OACvCxJ,WAAYqJ,oBAAoBrJ,YAAc,KAC9C1gB,OAAQmqB,aAAaJ,oBAAoB/pB,QACzCoqB,mBAAoBL,oBAAoBK,oBAAsB,KAC9D/yB,QAAS8yB,aAAaJ,oBAAoB1yB,SAC1CgzB,QAASF,aAAaJ,oBAAoBM,SAC1CphB,aAAc5Y,qBAAqB05B,oBAAoB9gB,eAAiB,KACxEoT,SAAU0N,oBAAoB1N,SAC9B1K,OAAQ79B,KAAKhG,UAAUw0B,UAAY,KACnCsP,QAAS99B,KAAKhG,UAAUy0B,WAAa,KACrCgQ,iBAAkBz+B,KAAKhG,UAAUg2B,oBAAsB,KACvD2O,oBAAqB3+B,KAAKhG,UAAUi2B,uBAAyB,KAC7D4O,cAAe7+B,KAAKhG,UAAUk2B,iBAAmB,KACjD6O,iBAAkB/+B,KAAKhG,UAAUm2B,oBAAsB,KACvD8O,UAAWj/B,KAAKhG,UAAUkwB,aAAe,KACzCsd,OAAQ,oBAAyCgP,kBAC7CtwC,wBAAwBuwC,QAEXzD,QAAUiD,oBAAoBS,QAEnD,OADA1D,UAAWA,QAAQ1oC,QAAQ,SAAUzO,IAAM,MAAOA,IAAGkgB,OAC9CA,IAOX,QAAS46B,oBAAmBC,YA6CxB,QAASC,kBAAiBC,cACtB,MAAO,YACH,GAAqBC,eAAgB98C,KAAK+8C,eACrB,OAAjBD,gBACA98C,KAAKs0B,YAAYwoB,eACjB98C,KAAK+8C,gBAAkB,MAE3BF,cAAgBA,aAAa76C,MAAMhC,OAnD3C,GAAqBiyB,QAAS0qB,WAAW1qB,OACpB+qB,MAAQL,WAAW52C,KAAKhG,UACxBs8C,mBAAqBM,WAAWN,kBAErDz7C,QAAOwD,eAAe44C,MAAOD,gBAAkB14C,UAAO2E,GAAWi0C,UAAU,GA0B3E,KAAK,GAAqBC,UAAUjrB,SAzBtB,SAAUirB,QACpB,GAAqBC,QAASlrB,OAAOirB,QAChBE,aAAef,oBAAsBA,mBAAmBc,SAAWD,OACnEG,cAAgBN,eAAiBI,MAEtDv8C,QAAOwD,eAAe44C,MAAOK,eAAiBh5C,UAAO2E,GAAWi0C,UAAU,GAC1E,IAAqBK,cAAe18C,OAAO28C,yBAAyBP,MAAOG,OAE3Ev8C,QAAOwD,eAAe44C,MAAOG,QACzBt1C,IAAK,WACD,MAAQy1C,eAAgBA,aAAaz1C,IAAOy1C,aAAaz1C,IAAIlE,KAAK3D,MAC9DA,KAAKq9C,gBAEbt1C,IAAK,SAAU1D,OACX,GAAqBy4C,eAAgB98C,KAAK+8C,gBACrBS,kBAAkCx0C,KAAlB8zC,aAChB,OAAjBA,gBACAA,cAAgB98C,KAAK+8C,oBAEzBD,cAAcM,cAAgB,GAAI1nB,cAAa11B,KAAKq9C,eAAgBh5C,MAAOm5C,eAC1EF,cAAgBA,aAAav1C,IAAOu1C,aAAav1C,IAAIpE,KAAK3D,KAAMqE,OAC7DrE,KAAKq9C,eAAiBh5C,UAK1B64C,OAKa,OAArBP,WAAW/Y,SACX+Y,WAAW/Y,OAASgZ,iBAAiBD,WAAW/Y,SAEpD+Y,WAAW9Y,QAAU+Y,iBAAiBD,WAAW9Y,SAqBrD,QAAS4Z,eAAcd,YACnBA,WAAWjK,SAAWA,SAM1B,QAASyJ,WAMT,QAASC,cAAavyC,KAClB,GAAW,MAAPA,IACA,MAAO6zC,QACX,IAAqBC,UACrB,KAAK,GAAqBC,eAAe/zC,KACrC8zC,OAAO9zC,IAAI+zC,cAAgBA,WAE/B,OAAOD,QAiCX,QAASE,YAAW/5C,IAChB,GAAIiC,MAAOjC,GAAGiC,IACd,QACI8nC,EAF0B/pC,GAAGzE,QAG7By+C,MAAe,IAH8Bh6C,GAAGg6C,KAIhD9Y,UAAWj/B,KAAKhG,UAAUkwB,aAAe;;;;;;;AAwBjD,QAAS8tB,eAAcC,OAAQC,SAC3B,MAAO/S,mBAAoB2M,wBAAwBoG,QAAUD,OAAOr6C,KAAKs6C,SAAWD,UAChFpG,iBAWR,QAASsG,eAAcF,OAAQG,IAAKF,SAChC,MAAOzH,gBAAe2H,KAClBtG,wBAAwBoG,QAAUD,OAAOr6C,KAAKs6C,QAASE,KAAOH,OAAOG,MACrEvG,iBAYR,QAASwG,eAAcJ,OAAQlG,KAAMC,KAAMkG,SACvC,MAAOrH,iBAAgBkB,KAAMC,MACzBF,wBAAwBoG,QAAUD,OAAOr6C,KAAKs6C,QAASnG,KAAMC,MAAQiG,OAAOlG,KAAMC,OAClFH,iBAaR,QAASyG,eAAcL,OAAQlG,KAAMC,KAAMC,KAAMiG,SAC7C,GAAqB1H,WAAYK,gBAAgBkB,KAAMC,KACvD,OAAOvB,gBAAewB,OAASzB,UAC3BsB,wBAAwBoG,QAAUD,OAAOr6C,KAAKs6C,QAASnG,KAAMC,KAAMC,MAAQgG,OAAOlG,KAAMC,KAAMC,OAC9FJ,iBAcR,QAAS0G,eAAcN,OAAQlG,KAAMC,KAAMC,KAAMC,KAAMgG,SACnD,MAAOhH,iBAAgBa,KAAMC,KAAMC,KAAMC,MACrCJ,wBAAwBoG,QAAUD,OAAOr6C,KAAKs6C,QAASnG,KAAMC,KAAMC,KAAMC,MAAQ+F,OAAOlG,KAAMC,KAAMC,KAAMC,OAC1GL,iBAeR,QAAS2G,eAAcP,OAAQlG,KAAMC,KAAMC,KAAMC,KAAMuG,KAAMP,SACzD,GAAqB1H,WAAYU,gBAAgBa,KAAMC,KAAMC,KAAMC,KACnE,OAAOzB,gBAAegI,OAASjI,UAC3BsB,wBAAwBoG,QAAUD,OAAOr6C,KAAKs6C,QAASnG,KAAMC,KAAMC,KAAMC,KAAMuG,MAC3ER,OAAOlG,KAAMC,KAAMC,KAAMC,KAAMuG,OACnC5G,iBAgBR,QAAS6G,eAAcT,OAAQlG,KAAMC,KAAMC,KAAMC,KAAMuG,KAAME,KAAMT,SAC/D,GAAqB1H,WAAYU,gBAAgBa,KAAMC,KAAMC,KAAMC,KACnE,OAAOrB,iBAAgB4H,KAAME,OAASnI,UAClCsB,wBAAwBoG,QAAUD,OAAOr6C,KAAKs6C,QAASnG,KAAMC,KAAMC,KAAMC,KAAMuG,KAAME,MACjFV,OAAOlG,KAAMC,KAAMC,KAAMC,KAAMuG,KAAME,OACzC9G,iBAiBR,QAAS+G,eAAcX,OAAQlG,KAAMC,KAAMC,KAAMC,KAAMuG,KAAME,KAAME,KAAMX,SACrE,GAAqB1H,WAAYU,gBAAgBa,KAAMC,KAAMC,KAAMC,KAEnE,OADA1B,WAAYK,gBAAgB4H,KAAME,OAASnI,UACpCC,eAAeoI,OAASrI,UAC3BsB,wBAAwBoG,QAAUD,OAAOr6C,KAAKs6C,QAASnG,KAAMC,KAAMC,KAAMC,KAAMuG,KAAME,KAAME,MACvFZ,OAAOlG,KAAMC,KAAMC,KAAMC,KAAMuG,KAAME,KAAME,OAC/ChH,iBAkBR,QAASiH,eAAcb,OAAQlG,KAAMC,KAAMC,KAAMC,KAAMuG,KAAME,KAAME,KAAME,KAAMb,SAC3E,GAAqB1H,WAAYU,gBAAgBa,KAAMC,KAAMC,KAAMC,KACnE,OAAOhB,iBAAgBuH,KAAME,KAAME,KAAME,OAASvI,UAC9CsB,wBAAwBoG,QAAUD,OAAOr6C,KAAKs6C,QAASnG,KAAMC,KAAMC,KAAMC,KAAMuG,KAAME,KAAME,KAAME,MAC7Fd,OAAOlG,KAAMC,KAAMC,KAAMC,KAAMuG,KAAME,KAAME,KAAME,OACrDlH,iBAcR,QAASmH,eAAcf,OAAQgB,KAAMf,SAEjC,IAAK,GADgB1H,YAAY,EACP/0C,EAAI,EAAGA,EAAIw9C,KAAKv9C,OAAQD,IAC9Cg1C,eAAewI,KAAKx9C,MAAQ+0C,WAAY,EAE5C,OAAOA,WAAYsB,wBAAwBmG,OAAOh8C,MAAMi8C,QAASe,OAASpH;;;;;;;AAuB9E,QAASpf,MAAKxzB,MAAOsuB,QAAS2rB,eAC1B,GAAqBnb,OAAQoU,UACzBpU,OAAMC,oBACND,MAAMzhB,KAAKrd,OAASsuB,QACK,MAArBA,QAAQ0R,YACPlB,MAAMmB,eAAiBnB,MAAMmB,kBAAoB3gC,KAAKU,MAAOsuB,QAAQ0R,WAG9E,IAAqBka,cAAe5rB,QAAQwqB,MAAQmB,cAAgBA,cAAgB3rB,QAAQua,GAE5F,OADA6J,OAAM1yC,MAAOk6C,cACNA,aAYX,QAASC,WAAUn6C,MAAOknB,IACtB,GAAqBgzB,cAAevH,KAAK3yC,MACzC,OAAOo6C,QAAOp6C,OAASk5C,cAAcgB,aAAazmB,UAAWvM,GAAIgzB,cAC7DA,aAAazmB,UAAUvM,IAa/B,QAASmzB,WAAUr6C,MAAOknB,GAAIC,IAC1B,GAAqB+yB,cAAevH,KAAK3yC,MACzC,OAAOo6C,QAAOp6C,OAASo5C,cAAcc,aAAazmB,UAAWvM,GAAIC,GAAI+yB,cACjEA,aAAazmB,UAAUvM,GAAIC,IAcnC,QAASmzB,WAAUt6C,MAAOknB,GAAIC,GAAIC,IAC9B,GAAqB8yB,cAAevH,KAAK3yC,MACzC,OAAOo6C,QAAOp6C,OAASq5C,cAAca,aAAazmB,UAAU10B,KAAKm7C,cAAehzB,GAAIC,GAAIC,IACpF8yB,aAAazmB,UAAUvM,GAAIC,GAAIC,IAevC,QAASmzB,WAAUv6C,MAAOknB,GAAIC,GAAIC,GAAIC,IAClC,GAAqB6yB,cAAevH,KAAK3yC,MACzC,OAAOo6C,QAAOp6C,OAASs5C,cAAcY,aAAazmB,UAAWvM,GAAIC,GAAIC,GAAIC,GAAI6yB,cACzEA,aAAazmB,UAAUvM,GAAIC,GAAIC,GAAIC,IAY3C,QAASmzB,WAAUx6C,MAAON,QACtB,GAAqBw6C,cAAevH,KAAK3yC,MACzC,OAAOo6C,QAAOp6C,OAAS+5C,cAAcG,aAAazmB,UAAW/zB,OAAQw6C,cACjEA,aAAazmB,UAAUz2B,MAAMk9C,aAAcx6C,QAMnD,QAAS06C,QAAOp6C,OACZ,MAA0BkzC,YAAW71B,KAAKrd,OAAS84C,KAwPvD,QAAS2B,0BAAyBtW,MAAOrX,UACrC,GAAqB8e,YAAazH,MAAMyH,UACxC,IAAIA,WACA,IAAK,GAAqBpvC,GAAI,EAAGA,EAAIovC,WAAWnvC,OAAQD,GAAK,EACzD,GAAIovC,WAAWpvC,KAAOswB,SAClB,MAAyB8e,YAAWpvC,EAAI,EAIpD,OAAO,MASX,QAASk+C,0BAAyB9lC,KAAM7T,MAGpC,IAAK,GAFgBulC,OAAQ1xB,KAAKgG,KAAKkkB,MAAMzhB,KACxBha,MAAQuR,KAAKvR,MACR7G,EAAI6G,OAAS,GACvCgG,GAAK7M,IAAc,KAAR6G,QAAiC,GAAqB7G,EAAI6M,GAAI7M,IAAK,CAC1E,GAAqBsgB,KAAwBwpB,MAAM9pC,EACnD,IAAIsgB,IAAI4wB,UAAY5wB,IAAI/b,OAASA,KAC7B,MAAOvE,GAGf,MAAO,MASX,QAASm+C,sBAAqB5T,aAAcnyB,KAAMgmC,KAAMC,cACpD,GAAID,eAAgBE,oBAChB,MAAOF,MAAKA,KAAK7T,aAAcnyB,KAAMimC,aAGrC,IAAqBE,aAAcL,yBAAyB9lC,KAAuB,KACnF,OAAoB,QAAhBmmC,YACOnmC,KAAKgG,KAAKyC,KAAK09B,aAGvB,KAOX,QAASrO,KAAI7nB,MAAOjQ,MAEhB,IADA,GAAqBmyB,cAAe4N,+BAAgD,MAC7E9vB,OAAO,CACV,GAAqBpQ,WAAYoQ,MAAMpQ,UAClB1T,KAAO0T,UAAU1T,IACtC,IAAIA,KAAM,CACN,GAAqB85C,cAAeH,yBAAyB9lC,KAAM7T,KACnE,IAAqB,OAAjB85C,aAAuB,CAGvB,GAAqB/nC,QAAS6nC,qBAAqB5T,aAAcnyB,KAAMH,UAAUmmC,MAAQ75C,KAAM85C,aAChF,QAAX/nC,QACAkoC,SAASn2B,MAAO/R,aAMxB,KAAK,GADgBga,UAA8BrY,UAAmB,SAC5CjY,EAAI,EAAGA,EAAIswB,SAASrwB,OAAQD,IAAK,CACvD4lC,WAAa1D,cAAc9pB,KAAKuvB,MAAO,aACvC,IAAqB0W,cAAeJ,yBAA4C7lC,KAAW,MAAGkY,SAAStwB,GACvG,IAAqB,OAAjBq+C,aAAuB,CAGvBzY,WAAa1D,cAAcjqB,UAAUmmC,KAAM,mCAC3C,IAAqB9nC,QAAS6nC,qBAAqB5T,aAAcnyB,KAAyBH,UAAe,KAAGomC,aAC7F,QAAX/nC,QACAkoC,SAASn2B,MAAO/R,SAKhC+R,MAAQA,MAAM3O,MAQtB,QAAS8kC,UAASn2B,MAAOo2B,eACrBp2B,MAAMnlB,OAAOJ,KAAK27C,eAClBp2B,MAAMvR,KAAKse,WAQf,QAASspB,iBAAgBzmC,UAAWmmC,MAChC,GAAqB90C,SAAUvI,MAAMuI,QAAQ2O,UAC7C,QACI1T,KAAM+E,QAAU,KAAwB,UACxCgnB,SAAUhnB,QAA2B,UAAc,KACnD80C,KAAMA,MAWd,QAASO,eAAcC,SAAUtpB,UAAWrd,UAAWmmC,MACnD,OACI1kC,KAAMklC,SACN9nC,KAAMwe,UACNrd,UAAWymC,gBAAgBzmC,UAAWmmC,MACtCl7C,OAAQ,UAAiC27C,aAsOjD,QAASx2B,OAAMy2B,YAAa7mC,UAAW8mC,QAASX,MAC5CxY,WAAakI,wBACb,IAAqBxY,WAAY,GAAI0pB,YAMrC,OAL+BzV,mBAAkB0V,WACzCC,MAAM5pB,UAAWrd,UAAW8mC,QAASX,MAC1B,MAAfU,aACA5I,MAAM4I,YAAaxpB,WAEhBA,UASX,QAAS6pB,cAAa7pB,WAClB,GAAqB8pB,eAAgB,SACrC,SAAI9pB,UAAUC,QACVD,UAAUK,MAAMypB,cAAcP,aAC9BvpB,UAAUQ,mBACH,GAqFf,QAASupB,cAAa9iC,YAClB,MAAIA,sBAAsBpM,SAAqD,SAA3C,WAAgCmvC,OACzD/iC,WAAWlb,WAEf4a,cAAcsjC,SAAUtW,YAAY1sB,aAe/C,QAASijC,eAAcC,aACnB,MAAIA,uBAAuBtvC,SAAsD,UAA5C,YAAiCmvC,OAC3DG,YAAYp+C,WAEhB0c,eAAekrB,YAAYwW,cAgBtC,QAASC,aAAYC,WACjB,MAAIA,qBAAqBxvC,SAAoD,QAA1C,UAA+BmvC,OACvDK,UAAUt+C,WAEdwZ,aAAaouB,YAAY0W,YAWpC,QAASC,qBAAoBC,mBACzB,GAAIA,4BAA6B1vC,SACqB,gBAAlD,kBAAuCmvC,OACvC,MAAOO,mBAAkBx+C,UAE7B,MAAM,IAAI2F,OAAM,iFAqBpB,QAAS84C,6BAA4BC,aACjC,MAAOC,+BAA8BD,YAAa,QAWtD,QAASE,8BAA6BC,cAClC,MAAOF,+BAA8BE,aAAc,SAWvD,QAASC,+BAA8BC,eACnC,MAAOJ,+BAA8BI,cAAe,UAWxD,QAASC,4BAA2BC,YAChC,MAAON,+BAA8BM,WAAY,OAWrD,QAASC,oCAAmCC,oBACxC,MAAOR,+BAA8BQ,mBAAoB,eAO7D,QAASR,+BAA8BS,cAAeC,MAClD,GAAqBC,SAA2B,GAAKxwC,QAAOswC,cAE5D,OADAE,SAAQrB,OAASoB,KACVC;;;;;;;;;;;;;;;;;;;;;;AAiRX,QAASC,WAAUz/C,KAAM0/C,aACrB,OAASt8C,KAAM,EAAiBpD,KAAMA,KAAM0/C,YAAaA,YAAar6C,YAkD1E,QAASs6C,WAAUC,QAASpgC,QAExB,WADe,KAAXA,SAAqBA,OAAS,OACzBpc,KAAM,EAAiBoc,OAAQA,OAAQogC,QAASA,SAoC7D,QAASC,SAAQC,MAAOz6C,SAEpB,WADgB,KAAZA,UAAsBA,QAAU,OAC3BjC,KAAM,EAAe08C,MAAOA,MAAOz6C,QAASA,SAuCzD,QAAS06C,YAAWD,MAAOz6C,SAEvB,WADgB,KAAZA,UAAsBA,QAAU,OAC3BjC,KAAM,EAAkB08C,MAAOA,MAAOz6C,QAASA,SA8C5D,QAAS26C,SAAQC,QACb,OAAS78C,KAAM,EAAeoc,OAAQygC,OAAQC,OAAQ,MAsD1D,QAASC,SAAQngD,KAAMwf,OAAQna,SAC3B,OAASjC,KAAM,EAAepD,KAAMA,KAAMwf,OAAQA,OAAQna,QAASA,SAiDvE,QAAS+6C,aAAYN,OACjB,OAAS18C,KAAM,EAAmB08C,MAAOA,OA6M7C,QAASO,cAAaC,gBAAiBR,MAAOz6C,SAE1C,WADgB,KAAZA,UAAsBA,QAAU,OAC3BjC,KAAM,EAAoBm9C,KAAMD,gBAAiBE,UAAWV,MAAOz6C,QAASA,SAsYzF,QAASo7C,YAAWzgD,KAAM0/C,aACtB,MAAOD,WAAUz/C,KAAM0/C,aAQ3B,QAASgB,YAAWd,QAASpgC,QACzB,MAAOmgC,WAAUC,QAASpgC,QAO9B,QAASmhC,UAASb,OACd,MAAOD,SAAQC,OAOnB,QAASc,aAAYd,OACjB,MAAOC,YAAWD,OAOtB,QAASe,UAASZ,QACd,MAAOD,SAAQC,QAQnB,QAASa,UAAS9gD,KAAMwf,QACpB,MAAO2gC,SAAQngD,KAAMwf,QAOzB,QAASuhC,cAAajB,OAClB,MAAOM,aAAYN,OAQvB,QAASkB,eAAcV,gBAAiBR,OACpC,MAAOO,cAAaC,gBAAiBR,OA7mtBzC,GAAI9hD,eAAgBC,OAAOgjD,iBACpB54C,uBAA2BzI,QAAS,SAAUhC,EAAGC,GAAKD,EAAEyK,UAAYxK,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIoQ,KAAKpQ,GAAOA,EAAE0D,eAAe0M,KAAIrQ,EAAEqQ,GAAKpQ,EAAEoQ,KAQrEwH,SAAWxX,OAAOijD,QAAU,SAAkBpzC,GAC9C,IAAK,GAAI2M,GAAG5b,EAAI,EAAGqsC,EAAIpqC,UAAUhC,OAAQD,EAAIqsC,EAAGrsC,IAAK,CACjD4b,EAAI3Z,UAAUjC,EACd,KAAK,GAAIoP,KAAKwM,GAAOxc,OAAOb,UAAUmE,eAAeP,KAAKyZ,EAAGxM,KAAIH,EAAEG,GAAKwM,EAAExM,IAE9E,MAAOH,IA6BPH,KAAOwzC,SAoBPC,SAA6B,mBAAXC,SAA0BA,OAC5CC,OAAyB,mBAATxhB,OAAqD,mBAAtByhB,oBAC/CzhB,eAAgByhB,oBAAqBzhB,KACrC0hB,SAA6B,mBAAX/kD,SAA0BA,OAC5C+B,QAAU4iD,UAAYI,UAAYF,OAClCniD,QAAU6zC,QAAQyO,QAAQ,GAC1BnjD,gBAAkB,KAmGlBkD,YAAc,kBACde,WAAa,iBACbO,cAAgB,qBA+KhB4+C,cAAgB,6DAChBC,gBAAkB,uDAClBC,0BAA4B,8EAC5Bp5C,uBAAwC,WACxC,QAASA,wBAAuBq5C,SAC5BxkD,KAAKykD,SAAWD,SAAWrjD,QAAiB,QA0WhD,MArWAgK,wBAAuBpL,UAAU2kD,oBAGjC,WAAc,OAAO,GAMrBv5C,uBAAuBpL,UAAUV,QAKjC,SAAUoR,GAAK,MAAO,YAElB,IAAK,GADDlN,SACKC,GAAK,EAAGA,GAAKC,UAAUhC,OAAQ+B,KACpCD,KAAKC,IAAMC,UAAUD,GAEzB,OAAO,KAAKiN,EAAE1M,KAAK/B,MAAMyO,OAAI,IAAQ7M,OAAOL,UAShD4H,uBAAuBpL,UAAU4kD,wBAMjC,SAAUC,WAAYC,kBAClB,GAAqB/sC,OAEjBA,YADsB,KAAf8sC,WACE,GAAIriD,OAAMsiD,iBAAiBpjD,QAG3B,GAAIc,OAAMqiD,WAAWnjD,OAElC,KAAK,GAAqBD,GAAI,EAAGA,EAAIsW,OAAOrW,OAAQD,QAItB,KAAfojD,WACP9sC,OAAOtW,MAEFojD,WAAWpjD,IAAMZ,OACtBkX,OAAOtW,IAAMojD,WAAWpjD,IAGxBsW,OAAOtW,MAEPqjD,kBAA2C,MAAvBA,iBAAiBrjD,KACrCsW,OAAOtW,GAAKsW,OAAOtW,GAAGoC,OAAOihD,iBAAiBrjD,IAGtD,OAAOsW,SAOX3M,uBAAuBpL,UAAU+kD,eAKjC,SAAU/+C,KAAMg/C,YACZ,GAAqBC,SAAUj/C,KAAKlD,UAQpC,IAAIwhD,cAAcY,KAAKD,UAClBV,gBAAgBW,KAAKD,WAAaT,0BAA0BU,KAAKD,SAClE,MAAO,KAGX,IAAI,KAA0B//C,YAAc,KAA0BA,aAAe8/C,WAAW9/C,WAC5F,MAAO,MAA0BA,UAGrC,IAAqBigD,mBAAoB,KAA0BC,cACnE,IAAID,mBAAqBA,oBAAsBH,WAAWI,eAAgB,CAGtE,GAAqBA,gBAA8C,kBAAtBD,mBAAmCA,oBAAsBA,kBACjFE,aAAeD,eAAe3iD,IAAI,SAAU6iD,WAAa,MAAOA,YAAaA,UAAUt/C,OACvFu/C,mBAAqBH,eAAe3iD,IAAI,SAAU6iD,WACnE,MAAOA,YAAa1/C,oCAAoC0/C,UAAUE,aAEtE,OAAOvlD,MAAK2kD,wBAAwBS,aAAcE,oBAGtD,GAAqBT,kBAAmB9+C,KAAK7B,eAAegB,aAAe,KAA0BA,YAChF0/C,WAAa5kD,KAAKykD,UAAYzkD,KAAKykD,SAASe,gBAC7DxlD,KAAKykD,SAASe,eAAe,oBAAqBz/C,KACtD,OAAI6+C,aAAcC,iBACP7kD,KAAK2kD,wBAAwBC,WAAYC,kBAM7C,GAAItiD,OAAyBwD,KAAY,QAAG0/C,SAAKz8C,KAM5DmC,uBAAuBpL,UAAUkF,WAIjC,SAAUc,MAGN,IAAKjF,OAAOiF,MACR,QAEJ,IAAqBg/C,YAAa9+C,cAAcF,MAC3Bd,WAAajF,KAAK8kD,eAAe/+C,KAAMg/C,WAI5D,OAHK9/C,aAAc8/C,aAAenkD,SAC9BqE,WAAajF,KAAKiF,WAAW8/C,aAE1B9/C,gBAOXkG,uBAAuBpL,UAAU2lD,gBAKjC,SAAUx3C,WAAY62C,YAElB,GAAI,WAAgCz7C,aAAe,WAAgCA,cAAgBy7C,WAAWz7C,YAAa,CACvH,GAAqBA,aAAc,WAAgCA,WAInE,OAH2B,kBAAhBA,cAA8BA,YAAYA,cACjDA,YAAcA,YAAYA,aAEvBA,YAGX,MAAI,YAAgCi8C,YAAc,WAAgCA,aAAeR,WAAWQ,WACjG5/C,oCAAoC,WAAgC4/C,YAG3Er3C,WAAWhK,eAAeC,aACnB,WAAgCA,aAEpC,MAMXgH,uBAAuBpL,UAAUuJ,YAIjC,SAAU4E,YACN,IAAKpN,OAAOoN,YACR,QAEJ,IAAqB62C,YAAa9+C,cAAciI,YAC3By3C,eAAiB3lD,KAAK0lD,gBAAgBx3C,WAAY62C,eAEvE,QADyCA,aAAenkD,OAASZ,KAAKsJ,YAAYy7C,gBACzDnhD,OAAO+hD,iBAOpCx6C,uBAAuBpL,UAAU6lD,iBAKjC,SAAU13C,WAAY62C,YAElB,GAAI,WAAgCc,cAChC,WAAgCA,eAAiBd,WAAWc,aAAc,CAC1E,GAAqBA,cAAe,WAAgCA,YAIpE,OAH4B,kBAAjBA,eAA+BA,aAAaA,eACnDA,aAAeA,aAAaA,cAEzBA,aAGX,GAAI,WAAgCC,gBAChC,WAAgCA,iBAAmBf,WAAWe,eAAgB,CAC9E,GAAqBC,kBAAmB,WAAgCD,eACnDE,iBAIrB,OAHAplD,QAAOS,KAAK0kD,kBAAkB11C,QAAQ,SAAUgjB,MAC5C2yB,eAAe3yB,MAAQ1tB,oCAAoCogD,iBAAiB1yB,SAEzE2yB,eAGX,MAAI93C,YAAWhK,eAAeuB,eACnB,WAAgCA,eAEpC,MAMX0F,uBAAuBpL,UAAU8lD,aAIjC,SAAU33C,YACN,IAAKpN,OAAOoN,YACR,QAEJ,IAAqB62C,YAAa9+C,cAAciI,YAC3B23C,eACrB,IAAId,aAAenkD,OAAQ,CACvB,GAAqBqlD,sBAAuBjmD,KAAK6lD,aAAad,WAC9DnkD,QAAOS,KAAK4kD,sBAAsB51C,QAAQ,SAAU1L,UAChDkhD,aAAalhD,UAAYshD,qBAAqBthD,YAGtD,GAAqBuhD,iBAAkBlmD,KAAK4lD,iBAAiB13C,WAAY62C,WAWzE,OAVImB,kBACAtlD,OAAOS,KAAK6kD,iBAAiB71C,QAAQ,SAAU1L,UAC3C,GAAqB4gD,cACjBM,cAAa3hD,eAAeS,WAC5B4gD,WAAWjhD,KAAKtC,MAAMujD,WAAYM,aAAalhD,WAEnD4gD,WAAWjhD,KAAKtC,MAAMujD,WAAYW,gBAAgBvhD,WAClDkhD,aAAalhD,UAAY4gD,aAG1BM,cAOX16C,uBAAuBpL,UAAUomD,iBAKjC,SAAUpgD,KAAMqgD,YACZ,MAAOrgD,gBAAgBuK,OAAQ81C,aAAcrgD,MAAKhG,WAMtDoL,uBAAuBpL,UAAUsmD,OAIjC,SAAUtgD,MAAQ,UAKlBoF,uBAAuBpL,UAAU6V,OAIjC,SAAUjT,MAAQ,MAAwB,IAAKmhD,UAAS,IAAK,YAAcnhD,KAAO,MAKlFwI,uBAAuBpL,UAAUumD,OAIjC,SAAU3jD,MACN,MAAwB,IAAKmhD,UAAS,IAAK,IAAK,YAAcnhD,KAAO,UAMzEwI,uBAAuBpL,UAAUwmD,OAIjC,SAAU5jD,MACN,GAAqB6jD,cAAe,UAAY7jD,KAAO,wBAA0BA,KAAO,wCAA0CA,KAAO,kBACzI,OAAwB,IAAKmhD,UAAS,IAAK,OAAQ0C,eAOvDr7C,uBAAuBpL,UAAU0mD,UAIjC,SAAU1gD,MAEN,MAAoB,gBAATA,OAAqBA,KAAe,SACpCA,KAAe,SAGnB,KAAO1D,UAAU0D,OAM5BoF,uBAAuBpL,UAAU2mD,YAIjC,SAAU3gD,MAAQ,MAAO,KAAO1D,UAAU0D,OAQ1CoF,uBAAuBpL,UAAU4mD,kBAOjC,SAAUhkD,KAAMikD,UAAWC,QAASC,SAChC,MAAOA,UAOX37C,uBAAuBpL,UAAUgnD,YAKjC,SAAUC,eAAgBrkD,MAAQ,MAAOqkD,gBAAerkD,OACjDwI,0BA+IPzB,OAAS9E,mBAAmB,SAAU,SAAUtC,OAAS,OAAUA,MAAOA,SAc1EiH,SAAW3E,mBAAmB,YAc9B6E,KAAO7E,mBAAmB,QAc1B4E,SAAW5E,mBAAmB,YAc9BqiD,KAAOriD,mBAAmB,QAa1BqgB,OAAS,WACTiiC,oBAAsB,GAAItmD,QAC1BuI,mBAAqB+9C,oBACrBC,cAA+B,WAC/B,QAASA,kBAmBT,MAZAA,eAAcpnD,UAAU8H,IAKxB,SAAUvF,MAAO8F,eAEb,OADsB,KAAlBA,gBAA4BA,cAAgB8+C,qBAC5C9+C,gBAAkB8+C,oBAClB,KAAM,IAAI1+C,OAAM,sCAAwCnG,UAAUC,OAAS,IAE/E,OAAO8F,gBAEJ++C,iBAuBPj+C,SAA0B,WAC1B,QAASA,aAuCT,MApBAA,UAASrI,OAUT,SAAUmH,QAASG,QACf,MAAI5F,OAAMuI,QAAQ9C,SACP,GAAIo/C,gBAAep/C,QAASG,QAG5B,GAAIi/C,gBAAep/C,QAAQ0H,UAAW1H,QAAQG,OAAQH,QAAQrF,MAAQ,OAGrFuG,SAASC,mBAAqB+9C,oBAC9Bh+C,SAASm+C,KAAO,GAAIF,eACbj+C,YAEPrC,MAAQ,SAAUxC,OAClB,MAAOA,QAEPyC,SACA6B,SAAW9B,MACXiB,kBAAoB,WACpB,MAAOvF,OAAMxC,UAAUmN,MAAMvJ,KAAKF,YAElC6jD,uBACAC,GAAKD,oBACLrgD,YAwTJ,SAAkCugD,0BAC9B,IAAK,GAAqB9lD,OAAO8lD,0BAC7B,GAAIA,yBAAyB9lD,OAAS4lD,oBAClC,MAAO5lD,IAGf,MAAM8G,OAAM,WA9T6BxB,QAAS2K,OAAQzK,SAAUqgD,KAEpE7+C,mBAAqB,kBACrBO,cAAgBC,SAASm+C,KACzBh9C,SAAW,OACXzB,YAAc,IACdw+C,eAAgC,WAChC,QAASA,gBAAe13C,UAAWvH,OAAQ2B,YACxB,KAAX3B,SAAqBA,OAASc,mBACnB,KAAXa,SAAqBA,OAAS,MAClC9J,KAAKmI,OAASA,OACdnI,KAAK8J,OAASA,MACd,IAAqBrC,SAAUzH,KAAKynD,SAAW,GAAIlmD,IACnDkG,SAAQM,IAAImB,UAA8B5G,MAAO4G,SAAUtH,GAAIiF,MAAOF,KAAMG,MAAOzC,MAAOrE,KAAM+G,QAAQ,IACxGS,4BAA4BC,QAASiI,WA0CzC,MAlCA03C,gBAAernD,UAAU8H,IAMzB,SAAUvF,MAAO8F,cAAeC,WACd,KAAVA,QAAoBA,MAAQ,EAChC,IAAqBJ,QAASjI,KAAKynD,SAAS5/C,IAAIvF,MAChD,KACI,MAAO4F,iBAAgB5F,MAAO2F,OAAQjI,KAAKynD,SAAUznD,KAAKmI,OAAQC,cAAeC,OAErF,MAAwBE,GACpB,GAAqBm/C,WAAYn/C,EAAEG,mBAOnC,MANIpG,OAAM2iB,SACNyiC,UAAUhiD,QAAQpD,MAAM2iB,SAE5B1c,EAAEsE,QAAUlD,YAAY,KAAOpB,EAAEsE,QAAS66C,UAAW1nD,KAAK8J,QAC1DvB,EAAe,YAAIm/C,UACnBn/C,EAAEG,oBAAsB,KAClBH,IAMd6+C,eAAernD,UAAU8C,SAGzB,WACI,GAAqB+/C,UAErB,OAFgF5iD,MAAKynD,SAC7Ep3C,QAAQ,SAAUtP,EAAGuB,OAAS,MAAOsgD,QAAOt+C,KAAKjC,UAAUC,UAC5D,kBAAoBsgD,OAAOngD,KAAK,MAAQ,KAE5C2kD,kBAwQP38C,iBAAmB,KA6EnBk9C,qBACAC,GAAKD,kBACLt8C;;;;;;;AAvpBJ,SAAgCm8C,yBAA0BjiD,QACtD,IAAK,GAAqB7D,OAAO8lD,0BAC7B,GAAIA,yBAAyB9lD,OAAS6D,OAClC,MAAO7D,IAGf,MAAM8G,OAAM,uDAipByBxB,QAAS2K,OAAQzK,SAAU0gD,IAAMD,mBAQtEl8C,eA8DAo8C,WAAa5kD,cAAc,iBAAc+F,OAAWA,OAAWA,GAAW,SAAU8+C,eAAgB9/C,SAChGA,SAAWA,QAAQ0K,QACnB,eAAoC0c,gBAAkBvjB,kBAClD6G,MAAO1K,QAAQ0K,MACfrT,QAAS4L,mCAAmC68C,eAAgB9/C,cA4CpEkJ,eAAgC,WAChC,QAASA,gBAAe62C,MAAO//C,SAC3BhI,KAAK+nD,MAAQA,MAIb/nD,KAAKwE,eAAiB,iBAElBxE,KAAKovB,oBADOpmB,KAAZhB,QACuB6D,kBACnB6G,MAAO1K,QAAQ0K,MACfrT,QAAS2I,QAAQ3I,cAIE2J,GAU/B,MAJAkI,gBAAenR,UAAU8C,SAGzB,WAAc,MAAO,kBAAoB7C,KAAK+nD,OACvC72C,kBAgDP82C,6BAA+B,GAAI92C,gBAAe,6BAclD+2C,UAAYrjD,mBAAmB,YAAa,SAAUsjD,eAAiB,OAAUA,cAAeA,iBAUhGC,MAAuB,WACvB,QAASA,UAET,MAAOA,UAiBPC,gBAAkBhjD,kBAAkB,kBAAmB,SAAU0sB,SAAUzP,MAE3E,WADa,KAATA,OAAmBA,SACfjK,UAAW0Z,SAAUA,SAAU/jB,OAAO,EAAOs6C,aAAa,EAAOC,aAAa,GAASjmC,OAChG8lC,OAeCI,aAAenjD,kBAAkB,eAAgB,SAAU0sB,SAAUzP,MAErE,WADa,KAATA,OAAmBA,SACfjK,UAAW0Z,SAAUA,SAAU/jB,OAAO,EAAMs6C,aAAa,EAAOC,aAAa,GAAQjmC,OAC9F8lC,OAgBCK,aAAepjD,kBAAkB,eAAgB,SAAU0sB,SAAUzP,MAErE,WADa,KAATA,OAAmBA,SACfjK,UAAW0Z,SAAUA,SAAU/jB,OAAO,EAAOs6C,aAAa,EAAMC,aAAa,GAAQjmC,OAC9F8lC,OAgBCM,UAAYrjD,kBAAkB,YAAa,SAAU0sB,SAAUzP,MAC/D,MAAQjK,WAAW0Z,SAAUA,SAAU/jB,OAAO,EAAMs6C,aAAa,EAAMC,aAAa,GAAQjmC,OAC7F8lC,OAcCl8C,yBAIAuwC,OAAQ,EAIRtwC,QAAS,EAEbD,yBAAwBA,wBAAwBuwC,QAAU,SAC1DvwC,wBAAwBA,wBAAwBC,SAAW,SAE3D,IAAIw8C,uBAKAC,UAAW,EAKXC,QAAS,EAKTC,YAAa,EAKbC,SAAU,EAMVC,QAAS,EAITC,UAAW,EAEfN,sBAAqBA,qBAAqBC,WAAa,YACvDD,qBAAqBA,qBAAqBE,SAAW,UACrDF,qBAAqBA,qBAAqBG,aAAe,cACzDH,qBAAqBA,qBAAqBI,UAAY,WACtDJ,qBAAqBA,qBAAqBK,SAAW,UACrDL,qBAAqBA,qBAAqBM,WAAa;;;;;;;AAkCvD,GAAIC,WAAYhmD,cAAc,YAAa,SAAUimD,KAEjD,WADY,KAARA,MAAkBA,QACfA,MAePC,UAAYlmD,cAAc,YAAa,SAAUqc,GAEjD,WADU,KAANA,IAAgBA,MACZlH,UAAWmkC,gBAAiBtwC,wBAAwBC,SAAWoT,IACxE2pC,WAoBCG,KAAOnmD,cAAc,OAAQ,SAAU2N,GAAK,MAAQwH,WAAW0lC,MAAM,GAAQltC,KAc7Ey4C,MAAQjkD,kBAAkB,QAAS,SAAUkkD,qBAAuB,OAAUA,oBAAqBA,uBAcnGC,OAASnkD,kBAAkB,SAAU,SAAUkkD,qBAAuB,OAAUA,oBAAqBA,uBAcrGE,YAAcpkD,kBAAkB,cAAe,SAAUqkD,kBAAoB,OAAUA,iBAAkBA,oBAczGC,aAAetkD,kBAAkB,eAAgB,SAAUse,UAAWngB,MAAQ,OAAUmgB,UAAWA,UAAWngB,KAAMA,QAmCpHomD,wBACAhnD,KAAM,mBAONinD,kBACAjnD,KAAM,oBAeNknD,SAAW5mD,cAAc,WAAY,SAAUusB,UAAY,MAAOA,YAclEhN,mBASAsnC,SAAU,EAOVvkC,OAAQ,EAIR9C,KAAM,EAEVD,mBAAkBA,kBAAkBsnC,UAAY,WAChDtnC,kBAAkBA,kBAAkB+C,QAAU,SAC9C/C,kBAAkBA,kBAAkBC,MAAQ;;;;;;;;;;;;;;AA8B5C,GAsvEInQ,OACAC,OAkoCA4D,UAz3GA4zC,QAAyB,WACzB,QAASA,SAAQC,MACbhqD,KAAKgqD,KAAOA,KACZhqD,KAAKiqD,MAAQD,KAAKntC,MAAM,KAAK,GAC7B7c,KAAKkqD,MAAQF,KAAKntC,MAAM,KAAK,GAC7B7c,KAAKmqD,MAAQH,KAAKntC,MAAM,KAAK3P,MAAM,GAAGzK,KAAK,KAE/C,MAAOsnD,YAKPK,QAAU,GAAIL,SAAQ,qBActB19C,oBAAsB,iBACtBE,qBAAuB,kBACvBE,aAAe,gBA6EfmzB,aAA8B,WAC9B,QAASA,gBAIL5/B,KAAKqqD,SAAW19C,QA4DpB,MAtDAizB,cAAa7/B,UAAUyV,YAIvB,SAAUpJ,OACN,GAAqBU,eAAgB9M,KAAKsqD,mBAAmBl+C,OACxCnC,QAAUjK,KAAKuqD,aAAan+C,OAG5Bo+C,YAAch+C,eAAeJ,MAClDo+C,aAAYxqD,KAAKqqD,SAAU,QAASj+C,OAChCU,eACA09C,YAAYxqD,KAAKqqD,SAAU,iBAAkBv9C,eAE7C7C,SACAugD,YAAYxqD,KAAKqqD,SAAU,gBAAiBpgD,UASpD21B,aAAa7/B,UAAUwqD,aAKvB,SAAUn+C,OACN,MAAIA,OACOD,gBAAgBC,OAASD,gBAAgBC,OAC5CpM,KAAKuqD,aAAaj+C,iBAAiBF,QAEpC,MAQXwzB,aAAa7/B,UAAUuqD,mBAKvB,SAAUl+C,OAEN,IADA,GAAqB7D,GAAI+D,iBAAiBF,OACnC7D,GAAK+D,iBAAiB/D,IACzBA,EAAI+D,iBAAiB/D,EAEzB,OAAOA,IAEJq3B,gBAySPzwB,cAA+B,WAI/B,QAASA,eAAc7M,MAAO6N,IAG1B,GAFAnQ,KAAKsC,MAAQA,MACbtC,KAAKmQ,GAAKA,IACL7N,MACD,KAAM,IAAIkG,OAAM,yBAEpBxI,MAAKyqD,YAAcpoD,UAAUrC,KAAKsC,OA6BtC,MAnBA6M,eAActH,IAKd,SAAUvF,OACN,MAAOooD,oBAAmB7iD,IAAIrB,kBAAkBlE,SAEpD1B,OAAOwD,eAAe+K,cAAe,gBAIjCtH,IAGA,WAAc,MAAO6iD,oBAAmBC,cACxCnY,YAAY,EACZttB,cAAc,IAEX/V,iBAEPy7C,YAA6B,WAC7B,QAASA,eACL5qD,KAAK6qD,SAAW,GAAItpD,KA4BxB,MAtBAqpD,aAAY7qD,UAAU8H,IAItB,SAAUvF,OACN,GAAIA,gBAAiB6M,eACjB,MAAO7M,MACX,IAAItC,KAAK6qD,SAASnqB,IAAIp+B,OAClB,MAA0BtC,MAAK6qD,SAAShjD,IAAIvF,MAEhD,IAAqBwoD,QAAS,GAAI37C,eAAc7M,MAAO6M,cAAcw7C,aAErE,OADA3qD,MAAK6qD,SAAS9iD,IAAIzF,MAAOwoD,QAClBA,QAEXlqD,OAAOwD,eAAewmD,YAAY7qD,UAAW,gBACzC8H,IAGA,WAAc,MAAO7H,MAAK6qD,SAASvpC,MACnCkxB,YAAY,EACZttB,cAAc,IAEX0lC,eAEPF,mBAAqB,GAAIE,aAiBzBG,UAA2B,WAC3B,QAASA,WAAU7/C,wBACflL,KAAKkL,uBAAyBA,uBA6IlC,MAvIA6/C,WAAUhrD,UAAUirD,mBAIpB,SAAUC,MAAQjrD,KAAKkL,uBAAyB+/C,MAKhDF,UAAUhrD,UAAUV,QAIpB,SAAU0G,MAAQ,MAAO/F,MAAKkL,uBAAuB7L,QAAQ0G,OAK7DglD,UAAUhrD,UAAUkF,WAIpB,SAAUiJ,YACN,MAAOlO,MAAKkL,uBAAuBjG,WAAWiJ,aAMlD68C,UAAUhrD,UAAUuJ,YAIpB,SAAU4E,YACN,MAAOlO,MAAKkL,uBAAuB5B,YAAY4E,aAMnD68C,UAAUhrD,UAAU8lD,aAIpB,SAAU33C,YACN,MAAOlO,MAAKkL,uBAAuB26C,aAAa33C,aAOpD68C,UAAUhrD,UAAUomD,iBAKpB,SAAUpgD,KAAMqgD,YACZ,MAAOpmD,MAAKkL,uBAAuBi7C,iBAAiBpgD,KAAMqgD,aAM9D2E,UAAUhrD,UAAU6V,OAIpB,SAAUjT,MAAQ,MAAO3C,MAAKkL,uBAAuB0K,OAAOjT,OAK5DooD,UAAUhrD,UAAUumD,OAIpB,SAAU3jD,MAAQ,MAAO3C,MAAKkL,uBAAuBo7C,OAAO3jD,OAK5DooD,UAAUhrD,UAAUwmD,OAIpB,SAAU5jD,MAAQ,MAAO3C,MAAKkL,uBAAuBq7C,OAAO5jD,OAK5DooD,UAAUhrD,UAAU0mD,UAIpB,SAAU1gD,MAAQ,MAAO/F,MAAKkL,uBAAuBu7C,UAAU1gD,OAK/DglD,UAAUhrD,UAAU2mD,YAIpB,SAAU3gD,MAAQ,MAAO/F,MAAKkL,uBAAuBw7C,YAAY3gD,OAQjEglD,UAAUhrD,UAAU4mD,kBAOpB,SAAUhkD,KAAMikD,UAAWC,QAASC,SAChC,MAAO9mD,MAAKkL,uBAAuBy7C,kBAAkBhkD,KAAMikD,UAAWC,QAASC,UAOnFiE,UAAUhrD,UAAUgnD,YAKpB,SAAUmE,WAAYvoD,MAClB,MAAO3C,MAAKkL,uBAAuB67C,YAAYmE,WAAYvoD,OAExDooD,aAkBPj8C,UAAY,GAAIi8C,WAAU,GAAI5/C,yBAiB9B8D,qBAAsC,WACtC,QAASA,sBAAqBvN,IAAKoP,SAAUE,YACzChR,KAAK0B,IAAMA,IACX1B,KAAK8Q,SAAWA,SAChB9Q,KAAKgR,WAAaA,WAatB,MAPA/B,sBAAqBC,QAIrB,SAAUxN,KACN,MAAO,IAAIuN,sBAAqBvN,KAAK,EAAO,OAEzCuN,wBAEPI,eAqBAG,4BAA6C,WAC7C,QAASA,6BAA4B9N,IAAK0O,kBAAmBxI,eACzD5H,KAAK0B,IAAMA,IACX1B,KAAKoQ,kBAAoBA,kBACzBpQ,KAAK4H,cAAgBA,cACrB5H,KAAKmrD,gBAAkBnrD,KAAKoQ,kBAAkB,GAElD,MAAOZ,gCAOPF,0BAA2C,WAC3C,QAASA,2BAA0BjQ,QAASkR,cACxCvQ,KAAKX,QAAUA,QACfW,KAAKuQ,aAAeA,aAExB,MAAOjB,8BA4MP87C,UAAY,GAAIxqD,QAqChByqD,mBAAoC,WACpC,QAASA,uBAqRT,MA/MAA,oBAAmBjH,QAmCnB,SAAU10C,WACN,MAAOD,4BAA2BC,YA2DtC27C,mBAAmBC,iBA8BnB,SAAU57C,UAAWvH,QACjB,GAAqBojD,6BAA8BF,mBAAmBjH,QAAQ10C,UAC9E,OAAO27C,oBAAmBG,sBAAsBD,4BAA6BpjD,SAmDjFkjD,mBAAmBG,sBA0BnB,SAAU97C,UAAWvH,QACjB,MAAO,IAAIsjD,qBAAoB/7C,UAAWvH,SAEvCkjD,sBAEPI,oBAAqC,WAIrC,QAASA,qBAAoBr6C,WAAYyd,SAIrC7uB,KAAK0rD,qBAAuB,EAC5B1rD,KAAKoR,WAAaA,WAClBpR,KAAKmI,OAAS0mB,SAAW,IACzB,IAAqBe,KAAMxe,WAAW3P,MACtCzB,MAAK2rD,OAAS,GAAIppD,OAAMqtB,KACxB5vB,KAAKkY,KAAO,GAAI3V,OAAMqtB,IACtB,KAAK,GAAqBpuB,GAAI,EAAGA,EAAIouB,IAAKpuB,IACtCxB,KAAK2rD,OAAOnqD,GAAK4P,WAAW5P,GAAGE,IAAIyO,GACnCnQ,KAAKkY,KAAK1W,GAAK4pD,UA+SvB,MAvSAK,qBAAoB1rD,UAAU8H,IAK9B,SAAUvF,MAAO8F,eAEb,WADsB,KAAlBA,gBAA4BA,cAAgBe,oBACzCnJ,KAAK4rD,UAAUz8C,cAActH,IAAIvF,OAAQ,KAAM8F,gBAM1DqjD,oBAAoB1rD,UAAU8rD,sBAI9B,SAAUn8C,WACN,GAAqB67C,6BAA8BF,mBAAmBjH,QAAQ10C,UAC9E,OAAO1P,MAAK8rD,wBAAwBP,8BAMxCE,oBAAoB1rD,UAAU+rD,wBAI9B,SAAUp8C,WACN,GAAqBq8C,KAAM,GAAIN,qBAAoB/7C,UAEnD,OADA,KAAyBvH,OAASnI,KAC3B+rD,KAMXN,oBAAoB1rD,UAAUisD,sBAI9B,SAAUtlD,UACN,MAAO1G,MAAKisD,oBAAoBZ,mBAAmBjH,SAAS19C,WAAW,KAM3E+kD,oBAAoB1rD,UAAUksD,oBAI9B,SAAUvlD,UACN,MAAO1G,MAAKksD,qBAAqBxlD,WAMrC+kD,oBAAoB1rD,UAAUsR,mBAI9B,SAAUrM,OACN,GAAIA,MAAQ,GAAKA,OAAShF,KAAKoR,WAAW3P,OACtC,KAAM8M,kBAAiBvJ,MAE3B,OAAOhF,MAAKoR,WAAWpM,QAQ3BymD,oBAAoB1rD,UAAUosD,KAK9B,SAAUzlD,UACN,GAAI1G,KAAK0rD,uBAAyB1rD,KAAKosD,yBACnC,KAAMz+C,uBAAsB3N,KAAM0G,SAAShF,IAE/C,OAAO1B,MAAKksD,qBAAqBxlD,WAKrC+kD,oBAAoB1rD,UAAUqsD,uBAG9B,WAAc,MAAOpsD,MAAKkY,KAAKzW,QAK/BgqD,oBAAoB1rD,UAAUmsD,qBAI9B,SAAUxlD,UACN,GAAIA,SAASkB,cAAe,CAExB,IAAK,GADgBhF,KAAM,GAAIL,OAAMmE,SAAS0J,kBAAkB3O,QACtCD,EAAI,EAAGA,EAAIkF,SAAS0J,kBAAkB3O,SAAUD,EACtEoB,IAAIpB,GAAKxB,KAAKqsD,aAAa3lD,SAAUA,SAAS0J,kBAAkB5O,GAEpE,OAAOoB,KAGP,MAAO5C,MAAKqsD,aAAa3lD,SAAUA,SAAS0J,kBAAkB,KAQtEq7C,oBAAoB1rD,UAAUssD,aAK9B,SAAU3lD,SAAU4lD,8BAChB,GAEqB3lD,MAFjB4lD,MAAQvsD,KACSX,QAAUitD,6BAA6BjtD,OAE5D,KACIsH,KACI2lD,6BAA6B/7C,aAAa/N,IAAI,SAAUgqD,KAAO,MAAOD,OAAME,2BAA2BD,OAE/G,MAAwBjkD,GAIpB,KAHIA,GAAEiF,QACFjF,EAAEiF,OAAOxN,KAAM0G,SAAShF,KAEtB6G,EAEV,GAAqBsB,IACrB,KACIA,IAAMxK,QAAQ2C,UAAM,GAAQ2E,MAEhC,MAAwB4B,GACpB,KAAMqF,oBAAmB5N,KAAMuI,EAAGA,EAAEmkD,MAAOhmD,SAAShF,KAExD,MAAOmI,MAMX4hD,oBAAoB1rD,UAAU0sD,2BAI9B,SAAUD,KACN,MAAOxsD,MAAK4rD,UAAUY,IAAI9qD,IAAK8qD,IAAIx7C,WAAYw7C,IAAI17C,SAAW,KAAO3H,qBAQzEsiD,oBAAoB1rD,UAAU6rD,UAM9B,SAAUlqD,IAAKsP,WAAY5I,eACvB,MAAI1G,OAAQ+pD,oBAAoBkB,aACrB3sD,KAEPgR,qBAAsBvH,MACfzJ,KAAK4sD,cAAclrD,IAAK0G,eAGxBpI,KAAK6sD,iBAAiBnrD,IAAK0G,cAAe4I,aAOzDy6C,oBAAoB1rD,UAAU+sD,eAI9B,SAAUC,OACN,IAAK,GAAqBvrD,GAAI,EAAGA,EAAIxB,KAAK2rD,OAAOlqD,OAAQD,IACrD,GAAIxB,KAAK2rD,OAAOnqD,KAAOurD,MAInB,MAHI/sD,MAAKkY,KAAK1W,KAAO4pD,YACjBprD,KAAKkY,KAAK1W,GAAKxB,KAAKmsD,KAAKnsD,KAAKoR,WAAW5P,KAEtCxB,KAAKkY,KAAK1W,EAGzB,OAAO4pD,YASXK,oBAAoB1rD,UAAUitD,aAM9B,SAAUtrD,IAAK0G,eACX,GAAIA,gBAAkBe,mBAClB,MAAOf,cAGP,MAAMsF,iBAAgB1N,KAAM0B,MAUpC+pD,oBAAoB1rD,UAAU6sD,cAM9B,SAAUlrD,IAAK0G,eACX,GAAqByB,KAAM7J,KAAK8sD,eAAeprD,IAAIyO,GACnD,OAAQtG,OAAQuhD,UAAavhD,IAAM7J,KAAKgtD,aAAatrD,IAAK0G,gBAU9DqjD,oBAAoB1rD,UAAU8sD,iBAO9B,SAAUnrD,IAAK0G,cAAe4I,YAC1B,GAAqB+6C,IAOrB,KALIA,IADA/6C,qBAAsBxH,UAChBxJ,KAAKmI,OAGLnI,KAEH+rD,cAAeN,sBAAqB,CACvC,GAAqBwB,MAAwB,IACxBpjD,IAAMojD,KAAKH,eAAeprD,IAAIyO,GACnD,IAAItG,MAAQuhD,UACR,MAAOvhD,IACXkiD,KAAMkB,KAAK9kD,OAEf,MAAY,QAAR4jD,IACOA,IAAIlkD,IAAInG,IAAIY,MAAO8F,eAGnBpI,KAAKgtD,aAAatrD,IAAK0G,gBAGtCxH,OAAOwD,eAAeqnD,oBAAoB1rD,UAAW,eACjD8H,IAGA,WAGI,MAAO,kCAF0BsJ,cAAcnR,KAAM,SAAUQ,GAAK,MAAO,KAAOA,EAAEkB,IAAI+oD,YAAc,OACjGhoD,KAAK,MAC6C,MAE3D+vC,YAAY,EACZttB,cAAc,IAKlBumC,oBAAoB1rD,UAAU8C,SAG9B,WAAc,MAAO7C,MAAKyqD,aAC1BgB,oBAAoBkB,aAAex9C,cAActH,IAAIqB,UAC9CuiD,uBAqCPn9B,eAAkC,GAAKpd,gBAAe,4EAiEtDg8C,gBAAkB,GAAIh8C,gBAAe,2BAMrCi8C,sBAAuC,WACvC,QAASA,uBAAsBC,UAC3B,GAAIb,OAAQvsD,IACZA,MAAKotD,SAAWA,SAChBptD,KAAK09B,aAAc,EACnB19B,KAAKob,MAAO,EACZpb,KAAKqtD,YAAc,GAAI1X,SAAQ,SAAU/yC,IAAK0qD,KAC1Cf,MAAMnI,QAAUxhD,IAChB2pD,MAAMgB,OAASD,MA2CvB,MAnCAH,uBAAsBptD,UAAUytD,gBAIhC,WACI,GAAIjB,OAAQvsD,IACZ,KAAIA,KAAK09B,YAAT,CAGA,GAAqB+vB,sBACAC,SAAW,WAC5B,MAA2BtyC,MAAO,EAClCmxC,MAAMnI,UAEV,IAAIpkD,KAAKotD,SACL,IAAK,GAAqB5rD,GAAI,EAAGA,EAAIxB,KAAKotD,SAAS3rD,OAAQD,IAAK,CAC5D,GAAqBmsD,YAAa3tD,KAAKotD,SAAS5rD,IAC5C8P,WAAUq8C,aACVF,kBAAkBnpD,KAAKqpD,YAInChY,QAAQiY,IAAIH,mBAAmB1rD,KAAK,WAAc2rD,aAAe31C,MAAM,SAAUxP,GAAKgkD,MAAMgB,OAAOhlD,KAClE,IAA7BklD,kBAAkBhsD,QAClBisD,WAEJ1tD,KAAK09B,aAAc,IAEvByvB,sBAAsB5H,aAChBx/C,KAAM8hD,aAGZsF,sBAAsBhI,eAAiB,WAAc,QAC/Cp/C,KAAMxD,MAAOgjD,aAAex/C,KAAM2D,OAAQnG,MAAO2pD,mBAAuBnnD,KAAMwD,cAE7E4jD,yBAwBPU,OAAS,GAAI38C,gBAAe,SAW5B48C,wBACA9mD,QAAS6mD,OACT1mD,WAAYsK,4BACZ9K,SAYA6P,qBAAuB,GAAItF,gBAAe,wBAK1C68C,YAAc,GAAI78C,gBAAe,eASjC88C,uBAAyB,GAAI98C,gBAAe,wBAK5C+8C,iBAAmB,GAAI/8C,gBAAe,iCAatCg9C,QAAyB,WACzB,QAASA,YAgCT,MA1BAA,SAAQnuD,UAAUouD,IAIlB,SAAUthD,SAENF,QAAQwhD,IAAIthD,UAOhBqhD,QAAQnuD,UAAU2c,KAIlB,SAAU7P,SAENF,QAAQ+P,KAAK7P,UAEjBqhD,QAAQ3I,aACFx/C,KAAM8hD,aAGZqG,QAAQ/I,eAAiB,WAAc,UAChC+I,WAmBPE,6BAA8C,WAC9C,QAASA,8BAA6BC,gBAAiBC,oBACnDtuD,KAAKquD,gBAAkBA,gBACvBruD,KAAKsuD,mBAAqBA,mBAE9B,MAAOF,iCAkBPG,SAA0B,WAC1B,QAASA,aAwGT,MA3FAA,UAASxuD,UAAUyuD,kBAOnB,SAAU71C,YAAc,KAAM3G,gBAU9Bu8C,SAASxuD,UAAU0uD,mBAMnB,SAAU91C,YAAc,KAAM3G,gBAU9Bu8C,SAASxuD,UAAU2uD,kCAMnB,SAAU/1C,YACN,KAAM3G,gBAWVu8C,SAASxuD,UAAU4uD,mCAMnB,SAAUh2C,YACN,KAAM3G,gBASVu8C,SAASxuD,UAAU6uD,WAInB,aASAL,SAASxuD,UAAU8uD,cAKnB,SAAU9oD,QACVwoD,SAAShJ,aACHx/C,KAAM8hD,aAGZ0G,SAASpJ,eAAiB,WAAc,UACjCoJ,YAOPO,iBAAmB,GAAI59C,gBAAe,mBAOtC69C,gBAAiC,WACjC,QAASA,oBAET,MAAOA,oBAuBPC,aAA8B,WAC9B,QAASA,iBAET,MAAOA,iBAMPC,iBAAkC,WAClC,QAASA,qBAET,MAAOA,qBAuBP98C,gBAAkB,cAMlB+8C,8BAA+C,WAC/C,QAASA,kCAeT,MARAA,+BAA8BnvD,UAAUovD,wBAKxC,SAAUj9C,WACN,KAAMD,yBAAwBC,YAE3Bg9C,iCAMPE,yBAA0C,WAC1C,QAASA,6BAGT,MADAA,0BAAyB/H,KAAO,GAAI6H,+BAC7BE,4BAEPC,gCAAiD,WACjD,QAASA,iCAAgCC,UAAWzgC,QAAS0gC,WACzDvvD,KAAK6uB,QAAUA,QACf7uB,KAAKuvD,UAAYA,UACjBvvD,KAAKwvD,WAAa,GAAIjuD,IACtB,KAAK,GAAqBC,GAAI,EAAGA,EAAI8tD,UAAU7tD,OAAQD,IAAK,CACxD,GAAqBnC,SAAUiwD,UAAU9tD,EACzCxB,MAAKwvD,WAAWznD,IAAI1I,QAAQ0yB,cAAe1yB,UAuBnD,MAfAgwD,iCAAgCtvD,UAAUovD,wBAK1C,SAAUj9C,WACN,GAAqB7S,SAAUW,KAAKwvD,WAAW3nD,IAAIqK,UAInD,KAHK7S,SAAWW,KAAK6uB,UACjBxvB,QAAUW,KAAK6uB,QAAQsgC,wBAAwBj9C,aAE9C7S,QACD,KAAM4S,yBAAwBC,UAElC,OAAO,IAAIu9C,+BAA8BpwD,QAASW,KAAKuvD,YAEpDF,mCAEPI,8BAA+C,SAAUC,QAEzD,QAASD,+BAA8BpwD,QAASmwB,UAC5C,GAAI+8B,OAAQmD,OAAO/rD,KAAK3D,OAASA,IAQjC,OAPAusD,OAAMltD,QAAUA,QAChBktD,MAAM/8B,SAAWA,SACjB+8B,MAAMz6B,SAAWzyB,QAAQyyB,SACzBy6B,MAAMx6B,cAAgB1yB,QAAQ0yB,cAC9Bw6B,MAAMr6B,mBAAqB7yB,QAAQ6yB,mBACnCq6B,MAAMt6B,OAAS5yB,QAAQ4yB,OACvBs6B,MAAMjjC,QAAUjqB,QAAQiqB,QACjBijC,MAmBX,MA7BAjsD,WAAUmvD,8BAA+BC,QAmBzCD,8BAA8B1vD,UAAUc,OAOxC,SAAU0J,SAAUqc,iBAAkBqE,mBAAoBuE,UACtD,MAAOxvB,MAAKX,QAAQwB,OAAO0J,SAAUqc,iBAAkBqE,mBAAoBuE,UAAYxvB,KAAKwvB,WAEzFigC,+BACTR,kBAsBEU,YAA6B,WAC7B,QAASA,gBAET,MAAOA,gBAUPC,gBAAiC,WACjC,QAASA,oBAET,MAAOA,oBA8FPC,WAAaz9C,YAuCb09C,eAAiBD,WAAar9C,YAAc,SAAUpE,UAAW/F,OAAS,MAAO8K,YAUjF48C,SAAWF,WAAap9C,MAAQ,SAAU2K,EAAGw4B,GAAK,MAAOA,IAczDoa,kBAAoBH,WAAah9C,eAAiB,SAAUC,UAAWC,QAAU,MAAO,OAOxFk9C,gBAAkBJ,WAAa58C,aAAe,SAAU2iC,GAAK,MAAO,OA4DpEsa,aAA8B,SAAUR,QASxC,QAASQ,cAAaC,aACF,KAAZA,UAAsBA,SAAU,EACpC,IAAI5D,OAAQmD,OAAO/rD,KAAK3D,OAASA,IAEjC,OADAusD,OAAM6D,UAAYD,QACX5D,MA0DX,MAtEAjsD,WAAU4vD,aAAcR,QAkBxBQ,aAAanwD,UAAU8T,KAIvB,SAAUxP,OAASqrD,OAAO3vD,UAAUmb,KAAKvX,KAAK3D,KAAMqE,QAOpD6rD,aAAanwD,UAAUyR,UAMvB,SAAU6+C,gBAAiBjkD,MAAOshD,UAC9B,GAAqB4C,aACAC,QAAU,SAAUxvC,KAAO,MAAO,OAClCyvC,WAAa,WAAc,MAAO,MACnDH,kBAA8C,gBAApBA,kBAC1BC,YAActwD,KAAKowD,UAAY,SAAU/rD,OACrCosD,WAAW,WAAc,MAAOJ,iBAAgBn1C,KAAK7W,UACrD,SAAUA,OAASgsD,gBAAgBn1C,KAAK7W,QACxCgsD,gBAAgBjkD,QAChBmkD,QAAUvwD,KAAKowD,UAAY,SAAUrvC,KAAO0vC,WAAW,WAAc,MAAOJ,iBAAgBjkD,MAAM2U,QAC9F,SAAUA,KAAOsvC,gBAAgBjkD,MAAM2U,OAE3CsvC,gBAAgB3C,WAChB8C,WAAaxwD,KAAKowD,UAAY,WAAcK,WAAW,WAAc,MAAOJ,iBAAgB3C,cACxF,WAAc2C,gBAAgB3C,eAItC4C,YAActwD,KAAKowD,UAAY,SAAU/rD,OAASosD,WAAW,WAAc,MAAOJ,iBAAgBhsD,UAC9F,SAAUA,OAASgsD,gBAAgBhsD,QACnC+H,QACAmkD,QACIvwD,KAAKowD,UAAY,SAAUrvC,KAAO0vC,WAAW,WAAc,MAAOrkD,OAAM2U,QAAc,SAAUA,KAAO3U,MAAM2U,OAEjH2sC,WACA8C,WACIxwD,KAAKowD,UAAY,WAAcK,WAAW,WAAc,MAAO/C,eAAoB,WAAcA,aAG7G,IAAqBgD,MAAOhB,OAAO3vD,UAAUyR,UAAU7N,KAAK3D,KAAMswD,YAAaC,QAASC,WAIxF,OAHIH,2BAA2BhwD,mBAAkBswD,cAC7CN,gBAAgB3e,IAAIgf,MAEjBA,MAEJR,cACT9vD,aAAawwD,SAsFXn5C,OAAwB,WACxB,QAASA,QAAO3T,IACZ,GAAIomB,IAAKpmB,GAAG4T,qBAAsBA,yBAA8B,KAAPwS,IAAwBA,EA2BjF,IA1BAlqB,KAAK0T,sBAAuB,EAC5B1T,KAAKqV,sBAAuB,EAI5BrV,KAAK2T,UAAW,EAIhB3T,KAAK0V,WAAa,GAAIw6C,eAAa,GAMnClwD,KAAK4T,iBAAmB,GAAIs8C,eAAa,GAMzClwD,KAAK+T,SAAW,GAAIm8C,eAAa,GAIjClwD,KAAKyV,QAAU,GAAIy6C,eAAa,GACb,mBAARruD,MACP,KAAM,IAAI2G,OAAM,iDAEpB3G,MAAKgvD,mBACL,IAAqBpuB,MAAwB,IAC7CA,MAAKhvB,SAAW,EAChBgvB,KAAKquB,OAASruB,KAAKxuB,OAASpS,KAAKI,QAC7B,KAAuC,cACvCwgC,KAAKxuB,OAASwuB,KAAKxuB,OAAOC,KAAK,KAAuC,cAEtEwD,sBAAwB,KAAkD,yBAC1E+qB,KAAKxuB,OAASwuB,KAAKxuB,OAAOC,KAAK,KAAkD,yBAErFF,iCAAiCyuB,MAmNrC,MA9MAhrB,QAAOs5C,gBAGP,WAAc,OAA6C,IAAtClvD,KAAKI,QAAQ4F,IAAI,kBAItC4P,OAAOu5C,oBAGP,WACI,IAAKv5C,OAAOs5C,kBACR,KAAM,IAAIvoD,OAAM,mDAMxBiP,OAAOw5C,uBAGP,WACI,GAAIx5C,OAAOs5C,kBACP,KAAM,IAAIvoD,OAAM,mDAgCxBiP,OAAO1X,UAAUmxD,IAiBjB,SAAUtvD,GAAI4S,UAAWC,WACrB,MAAyB,MAA4BR,OAAOi9C,IAAItvD,GAAI4S,UAAWC,YAgCnFgD,OAAO1X,UAAUoxD,QAkBjB,SAAUvvD,GAAI4S,UAAWC,UAAW9R,MAChC,GAAqB6Q,MAAO,KAA4BS,OACnCM,KAAOf,KAAK49C,kBAAkB,gBAAkBzuD,KAAMf,GAAIyvD,cAAe/9C,KAAMA,KACpG,KACI,MAAyBE,MAAK29C,QAAQ58C,KAAMC,UAAWC,WAE3D,QACIjB,KAAK89C,WAAW/8C,QAgBxBkD,OAAO1X,UAAUwxD,WASjB,SAAU3vD,GAAI4S,UAAWC,WACrB,MAAyB,MAA4BR,OAAOs9C,WAAW3vD,GAAI4S,UAAWC,YA+B1FgD,OAAO1X,UAAU+T,kBAgBjB,SAAUlS,IACN,MAAyB,MAA4BkvD,OAAOI,IAAItvD,KAE7D6V,UAMP45C,iBA8FA75C,WAA4B,WAC5B,QAASA,cACLxX,KAAK0T,sBAAuB,EAC5B1T,KAAKqV,sBAAuB,EAC5BrV,KAAK2T,UAAW,EAChB3T,KAAK0V,WAAa,GAAIw6C,cACtBlwD,KAAK4T,iBAAmB,GAAIs8C,cAC5BlwD,KAAK+T,SAAW,GAAIm8C,cACpBlwD,KAAKyV,QAAU,GAAIy6C,cAwCvB,MAlCA14C,YAAWzX,UAAUmxD,IAIrB,SAAUtvD,IAAM,MAAOA,OAKvB4V,WAAWzX,UAAUwxD,WAIrB,SAAU3vD,IAAM,MAAOA,OAKvB4V,WAAWzX,UAAU+T,kBAIrB,SAAUlS,IAAM,MAAOA,OAMvB4V,WAAWzX,UAAUoxD,QAKrB,SAAUvvD,IAAM,MAAOA,OAChB4V,cAoBPg6C,YAA6B,WAC7B,QAASA,aAAYC,SACjBzxD,KAAKyxD,QAAUA,QAIfzxD,KAAK0xD,cAAgB,EAIrB1xD,KAAK2xD,eAAgB,EAOrB3xD,KAAK4xD,UAAW,EAIhB5xD,KAAK6xD,cACL7xD,KAAK8xD,sBAsKT,MA/JAN,aAAYzxD,UAAU+xD,oBAItB,WACI,GAAIvF,OAAQvsD,IACZA,MAAKyxD,QAAQ/7C,WAAWlE,WACpB0J,KAAM,WACFqxC,MAAMqF,UAAW,EACjBrF,MAAMoF,eAAgB,KAG9B3xD,KAAKyxD,QAAQ39C,kBAAkB,WAC3By4C,MAAMkF,QAAQ19C,SAASvC,WACnB0J,KAAM,WACFzD,OAAOw5C,yBACPtvD,kBAAkB,WACd4qD,MAAMoF,eAAgB,EACtBpF,MAAMwF,+BAa1BP,YAAYzxD,UAAUiyD,4BAItB,WAGI,MAFAhyD,MAAK0xD,eAAiB,EACtB1xD,KAAK4xD,UAAW,EACT5xD,KAAK0xD,eAShBF,YAAYzxD,UAAUkyD,4BAItB,WAEI,GADAjyD,KAAK0xD,eAAiB,EAClB1xD,KAAK0xD,cAAgB,EACrB,KAAM,IAAIlpD,OAAM,oCAGpB,OADAxI,MAAK+xD,uBACE/xD,KAAK0xD,eAShBF,YAAYzxD,UAAU4T,SAItB,WACI,MAAO3T,MAAK2xD,eAAuC,GAAtB3xD,KAAK0xD,gBAAuB1xD,KAAKyxD,QAAQp8C,sBAO1Em8C,YAAYzxD,UAAUgyD,qBAItB,WACI,GAAIxF,OAAQvsD,IACRA,MAAK2T,WAELhS,kBAAkB,WACd,KAAmC,IAA5B4qD,MAAMsF,WAAWpwD,QACA8qD,MAAMsF,WAAWjgC,MAAS26B,MAAMqF,SAExDrF,OAAMqF,UAAW,IAKrB5xD,KAAK4xD,UAAW,GAYxBJ,YAAYzxD,UAAUmyD,WAKtB,SAAUp9C,UACN9U,KAAK6xD,WAAWvtD,KAAKwQ,UACrB9U,KAAK+xD,wBASTP,YAAYzxD,UAAUoyD,uBAItB,WAAc,MAAOnyD,MAAK0xD,eAc1BF,YAAYzxD,UAAUqyD,cAOtB,SAAUC,MAAO3rD,SAAU4rD,YAEvB,UAEJd,YAAYjM,aACNx/C,KAAM8hD,aAGZ2J,YAAYrM,eAAiB,WAAc,QACrCp/C,KAAM0R,UAEL+5C,eAMPe,oBAAqC,WACrC,QAASA,uBAILvyD,KAAKwyD,cAAgB,GAAIjxD,KACzBsU,mBAAmB48C,YAAYzyD,MAqHnC,MAxGAuyD,qBAAoBxyD,UAAU2yD,oBAM9B,SAAUpwD,MAAOqwD,aACb3yD,KAAKwyD,cAAczqD,IAAIzF,MAAOqwD,cAWlCJ,oBAAoBxyD,UAAU6yD,sBAK9B,SAAUtwD,OAAStC,KAAKwyD,cAAcn4C,OAAO/X,QAQ7CiwD,oBAAoBxyD,UAAU8yD,0BAI9B,WAAc7yD,KAAKwyD,cAAclyB,SAUjCiyB,oBAAoBxyD,UAAU+yD,eAK9B,SAAUC,MAAQ,MAAO/yD,MAAKwyD,cAAc3qD,IAAIkrD,OAAS,MAQzDR,oBAAoBxyD,UAAUizD,oBAI9B,WAAc,MAAOzwD,OAAMyN,KAAKhQ,KAAKwyD,cAAc9tD,WAQnD6tD,oBAAoBxyD,UAAUkzD,mBAI9B,WAAc,MAAO1wD,OAAMyN,KAAKhQ,KAAKwyD,cAAcnxD,SAcnDkxD,oBAAoBxyD,UAAUmzD,sBAO9B,SAAUH,KAAMI,iBAEZ,WADwB,KAApBA,kBAA8BA,iBAAkB,GAC7Ct9C,mBAAmBq9C,sBAAsBlzD,KAAM+yD,KAAMI,kBAEhEZ,oBAAoBhN,aACdx/C,KAAM8hD,aAGZ0K,oBAAoBpN,eAAiB,WAAc,UAC5CoN,uBAWPa,oBAAqC,WACrC,QAASA,wBA0BT,MApBAA,qBAAoBrzD,UAAU0yD,YAI9B,SAAUY,YAOVD,oBAAoBrzD,UAAUmzD,sBAM9B,SAAUG,SAAUN,KAAMI,iBACtB,MAAO,OAEJC,uBAWPv9C,mBAAqB,GAAIu9C,qBAazBp9C,UAAW,EACXD,gBAAiB,EAEjBM,yBAA2B,GAAInF,gBAAe,sBAoC9CoiD,aAA8B,WAC9B,QAASA,cAAa3wD,KAAML,OACxBtC,KAAK2C,KAAOA,KACZ3C,KAAKsC,MAAQA,MAEjB,MAAOgxD,iBAuGPh9C,YAA6B,WAE7B,QAASA,aAAYi9C,WACjBvzD,KAAKuzD,UAAYA,UACjBvzD,KAAKwzD,YACLxzD,KAAKyzD,qBACLzzD,KAAK0zD,YAAa,EA+PtB,MA3MAp9C,aAAYvW,UAAU4zD,uBA2BtB,SAAUC,cAAe5rD,SACrB,GAAIukD,OAAQvsD,KAKSuX,aAAevP,QAAUA,QAAQ6P,WAAS7O,GAC1C6O,OAASP,UAAUC,cACnB7H,YAAe1I,QAASyQ,OAAQvQ,SAAU2Q,QAG/D,OAAOA,QAAOq5C,IAAI,WACd,GAAqB2C,gBAAiB3qD,SAASrI,QAAS6O,UAAWA,UAAWvH,OAAQokD,MAAMhiD,SAAU5H,KAAMixD,cAAcj7C,WAAWhW,OAChHmxD,UAA8BF,cAAc/yD,OAAOgzD,gBACnDE,iBAAmBD,UAAUvpD,SAAS1C,IAAI+3B,aAAc,KAC7E,KAAKm0B,iBACD,KAAM,IAAIvrD,OAAM,gEAIpB,OAFAsrD,WAAU9uB,UAAU,WAAc,MAAO3sB,QAAOk0C,MAAMiH,SAAUM,aAChE,OAAWhgD,kBAAkB,WAAc,MAAO,QAAW2B,QAAQjE,WAAY0J,KAAM,SAAU9O,OAAS2nD,iBAAiBv+C,YAAYpJ,YAChIuL,6BAA6Bo8C,iBAAmC,OAAY,WAC/E,GAAqBC,YAAaF,UAAUvpD,SAAS1C,IAAIslD,sBAEzD,OADA6G,YAAWxG,kBACJwG,WAAW3G,YAAYtrD,KAAK,WAE/B,MADAwqD,OAAM0H,mBAAmBH,WAClBA,iBAuCvBx9C,YAAYvW,UAAUm0D,gBAmBtB,SAAUv7C,WAAYw7C,iBAClB,GAAI5H,OAAQvsD,SACY,KAApBm0D,kBAA8BA,mBAClC,IAAqBC,iBAAkBp0D,KAAKuK,SAAS1C,IAAIknD,iBACpC/mD,QAAUgQ,kBAAmBm8C,gBAElD,OADgCC,iBAAgBC,gBAAgBrsD,UAChDymD,mBAAmB91C,YAC9B5W,KAAK,SAAU6xD,eAAiB,MAAOrH,OAAMoH,uBAAuBC,cAAe5rD,YAM5FsO,YAAYvW,UAAUk0D,mBAItB,SAAUH,WACN,GAAqBQ,QAA2BR,UAAUvpD,SAAS1C,IAAI0sD,eACvE,IAAIT,UAAUU,qBAAqB/yD,OAAS,EACxCqyD,UAAUU,qBAAqBnkD,QAAQ,SAAUokD,GAAK,MAAOH,QAAOI,UAAUD,SAE7E,CAAA,IAAIX,UAAU9jC,SAAS2kC,cAIxB,KAAM,IAAInsD,OAAM,cAAgBnG,UAAUyxD,UAAU9jC,SAAStvB,aAAe,wIAH5EozD,WAAU9jC,SAAS2kC,cAAcL,QAMrCt0D,KAAKwzD,SAASlvD,KAAKwvD,YAUvBx9C,YAAYvW,UAAUilC,UAKtB,SAAUlwB,UAAY9U,KAAKyzD,kBAAkBnvD,KAAKwQ,WAClDlU,OAAOwD,eAAekS,YAAYvW,UAAW,YAKzC8H,IAKA,WAAc,MAAO7H,MAAKuzD,WAC1B/gB,YAAY,EACZttB,cAAc,IASlB5O,YAAYvW,UAAUsX,QAItB,WACI,GAAIrX,KAAK0zD,WACL,KAAM,IAAIlrD,OAAM,2CAEpBxI,MAAKwzD,SAAStmD,QAAQmD,QAAQ,SAAU9Q,QAAU,MAAOA,QAAO8X,YAChErX,KAAKyzD,kBAAkBpjD,QAAQ,SAAU8+B,UAAY,MAAOA,cAC5DnvC,KAAK0zD,YAAa,GAEtB9yD,OAAOwD,eAAekS,YAAYvW,UAAW,aACzC8H,IAGA,WAAc,MAAO7H,MAAK0zD,YAC1BlhB,YAAY,EACZttB,cAAc,IAElB5O,YAAYivC,aACNx/C,KAAM8hD,aAGZvxC,YAAY6uC,eAAiB,WAAc,QACrCp/C,KAAMmD,YAELoN,eA6DPi+C,eAAgC,WAEhC,QAASA,gBAAeK,MAAOvK,SAAUkJ,UAAWsB,kBAAmBC,0BAA2BC,aAC9F,GAAIxI,OAAQvsD,IACZA,MAAK40D,MAAQA,MACb50D,KAAKqqD,SAAWA,SAChBrqD,KAAKuzD,UAAYA,UACjBvzD,KAAK60D,kBAAoBA,kBACzB70D,KAAK80D,0BAA4BA,0BACjC90D,KAAK+0D,YAAcA,YACnB/0D,KAAKg1D,uBACLh1D,KAAKi1D,UACLj1D,KAAKk1D,cAAe,EACpBl1D,KAAKm1D,sBAAuB,EAC5Bn1D,KAAKo1D,SAAU,EAKfp1D,KAAKq1D,kBAILr1D,KAAKs1D,cACLt1D,KAAKm1D,qBAAuBl/C,YAC5BjW,KAAK40D,MAAMhhD,iBAAiBpC,WAAY0J,KAAM,WAAcqxC,MAAMqI,MAAM1D,IAAI,WAAc3E,MAAMzW,WAChG,IAAqByf,mBAAoB,GAAIt1D,iBAAgBH,WAAW,SAAU01D,UAC9EjJ,MAAM6I,QAAU7I,MAAMqI,MAAMjhD,WAAa44C,MAAMqI,MAAMv/C,uBAChDk3C,MAAMqI,MAAMlhD,qBACjB64C,MAAMqI,MAAM9gD,kBAAkB,WAC1B0hD,SAASt6C,KAAKqxC,MAAM6I,SACpBI,SAAS9H,eAGI/5C,SAAW,GAAI1T,iBAAgBH,WAAW,SAAU01D,UAGrE,GAAqBC,UACrBlJ,OAAMqI,MAAM9gD,kBAAkB,WAC1B2hD,UAAYlJ,MAAMqI,MAAM7gD,SAASvC,UAAU,WACvCiG,OAAOw5C,yBAGPtvD,kBAAkB,WACT4qD,MAAM6I,SAAY7I,MAAMqI,MAAMv/C,sBAC9Bk3C,MAAMqI,MAAMlhD,uBACb64C,MAAM6I,SAAU,EAChBI,SAASt6C,MAAK,SAK9B,IAAqBw6C,aAAcnJ,MAAMqI,MAAMl/C,WAAWlE,UAAU,WAChEiG,OAAOu5C,sBACHzE,MAAM6I,UACN7I,MAAM6I,SAAU,EAChB7I,MAAMqI,MAAM9gD,kBAAkB,WAAc0hD,SAASt6C,MAAK,OAGlE,OAAO,YACHu6C,UAAUzhC,cACV0hC,YAAY1hC,gBAGpB,MAA0BrgB,SACtBzT,sBAAsBy1D,MAAMJ,kBAAmBp1D,oBAAoBy1D,MAAMjyD,KAAKgQ,WA4PtF,MAxNA4gD,gBAAex0D,UAAU20D,UAmBzB,SAAUmB,mBAAoB5qC,oBAC1B,GAAIshC,OAAQvsD,IACZ,KAAKA,KAAK+0D,YAAY35C,KAClB,KAAM,IAAI5S,OAAM,gJAEpB,IAAqB6pB,iBAEjBA,kBADAwjC,6BAA8B5G,kBACX4G,mBAII71D,KAAK80D,0BAA0B3F,wBAAwB0G,oBAElF71D,KAAKq1D,eAAe/wD,KAAK+tB,iBAAiBN,cAE1C,IAAqBvC,UAAW6C,2BAA4Bo9B,+BACxD,KACAzvD,KAAKuzD,UAAU1rD,IAAI8nD,aACFzkC,eAAiBD,oBAAsBoH,iBAAiBP,SACxDgkC,QAAUzjC,iBAAiBxxB,OAAOqI,SAASm+C,QAAUn8B,eAAgBsE,SAC1FsmC,SAAQ9wB,UAAU,WAAcunB,MAAMwJ,iBAAiBD,UACvD,IAAqBnD,aAAcmD,QAAQvrD,SAAS1C,IAAI2pD,YAAa,KASrE,OARImB,cACAmD,QAAQvrD,SAAS1C,IAAI0qD,qBAChBG,oBAAoBoD,QAAQE,SAAS18C,cAAeq5C,aAE7D3yD,KAAKi2D,eAAeH,SAChB7/C,aACAjW,KAAKqqD,SAAS8D,IAAI,oGAEf2H,SAuBXvB,eAAex0D,UAAU+1C,KAWzB,WACI,GAAIyW,OAAQvsD,IACZ,IAAIA,KAAKk1D,aACL,KAAM,IAAI1sD,OAAM,4CAEpB,IAAqBkK,OAAQ6hD,eAAe2B,YAC5C,KACIl2D,KAAKk1D,cAAe,EACpBl1D,KAAKi1D,OAAO5kD,QAAQ,SAAUuP,MAAQ,MAAOA,MAAKmhB,kBAC9C/gC,KAAKm1D,sBACLn1D,KAAKi1D,OAAO5kD,QAAQ,SAAUuP,MAAQ,MAAOA,MAAKohB,mBAG1D,MAAwBz4B,GAEpBvI,KAAK40D,MAAM9gD,kBAAkB,WAAc,MAAOy4C,OAAMsI,kBAAkBr/C,YAAYjN,KAE1F,QACIvI,KAAKk1D,cAAe,EACpBnF,SAASr9C,SAejB6hD,eAAex0D,UAAUo2D,WAOzB,SAAUC,SACN,GAAqBx2C,MAAO,OAC5B5f,MAAKi1D,OAAO3wD,KAAKsb,MACjBA,KAAKy2C,eAAer2D,OAUxBu0D,eAAex0D,UAAUu2D,WAKzB,SAAUF,SACN,GAAqBx2C,MAAO,OAC5BvH,QAAOrY,KAAKi1D,OAAQr1C,MACpBA,KAAK22C,oBAMThC,eAAex0D,UAAUk2D,eAIzB,SAAUO,cACNx2D,KAAKm2D,WAAWK,aAAa/vC,UAC7BzmB,KAAK81C,OACL91C,KAAKs1D,WAAWhxD,KAAKkyD,cAEYx2D,KAAKuzD,UAAU1rD,IAAImmD,2BAA4BpqD,OAAO5D,KAAKg1D,qBAClF3kD,QAAQ,SAAU8+B,UAAY,MAAOA,UAASqnB,iBAM5DjC,eAAex0D,UAAUg2D,iBAIzB,SAAUS,cACNx2D,KAAKs2D,WAAWE,aAAa/vC,UAC7BpO,OAAOrY,KAAKs1D,WAAYkB,eAO5BjC,eAAex0D,UAAUkwB,YAIzB,WAEIjwB,KAAKi1D,OAAO/nD,QAAQmD,QAAQ,SAAUuP,MAAQ,MAAOA,MAAKvI,aAE9DzW,OAAOwD,eAAemwD,eAAex0D,UAAW,aAI5C8H,IAIA,WAAc,MAAO7H,MAAKi1D,OAAOxzD,QACjC+wC,YAAY,EACZttB,cAAc,IAKlBqvC,eAAe2B,WAAapG,eAAe,yBAC3CyE,eAAehP,aACTx/C,KAAM8hD,aAGZ0M,eAAepP,eAAiB,WAAc,QACxCp/C,KAAM0R,SACN1R,KAAMmoD,UACNnoD,KAAMmD,WACNnD,KAAM65B,eACN75B,KAAMqpD,2BACNrpD,KAAMonD,yBAELoH,kBAyCPkC,oBAAqC,WACrC,QAASA,qBAAoBtmD,GAAIumD,YAAaC,UAAWv0C,cAAeD,OAAQy0C,YAC5E52D,KAAKmQ,GAAKA,GACVnQ,KAAK02D,YAAcA,YACnB12D,KAAK22D,UAAYA,UACjB32D,KAAKoiB,cAAgBA,cACrBpiB,KAAKmiB,OAASA,OACdniB,KAAK42D,WAAaA,WAEtB,MAAOH,wBAMPI,gBAAiC,WACjC,QAASA,oBAET,MAAOA,oBAWPC,SAA0B,WAC1B,QAASA,aAET,MAAOA,aAkBPC,cAhBuB,GAAI7lD,gBAAe,wBAgBZ,WAC9B,QAAS6lD,iBAET,MAAOA,kBAWP13B,iBAAkC,WAClC,QAASA,qBAET,MAAOA,qBAGP23B,qBACAC,UAAW,EACXllB,SAAU,EAEdilB,qBAAoBA,oBAAoBC,WAAa,YACrDD,oBAAoBA,oBAAoBjlB,UAAY,UAKpD,IAAImlB,WAA2B,WAC3B,QAASA,cAET,MAAOA,cAsCP/hC,WAA4B,WAC5B,QAASA,YAAW7b,eAChBtZ,KAAKsZ,cAAgBA,cAEzB,MAAO6b,eAmBPgiC,sBAAuC,WACvC,QAASA,0BAET,MAAOA,0BAEPz+C,gBAAkB,GAAInX,KAqEtBg1B,UAA2B,WAC3B,QAASA,aACLv2B,KAAK+2B,OAAQ,EACb/2B,KAAKo3D,YACLp3D,KAAKo0B,QAAU,GAAI87B,cACnBlwD,KAAKyB,OAAS,EAwLlB,MA3KA80B,WAAUx2B,UAAUyC,IAOpB,SAAUZ,IAAM,MAAO5B,MAAKo3D,SAAS50D,IAAIZ,KAWzC20B,UAAUx2B,UAAUs3D,OAMpB,SAAUz1D,IACN,MAAO5B,MAAKo3D,SAASC,OAAOz1D,KAYhC20B,UAAUx2B,UAAUu3D,KAMpB,SAAU11D,IACN,MAAO5B,MAAKo3D,SAASE,KAAK11D,KAc9B20B,UAAUx2B,UAAUoY,OAQpB,SAAUvW,GAAI6U,MACV,MAAOzW,MAAKo3D,SAASj/C,OAAOvW,GAAI6U,OAYpC8f,UAAUx2B,UAAUsQ,QAMpB,SAAUzO,IAAM5B,KAAKo3D,SAAS/mD,QAAQzO,KAWtC20B,UAAUx2B,UAAU4Q,KAMpB,SAAU/O,IACN,MAAO5B,MAAKo3D,SAASzmD,KAAK/O,KAK9B20B,UAAUx2B,UAAUw3D,QAGpB,WAAc,MAAOv3D,MAAKo3D,SAASlqD,SAInCqpB,UAAUx2B,UAAUiB,qBAGpB,WAAc,MAA0BhB,MAAc,SAAEgB,wBAIxDu1B,UAAUx2B,UAAU8C,SAGpB,WAAc,MAAO7C,MAAKo3D,SAASv0D,YAKnC0zB,UAAUx2B,UAAUo3B,MAIpB,SAAUv0B,KACN5C,KAAKo3D,SAAWv+C,QAAQjW,KACxB,KAA0Bm0B,OAAQ,EAClC,KAA0Bt1B,OAASzB,KAAKo3D,SAAS31D,OACjD,KAA0B+1D,KAAOx3D,KAAKo3D,SAASp3D,KAAKyB,OAAS,GAC7D,KAA0BsM,MAAQ/N,KAAKo3D,SAAS,IAKpD7gC,UAAUx2B,UAAUu3B,gBAGpB,WAAiCt3B,KAAa,QAAE6T,KAAK7T,OAMrDu2B,UAAUx2B,UAAU62B,SAIpB,WAAc,KAA0BG,OAAQ,GAMhDR,UAAUx2B,UAAUsX,QAIpB,WACuBrX,KAAa,QAAE0tD,WACf1tD,KAAa,QAAEg0B,eAE/BuC,aAkCPkhC,6BAA8C,WAC9C,QAASA,iCAET,MAAOA,iCAEPC,gBACAC,kBAAmB,GACnBC,kBAAmB,cAMnBC,uBAAwC,WACxC,QAASA,wBAAuBC,UAAWC,QACvC/3D,KAAK83D,UAAYA,UACjB93D,KAAKg4D,QAAUD,QAAUL,eA4D7B,MAtDAG,wBAAuB93D,UAAU43C,KAIjC,SAAUlvC,MAEN,MADmCzI,MAAK83D,oBAAqBvJ,UACxCvuD,KAAKi4D,YAAYxvD,MAAQzI,KAAKk4D,eAAezvD,OAMtEovD,uBAAuB93D,UAAUm4D,eAIjC,SAAUzvD,MACN,GAAI8jD,OAAQvsD,KACR8D,GAAK2E,KAAKoU,MAjDL,KAiDwBtd,OAASuE,GAAG,GAAIqV,WAAarV,GAAG,EAIjE,YAHmBkF,KAAfmQ,aACAA,WAAa,WAEVg/C,OAAOC,OAAO74D,QAChBwC,KAAK,SAAUxC,QAAU,MAAOA,QAAO4Z,cACvCpX,KAAK,SAAUgE,MAAQ,MAAOkT,eAAclT,KAAMxG,OAAQ4Z,cAC1DpX,KAAK,SAAUgE,MAAQ,MAAOwmD,OAAMuL,UAAUrJ,mBAAmB1oD,SAM1E8xD,uBAAuB93D,UAAUk4D,YAIjC,SAAUxvD,MACN,GAAI3E,IAAK2E,KAAKoU,MAnEL,KAmEwBtd,OAASuE,GAAG,GAAIqV,WAAarV,GAAG,GAC5Cu0D,mBAnEF,WAwEnB,YAJmBrvD,KAAfmQ,aACAA,WAAa,UACbk/C,mBAAqB,IAElBF,OAAOC,OAAOp4D,KAAKg4D,QAAQL,kBAAoBp4D,OAASS,KAAKg4D,QAAQJ,mBACvE71D,KAAK,SAAUxC;0GAAU,MAAOA,QAAO4Z,WAAak/C,sBACpDt2D,KAAK,SAAU1C,SAAW,MAAO4Z,eAAc5Z,QAASE,OAAQ4Z,eAEzE0+C,uBAAuBtS,aACjBx/C,KAAM8hD,aAGZgQ,uBAAuB1S,eAAiB,WAAc,QAChDp/C,KAAMwoD,WACNxoD,KAAM0xD,6BAA8BlS,aAAex/C,KAAMwD,cAExDsuD,0BAuCPS,YAA6B,WAC7B,QAASA,gBAET,MAAOA,gBAiCPC,iBAAkC,WAClC,QAASA,qBAET,MAAOA,qBAkBPC,kBAAmC,WACnC,QAASA,sBAET,MAAOA,sBAkBPC,QAAyB,SAAU/I,QAEnC,QAAS+I,WACL,MAAkB,QAAX/I,QAAmBA,OAAO1tD,MAAMhC,KAAMyD,YAAczD,KAE/D,MAJAM,WAAUm4D,QAAS/I,QAIZ+I,SACTD,mBAwDEE,gBAAiC,SAAUhJ,QAE3C,QAASgJ,mBACL,MAAkB,QAAXhJ,QAAmBA,OAAO1tD,MAAMhC,KAAMyD,YAAczD,KAE/D,MAJAM,WAAUo4D,gBAAiBhJ,QAIpBgJ,iBACTD,SA4BEE,cAA+B,WAC/B,QAASA,eAAch2D,KAAMmS,UACzB9U,KAAK2C,KAAOA,KACZ3C,KAAK8U,SAAWA,SAEpB,MAAO6jD,kBAKPC,UAA2B,WAC3B,QAASA,WAAU3+C,WAAY9R,OAAQ0wD,eACnC74D,KAAK64D,cAAgBA,cACrB74D,KAAKia,WAAaA,WACd9R,QAAUA,iBAAkB0R,cAC5B1R,OAAO2wD,SAAS94D,MAGhBA,KAAKmI,OAAS,KAElBnI,KAAK+4D,aA0CT,MAxCAn4D,QAAOwD,eAAew0D,UAAU74D,UAAW,YACvC8H,IAGA,WAAc,MAAO7H,MAAK64D,cAActuD,UACxCioC,YAAY,EACZttB,cAAc,IAElBtkB,OAAOwD,eAAew0D,UAAU74D,UAAW,qBACvC8H,IAGA,WAAc,MAAO7H,MAAK64D,cAAc3mD,WACxCsgC,YAAY,EACZttB,cAAc,IAElBtkB,OAAOwD,eAAew0D,UAAU74D,UAAW,WACvC8H,IAGA,WAAc,MAAO7H,MAAK64D,cAAc5uD,SACxCuoC,YAAY,EACZttB,cAAc,IAElBtkB,OAAOwD,eAAew0D,UAAU74D,UAAW,cACvC8H,IAGA,WAAc,MAAO7H,MAAK64D,cAAch0C,YACxC2tB,YAAY,EACZttB,cAAc,IAElBtkB,OAAOwD,eAAew0D,UAAU74D,UAAW,kBACvC8H,IAGA,WAAc,MAAO7H,MAAK64D,cAAcG,gBACxCxmB,YAAY,EACZttB,cAAc,IAEX0zC,aAKP/+C,aAA8B,SAAU61C,QAExC,QAAS71C,cAAaI,WAAY9R,OAAQ0wD,eACtC,GAAItM,OAAQmD,OAAO/rD,KAAK3D,KAAMia,WAAY9R,OAAQ0wD,gBAAkB74D,IAOpE,OANAusD,OAAMp4C,cACNo4C,MAAM5Z,cACN4Z,MAAM0M,WACN1M,MAAMpqC,UACNoqC,MAAM5yC,cACN4yC,MAAMjzC,cAAgBW,WACfsyC,MA+IX,MAxJAjsD,WAAUuZ,aAAc61C,QAexB71C,aAAa9Z,UAAU+4D,SAIvB,SAAUhyB,OACFA,QACA9mC,KAAK2Z,WAAWrV,KAAKwiC,OACrBA,MAAM3+B,OAASnI,OAOvB6Z,aAAa9Z,UAAU6e,YAIvB,SAAUkoB,OACN,GAAqBoyB,YAAal5D,KAAK2Z,WAAW5W,QAAQ+jC,QACtC,IAAhBoyB,aACApyB,MAAM3+B,OAAS,KACfnI,KAAK2Z,WAAWnB,OAAO0gD,WAAY,KAQ3Cr/C,aAAa9Z,UAAUo5D,oBAKvB,SAAUryB,MAAOsyB,aACb,GAAI7M,OAAQvsD,KACSq5D,aAAer5D,KAAK2Z,WAAW5W,QAAQ+jC,QACtC,IAAlBuyB,gBACCv1D,GAAK9D,KAAK2Z,YAAYnB,OAAOxW,MAAM8B,IAAKu1D,aAAe,EAAG,GAAGz1D,OAAOw1D,cACrEA,YAAY/oD,QAAQ,SAAUiP,GACtBA,EAAEnX,QACFmX,EAAEnX,OAAOyW,YAAYU,GAEzBA,EAAEnX,OAASokD,QAGnB,IAAIzoD,KAOR+V,aAAa9Z,UAAUonB,aAKvB,SAAUmyC,SAAUC,UAChB,GAAqBC,UAAWx5D,KAAK2Z,WAAW5W,QAAQu2D,WACtC,IAAdE,SACAx5D,KAAK84D,SAASS,WAGVA,SAASpxD,QACToxD,SAASpxD,OAAOyW,YAAY26C,UAEhCA,SAASpxD,OAASnI,KAClBA,KAAK2Z,WAAWnB,OAAOghD,SAAU,EAAGD,YAO5C1/C,aAAa9Z,UAAU8pB,MAIvB,SAAUpQ,WAEN,MAD+BzZ,MAAKy5D,SAAShgD,WAC9B,IAAM,MAMzBI,aAAa9Z,UAAU05D,SAIvB,SAAUhgD,WACN,GAAqBC,WAErB,OADAH,uBAAsBvZ,KAAMyZ,UAAWC,SAChCA,SAMXG,aAAa9Z,UAAU25D,cAIvB,SAAUjgD,WACN,GAAqBC,WAErB,OADAI,oBAAmB9Z,KAAMyZ,UAAWC,SAC7BA,SAEX9Y,OAAOwD,eAAeyV,aAAa9Z,UAAW,YAC1C8H,IAGA,WACI,MAAyB7H,MAAK2Z,WAAW09C,OAAO,SAAUz9C,MAAQ,MAAOA,gBAAgBC,iBAE7F24B,YAAY,EACZttB,cAAc,IAOlBrL,aAAa9Z,UAAU45D,oBAKvB,SAAUj2C,UAAWk2C,UACjB55D,KAAK+4D,UAAU1oD,QAAQ,SAAU8+B,UACzBA,SAASxsC,MAAQ+gB,WACjByrB,SAASr6B,SAAS8kD,aAIvB//C,cACT++C,WA4CE1+C,uBAAyB,GAAI3Y,KAuF7BmgB,aAA8B,WAC9B,QAASA,cAAard,OAClBrE,KAAK65D,QAAUx1D,MA6CnB,MArCAqd,cAAao4C,KAKb,SAAUz1D,OAAS,MAAO,IAAIqd,cAAard,QAY3Cqd,aAAaE,OAOb,SAAUvd,OAAS,MAAOqd,cAAaC,UAAUtd,OAASA,MAAMw1D,QAAUx1D,OAO1Eqd,aAAaC,UAKb,SAAUtd,OAAS,MAAOA,iBAAiBqd,eACpCA,gBAMPgU,aAA8B,WAC9B,QAASA,cAAaqkC,cAAeC,aAAcC,aAC/Cj6D,KAAK+5D,cAAgBA,cACrB/5D,KAAKg6D,aAAeA,aACpBh6D,KAAKi6D,YAAcA,YAcvB,MALAvkC,cAAa31B,UAAUy9C,cAIvB,WAAc,MAAOx9C,MAAKi6D,aACnBvkC,gBAwEPwkC,6BAA8C,WAC9C,QAASA,iCAwBT,MAlBAA,8BAA6Bn6D,UAAUo6D,SAIvC,SAAUtwD,KAAO,MAAO2Q,oBAAmB3Q,MAM3CqwD,6BAA6Bn6D,UAAUc,OAKvC,SAAUu5D,WACN,MAAO,IAAIC,uBAAsBD,YAE9BF,gCAEPI,gBAAkB,SAAUt1D,MAAO+T,MAAQ,MAAOA,OAIlDshD,sBAAuC,WACvC,QAASA,uBAAsBD,WAC3Bp6D,KAAKyB,OAAS,EACdzB,KAAKu6D,eAAiB,KACtBv6D,KAAKw6D,iBAAmB,KACxBx6D,KAAKy6D,gBAAkB,KACvBz6D,KAAK06D,QAAU,KACf16D,KAAK26D,QAAU,KACf36D,KAAK46D,eAAiB,KACtB56D,KAAK66D,eAAiB,KACtB76D,KAAK86D,WAAa,KAClB96D,KAAK+6D,WAAa,KAClB/6D,KAAKg7D,cAAgB,KACrBh7D,KAAKi7D,cAAgB,KACrBj7D,KAAKk7D,qBAAuB,KAC5Bl7D,KAAKm7D,qBAAuB,KAC5Bn7D,KAAKo7D,WAAahB,WAAaE,gBAqxBnC,MA/wBAD,uBAAsBt6D,UAAUs7D,YAIhC,SAAUz5D,IACN,GAAqBqG,OACrB,KAAKA,OAASjI,KAAK06D,QAAoB,OAAXzyD,OAAiBA,OAASA,OAAOqzD,MACzD15D,GAAGqG,SAOXoyD,sBAAsBt6D,UAAUw7D,iBAIhC,SAAU35D,IAKN,IAJA,GAAqB45D,QAASx7D,KAAK06D,QACde,WAAaz7D,KAAKg7D,cAClBx/C,gBAAkB,EAClBC,YAAc,KAC5B+/C,QAAUC,YAAY,CAGzB,GAAqBxzD,SAAUwzD,YAC3BD,QAA6BA,OAAoB,aAAIjgD,iBAAiBkgD,WAAYjgD,gBAAiBC,aACnG,OACAggD,WACiBC,iBAAmBngD,iBAAiBtT,OAAQuT,gBAAiBC,aAC7DkgD,aAAe1zD,OAAO0zD,YAE3C,IAAI1zD,SAAWwzD,WACXjgD,kBACAigD,WAAaA,WAAWG,iBAIxB,IADAJ,OAA0B,OAAWF,MACT,MAAxBrzD,OAAOyT,cACPF,sBAEC,CAEIC,cACDA,eACJ,IAAqBogD,wBAAyBH,iBAAmBlgD,gBAC5CsgD,kBAAqC,aAAmBtgD,eAC7E,IAAIqgD,wBAA0BC,kBAAmB,CAC7C,IAAK,GAAqBt6D,GAAI,EAAGA,EAAIq6D,uBAAwBr6D,IAAK,CAC9D,GAAqBqhD,QAASrhD,EAAIia,YAAYha,OAASga,YAAYja,GAAMia,YAAYja,GAAK,EACrEwD,MAAQ69C,OAASrhD,CAClCs6D,oBAAqB92D,OAASA,MAAQ62D,yBACtCpgD,YAAYja,GAAKqhD,OAAS,GAGlC,GAAqBnnC,eAAgBzT,OAAOyT,aAC5CD,aAAYC,eAAiBogD,kBAAoBD,wBAIzDH,mBAAqBC,cACrB/5D,GAAGqG,OAAQyzD,iBAAkBC,gBAQzCtB,sBAAsBt6D,UAAUg8D,oBAIhC,SAAUn6D,IACN,GAAqBqG,OACrB,KAAKA,OAASjI,KAAKy6D,gBAA4B,OAAXxyD,OAAiBA,OAASA,OAAO+zD,cACjEp6D,GAAGqG,SAOXoyD,sBAAsBt6D,UAAUk8D,iBAIhC,SAAUr6D,IACN,GAAqBqG,OACrB,KAAKA,OAASjI,KAAK46D,eAA2B,OAAX3yD,OAAiBA,OAASA,OAAOi0D,WAChEt6D,GAAGqG,SAOXoyD,sBAAsBt6D,UAAUo8D,iBAIhC,SAAUv6D,IACN,GAAqBqG,OACrB,KAAKA,OAASjI,KAAK86D,WAAuB,OAAX7yD,OAAiBA,OAASA,OAAOm0D,WAC5Dx6D,GAAGqG,SAOXoyD,sBAAsBt6D,UAAUs8D,mBAIhC,SAAUz6D,IACN,GAAqBqG,OACrB,KAAKA,OAASjI,KAAKg7D,cAA0B,OAAX/yD,OAAiBA,OAASA,OAAO2zD,aAC/Dh6D,GAAGqG,SAOXoyD,sBAAsBt6D,UAAUu8D,sBAIhC,SAAU16D,IACN,GAAqBqG,OACrB,KAAKA,OAASjI,KAAKk7D,qBAAiC,OAAXjzD,OAAiBA,OAASA,OAAOs0D,oBACtE36D,GAAGqG,SAOXoyD,sBAAsBt6D,UAAUy8D,KAIhC,SAAUC,YAGN,GAFkB,MAAdA,aACAA,gBACCjiD,mBAAmBiiD,YACpB,KAAM,IAAIj0D,OAAM,yBAA2BnG,UAAUo6D,YAAc,2CAEvE,OAAIz8D,MAAK08D,MAAMD,YACJz8D,KAGA,MAMfq6D,sBAAsBt6D,UAAUilC,UAGhC,aAKAq1B,sBAAsBt6D,UAAU28D,MAIhC,SAAUD,YACN,GAAIlQ,OAAQvsD,IACZA,MAAK28D,QACL,IAEqB33D,OACA+T,KACA6jD,YAJA30D,OAASjI,KAAK06D,QACdmC,YAAa,CAIlC,IAAIt6D,MAAMuI,QAAQ2xD,YAAa,CAC3B,KAA0Bh7D,OAASg7D,WAAWh7D,MAC9C,KAAK,GAAqBq7D,SAAU,EAAGA,QAAU98D,KAAKyB,OAAQq7D,UAC1D/jD,KAAO0jD,WAAWK,SAClBF,YAAc58D,KAAKo7D,WAAW0B,QAAS/jD,MACxB,OAAX9Q,QAAoB/F,eAAe+F,OAAO80D,UAAWH,cAKjDC,aAEA50D,OAASjI,KAAKg9D,mBAAmB/0D,OAAQ8Q,KAAM6jD,YAAaE,UAE3D56D,eAAe+F,OAAO8Q,KAAMA,OAC7B/Y,KAAKi9D,mBAAmBh1D,OAAQ8Q,QATpC9Q,OAASjI,KAAKk9D,UAAUj1D,OAAQ8Q,KAAM6jD,YAAaE,SACnDD,YAAa,GAUjB50D,OAASA,OAAOqzD,UAIpBt2D,OAAQ,EACRqW,gBAAgBohD,WAAY,SAAU1jD,MAClC6jD,YAAcrQ,MAAM6O,WAAWp2D,MAAO+T,MACvB,OAAX9Q,QAAoB/F,eAAe+F,OAAO80D,UAAWH,cAKjDC,aAEA50D,OAASskD,MAAMyQ,mBAAmB/0D,OAAQ8Q,KAAM6jD,YAAa53D,QAE5D9C,eAAe+F,OAAO8Q,KAAMA,OAC7BwzC,MAAM0Q,mBAAmBh1D,OAAQ8Q,QATrC9Q,OAASskD,MAAM2Q,UAAUj1D,OAAQ8Q,KAAM6jD,YAAa53D,OACpD63D,YAAa,GAUjB50D,OAASA,OAAOqzD,MAChBt2D,UAEJ,KAA0BvD,OAASuD,KAIvC,OAFAhF,MAAKm9D,UAAUl1D,QACf,KAA0Bw0D,WAAaA,WAChCz8D,KAAKo9D,SAEhBx8D,OAAOwD,eAAei2D,sBAAsBt6D,UAAW,WAInD8H,IAGA,WACI,MAA+B,QAAxB7H,KAAK46D,gBAA+C,OAApB56D,KAAK86D,YACjB,OAAvB96D,KAAKg7D,eAAwD,OAA9Bh7D,KAAKk7D,sBAE5C1oB,YAAY,EACZttB,cAAc,IAmBlBm1C,sBAAsBt6D,UAAU48D,OAShC,WACI,GAAI38D,KAAKo9D,QAAS,CACd,GAAqBn1D,YAAS,GACTo1D,eAAa,EAClC,KAAKp1D,OAASjI,KAAKy6D,gBAAkBz6D,KAAK06D,QAAoB,OAAXzyD,OAAiBA,OAASA,OAAOqzD,MAChFrzD,OAAO+zD,cAAgB/zD,OAAOqzD,KAElC,KAAKrzD,OAASjI,KAAK46D,eAA2B,OAAX3yD,OAAiBA,OAASA,OAAOi0D,WAChEj0D,OAAOyT,cAAgBzT,OAAO0zD,YAGlC,KADA37D,KAAK46D,eAAiB56D,KAAK66D,eAAiB,KACvC5yD,OAASjI,KAAK86D,WAAuB,OAAX7yD,OAAiBA,OAASo1D,WACrDp1D,OAAOyT,cAAgBzT,OAAO0zD,aAC9B0B,WAAap1D,OAAOm0D,UAExBp8D,MAAK86D,WAAa96D,KAAK+6D,WAAa,KACpC/6D,KAAKg7D,cAAgBh7D,KAAKi7D,cAAgB,KAC1Cj7D,KAAKk7D,qBAAuBl7D,KAAKm7D,qBAAuB,OA8BhEd,sBAAsBt6D,UAAUm9D,UAehC,SAAUj1D,OAAQ8Q,KAAM6jD,YAAa53D,OAEjC,GAAqBs4D,eAkCrB,OAjCe,QAAXr1D,OACAq1D,eAAiBt9D,KAAK26D,SAGtB2C,eAAiBr1D,OAAOs1D,MAExBv9D,KAAKw9D,QAAQv1D,SAGjBA,OAAiC,OAAxBjI,KAAKu6D,eAA0B,KAAOv6D,KAAKu6D,eAAe1yD,IAAI+0D,YAAa53D,OACrE,OAAXiD,QAGK/F,eAAe+F,OAAO8Q,KAAMA,OAC7B/Y,KAAKi9D,mBAAmBh1D,OAAQ8Q,MACpC/Y,KAAKy9D,WAAWx1D,OAAQq1D,eAAgBt4D,SAIxCiD,OAAmC,OAA1BjI,KAAKw6D,iBAA4B,KAAOx6D,KAAKw6D,iBAAiB3yD,IAAI+0D,YAAa,MACzE,OAAX30D,QAGK/F,eAAe+F,OAAO8Q,KAAMA,OAC7B/Y,KAAKi9D,mBAAmBh1D,OAAQ8Q,MACpC/Y,KAAK09D,eAAez1D,OAAQq1D,eAAgBt4D,QAI5CiD,OACIjI,KAAK29D,UAAU,GAAIC,uBAAsB7kD,KAAM6jD,aAAcU,eAAgBt4D,QAGlFiD,QA6DXoyD,sBAAsBt6D,UAAUi9D,mBAgChC,SAAU/0D,OAAQ8Q,KAAM6jD,YAAa53D,OACjC,GAAqB64D,gBAA2C,OAA1B79D,KAAKw6D,iBAA4B,KAAOx6D,KAAKw6D,iBAAiB3yD,IAAI+0D,YAAa,KAQrH,OAPuB,QAAnBiB,eACA51D,OAASjI,KAAK09D,eAAeG,eAAmC51D,OAAa,MAAGjD,OAE3EiD,OAAO0zD,cAAgB32D,QAC5BiD,OAAO0zD,aAAe32D,MACtBhF,KAAK89D,YAAY71D,OAAQjD,QAEtBiD,QAkBXoyD,sBAAsBt6D,UAAUo9D,UAShC,SAAUl1D,QAEN,KAAkB,OAAXA,QAAiB,CACpB,GAAqBo1D,YAAap1D,OAAOqzD,KACzCt7D,MAAK+9D,eAAe/9D,KAAKg+D,QAAQ/1D,SACjCA,OAASo1D,WAEiB,OAA1Br9D,KAAKw6D,kBACLx6D,KAAKw6D,iBAAiBl6B,QAEE,OAAxBtgC,KAAK66D,iBACL76D,KAAK66D,eAAeqB,WAAa,MAEb,OAApBl8D,KAAK+6D,aACL/6D,KAAK+6D,WAAWqB,WAAa,MAEZ,OAAjBp8D,KAAK26D,UACL36D,KAAK26D,QAAQW,MAAQ,MAEE,OAAvBt7D,KAAKi7D,gBACLj7D,KAAKi7D,cAAcW,aAAe,MAEJ,OAA9B57D,KAAKm7D,uBACLn7D,KAAKm7D,qBAAqBoB,oBAAsB,OAWxDlC,sBAAsBt6D,UAAU29D,eAOhC,SAAUz1D,OAAQg2D,WAAYj5D,OACI,OAA1BhF,KAAKw6D,kBACLx6D,KAAKw6D,iBAAiBniD,OAAOpQ,OAEjC,IAAqBi2D,MAAOj2D,OAAOk2D,aACdjjD,KAAOjT,OAAO2zD,YAenC,OAda,QAATsC,KACAl+D,KAAKg7D,cAAgB9/C,KAGrBgjD,KAAKtC,aAAe1gD,KAEX,OAATA,KACAlb,KAAKi7D,cAAgBiD,KAGrBhjD,KAAKijD,aAAeD,KAExBl+D,KAAKo+D,aAAan2D,OAAQg2D,WAAYj5D,OACtChF,KAAK89D,YAAY71D,OAAQjD,OAClBiD,QAUXoyD,sBAAsBt6D,UAAU09D,WAOhC,SAAUx1D,OAAQg2D,WAAYj5D,OAI1B,MAHAhF,MAAKg+D,QAAQ/1D,QACbjI,KAAKo+D,aAAan2D,OAAQg2D,WAAYj5D,OACtChF,KAAK89D,YAAY71D,OAAQjD,OAClBiD,QAUXoyD,sBAAsBt6D,UAAU49D,UAOhC,SAAU11D,OAAQg2D,WAAYj5D,OAa1B,MAZAhF,MAAKo+D,aAAan2D,OAAQg2D,WAAYj5D,OACV,OAAxBhF,KAAK66D,eAGL76D,KAAK66D,eAAiB76D,KAAK46D,eAAiB3yD,OAM5CjI,KAAK66D,eAAiB76D,KAAK66D,eAAeqB,WAAaj0D,OAEpDA,QAUXoyD,sBAAsBt6D,UAAUq+D,aAOhC,SAAUn2D,OAAQg2D,WAAYj5D,OAK1B,GAAqBkW,MAAsB,OAAf+iD,WAAsBj+D,KAAK06D,QAAUuD,WAAW3C,KAuB5E,OAnBArzD,QAAOqzD,MAAQpgD,KACfjT,OAAOs1D,MAAQU,WACF,OAAT/iD,KACAlb,KAAK26D,QAAU1yD,OAGfiT,KAAKqiD,MAAQt1D,OAEE,OAAfg2D,WACAj+D,KAAK06D,QAAUzyD,OAGfg2D,WAAW3C,MAAQrzD,OAEK,OAAxBjI,KAAKu6D,iBACLv6D,KAAKu6D,eAAiB,GAAI8D,gBAE9Br+D,KAAKu6D,eAAe+D,IAAIr2D,QACxBA,OAAO0zD,aAAe32D,MACfiD,QAQXoyD,sBAAsBt6D,UAAUy9D,QAKhC,SAAUv1D,QACN,MAAOjI,MAAK+9D,eAAe/9D,KAAKg+D,QAAQ/1D,UAQ5CoyD,sBAAsBt6D,UAAUi+D,QAKhC,SAAU/1D,QACsB,OAAxBjI,KAAKu6D,gBACLv6D,KAAKu6D,eAAeliD,OAAOpQ,OAE/B,IAAqBi2D,MAAOj2D,OAAOs1D,MACdriD,KAAOjT,OAAOqzD,KAgBnC,OAZa,QAAT4C,KACAl+D,KAAK06D,QAAUx/C,KAGfgjD,KAAK5C,MAAQpgD,KAEJ,OAATA,KACAlb,KAAK26D,QAAUuD,KAGfhjD,KAAKqiD,MAAQW,KAEVj2D,QASXoyD,sBAAsBt6D,UAAU+9D,YAMhC,SAAU71D,OAAQs2D,SAGd,MAAIt2D,QAAOyT,gBAAkB6iD,QAClBt2D,QAEa,OAApBjI,KAAK+6D,WAGL/6D,KAAK+6D,WAAa/6D,KAAK86D,WAAa7yD,OAKpCjI,KAAK+6D,WAAa/6D,KAAK+6D,WAAWqB,WAAan0D,OAE5CA,SAMXoyD,sBAAsBt6D,UAAUg+D,eAIhC,SAAU91D,QAoBN,MAnB8B,QAA1BjI,KAAKw6D,mBACLx6D,KAAKw6D,iBAAmB,GAAI6D,gBAEhCr+D,KAAKw6D,iBAAiB8D,IAAIr2D,QAC1BA,OAAO0zD,aAAe,KACtB1zD,OAAO2zD,aAAe,KACK,OAAvB57D,KAAKi7D,eAGLj7D,KAAKi7D,cAAgBj7D,KAAKg7D,cAAgB/yD,OAC1CA,OAAOk2D,aAAe,OAMtBl2D,OAAOk2D,aAAen+D,KAAKi7D,cAC3Bj7D,KAAKi7D,cAAgBj7D,KAAKi7D,cAAcW,aAAe3zD,QAEpDA,QASXoyD,sBAAsBt6D,UAAUk9D,mBAMhC,SAAUh1D,OAAQ8Q,MAQd,MAPA9Q,QAAO8Q,KAAOA,KACoB,OAA9B/Y,KAAKm7D,qBACLn7D,KAAKm7D,qBAAuBn7D,KAAKk7D,qBAAuBjzD,OAGxDjI,KAAKm7D,qBAAuBn7D,KAAKm7D,qBAAqBoB,oBAAsBt0D,OAEzEA,QAEJoyD,yBAKPuD,sBAAuC,WACvC,QAASA,uBAAsB7kD,KAAMgkD,WACjC/8D,KAAK+Y,KAAOA,KACZ/Y,KAAK+8D,UAAYA,UACjB/8D,KAAK27D,aAAe,KACpB37D,KAAK0b,cAAgB,KAIrB1b,KAAKg8D,cAAgB,KAIrBh8D,KAAKu9D,MAAQ,KAIbv9D,KAAKs7D,MAAQ,KAIbt7D,KAAKw+D,SAAW,KAIhBx+D,KAAKy+D,SAAW,KAIhBz+D,KAAKm+D,aAAe,KAIpBn+D,KAAK47D,aAAe,KAIpB57D,KAAKk8D,WAAa,KAIlBl8D,KAAKo8D,WAAa,KAIlBp8D,KAAKu8D,oBAAsB,KAE/B,MAAOqB,0BAEPc,yBAA0C,WAC1C,QAASA,4BAIL1+D,KAAK2+D,MAAQ,KAIb3+D,KAAK4+D,MAAQ,KAwGjB,MA1FAF,0BAAyB3+D,UAAU2xC,IAOnC,SAAUzpC,QACa,OAAfjI,KAAK2+D,OACL3+D,KAAK2+D,MAAQ3+D,KAAK4+D,MAAQ32D,OAC1BA,OAAOw2D,SAAW,KAClBx2D,OAAOu2D,SAAW,OAOlBx+D,KAAW,MAAEy+D,SAAWx2D,OACxBA,OAAOu2D,SAAWx+D,KAAK4+D,MACvB32D,OAAOw2D,SAAW,KAClBz+D,KAAK4+D,MAAQ32D,SAUrBy2D,yBAAyB3+D,UAAU8H,IAKnC,SAAUk1D,UAAW8B,gBACjB,GAAqB52D,OACrB,KAAKA,OAASjI,KAAK2+D,MAAkB,OAAX12D,OAAiBA,OAASA,OAAOw2D,SACvD,IAAwB,OAAnBI,gBAA2BA,gBAAqC52D,OAAoB,eACrF/F,eAAe+F,OAAO80D,UAAWA,WACjC,MAAO90D,OAGf,OAAO,OAcXy2D,yBAAyB3+D,UAAUsY,OAOnC,SAAUpQ,QASN,GAAqBi2D,MAAOj2D,OAAOu2D,SACdtjD,KAAOjT,OAAOw2D,QAanC,OAZa,QAATP,KACAl+D,KAAK2+D,MAAQzjD,KAGbgjD,KAAKO,SAAWvjD,KAEP,OAATA,KACAlb,KAAK4+D,MAAQV,KAGbhjD,KAAKsjD,SAAWN,KAEE,OAAfl+D,KAAK2+D,OAETD,4BAEPL,cAA+B,WAC/B,QAASA,iBACLr+D,KAAKwC,IAAM,GAAIjB,KA8FnB,MAxFA88D,eAAct+D,UAAUu+D,IAIxB,SAAUr2D,QACN,GAAqBvG,KAAMuG,OAAO80D,UACb+B,WAAa9+D,KAAKwC,IAAIqF,IAAInG,IAC1Co9D,cACDA,WAAa,GAAIJ,0BACjB1+D,KAAKwC,IAAIuF,IAAIrG,IAAKo9D,aAEtBA,WAAWptB,IAAIzpC,SAmBnBo2D,cAAct+D,UAAU8H,IAUxB,SAAUk1D,UAAW8B,gBACjB,GAAqBn9D,KAAMq7D,UACNgC,WAAa/+D,KAAKwC,IAAIqF,IAAInG,IAC/C,OAAOq9D,YAAaA,WAAWl3D,IAAIk1D,UAAW8B,gBAAkB,MAcpER,cAAct+D,UAAUsY,OAOxB,SAAUpQ,QACN,GAAqBvG,KAAMuG,OAAO80D,SAMlC,OALqD/8D,MAAKwC,IAAIqF,IAAInG,KAEnD2W,OAAOpQ,SAClBjI,KAAKwC,IAAI6X,OAAO3Y,KAEbuG,QAEXrH,OAAOwD,eAAei6D,cAAct+D,UAAW,WAC3C8H,IAGA,WAAc,MAAyB,KAAlB7H,KAAKwC,IAAI8e,MAC9BkxB,YAAY,EACZttB,cAAc,IAKlBm5C,cAAct+D,UAAUugC,MAGxB,WAActgC,KAAKwC,IAAI89B,SAChB+9B,iBA8BPW,6BAA8C,WAC9C,QAASA,iCAoBT,MAdAA,8BAA6Bj/D,UAAUo6D,SAIvC,SAAUtwD,KAAO,MAAOA,eAAetI,MAAOsZ,WAAWhR,MAKzDm1D,6BAA6Bj/D,UAAUc,OAIvC,WAAc,MAAO,IAAIo+D,wBAClBD,gCAEPC,sBAAuC,WACvC,QAASA,yBACLj/D,KAAKynD,SAAW,GAAIlmD,KACpBvB,KAAKk/D,SAAW,KAChBl/D,KAAKm/D,aAAe,KACpBn/D,KAAKo/D,iBAAmB,KACxBp/D,KAAKq/D,aAAe,KACpBr/D,KAAKs/D,aAAe,KACpBt/D,KAAK46D,eAAiB,KACtB56D,KAAK66D,eAAiB,KACtB76D,KAAKg7D,cAAgB,KACrBh7D,KAAKi7D,cAAgB,KA0VzB,MAxVAr6D,QAAOwD,eAAe66D,sBAAsBl/D,UAAW,WACnD8H,IAGA,WACI,MAA+B,QAAxB7H,KAAK46D,gBAAiD,OAAtB56D,KAAKq/D,cACjB,OAAvBr/D,KAAKg7D,eAEbxoB,YAAY,EACZttB,cAAc,IAMlB+5C,sBAAsBl/D,UAAUs7D,YAIhC,SAAUz5D,IACN,GAAqBqG,OACrB,KAAKA,OAASjI,KAAKk/D,SAAqB,OAAXj3D,OAAiBA,OAASA,OAAOqzD,MAC1D15D,GAAGqG,SAOXg3D,sBAAsBl/D,UAAUg8D,oBAIhC,SAAUn6D,IACN,GAAqBqG,OACrB,KAAKA,OAASjI,KAAKo/D,iBAA6B,OAAXn3D,OAAiBA,OAASA,OAAO+zD,cAClEp6D,GAAGqG,SAOXg3D,sBAAsBl/D,UAAUw/D,mBAIhC,SAAU39D,IACN,GAAqBqG,OACrB,KAAKA,OAASjI,KAAKq/D,aAAyB,OAAXp3D,OAAiBA,OAASA,OAAOu3D,aAC9D59D,GAAGqG,SAOXg3D,sBAAsBl/D,UAAUk8D,iBAIhC,SAAUr6D,IACN,GAAqBqG,OACrB,KAAKA,OAASjI,KAAK46D,eAA2B,OAAX3yD,OAAiBA,OAASA,OAAOi0D,WAChEt6D,GAAGqG,SAOXg3D,sBAAsBl/D,UAAUs8D,mBAIhC,SAAUz6D,IACN,GAAqBqG,OACrB,KAAKA,OAASjI,KAAKg7D,cAA0B,OAAX/yD,OAAiBA,OAASA,OAAO2zD,aAC/Dh6D,GAAGqG,SAOXg3D,sBAAsBl/D,UAAUy8D,KAIhC,SAAUh6D,KACN,GAAKA,KAGA,KAAMA,cAAejB,MAAOsZ,WAAWrY,MACxC,KAAM,IAAIgG,OAAM,yBAA2BnG,UAAUG,KAAO,4CAH5DA,KAAM,GAAIjB,IAKd,OAAOvB,MAAK08D,MAAMl6D,KAAOxC,KAAO,MAKpCi/D,sBAAsBl/D,UAAUilC,UAGhC,aAWAi6B,sBAAsBl/D,UAAU28D,MAMhC,SAAUl6D,KACN,GAAI+pD,OAAQvsD,IACZA,MAAK28D,QACL,IAAqBx1C,cAAennB,KAAKk/D,QAczC,IAbAl/D,KAAKm/D,aAAe,KACpBn/D,KAAKy/D,SAASj9D,IAAK,SAAU6B,MAAO3C,KAChC,GAAIylB,cAAgBA,aAAazlB,MAAQA,IACrC6qD,MAAMmT,mBAAmBv4C,aAAc9iB,OACvCkoD,MAAM4S,aAAeh4C,aACrBA,aAAeA,aAAam0C,UAE3B,CACD,GAAqBrzD,QAASskD,MAAMoT,yBAAyBj+D,IAAK2C,MAClE8iB,cAAeolC,MAAMqT,sBAAsBz4C,aAAclf,WAI7Dkf,aAAc,CACVA,aAAao2C,QACbp2C,aAAao2C,MAAMjC,MAAQ,MAE/Bt7D,KAAKg7D,cAAgB7zC,YACrB,KAAK,GAAqBlf,QAASkf,aAAyB,OAAXlf,OAAiBA,OAASA,OAAO2zD,aAC1E3zD,SAAWjI,KAAKk/D,WAChBl/D,KAAKk/D,SAAW,MAEpBl/D,KAAKynD,SAASptC,OAAOpS,OAAOvG,KAC5BuG,OAAO2zD,aAAe3zD,OAAOqzD,MAC7BrzD,OAAO8xD,cAAgB9xD,OAAO+xD,aAC9B/xD,OAAO+xD,aAAe,KACtB/xD,OAAOs1D,MAAQ,KACft1D,OAAOqzD,MAAQ,KAQvB,MAJIt7D,MAAKs/D,eACLt/D,KAAKs/D,aAAaE,aAAe,MACjCx/D,KAAK66D,iBACL76D,KAAK66D,eAAeqB,WAAa,MAC9Bl8D,KAAKo9D,SAahB6B,sBAAsBl/D,UAAU6/D,sBAWhC,SAAUC,OAAQ53D,QACd,GAAI43D,OAAQ,CACR,GAAqB3B,MAAO2B,OAAOtC,KAWnC,OAVAt1D,QAAOqzD,MAAQuE,OACf53D,OAAOs1D,MAAQW,KACf2B,OAAOtC,MAAQt1D,OACXi2D,OACAA,KAAK5C,MAAQrzD,QAEb43D,SAAW7/D,KAAKk/D,WAChBl/D,KAAKk/D,SAAWj3D,QAEpBjI,KAAKm/D,aAAeU,OACbA,OAUX,MARI7/D,MAAKm/D,cACLn/D,KAAKm/D,aAAa7D,MAAQrzD,OAC1BA,OAAOs1D,MAAQv9D,KAAKm/D,cAGpBn/D,KAAKk/D,SAAWj3D,OAEpBjI,KAAKm/D,aAAel3D,OACb,MAOXg3D,sBAAsBl/D,UAAU4/D,yBAKhC,SAAUj+D,IAAK2C,OACX,GAAIrE,KAAKynD,SAAS/mB,IAAIh/B,KAAM,CACxB,GAAqBo+D,UAA8B9/D,KAAKynD,SAAS5/C,IAAInG,IACrE1B,MAAK0/D,mBAAmBI,SAAUz7D,MAClC,IAAqB65D,MAAO4B,SAASvC,MAChBriD,KAAO4kD,SAASxE,KASrC,OARI4C,QACAA,KAAK5C,MAAQpgD,MAEbA,OACAA,KAAKqiD,MAAQW,MAEjB4B,SAASxE,MAAQ,KACjBwE,SAASvC,MAAQ,KACVuC,SAEX,GAAqB73D,QAAS,GAAI83D,uBAAsBr+D,IAIxD,OAHA1B,MAAKynD,SAAS1/C,IAAIrG,IAAKuG,QACvBA,OAAO+xD,aAAe31D,MACtBrE,KAAKggE,gBAAgB/3D,QACdA,QAOXg3D,sBAAsBl/D,UAAU48D,OAIhC,WACI,GAAI38D,KAAKo9D,QAAS,CACd,GAAqBn1D,YAAS,EAG9B,KADAjI,KAAKo/D,iBAAmBp/D,KAAKk/D,SACxBj3D,OAASjI,KAAKo/D,iBAA6B,OAAXn3D,OAAiBA,OAASA,OAAOqzD,MAClErzD,OAAO+zD,cAAgB/zD,OAAOqzD,KAIlC,KAAKrzD,OAASjI,KAAKq/D,aAAyB,OAAXp3D,OAAiBA,OAASA,OAAOu3D,aAC9Dv3D,OAAO8xD,cAAgB9xD,OAAO+xD,YAElC,KAAK/xD,OAASjI,KAAK46D,eAA0B,MAAV3yD,OAAgBA,OAASA,OAAOi0D,WAC/Dj0D,OAAO8xD,cAAgB9xD,OAAO+xD,YAElCh6D,MAAKq/D,aAAer/D,KAAKs/D,aAAe,KACxCt/D,KAAK46D,eAAiB56D,KAAK66D,eAAiB,KAC5C76D,KAAKg7D,cAAgB,OAQ7BiE,sBAAsBl/D,UAAU2/D,mBAKhC,SAAUz3D,OAAQg4D,UACT/9D,eAAe+9D,SAAUh4D,OAAO+xD,gBACjC/xD,OAAO8xD,cAAgB9xD,OAAO+xD,aAC9B/xD,OAAO+xD,aAAeiG,SACtBjgE,KAAKkgE,cAAcj4D,UAO3Bg3D,sBAAsBl/D,UAAUigE,gBAIhC,SAAU/3D,QACsB,OAAxBjI,KAAK46D,eACL56D,KAAK46D,eAAiB56D,KAAK66D,eAAiB5yD,QAGzBjI,KAAoB,eAAEk8D,WAAaj0D,OACtDjI,KAAK66D,eAAiB5yD,SAO9Bg3D,sBAAsBl/D,UAAUmgE,cAIhC,SAAUj4D,QACoB,OAAtBjI,KAAKq/D,aACLr/D,KAAKq/D,aAAer/D,KAAKs/D,aAAer3D,QAGrBjI,KAAkB,aAAEw/D,aAAev3D,OACtDjI,KAAKs/D,aAAer3D,SAU5Bg3D,sBAAsBl/D,UAAU0/D,SAOhC,SAAU51D,IAAKjI,IACPiI,cAAetI,KACfsI,IAAIwG,QAAQzO,IAGZhB,OAAOS,KAAKwI,KAAKwG,QAAQ,SAAUjD,GAAK,MAAOxL,IAAGiI,IAAIuD,GAAIA,MAG3D6xD,yBAKPc,sBAAuC,WACvC,QAASA,uBAAsBr+D,KAC3B1B,KAAK0B,IAAMA,IACX1B,KAAK+5D,cAAgB,KACrB/5D,KAAKg6D,aAAe,KAIpBh6D,KAAKg8D,cAAgB,KAIrBh8D,KAAKs7D,MAAQ,KAIbt7D,KAAKu9D,MAAQ,KAIbv9D,KAAKk8D,WAAa,KAIlBl8D,KAAK47D,aAAe,KAIpB57D,KAAKw/D,aAAe,KAExB,MAAOO,0BA6DPI,gBAAiC,WACjC,QAASA,iBAAgB7Q,WACrBtvD,KAAKsvD,UAAYA,UAiHrB,MA1GA6Q,iBAAgBt/D,OAKhB,SAAUyuD,UAAWnnD,QACjB,GAAc,MAAVA,OAAgB,CAChB,GAAqBi4D,QAASj4D,OAAOmnD,UAAUpiD,OAC/CoiD,WAAYA,UAAU1rD,OAAOw8D,QAEjC,MAAO,IAAID,iBAAgB7Q,YA0C/B6Q,gBAAgBE,OAqBhB,SAAU/Q,WACN,OACItoD,QAASm5D,gBACTh5D,WAAY,SAAUgB,QAClB,IAAKA,OAID,KAAM,IAAIK,OAAM,0DAEpB,OAAO23D,iBAAgBt/D,OAAOyuD,UAAWnnD,SAG7CxB,OAAQw5D,gBAAiB,GAAI32D,UAAY,GAAID,cAOrD42D,gBAAgBpgE,UAAUu3D,KAI1B,SAAUgJ,UACN,GAAqBjhE,SAAUW,KAAKsvD,UAAUgI,KAAK,SAAU7C,GAAK,MAAOA,GAAE0F,SAASmG,WACpF,IAAe,MAAXjhE,QACA,MAAOA,QAGP,MAAM,IAAImJ,OAAM,2CAA6C83D,SAAW,cAAgB1kD,wBAAwB0kD,UAAY,MAG7HH,mBAsDPI,gBAAiC,WACjC,QAASA,iBAAgBjR,WACrBtvD,KAAKsvD,UAAYA,UAkHrB,MA1GAiR,iBAAgB1/D,OAMhB,SAAUyuD,UAAWnnD,QACjB,GAAIA,OAAQ,CACR,GAAqBi4D,QAASj4D,OAAOmnD,UAAUpiD,OAC/CoiD,WAAYA,UAAU1rD,OAAOw8D,QAEjC,MAAO,IAAIG,iBAAgBjR,YA2C/BiR,gBAAgBF,OAsBhB,SAAU/Q,WACN,OACItoD,QAASu5D,gBACTp5D,WAAY,SAAUgB,QAClB,IAAKA,OAGD,KAAM,IAAIK,OAAM,0DAEpB,OAAO+3D,iBAAgB1/D,OAAOyuD,UAAWnnD,SAG7CxB,OAAQ45D,gBAAiB,GAAI/2D,UAAY,GAAID,cAOrDg3D,gBAAgBxgE,UAAUu3D,KAI1B,SAAUkJ,IACN,GAAqBnhE,SAAUW,KAAKsvD,UAAUgI,KAAK,SAAU7C,GAAK,MAAOA,GAAE0F,SAASqG,KACpF,IAAInhE,QACA,MAAOA,QAEX,MAAM,IAAImJ,OAAM,2CAA6Cg4D,GAAK,MAE/DD,mBAiBPE,YAAc,GAAIzB,+BAIlB0B,cAAgB,GAAIxG,+BACpBp+C,uBAAyB,GAAIqkD,iBAAgBO,cAC7C1kD,uBAAyB,GAAIukD,iBAAgBE,YAyB7CE,2BAEE35D,QAAS+mD,YAAa7mD,SAAU,YAChCF,QAASsP,YAAa3P,MAAOuC,YAC7BlC,QAASurD,oBAAqB5rD,UAC9BK,QAASknD,QAASvnD,UAOpBi6D,aAAelqD,sBAAsB,KAAM,OAAQiqD,0BAkCnDE,UAAY,GAAI3vD,gBAAe,YAwB/B4vD,aAAe,GAAI5vD,gBAAe,gBAqBlC6vD,oBAAsB,GAAI7vD,gBAAe,sBAEzC8vD,4BACAx4D,MAAO,EACPy4D,QAAS,EACTC,OAAQ,EAEZF,4BAA2BA,2BAA2Bx4D,OAAS,QAC/Dw4D,2BAA2BA,2BAA2BC,SAAW,UACjED,2BAA2BA,2BAA2BE,QAAU,QAsChE,IAihBIrjD,iBAjhBAsjD,kBAAmC,WAEnC,QAASA,mBAAkB7M,SAuB3B,MArBA6M,mBAAkB5b,aACZx/C,KAAM8jD,SAAUtmD,OACNmM,WACI6kD,eACApH,sBACAoB,SACAT,wBACE9mD,QAASm5D,gBAAiBh5D,WAAY0U,0BACtC7U,QAASu5D,gBAAiBp5D,WAAY4U,0BAEpC/U,QAAS65D,UACT15D,WAAY8U,eACZtV,OAAQ,GAAI+C,QAAOm3D,WAAY,GAAIt3D,UAAY,GAAIC,kBAM3E23D,kBAAkBhc,eAAiB,WAAc,QAC3Cp/C,KAAMwuD,kBAEL4M,qBAsBPrjD,gBAAiC,WACjC,QAASA,iBAAgBJ,YAIrB,GAHA1d,KAAK0d,WAAaA,WAClB1d,KAAKohE,cAAgBphE,KAAK0d,WAAW2jD,eAAeC,mBAAmB,sBACvEthE,KAAK4d,iBAAmB5d,KAAKohE,cAAcG,KACd,MAAzBvhE,KAAK4d,iBAA0B,CAG/B,GAAqB4jD,WAAYxhE,KAAKohE,cAAcr2C,cAAc,OAClE/qB,MAAKohE,cAAcl6C,YAAYs6C,WAC/BxhE,KAAK4d,iBAAmB5d,KAAKohE,cAAcr2C,cAAc,QACzDy2C,UAAUt6C,YAAYlnB,KAAK4d,kBAG/B,MADA5d,MAAK4d,iBAAiBO,UAAY,uDAC9Bne,KAAK4d,iBAAiBsxB,gBAAkBlvC,KAAK4d,iBAAiBsxB,cAAc,YAG5ElvC,KAAKge,oBAAsBhe,KAAKyhE,0BAGpCzhE,KAAK4d,iBAAiBO,UAClB,mEACAne,KAAK4d,iBAAiBsxB,eAAiBlvC,KAAK4d,iBAAiBsxB,cAAc,YAKvE/yB,4BACAnc,KAAKge,oBAAsBhe,KAAK0hE,oCAKxC1hE,KAAKge,oBAAsBhe,KAAK2hE,oCAsIpC,MA7HA7jD,iBAAgB/d,UAAU0hE,wBAO1B,SAAUG,MAINA,KAAO,0BAA4BA,KAAO,SAC1C,KACIA,KAAOC,UAAUD,MAErB,MAAwBr5D,GACpB,MAAO,MAEX,GAAqBu5D,KAAM,GAAIC,eAC/BD,KAAIE,aAAe,WACnBF,IAAIG,KAAK,MAAO,gCAAkCL,MAAM,GACxDE,IAAII,KAAK,KACT,IAAqBX,MAAOO,IAAIK,SAASZ,IAEzC,OADAA,MAAK3iD,YAA+B2iD,KAAgB,YAC7CA,MASXzjD,gBAAgB/d,UAAU2hE,8BAO1B,SAAUE,MAINA,KAAO,0BAA4BA,KAAO,SAC1C,KACI,GAAqBL,OAAyB,GAAI,QAC7CnlD,WACAgmD,gBAAgBR,KAAM,aAClB,IAET,OADAL,MAAK3iD,YAA+B2iD,KAAgB,YAC7CA,KAEX,MAAwBh5D,GACpB,MAAO,QAWfuV,gBAAgB/d,UAAU4hE,kCAQ1B,SAAUC,MAEN,GAAqBS,YAAariE,KAAKohE,cAAcr2C,cAAc,WACnE,OAAI,WAAas3C,aACbA,WAAWlkD,UAAYyjD,KAChBS,aAEXriE,KAAK4d,iBAAiBO,UAAYyjD,KAGX5hE,KAAgB,WAAEsiE,cACrCtiE,KAAKuiE,mBAAmBviE,KAAK4d,kBAE1B5d,KAAK4d,mBAYhBE,gBAAgB/d,UAAUwiE,mBAU1B,SAAUhqD,IAGN,IAAK,GAFgBiqD,SAAUjqD,GAAGo6B,WAERnxC,EAAIghE,QAAQ/gE,OAAS,EAAG,EAAID,EAAGA,IAAK,CAC1D,GAAqBihE,QAASD,QAAQzpD,KAAKvX,GACtBmtC,SAAW8zB,OAAO9/D,IACtB,eAAbgsC,UAAyD,IAA7BA,SAAS5rC,QAAQ,SAC7CwV,GAAGiV,gBAAgBmhB,UAI3B,IADA,GAAqB+zB,WAAYnqD,GAAGoG,WAC7B+jD,WACCA,UAAU3jD,WAAaC,KAAKC,cAC5Bjf,KAAKuiE,mBAAoC,WAC7CG,UAAYA,UAAU58C,aAGvBhI,mBAwDPtB,iBAAmB,gEAInBC,iBAAmB,uIAsEnBkmD,cAAgB5lD,OAAO,0BAGvB6lD,gCAAkC7lD,OAAO,kDACzC8lD,iCAAmC9lD,OAAO,SAC1C+lD,0BAA4B7lD,QAAQ4lD,iCAAkCD,iCAEtEG,eAAiB9lD,QAAQ2lD,gCAAiC7lD,OAAO,oMAIjEimD,gBAAkB/lD,QAAQ4lD,iCAAkC9lD,OAAO,+LAGnEkmD,eAAiBhmD,QAAQ0lD,cAAeI,eAAgBC,gBAAiBF,2BAEzEI,UAAYnmD,OAAO,gEAEnBomD,aAAepmD,OAAO,UACtBqmD,WAAarmD,OAAO,idAWpBsmD,YAAcpmD,QAAQimD,UAAWC,aAAcC,YAK/C/kD,yBAA0C,WAC1C,QAASA,4BACLre,KAAKye,oBAAqB,EAC1Bze,KAAKsjE,OA2HT,MArHAjlD,0BAAyBte,UAAUwe,iBAInC,SAAUhG,IAKN,IADA,GAAqBtW,SAA6BsW,GAAc,WACzDtW,SAWH,GAVIA,QAAQ8c,WAAaC,KAAKC,aAC1Bjf,KAAKujE,aAA8B,SAE9BthE,QAAQ8c,WAAaC,KAAKwkD,UAC/BxjE,KAAKyjE,MAAyBxhE,QAAkB,WAIhDjC,KAAKye,oBAAqB,EAE1Bxc,QAAQ0c,WACR1c,QAA6BA,QAAmB,eAGpD,MAAOA,SAAS,CAERA,QAAQ8c,WAAaC,KAAKC,cAC1Bjf,KAAK0jE,WAA4B,QAErC,IAAqBxoD,MAAOlb,KAAK2jE,sBAAsB1hE,QAA4BA,QAAoB,YACvG,IAAIiZ,KAAM,CACNjZ,QAAUiZ,IACV,OAEJjZ,QAAUjC,KAAK2jE,sBAAsB1hE,QAA4BA,QAAmB,YAG5F,MAAOjC,MAAKsjE,IAAI7gE,KAAK,KAMzB4b,yBAAyBte,UAAUwjE,aAInC,SAAU/pD,SACN,GAAqB8vB,SAAU9vB,QAAQ0F,SAASijB,aAChD,KAAK8gC,eAAe/+D,eAAeolC,SAE/B,YADAtpC,KAAKye,oBAAqB,EAG9Bze,MAAKsjE,IAAIh/D,KAAK,KACdtE,KAAKsjE,IAAIh/D,KAAKglC,QAEd,KAAK,GADgBk5B,SAAUhpD,QAAQm5B,WACbnxC,EAAI,EAAGA,EAAIghE,QAAQ/gE,OAAQD,IAAK,CACtD,GAAqBoiE,QAASpB,QAAQzpD,KAAKvX,GACtBmtC,SAAWi1B,OAAOjhE,KAClBkhE,MAAQl1B,SAASxM,aACtC,IAAKkhC,YAAYn/D,eAAe2/D,OAAhC,CAIA,GAAqBx/D,OAAQu/D,OAAOv/D,KAEhC6+D,WAAUW,SACVx/D,MAAQgY,aAAahY,QACrB8+D,aAAaU,SACbx/D,MAAQsY,eAAetY,QAC3BrE,KAAKsjE,IAAIh/D,KAAK,IAAKqqC,SAAU,KAAMtxB,eAAehZ,OAAQ,SATtDrE,MAAKye,oBAAqB,EAWlCze,KAAKsjE,IAAIh/D,KAAK,MAMlB+Z,yBAAyBte,UAAU2jE,WAInC,SAAUzhE,SACN,GAAqBqnC,SAAUrnC,QAAQid,SAASijB,aAC5C8gC,gBAAe/+D,eAAeolC,WAAaq5B,cAAcz+D,eAAeolC,WACxEtpC,KAAKsjE,IAAIh/D,KAAK,MACdtE,KAAKsjE,IAAIh/D,KAAKglC,SACdtpC,KAAKsjE,IAAIh/D,KAAK,OAOtB+Z,yBAAyBte,UAAU0jE,MAInC,SAAUA,OAASzjE,KAAKsjE,IAAIh/D,KAAK+Y,eAAeomD,SAMhDplD,yBAAyBte,UAAU4jE,sBAKnC,SAAU/pD,KAAM8sB,UACZ,GAAIA,WACC9sB,KAAKkqD,wBAAwBp9B,UAC1B1nB,KAAK+kD,kCAAoC/kD,KAAK+kD,+BAClD,KAAM,IAAIv7D,OAAM,6DAA+D,KAA4Bw7D,UAE/G,OAAOt9B,WAEJroB,4BAGPf,sBAAwB,kCAExBE,wBAA0B,gBA8G1BkC,iBAAmB,GAAIukD,QAAO,8LAEZ,KAmBlBxkD,OAAS,mBA4DTkO,iBACAu2C,KAAM,EACNC,KAAM,EACNv2C,MAAO,EACPw2C,OAAQ,EACRC,IAAK,EACLC,aAAc,EAElB32C,iBAAgBA,gBAAgBu2C,MAAQ,OACxCv2C,gBAAgBA,gBAAgBw2C,MAAQ,OACxCx2C,gBAAgBA,gBAAgBC,OAAS,QACzCD,gBAAgBA,gBAAgBy2C,QAAU,SAC1Cz2C,gBAAgBA,gBAAgB02C,KAAO,MACvC12C,gBAAgBA,gBAAgB22C,cAAgB,cAOhD,IAAI3kC,WAA2B,WAC3B,QAASA,cAET,MAAOA,cAiQP4kC,aAA8B,WAC9B,QAASA,iBAET,MAAOA,iBAUPthD,UACA6S,mBAAiC,GACjCgF,mBAAiC,GACjCL,uBAAqC,GACrCM,wBAAsC,GACtC9H,sBAAoC,GACpC6K,qBAAmC,GACnCC,0BAAwC;6BACxCC,mBAAiC,GACjC/B,uBAAqC,GACrCJ,uBAAqC,GACrCgB,gBAA8B,GAC9BlI,eAA6B,GAC7BzR,uBAAqC,GACrCW,gBAA8B,GAC9BsV,qBAAmC,GACnCC,mBAAiC,GACjC5I,uBAAqC,IAyFrC9K,KAAO,aACPrE,eAAiB,GAAI9f,KA6BrB2gB,2BAA6B,cAC7BS,uBAAyB,UAazBD,iBAAmB,EAqPnB+C,iBAAmB,GAAI++C,SAiKvBn9C,aAAe,kBAmGfo9C,iBACAC,aAoZAv1C,gBAAkB,GAAIvuB,QACtBmuB,sBAAwB3N,SAASlY,UACjC8lB,oBAAsB5N,SAASuuC,aA4a/BgV,cAAgB,GAAI/jE,QAoBpBuxB,kBAAmC,SAAUu9B,QAE7C,QAASv9B,mBAAkBL,SAAUC,cAAeC,eAAgB4yC,QAASC,SAAU3yC,oBACnF,GAAIq6B,OAGJmD,OAAO/rD,KAAK3D,OAASA,IAOrB,OANAusD,OAAMz6B,SAAWA,SACjBy6B,MAAMx6B,cAAgBA,cACtBw6B,MAAMqY,QAAUA,QAChBrY,MAAMsY,SAAWA,SACjBtY,MAAMr6B,mBAAqBA,mBAC3Bq6B,MAAMv6B,eAAiBA,eAChBu6B,MAiEX,MA7EAjsD,WAAU6xB,kBAAmBu9B,QAc7B9uD,OAAOwD,eAAe+tB,kBAAkBpyB,UAAW,UAC/C8H,IAGA,WACI,GAAqBi9D,cACA7yC,OAA4BjyB,KAAa,OAC9D,KAAK,GAAqB2E,YAAYstB,QAAQ,CAC1C,GAAqB8yC,cAAe9yC,OAAOttB,SAC3CmgE,WAAUxgE,MAAOK,SAAUA,SAAUogE,aAAcA,eAEvD,MAAOD,YAEXtyB,YAAY,EACZttB,cAAc,IAElBtkB,OAAOwD,eAAe+tB,kBAAkBpyB,UAAW,WAC/C8H,IAGA,WACI,GAAqBm9D,cACrB,KAAK,GAAqBrgE,YAAY3E,MAAK6kE,SAAU,CACjD,GAAqBE,cAAe/kE,KAAK6kE,SAASlgE,SAClDqgE,YAAW1gE,MAAOK,SAAUA,SAAUogE,aAAcA,eAExD,MAAOC,aAEXxyB,YAAY,EACZttB,cAAc,IAalBiN,kBAAkBpyB,UAAUc,OAQ5B,SAAU0J,SAAUqc,iBAAkBqE,mBAAoBuE,UACtD,IAAKA,SACD,KAAM,IAAIhnB,OAAM,8BAEpB,IAAqBuoB,SAAUvL,kBAAkBxlB,KAAKgyB,gBACjCizC,mBAA2Dl0C,QAAQ3Q,MAAM,GAAW,QAAoB,kBAAE+C,UAC1GvD,KAAOqD,SAAS6X,eAAevwB,SAAUqc,qBAAwBqE,mBAAoB8F,QAASvB,SAAUm1C,eACxGzyD,UAAYoO,eAAeV,KAAMqlD,oBAAoBj1C,QAI1E,OAHI/E,qBACArL,KAAKmG,SAASwF,aAAalL,cAAcT,KAAM,GAAGsE,cAAe,aAAckmC,QAAQJ,MAEpF,GAAIkb,eAActlD,KAAM,GAAI6S,UAAS7S,MAAO1N,YAEhDigB,mBACT88B,kBACEiW,cAA+B,SAAUxV,QAEzC,QAASwV,eAAcC,MAAOC,SAAUC,YACpC,GAAI9Y,OAAQmD,OAAO/rD,KAAK3D,OAASA,IAQjC,OAPAusD,OAAM4Y,MAAQA,MACd5Y,MAAM6Y,SAAWA,SACjB7Y,MAAM8Y,WAAaA,WACnB9Y,MAAM+Y,OAAS/Y,MAAM4Y,MAAMrjD,IAAI1B,MAAM,GACrCmsC,MAAM9lC,SAAW2+C,SACjB7Y,MAAMte,kBAAoBm3B,SAC1B7Y,MAAMv8B,SAAWq1C,WACV9Y,MA4CX,MAtDAjsD,WAAU4kE,cAAexV,QAYzB9uD,OAAOwD,eAAe8gE,cAAcnlE,UAAW,YAC3C8H,IAGA,WACI,MAAO,IAAIstB,YAAW9U,cAAcrgB,KAAKmlE,MAAOnlE,KAAKslE,OAAOniD,WAAWe,gBAE3EsuB,YAAY,EACZttB,cAAc,IAElBtkB,OAAOwD,eAAe8gE,cAAcnlE,UAAW,YAC3C8H,IAGA,WAAc,MAAO,IAAIgrB,WAAU7yB,KAAKmlE,MAAOnlE,KAAKslE,SACpD9yB,YAAY,EACZttB,cAAc,IAElBtkB,OAAOwD,eAAe8gE,cAAcnlE,UAAW,iBAC3C8H,IAGA,WAAc,MAAyB7H,MAAKqlE,WAAsB,aAClE7yB,YAAY,EACZttB,cAAc,IAKlBggD,cAAcnlE,UAAUsX,QAGxB,WAAcrX,KAAKolE,SAAS/tD,WAK5B6tD,cAAcnlE,UAAUilC,UAIxB,SAAUlwB,UAAY9U,KAAKolE,SAASpgC,UAAUlwB,WACvCowD,eACTlW,cAUEz8B,kBAAmC,WACnC,QAASA,mBAAkB4yC,MAAOG,OAAQC,OACtCvlE,KAAKmlE,MAAQA,MACbnlE,KAAKslE,OAASA,OACdtlE,KAAKulE,MAAQA,MAIbvlE,KAAKinB,kBAiMT,MA/LArmB,QAAOwD,eAAemuB,kBAAkBxyB,UAAW,WAC/C8H,IAGA,WAAc,MAAO,IAAIstB,YAAWn1B,KAAKulE,MAAMrhD,gBAC/CsuB,YAAY,EACZttB,cAAc,IAElBtkB,OAAOwD,eAAemuB,kBAAkBxyB,UAAW,YAC/C8H,IAGA,WAAc,MAAO,IAAIgrB,WAAU7yB,KAAKmlE,MAAOnlE,KAAKslE,SACpD9yB,YAAY,EACZttB,cAAc,IAElBtkB,OAAOwD,eAAemuB,kBAAkBxyB,UAAW,kBAC/C8H,IAGA,WAGI,IAFA,GAAqB+X,MAAO5f,KAAKmlE,MACZn6C,MAAQhrB,KAAKslE,OAAOn9D,QACjC6iB,OAASpL,MACboL,MAAQhH,aAAapE,MACrBA,KAA0BA,KAAY,MAE1C,OAAOA,MAAO,GAAIiT,WAAUjT,KAAMoL,OAAS,GAAI6H,WAAU7yB,KAAKmlE,MAAO,OAEzE3yB,YAAY,EACZttB,cAAc,IAKlBqN,kBAAkBxyB,UAAUugC,MAG5B,WAEI,IAAK,GADgB1Q,KAAM5vB,KAAKinB,eAAexlB,OACrBD,EAAIouB,IAAM,EAAGpuB,GAAK,EAAGA,IAAK,CAChD,GAAqBoe,MAA0BsR,mBAAmBlxB,KAAKulE,MAAO/jE,EAC9EyhB,UAAS4Z,YAAYjd,QAO7B2S,kBAAkBxyB,UAAU8H,IAI5B,SAAU7C,OACN,GAAqB4a,MAAO5f,KAAKinB,eAAejiB,MAChD,IAAI4a,KAAM,CACN,GAAqB4lD,KAAM,GAAI/yC,UAAS7S,KAExC,OADA4lD,KAAIC,yBAAyBzlE,MACtBwlE,IAEX,MAAO,OAEX5kE,OAAOwD,eAAemuB,kBAAkBxyB,UAAW,UAC/C8H,IAGA,WAAc,MAAO7H,MAAKinB,eAAexlB,QACzC+wC,YAAY,EACZttB,cAAc,IASlBqN,kBAAkBxyB,UAAU06B,mBAO5B,SAAUuf,YAAa/vC,QAASjF,OAC5B,GAAqBoxD,SAAUpc,YAAYvf,mBAAmBxwB,YAE9D,OADAjK,MAAK0lE,OAAOtP,QAASpxD,OACdoxD,SAWX7jC,kBAAkBxyB,UAAU4lE,gBAS5B,SAAUtzC,iBAAkBrtB,MAAOuF,SAAUqc,iBAAkBg/C,aAC3D,GAAqBC,iBAAkBt7D,UAAYvK,KAAK+/B,cACnD6lC,cAAiBvzC,2BAA4Bo9B,iCAC9CmW,YAAcC,gBAAgBh+D,IAAI8nD,aAEtC,IAAqB6G,cAAenkC,iBAAiBxxB,OAAOglE,gBAAiBj/C,qBAAkB5d,GAAW48D,YAE1G,OADA5lE,MAAK0lE,OAAOlP,aAAa/vC,SAAUzhB,OAC5BwxD,cAOXjkC,kBAAkBxyB,UAAU2lE,OAK5B,SAAUtP,QAASpxD,OACf,GAAIoxD,QAAQhgD,UACR,KAAM,IAAI5N,OAAM,qDAEpB,IAAqBs9D,UAA4B,QAC5BC,SAAWD,SAASX,KAGzC,OAFAj1C,oBAAmBlwB,KAAKmlE,MAAOnlE,KAAKulE,MAAOvgE,MAAO+gE,UAClDD,SAASL,yBAAyBzlE,MAC3Bo2D,SAOX7jC,kBAAkBxyB,UAAUimE,KAK5B,SAAU5P,QAASuF,cACf,GAAIvF,QAAQhgD,UACR,KAAM,IAAI5N,OAAM,mDAEpB,IAAqBkT,eAAgB1b,KAAKinB,eAAelkB,QAAQqzD,QAAQ+O,MAEzE,OADA7zC,kBAAiBtxB,KAAKulE,MAAO7pD,cAAeigD,cACrCvF,SAMX7jC,kBAAkBxyB,UAAUgD,QAI5B,SAAUqzD,SACN,MAAOp2D,MAAKinB,eAAelkB,QAAQ,QAA6BoiE,QAMpE5yC,kBAAkBxyB,UAAUsY,OAI5B,SAAUrT,OACN,GAAqB+gE,UAAW70C,mBAAmBlxB,KAAKulE,MAAOvgE,MAC3D+gE,WACA9iD,SAAS4Z,YAAYkpC,WAO7BxzC,kBAAkBxyB,UAAUkmE,OAI5B,SAAUjhE,OACN,GAAqB4a,MAAOsR,mBAAmBlxB,KAAKulE,MAAOvgE,MAC3D,OAAO4a,MAAO,GAAI6S,UAAS7S,MAAQ,MAEhC2S,qBASPE,SAA0B,WAC1B,QAASA,UAAS0yC,OACdnlE,KAAKmlE,MAAQA,MACbnlE,KAAKkmE,kBAAoB,KACzBlmE,KAAKmmE,QAAU,KA8InB,MA5IAvlE,QAAOwD,eAAequB,SAAS1yB,UAAW,aACtC8H,IAGA,WAAc,MAAO8d,iBAAgB3lB,KAAKmlE,QAC1C3yB,YAAY,EACZttB,cAAc,IAElBtkB,OAAOwD,eAAequB,SAAS1yB,UAAW,WACtC8H,IAGA,WAAc,MAAO7H,MAAKmlE,MAAMl7D,SAChCuoC,YAAY,EACZttB,cAAc,IAElBtkB,OAAOwD,eAAequB,SAAS1yB,UAAW,aACtC8H,IAGA,WAAc,MAAoD,KAAzB,IAAnB7H,KAAKmlE,MAAMplD,QACjCyyB,YAAY,EACZttB,cAAc,IAKlBuN,SAAS1yB,UAAUqmE,aAGnB,WAAchjD,wBAAwBpjB,KAAKmlE,QAI3C1yC,SAAS1yB,UAAUkmE,OAGnB,WAAcjmE,KAAKmlE,MAAMplD,QAAS,GAIlC0S,SAAS1yB,UAAUghC,cAGnB,WACI,GAAqBslC,IAAKrmE,KAAKmlE,MAAMrhD,KAAKqX,eACtCkrC,IAAG35B,OACH25B,GAAG35B,OAEP,KACIzpB,SAASgZ,mBAAmBj8B,KAAKmlE,OAErC,QACQkB,GAAG1vC,KACH0vC,GAAG1vC,QAOflE,SAAS1yB,UAAUihC,eAGnB,WAAc/d,SAAS4Y,mBAAmB77B,KAAKmlE,QAI/C1yC,SAAS1yB,UAAUumE,SAGnB,WAActmE,KAAKmlE,MAAMplD,OAAS,GAKlC0S,SAAS1yB,UAAUilC,UAInB,SAAUlwB,UACD9U,KAAKmlE,MAAM9pC,cACZr7B,KAAKmlE,MAAM9pC,gBAEfr7B,KAAKmlE,MAAM9pC,YAAY/2B,KAAsB,WAKjDmuB,SAAS1yB,UAAUsX,QAGnB,WACQrX,KAAKmmE,QACLnmE,KAAKmmE,QAAQ7P,WAAWt2D,MAEnBA,KAAKkmE,mBACVlmE,KAAKkmE,kBAAkBD,OAAOjmE,KAAKkmE,kBAAkBnjE,QAAQ/C,OAEjEijB,SAAS4Z,YAAY78B,KAAKmlE,QAK9B1yC,SAAS1yB,UAAUw2D,iBAGnB,WACIv2D,KAAKmmE,QAAU,KACf/0C,iBAAiBpxB,KAAKmlE,OACtBliD,SAASuN,mBAAmBxwB,KAAKmlE,QAMrC1yC,SAAS1yB,UAAUs2D,eAInB,SAAU/B,QACN,GAAIt0D,KAAKkmE,kBACL,KAAM,IAAI19D,OAAM,oDAEpBxI,MAAKmmE,QAAU7R,QAMnB7hC,SAAS1yB,UAAU0lE,yBAInB,SAAUc,OACN,GAAIvmE,KAAKmmE,QACL,KAAM,IAAI39D,OAAM,gEAEpBxI,MAAKkmE,kBAAoBK,OAEtB9zC,YAUPE,aAA8B,SAAU+8B,QAExC,QAAS/8B,cAAa6zC,YAAah4C,MAC/B,GAAI+9B,OAAQmD,OAAO/rD,KAAK3D,OAASA,IAGjC,OAFAusD,OAAMia,YAAcA,YACpBja,MAAM/9B,KAAOA,KACN+9B,MAuBX,MA5BAjsD,WAAUqyB,aAAc+8B,QAWxB/8B,aAAa5yB,UAAU06B,mBAIvB,SAAUxwB,SACN,MAAO,IAAIwoB,UAASxP,SAASwX,mBAAmBz6B,KAAKwmE,YAAaxmE,KAAKwuB,KAA4CxuB,KAAKwuB,KAAa,QAAW,SAAGvkB,WAEvJrJ,OAAOwD,eAAeuuB,aAAa5yB,UAAW,cAC1C8H,IAGA,WACI,MAAO,IAAIstB,YAAW9U,cAAcrgB,KAAKwmE,YAAaxmE,KAAKwuB,KAAKrL,WAAWe,gBAE/EsuB,YAAY,EACZttB,cAAc,IAEXyN,cACT2lC,aASEzlC,UAA2B,WAC3B,QAASA,WAAUjT,KAAMoL,OACrBhrB,KAAK4f,KAAOA,KACZ5f,KAAKgrB,MAAQA,MAiBjB,MAVA6H,WAAU9yB,UAAU8H,IAKpB,SAAUvF,MAAO8F,mBACS,KAAlBA,gBAA4BA,cAAgBc,SAASC,mBACzD,IAAqB0qB,wBAAuB7zB,KAAKgrB,OAA8D,IAAlC,SAAnBhrB,KAAKgrB,MAAM3iB,MACrE,OAAO4a,UAAS0R,WAAW30B,KAAK4f,KAAM5f,KAAKgrB,MAAO6I,sBAAwBxrB,MAAO,EAAc/F,MAAOA,MAAO8e,SAAUA,SAAS9e,QAAU8F,gBAEvIyqB,aA4BPG,gBAAiC,WACjC,QAASA,iBAAgB1e,UACrBtU,KAAKsU,SAAWA,SA8RpB,MAxRA0e,iBAAgBjzB,UAAUsrB,kBAI1B,SAAUH,gBACN,MAAOlrB,MAAKsU,SAAS+W,kBAAkBH,iBAO3C8H,gBAAgBjzB,UAAUgrB,cAK1B,SAAU5iB,OAAQ6hB,kBACd,GAAIlmB,IAAKsjB,eAAe4C,kBAAmBT,GAAKzlB,GAAG,GAAInB,KAAOmB,GAAG,GAC5CyU,GAAKvY,KAAKsU,SAASyW,cAAcpoB,KAAM4mB,GAI5D,OAHIphB,SACAnI,KAAKsU,SAAS4S,YAAY/e,OAAQoQ,IAE/BA,IAMXya,gBAAgBjzB,UAAU0mE,eAI1B,SAAUzrC,aAAe,MAAOA,cAKhChI,gBAAgBjzB,UAAU2mE,qBAI1B,SAAUC,eACN,GAAqBC,SAAU5mE,KAAKsU,SAAS6W,cAAc,GAI3D,OAHIw7C,gBACA3mE,KAAKsU,SAAS4S,YAAYy/C,cAAeC,SAEtCA,SAOX5zC,gBAAgBjzB,UAAU+4B,WAK1B,SAAU6tC,cAAetiE,OACrB,GAAqBuV,MAAO5Z,KAAKsU,SAASwkB,WAAWz0B,MAIrD,OAHIsiE,gBACA3mE,KAAKsU,SAAS4S,YAAYy/C,cAAe/sD,MAEtCA,MAOXoZ,gBAAgBjzB,UAAU8mE,aAK1B,SAAUF,cAAevmD,OACrB,IAAK,GAAqB5e,GAAI,EAAGA,EAAI4e,MAAM3e,OAAQD,IAC/CxB,KAAKsU,SAAS4S,YAAYy/C,cAAevmD,MAAM5e,KAQvDwxB,gBAAgBjzB,UAAU+mE,gBAK1B,SAAUltD,KAAMmtD,eAGZ,IAAK,GAFgBJ,eAAgB3mE,KAAKsU,SAASyF,WAAWH,MACzCkM,YAAc9lB,KAAKsU,SAASwR,YAAYlM,MACnCpY,EAAI,EAAGA,EAAIulE,cAActlE,OAAQD,IACvDxB,KAAKsU,SAAS6S,aAAaw/C,cAAeI,cAAcvlE,GAAIskB,cAOpEkN,gBAAgBjzB,UAAUu2D,WAI1B,SAAUyQ,eACN,IAAK,GAAqBvlE,GAAI,EAAGA,EAAIulE,cAActlE,OAAQD,IAAK,CAC5D,GAAqBoY,MAAOmtD,cAAcvlE,GACrBmlE,cAAgB3mE,KAAKsU,SAASyF,WAAWH,KAC9D5Z,MAAKsU,SAASsK,YAAY+nD,cAAe/sD,QAQjDoZ,gBAAgBjzB,UAAU88B,YAK1B,SAAU7B,YAAagsC,cACnB,IAAK,GAAqBxlE,GAAI,EAAGA,EAAIwlE,aAAavlE,OAAQD,IACnCxB,KAAKsU,SAAqB,YAAE0yD,aAAaxlE,KASpEwxB,gBAAgBjzB,UAAUgsB,OAM1B,SAAU7H,cAAevhB,KAAMmS,UAC3B,MAAO9U,MAAKsU,SAASyX,OAAO7H,cAAevhB,KAAuB,WAQtEqwB,gBAAgBjzB,UAAUknE,aAM1B,SAAU1hE,OAAQ5C,KAAMmS,UACpB,MAAO9U,MAAKsU,SAASyX,OAAOxmB,OAAQ5C,KAAuB,WAQ/DqwB,gBAAgBjzB,UAAUstB,mBAM1B,SAAUnJ,cAAek5B,aAAc8pB,eACnClnE,KAAKsU,SAAS0Z,YAAY9J,cAAek5B,aAAc8pB,gBAQ3Dl0C,gBAAgBjzB,UAAUmtB,oBAM1B,SAAUhJ,cAAe8F,iBAAkBm9C,gBACvC,GAAIrjE,IAAKsjB,eAAe4C,kBAAmBT,GAAKzlB,GAAG,GAAInB,KAAOmB,GAAG,EAC3C,OAAlBqjE,eACAnnE,KAAKsU,SAASiX,aAAarH,cAAevhB,KAAMwkE,eAAgB59C,IAGhEvpB,KAAKsU,SAASkZ,gBAAgBtJ,cAAevhB,KAAM4mB,KAS3DyJ,gBAAgBjzB,UAAUqnE,oBAM1B,SAAUljD,cAAek5B,aAAc8pB,iBAOvCl0C,gBAAgBjzB,UAAUotB,gBAM1B,SAAUjJ,cAAeqtB,UAAW81B,OAC5BA,MACArnE,KAAKsU,SAASmZ,SAASvJ,cAAeqtB,WAGtCvxC,KAAKsU,SAASoZ,YAAYxJ,cAAeqtB,YASjDve,gBAAgBjzB,UAAUqtB,gBAM1B,SAAUlJ,cAAe0tB,UAAW01B,YACd,MAAdA,WACAtnE,KAAKsU,SAASwZ,SAAS5J,cAAe0tB,UAAW01B,YAGjDtnE,KAAKsU,SAASyZ,YAAY7J,cAAe0tB,YASjD5e,gBAAgBjzB,UAAUwnE,oBAM1B,SAAUrjD,cAAesjD,WAAYjkE,MACjC,cAAmCikE,YAAYxlE,MAAMkiB,cAAe3gB,OAOxEyvB,gBAAgBjzB,UAAU0nE,QAK1B,SAAUx6C,cAAerjB,MAAQ5J,KAAKsU,SAAS2kB,SAAShM,cAAerjB,OAIvEopB,gBAAgBjzB,UAAU2nE,QAG1B,WAAc,KAAM,IAAIl/D,OAAM,6CACvBwqB,mBAYPG,aAA8B,WAC9B,QAASA,cAAaw0C,YAAa94C,QAAS2lC,qBAAsBhmC,MAC9DxuB,KAAK2nE,YAAcA,YACnB3nE,KAAK6uB,QAAUA,QACf7uB,KAAKw0D,qBAAuBA,qBAC5Bx0D,KAAKwuB,KAAOA,KACZxuB,KAAKyzD,qBACLzzD,KAAK0zD,YAAa,EAClB1zD,KAAKuK,SAAWvK,KAChBuuB,aAAavuB,MAiEjB,MAzDAmzB,cAAapzB,UAAU8H,IAMvB,SAAUvF,MAAO8F,cAAew/D,iBACN,KAAlBx/D,gBAA4BA,cAAgBc,SAASC,wBACrC,KAAhBy+D,cAA0BA,YAAc,EAC5C,IAAqBv/D,OAAQ,CAO7B,OANkB,GAAdu/D,YACAv/D,OAAS,EAEU,EAAdu/D,cACLv/D,OAAS,GAENsmB,mBAAmB3uB,MAAQsC,MAAOA,MAAO8e,SAAUA,SAAS9e,OAAQ+F,MAAOA,OAASD,gBAE/FxH,OAAOwD,eAAe+uB,aAAapzB,UAAW,YAC1C8H,IAGA,WAAc,MAAO7H,MAAK6H,IAAI7H,KAAK2nE,cACnCn1B,YAAY,EACZttB,cAAc,IAElBtkB,OAAOwD,eAAe+uB,aAAapzB,UAAW,4BAC1C8H,IAGA,WAAc,MAAO7H,MAAK6H,IAAIunD,2BAC9B5c,YAAY,EACZttB,cAAc,IAKlBiO,aAAapzB,UAAUsX,QAGvB,WACI,GAAIrX,KAAK0zD,WACL,KAAM,IAAIlrD,OAAM,iBAAmBnG,UAAUrC,KAAKgwB,SAAStvB,aAAe,+BAE9EV,MAAK0zD,YAAa,EAClB5jC,sBAAsB9vB,KAAM,QAC5BA,KAAKyzD,kBAAkBpjD,QAAQ,SAAU8+B,UAAY,MAAOA,eAMhEhc,aAAapzB,UAAUilC,UAIvB,SAAUlwB,UAAY9U,KAAKyzD,kBAAkBnvD,KAAKwQ,WAC3Cqe,gBAcP4B,mBAAqB3T,SAAS01C,UAC9B7hC,kBAAoB7T,SAAS81C,WAC7BhiC,mBAAqB9T,SAAS+T,YAC9BC,yBAA2BhU,SAASm3C,kBACpCjjC,oBAAsBlU,SAASk3C,aAC/BzjC,0BAA4BzT,SAASo3C,mBACrCjjC,oBAAsBnU,SAASlY,UA4V/BusB,yCA6hDAiG,YACAC,gBAAiB,EACjBK,eAAgB,EAChBoB,6BAA8B,EAC9BlB,eAAgB,EAChBmB,6BAA8B,EAC9BP,QAAS,EAEbpB,YAAWA,WAAWC,iBAAmB,kBACzCD,WAAWA,WAAWM,gBAAkB,iBACxCN,WAAWA,WAAW0B,8BAAgC,+BACtD1B,WAAWA,WAAWQ,gBAAkB,iBACxCR,WAAWA,WAAW2B,8BAAgC,+BACtD3B,WAAWA,WAAWoB,SAAW;;;;;;;AAmKjC,GAAIY,cAAc,EAqKdwC,kBAAoB,GAAI3+B,KACxBu+B,iBAAmB,GAAIv+B,KAmNvBm+B,aACA7+B,OAAQ,EACRkgC,cAAe,EACfC,eAAgB,EAChB3pB,QAAS,EACTwM,YAAa,EAEjB6b,aAAYA,YAAY7+B,QAAU,SAClC6+B,YAAYA,YAAYqB,eAAiB,gBACzCrB,YAAYA,YAAYsB,gBAAkB,iBAC1CtB,YAAYA,YAAYroB,SAAW,UACnCqoB,YAAYA,YAAY7b,aAAe,aACvC,IAAI0d,gBACAN,aACAC,kBA8JAe,kBAAoB,WAuDpB/D,cAA+B,WAC/B,QAASA,eAActe,KAAMuD,WACzBnjB,KAAK4f,KAAOA,KACZ5f,KAAKmjB,UAAYA,UACA,MAAbA,YACAnjB,KAAKmjB,UAAYA,UAAY,GAEjCnjB,KAAKmmB,QAAUvG,KAAKkC,IAAI1B,MAAM+C,UAG9B,KAFA,GAAqB6H,OAAQhrB,KAAKmmB,QACb0hD,OAASjoD,KACvBoL,OAAiD,IAAzB,EAAdA,MAAM3iB,QACnB2iB,MAA2BA,MAAa,MAE5C,KAAKA,MACD,MAAQA,OAAS68C,QACb78C,MAA2BhH,aAAa6jD,QACxCA,OAA4BA,OAAc,MAGlD7nE,MAAKgrB,MAAQA,MACbhrB,KAAK6nE,OAASA,OAiJlB,MA/IAjnE,QAAOwD,eAAe85B,cAAcn+B,UAAW,gBAC3C8H,IAGA,WAEI,MAAOwY,eAAcrgB,KAAK6nE,OAAQ7nE,KAAKgrB,MAAM7H,WAAWS,eAAiB5jB,KAAK4f,MAElF4yB,YAAY,EACZttB,cAAc,IAElBtkB,OAAOwD,eAAe85B,cAAcn+B,UAAW,YAC3C8H,IAGA,WAAc,MAAO+qB,gBAAe5yB,KAAK6nE,OAAQ7nE,KAAKgrB,QACtDwnB,YAAY,EACZttB,cAAc,IAElBtkB,OAAOwD,eAAe85B,cAAcn+B,UAAW,aAC3C8H,IAGA,WAAc,MAAO7H,MAAK8nE,aAAa51D,WACvCsgC,YAAY,EACZttB,cAAc,IAElBtkB,OAAOwD,eAAe85B,cAAcn+B,UAAW,WAC3C8H,IAGA,WAAc,MAAO7H,MAAK8nE,aAAa79D,SACvCuoC,YAAY,EACZttB,cAAc,IAElBtkB,OAAOwD,eAAe85B,cAAcn+B,UAAW,kBAC3C8H,IAGA,WACI,GAAqB+6C,UACrB,IAAI5iD,KAAKgrB,MACL,IAAK,GAAqBxpB,GAAIxB,KAAKgrB,MAAM7H,UAAY,EAAG3hB,GAAKxB,KAAKgrB,MAAM7H,UAAYnjB,KAAKgrB,MAAM3E,WAAY7kB,IAAK,CAC5G,GAAqBumE,UAAW/nE,KAAK6nE,OAAO/lD,IAAI1B,MAAM5e,EACjC,OAAjBumE,SAAS1/D,OACTu6C,OAAOt+C,KAAwByjE,SAAkB,SAAEzlE,OAEvDd,GAAKumE,SAAS1hD,WAGtB,MAAOu8B,SAEXpQ,YAAY,EACZttB,cAAc,IAElBtkB,OAAOwD,eAAe85B,cAAcn+B,UAAW,cAC3C8H,IAGA,WACI,GAAqBgd,cACrB,IAAI7kB,KAAKgrB,MAAO,CACZuX,kBAAkBviC,KAAK6nE,OAAQ7nE,KAAKgrB,MAAOnG,WAC3C,KAAK,GAAqBrjB,GAAIxB,KAAKgrB,MAAM7H,UAAY,EAAG3hB,GAAKxB,KAAKgrB,MAAM7H,UAAYnjB,KAAKgrB,MAAM3E,WAAY7kB,IAAK,CAC5G,GAAqBumE,UAAW/nE,KAAK6nE,OAAO/lD,IAAI1B,MAAM5e,EACjC,OAAjBumE,SAAS1/D,OACTk6B,kBAAkBviC,KAAK6nE,OAAQE,SAAUljD,YAE7CrjB,GAAKumE,SAAS1hD,YAGtB,MAAOxB,aAEX2tB,YAAY,EACZttB,cAAc,IAElBtkB,OAAOwD,eAAe85B,cAAcn+B,UAAW,0BAC3C8H,IAGA,WACI,GAAqBmlB,QAASsV,gBAAgBtiC,KAAK8nE,aACnD,OAAO96C,QAASA,OAAO9I,kBAAgBlb,IAE3CwpC,YAAY,EACZttB,cAAc,IAElBtkB,OAAOwD,eAAe85B,cAAcn+B,UAAW,cAC3C8H,IAGA,WACI,MAA4B,GAArB7H,KAAKmmB,QAAQ9d,MAA2B4b,WAAWjkB,KAAK4f,KAAM5f,KAAKmmB,SACtElC,WAAWjkB,KAAK6nE,OAAQ7nE,KAAKgrB,QAErCwnB,YAAY,EACZttB,cAAc,IAOlBgZ,cAAcn+B,UAAUkhB,SAKxB,SAAUtU,SAEN,IAAK,GADDjI,WACKlB,GAAK,EAAGA,GAAKC,UAAUhC,OAAQ+B,KACpCkB,OAAOlB,GAAK,GAAKC,UAAUD,GAE/B,IAAqBwkE,YACAC,YACI,GAArBjoE,KAAKmmB,QAAQ9d,OACb2/D,WAAahoE,KAAK4f,KAAKkC,IACvBmmD,aAAejoE,KAAKmmB,QAAQhD,YAG5B6kD,WAAahoE,KAAK6nE,OAAO/lD,IACzBmmD,aAAejoE,KAAKgrB,MAAM7H,UAI9B,IAAqBkf,iBAAkBD,mBAAmB4lC,WAAYC,cACjDC,qBAAuB,EACvBC,WAAa,WAE9B,MADAD,uBACIA,sBAAwB7lC,iBAChBv+B,GAAK6I,QAAQP,OAAOrI,KAAK/B,MAAM8B,IAAK6I,SAAS/I,OAAOc,SAGrDghB,IAEX,IAAI5hB,IAENkkE,YAAmB,QAAEG,YACnBD,oBAAsB7lC,kBACtB11B,QAAQP,MAAM,qEACdO,QAAQP,MAAMpK,MAAM2K,QAASjI,UAG9Bw5B,iBAyEPoB,sBAAuC,WACvC,QAASA,uBAAsBhrB,UAC3BtU,KAAKsU,SAAWA,SAiDpB,MA1CAgrB,uBAAsBv/B,UAAUq7B,eAKhC,SAAU5hB,QAAS4uD,YACf,MAAO,IAAIC,gBAAeroE,KAAKsU,SAAS8mB,eAAe5hB,QAAS4uD,cAKpE9oC,sBAAsBv/B,UAAU2sC,MAGhC,WACQ1sC,KAAKsU,SAASo4B,OACd1sC,KAAKsU,SAASo4B,SAMtBpN,sBAAsBv/B,UAAU42B,IAGhC,WACQ32B,KAAKsU,SAASqiB,KACd32B,KAAKsU,SAASqiB,OAMtB2I,sBAAsBv/B,UAAUuoE,kBAGhC,WACI,MAAItoE,MAAKsU,SAASg0D,kBACPtoE,KAAKsU,SAASg0D,oBAElB3yB,QAAQyO,QAAQ,OAEpB9kB,yBAEP+oC,eAAgC,WAChC,QAASA,gBAAe/zD,UACpBtU,KAAKsU,SAAWA,SAChBtU,KAAKqiB,KAAOriB,KAAKsU,SAAS+N,KA6U9B,MAvUAgmD,gBAAetoE,UAAUg9B,YAIzB,SAAUnjB,MACNQ,yBAA4CJ,aAAaJ,OACrD5Z,KAAKsU,SAASyoB,aACd/8B,KAAKsU,SAASyoB,YAAYnjB,OAMlCyuD,eAAetoE,UAAUsX,QAGzB,WAAcrX,KAAKsU,SAAS+C,WAM5BgxD,eAAetoE,UAAUgrB,cAKzB,SAAUpoB,KAAM4lE,WACZ,GAAqBhwD,IAAKvY,KAAKsU,SAASyW,cAAcpoB,KAAM4lE,WACvCC,SAAW3lC,wBAChC,IAAI2lC,SAAU,CACV,GAAqBC,SAAU,GAAI5uD,cAAatB,GAAI,KAAMiwD,SAC1DC,SAAQ9lE,KAAOA,KACfwX,eAAesuD,SAEnB,MAAOlwD,KAMX8vD,eAAetoE,UAAUorB,cAIzB,SAAU9mB,OACN,GAAqBuiE,SAAU5mE,KAAKsU,SAAS6W,cAAc9mB,OACtCmkE,SAAW3lC,wBAIhC,OAHI2lC,WACAruD,eAAe,GAAIy+C,WAAUgO,QAAS,KAAM4B,WAEzC5B,SAMXyB,eAAetoE,UAAU+4B,WAIzB,SAAUz0B,OACN,GAAqBuF,MAAO5J,KAAKsU,SAASwkB,WAAWz0B,OAChCmkE,SAAW3lC,wBAIhC,OAHI2lC,WACAruD,eAAe,GAAIy+C,WAAUhvD,KAAM,KAAM4+D,WAEtC5+D,MAOXy+D,eAAetoE,UAAUmnB,YAKzB,SAAU/e,OAAQoxD,UACd,GAAqBkP,SAAUzuD,aAAa7R,QACvBugE,aAAe1uD,aAAau/C,SAC7CkP,UAAWC,cAAgBD,kBAAmB5uD,eAC9C4uD,QAAQ3P,SAAS4P,cAErB1oE,KAAKsU,SAAS4S,YAAY/e,OAAQoxD,WAQtC8O,eAAetoE,UAAUonB,aAMzB,SAAUhf,OAAQoxD,SAAUD,UACxB,GAAqBmP,SAAUzuD,aAAa7R,QACvBugE,aAAe1uD,aAAau/C,UAC5BoP,WAAgC3uD,aAAas/C,SAC9DmP,UAAWC,cAAgBD,kBAAmB5uD,eAC9C4uD,QAAQthD,aAAawhD,WAAYD,cAErC1oE,KAAKsU,SAAS6S,aAAahf,OAAQoxD,SAAUD,WAOjD+O,eAAetoE,UAAU6e,YAKzB,SAAUzW,OAAQygE,UACd,GAAqBH,SAAUzuD,aAAa7R,QACvBugE,aAAe1uD,aAAa4uD,SAC7CH,UAAWC,cAAgBD,kBAAmB5uD,eAC9C4uD,QAAQ7pD,YAAY8pD,cAExB1oE,KAAKsU,SAASsK,YAAYzW,OAAQygE,WAMtCP,eAAetoE,UAAUsrB,kBAIzB,SAAUH,gBACN,GAAqB3S,IAAKvY,KAAKsU,SAAS+W,kBAAkBH,gBACrCs9C,SAAW3lC,wBAIhC,OAHI2lC,WACAruD,eAAe,GAAIN,cAAatB,GAAI,KAAMiwD,WAEvCjwD,IASX8vD,eAAetoE,UAAUwrB,aAOzB,SAAUhT,GAAI5V,KAAM0B,MAAOkkE,WACvB,GAAqBE,SAAUzuD,aAAazB,GAC5C,IAAIkwD,SAAWA,kBAAmB5uD,cAAc,CAC5C,GAAqBgvD,UAAWN,UAAYA,UAAY,IAAM5lE,KAAOA,IACrE8lE,SAAQ91B,WAAWk2B,UAAYxkE,MAEnCrE,KAAKsU,SAASiX,aAAahT,GAAI5V,KAAM0B,MAAOkkE,YAQhDF,eAAetoE,UAAUytB,gBAMzB,SAAUjV,GAAI5V,KAAM4lE,WAChB,GAAqBE,SAAUzuD,aAAazB,GAC5C,IAAIkwD,SAAWA,kBAAmB5uD,cAAc,CAC5C,GAAqBgvD,UAAWN,UAAYA,UAAY,IAAM5lE,KAAOA,IACrE8lE,SAAQ91B,WAAWk2B,UAAY,KAEnC7oE,KAAKsU,SAASkZ,gBAAgBjV,GAAI5V,KAAM4lE,YAO5CF,eAAetoE,UAAU0tB,SAKzB,SAAUlV,GAAI5V,MACV,GAAqB8lE,SAAUzuD,aAAazB,GACxCkwD,UAAWA,kBAAmB5uD,gBAC9B4uD,QAAQxP,QAAQt2D,OAAQ,GAE5B3C,KAAKsU,SAASmZ,SAASlV,GAAI5V,OAO/B0lE,eAAetoE,UAAU2tB,YAKzB,SAAUnV,GAAI5V,MACV,GAAqB8lE,SAAUzuD,aAAazB,GACxCkwD,UAAWA,kBAAmB5uD,gBAC9B4uD,QAAQxP,QAAQt2D,OAAQ,GAE5B3C,KAAKsU,SAASoZ,YAAYnV,GAAI5V,OASlC0lE,eAAetoE,UAAU+tB,SAOzB,SAAUvV,GAAIy5B,MAAO3tC,MAAOgE,OACxB,GAAqBogE,SAAUzuD,aAAazB,GACxCkwD,UAAWA,kBAAmB5uD,gBAC9B4uD,QAAQtmD,OAAO6vB,OAAS3tC,OAE5BrE,KAAKsU,SAASwZ,SAASvV,GAAIy5B,MAAO3tC,MAAOgE,QAQ7CggE,eAAetoE,UAAUguB,YAMzB,SAAUxV,GAAIy5B,MAAO3pC,OACjB,GAAqBogE,SAAUzuD,aAAazB,GACxCkwD,UAAWA,kBAAmB5uD,gBAC9B4uD,QAAQtmD,OAAO6vB,OAAS,MAE5BhyC,KAAKsU,SAASyZ,YAAYxV,GAAIy5B,MAAO3pC,QAQzCggE,eAAetoE,UAAUiuB,YAMzB,SAAUzV,GAAI5V,KAAM0B,OAChB,GAAqBokE,SAAUzuD,aAAazB,GACxCkwD,UAAWA,kBAAmB5uD,gBAC9B4uD,QAAQt0D,WAAWxR,MAAQ0B,OAE/BrE,KAAKsU,SAAS0Z,YAAYzV,GAAI5V,KAAM0B,QAQxCgkE,eAAetoE,UAAUgsB,OAMzB,SAAUxmB,OAAQme,UAAW5O,UACzB,GAAsB,gBAAXvP,QAAqB,CAC5B,GAAqBkjE,SAAUzuD,aAAazU,OACxCkjE,UACAA,QAAQ1P,UAAUz0D,KAAK,GAAIq0D,eAAcj1C,UAAW5O,WAG5D,MAAO9U,MAAKsU,SAASyX,OAAOxmB,OAAQme,UAAW5O,WAMnDuzD,eAAetoE,UAAUga,WAIzB,SAAUH,MAAQ,MAAO5Z,MAAKsU,SAASyF,WAAWH,OAKlDyuD,eAAetoE,UAAU+lB,YAIzB,SAAUlM,MAAQ,MAAO5Z,MAAKsU,SAASwR,YAAYlM,OAMnDyuD,eAAetoE,UAAUk5B,SAKzB,SAAUrf,KAAMvV,OAAS,MAAOrE,MAAKsU,SAAS2kB,SAASrf,KAAMvV,QACtDgkE,kBA+CPplC,iBAAkC,SAAUysB,QAE5C,QAASzsB,kBAAiBtqB,WAAY67C,qBAAsBsU,qBACxD,GAAIvc,OAGJmD,OAAO/rD,KAAK3D,OAASA,IAIrB,OAHAusD,OAAM5zC,WAAaA,WACnB4zC,MAAMiI,qBAAuBA,qBAC7BjI,MAAMuc,oBAAsBA,oBACrBvc,MAeX,MAxBAjsD,WAAU2iC,iBAAkBysB,QAe5BzsB,iBAAiBljC,UAAUc,OAI3B,SAAUk/B,gBACNtC,sBACA,IAAqB3b,KAAM0D,kBAAkBxlB,KAAK8oE,oBAClD,OAAO7lD,UAASgQ,kBAAkBjzB,KAAK2Y,WAAYonB,gBAAkB72B,SAASm+C,KAAMrnD,KAAKw0D,qBAAsB1yC,MAE5GmhB,kBACT2sB;;;;;;;AAwSsB,mBAAbxoB,aACc,mBAAV4c,UACP,OAA4B5c,WAAY,GACzB,mBAAR3E,QACP,KAA0B2E,WAAY,GACrB,mBAAVhoC,UACP,OAA4BgoC,WAAY;;;;;;;AAmBhD,GAAI+C,yBAA0B,cAsK1B2H,qBACAmlB,UAAW,EACXllB,SAAU,EAEdD,qBAAoBA,oBAAoBmlB,WAAa,YACrDnlB,oBAAoBA,oBAAoBC,UAAY,UAgCpD,IAoyBIhsB,UACAoV,gBAWA2P,qBAaAS,SASAD,MAUAL,eAYA9F,aAYA9iB,KAIAN,aAkBAsmB,QA93BAoQ,qBACArd,eAAgB,SAAUJ,YAAaE,cAAgB,MAAO6lB,YA4wB9DxO,eAAiB,kBAKjBkD,eAAiBE,QAAQyO,QAAQ,MA6DjCjgB,YAA+B,KAg5C/BiM,aAqXAwI,cAAgBnD,eAahB6C,UAA2B,WAC3B,QAASmgB,SAAQxuD,SACbjK,KAAKiK,QAA2B,QAiEpC,MAzDAwuD,SAAQ14D,UAAUmuC,qBAKlB,SAAUjkC,SAAWjK,KAAKiK,QAAUA,SAIpCwuD,QAAQ14D,UAAUsX,QAGlB,WAAcqzB,kBAKd+tB,QAAQ14D,UAAUilC,UAIlB,SAAUlwB,UAAY41B,kBAItB+tB,QAAQ14D,UAAUqmE,aAGlB,WAAc17B,kBAId+tB,QAAQ14D,UAAUkmE,OAGlB,WAAcv7B,kBAId+tB,QAAQ14D,UAAUghC,cAGlB,WAAcA,cAAc/gC,KAAKiK,UAIjCwuD,QAAQ14D,UAAUihC,eAGlB,WAAc0J,kBAId+tB,QAAQ14D,UAAUumE,SAGlB,WAAc57B,kBACP+tB,WAEPsQ,kBAAmC,SAAUrZ,QAE7C,QAASgJ,iBAAgBzwB,SAAUxe,SAAUxf,SACzC,GAAIsiD,OAAQmD,OAAO/rD,KAAK3D,KAAMiK,UAAYjK,IAE1C,OADAusD,OAAMyc,WAAa/gC,SACZskB,MAEX,MANAjsD,WAAUo4D,gBAAiBhJ,QAMpBgJ,iBACTpgB,WAwLEW,cAAgB,oBAMhBG,WAAa,IAIbF,gBAAkB,EAqZlB4G,mBAAoC,WACpC,QAASA,oBAAmBF,MACxB5/C,KAAK4/C,KAAOA,KAEhB,MAAOE,uBAiCPlE,cAnB2C,GAAwBkE,oBAAmB,SAAUv1C,UAAY,MAAOmwC,wBAAuBnwC,YAC9F,GAAwBu1C,oBAAmB,SAAUv1C,UAAY,MAAOqwC,yBAAwBrwC,YAClG,GAAwBu1C,oBAAmB,SAAUv1C,UAAY,MAAOoxC,uBAAsBpxC,YACjH,GAAwBu1C,oBAAmB,SAAUv1C,SAAUqP,KAAMimC,cAE5F,GADAzY,WAAaxB,0BAA0BhsB,KAAM,EAAmB,GAC5DimC,cAAgB,EAChB,MAAOjmC,MAAKgG,KAAKyC,KAAKw9B,aAErB,IAAyC,IAAvB,EAAbjmC,KAAKvR,OACX,MAAOszC,uBAAsBpxC,SAE5B,IAAyC,IAAvB,EAAbqP,KAAKvR,OACX,MAAOqyC,wBAAuBnwC,SAElC,MAAM,IAAI/B,OAAM,UAKc,WAC9B,QAAS2sB,YAAW7b,eAChBtZ,KAAKsZ,cAAgBA,cAEzB,MAAO6b,gBAiBP0mB,mBAAoC,WACpC,QAAS0c,kBAAiB0Q,OACtBjpE,KAAKipE,MAAQA,MAoIjB,MA/HA1Q,kBAAiBx4D,UAAUugC,MAG3B,WAAc,KAAMoK,mBAKpB6tB,iBAAiBx4D,UAAU8H,IAI3B,SAAU7C,OAAS,KAAM0lC,mBAQzB6tB,iBAAiBx4D,UAAU06B,mBAO3B,SAAUuf,YAAa/vC,QAASjF,OAC5B,GAAqBoxD,SAAUpc,YAAYvf,mBAAoC,QAE/E,OADAz6B,MAAK0lE,OAAOtP,QAASpxD,OACdoxD,SAWXmC,iBAAiBx4D,UAAU4lE,gBAS3B,SAAUtzC,iBAAkBrtB,MAAOuF,SAAUqc,iBAAkB4I,UAC3D,KAAMkb,mBAOV6tB,iBAAiBx4D,UAAU2lE,OAK3B,SAAUtP,QAASpxD,OACF,MAATA,MACAA,MAAQhF,KAAKipE,MAAM5mD,KAAKwkB,MAAMplC,OAI9B2lC,WAAa5D,eAAex+B,MAAOhF,KAAKipE,MAAM5mD,KAAKwkB,MAAMplC,OAAS,EAAG,QAEzE,IAAqByzC,OAAQ,QAA6B8zB,UAc1D,OAbAthC,YAAW1nC,KAAKipE,MAAO/zB,MAAOlwC,OAGF,OAAxBkwC,MAAM7yB,KAAKoH,WAEXzpB,KAAKipE,MAAM5mD,KAAKupB,mBAEU,OAAtB5rC,KAAKipE,MAAM9gE,QAA8C,OAA3BnI,KAAKipE,MAAM9gE,OAAOka,OAChD+kB,WACIxB,0BAA0B5lC,KAAKipE,MAAM9gE,OAAQ,EAAc,GAC/DnI,KAAKipE,MAAM9gE,OAAOka,KAAKupB,qBAGxBwqB,SAOXmC,iBAAiBx4D,UAAUimE,KAK3B,SAAU5P,QAASuF,cACf,KAAMjxB,mBAMV6tB,iBAAiBx4D,UAAUgD,QAI3B,SAAUqzD,SAAW,KAAM1rB,mBAK3B6tB,iBAAiBx4D,UAAUsY,OAI3B,SAAUrT,OAAS,KAAM0lC,mBAKzB6tB,iBAAiBx4D,UAAUkmE,OAI3B,SAAUjhE,OAAS,KAAM0lC,mBAClB6tB,oBAePzc,cAA+B,WAC/B,QAASwc,aAAYpe,WAAYzwB,SAAUy/C,WACvClpE,KAAKkpE,UAAYA,UACjBlpE,KAAKk6C,WAAaA,WAClBl6C,KAAKmpE,UAAY1/C,SAcrB,MARA6uC,aAAYv4D,UAAU06B,mBAItB,SAAUxwB,SACN,GAAqBg+B,UAAWiE,uBAAuB,KAAMlsC,KAAKmpE,UAAWl/D,QAASjK,KAAKkpE,UAC3F,OAAO7wB,gBAAe,GAAI0wB,mBAAkB9gC,SAAUjoC,KAAKmpE,UAAWl/D,WAEnEquD,eA8DPvb,eAAiB,iBAqEjBW,WAiCA0rB,gBAAmC,gBAmcnC3oB,UAA2B,WAC3B,QAASA,WAAU4oB,MACfrpE,KAAKspE,QAAU,KACftpE,KAAKqpE,KAAO,KACZrpE,KAAKqpE,KAAe,MAARA,KAAe,KAAOA,KAyHtC,MA/GA5oB,WAAU1gD,UAAU2gD,MAQpB,SAAU5pB,UAAWrd,UAAW8mC,QAASX,MAGjCW,QACAvgD,KAAKqpE,KAAOlpB,cAAcngD,KAAKqpE,KAAMvyC,UAAWrd,UAAmB,MAARmmC,KAAeA,KAAO,MAGjF5/C,KAAKspE,QAAUnpB,cAAcngD,KAAKspE,QAASxyC,UAAWrd,UAAmB,MAARmmC,KAAeA,KAAO,OAM/Fa,UAAU1gD,UAAU+mC,MAGpB,WACI,MAAkB,QAAd9mC,KAAKqpE,KAEE,KAEU,OAAjBrpE,KAAKspE,QAGEtpE,KAIA,GAAIygD,WAAUzgD,KAAKqpE,OAMlC5oB,UAAU1gD,UAAUknC,UAGpB,WAGI,IAFA,GAAqBnvB,QAAS,KACT+R,MAAQ7pB,KAAKqpE,KAC3Bx/C,OAAO,CACV,GAAqB0/C,mBACrB1/C,OAAMnlB,OAAOJ,KAAKilE,gBAClB,IAAqBC,cAAgBtuD,KAAM,KAAM5C,KAAMuR,MAAMvR,KAAMmB,UAAWoQ,MAAMpQ,UAAW/U,OAAQ6kE,gBACvGC,aAAYtuD,KAAOpD,OACnBA,OAAS0xD,YACT3/C,MAAQA,MAAM3O,KAElB,MAAOpD,QAAS,GAAI2oC,WAAU3oC,QAAU,MAM5C2oC,UAAU1gD,UAAUorC,UAIpB,SAAUnmC,OAGN,IAFA,GAAqB8S,QAAS,KACT+R,MAAQ7pB,KAAKqpE,KAC3Bx/C,OAAO,CACV,GAAqB4/C,cACrB5/C,OAAMnlB,OAAO8T,OAAOxT,MAAO,EAAGykE,WAC9B,IAAqBD,cAAgBtuD,KAAM,KAAM5C,KAAMuR,MAAMvR,KAAMmB,UAAWoQ,MAAMpQ,UAAW/U,OAAQ+kE,WACvGD,aAAYtuD,KAAOpD,OACnBA,OAAS0xD,YACT3/C,MAAQA,MAAM3O,KAElB,MAAOpD,QAAS,GAAI2oC,WAAU3oC,QAAU,MAM5C2oC,UAAU1gD,UAAUmwC,QAIpB,SAAUt2B,MACN83B,IAAI1xC,KAAKspE,QAAS1vD,MAClB83B,IAAI1xC,KAAKqpE,KAAMzvD,OAMnB6mC,UAAU1gD,UAAUgoC,WAIpB,SAAU/iC,OAEN,IADA,GAAqB6kB,OAAQ7pB,KAAKqpE,KAC3Bx/C,OAAO,CACV,GAAqB6/C,SAAU7/C,MAAMnlB,OAAO8T,OAAOxT,MAAO,EAE1DoiC,YAAalE,YAAYwmC,QAAQjoE,OAAQ,EAAG,kBACxCioE,QAAQ,GAAGjoE,QACXooB,MAAMvR,KAAKse,WAEf/M,MAAQA,MAAM3O,OAGfulC,aA0IPkpB,WAA4B,WAC5B,QAASA,cACL3pE,KAAK+2B,OAAQ,EACb/2B,KAAKo0B,QAAU,GAAI87B,cACnBlwD,KAAK4pE,WAIL5pE,KAAKqgD,eA6MT,MA3MAz/C,QAAOwD,eAAeulE,WAAW5pE,UAAW,UACxC8H,IAGA,WAAc,MAAO7H,MAAK4pE,QAAQnoE,QAClC+wC,YAAY,EACZttB,cAAc,IAElBtkB,OAAOwD,eAAeulE,WAAW5pE,UAAW,SACxC8H,IAGA,WACI,GAAqBnD,QAAS1E,KAAK4pE,OACnC,OAAOllE,QAAOjD,OAASiD,OAAO,GAAK,MAEvC8tC,YAAY,EACZttB,cAAc,IAElBtkB,OAAOwD,eAAeulE,WAAW5pE,UAAW,QACxC8H,IAGA,WACI,GAAqBnD,QAAS1E,KAAK4pE,OACnC,OAAOllE,QAAOjD,OAASiD,OAAOA,OAAOjD,OAAS,GAAK,MAEvD+wC,YAAY,EACZttB,cAAc,IAalBykD,WAAW5pE,UAAUyC,IAOrB,SAAUZ,IAAM,MAAO5B,MAAK4pE,QAAQpnE,IAAIZ,KAWxC+nE,WAAW5pE,UAAUs3D,OAMrB,SAAUz1D,IACN,MAAO5B,MAAK4pE,QAAQvS,OAAOz1D,KAY/B+nE,WAAW5pE,UAAUu3D,KAMrB,SAAU11D,IACN,MAAO5B,MAAK4pE,QAAQtS,KAAK11D,KAc7B+nE,WAAW5pE,UAAUoY,OAQrB,SAAUvW,GAAI6U,MACV,MAAOzW,MAAK4pE,QAAQzxD,OAAOvW,GAAI6U,OAYnCkzD,WAAW5pE,UAAUsQ,QAMrB,SAAUzO,IAAM5B,KAAK4pE,QAAQv5D,QAAQzO,KAWrC+nE,WAAW5pE,UAAU4Q,KAMrB,SAAU/O,IACN,MAAO5B,MAAK4pE,QAAQj5D,KAAK/O,KAK7B+nE,WAAW5pE,UAAUw3D,QAGrB,WAAc,MAAOv3D,MAAK4pE,QAAQ18D,MAAM,IAIxCy8D,WAAW5pE,UAAUiB,qBAGrB,WAAc,MAA0BhB,MAAa,QAAEgB,wBAIvD2oE,WAAW5pE,UAAU8C,SAGrB,WAAc,MAAO7C,MAAK4pE,QAAQ/mE,YAKlC8mE,WAAW5pE,UAAUo3B,MAIrB,SAAUv0B,KACN5C,KAAK4pE,QAAUj/B,UAAU/nC,KACzB,KAA0Bm0B,OAAQ,GAKtC4yC,WAAW5pE,UAAUu3B,gBAGrB,WAAiCt3B,KAAa,QAAE6T,KAAK7T,OAIrD2pE,WAAW5pE,UAAU62B,SAGrB,WAAc,KAA0BG,OAAQ,GAIhD4yC,WAAW5pE,UAAUsX,QAGrB,WACuBrX,KAAa,QAAE0tD,WACf1tD,KAAa,QAAEg0B,eAE/B21C,cAEPnpB,YAA+B,WA8D/BM,MAAQ,6BAq4CZxhD,SAAQ4W,eAAiBA,eACzB5W,QAAQ4X,eAAiBA,eACzB5X,QAAQ8X,gBAAkBA,gBAC1B9X,QAAQ0X,YAAcA,YACtB1X,QAAQgX,YAAcA,YACtBhX,QAAQi1D,eAAiBA,eACzBj1D,QAAQwW,eAAiBA,eACzBxW,QAAQ2W,UAAYA,UACpB3W,QAAQoX,sBAAwBA,sBAChCpX,QAAQg0D,aAAeA,aACvBh0D,QAAQuuD,OAASA,OACjBvuD,QAAQ2uD,iBAAmBA,iBAC3B3uD,QAAQkX,qBAAuBA,qBAC/BlX,QAAQyuD,YAAcA,YACtBzuD,QAAQ0uD,uBAAyBA,uBACjC1uD,QAAQ4tD,gBAAkBA,gBAC1B5tD,QAAQ6tD,sBAAwBA,sBAChC7tD,QAAQua,aAAeA,aACvBva,QAAQs5D,UAAYA,UACpBt5D,QAAQ8Z,iBAAmBA,iBAC3B9Z,QAAQ0a,aAAeA,aACvB1a,QAAQkyD,YAAcA,YACtBlyD,QAAQizD,oBAAsBA,oBAC9BjzD,QAAQqW,qBAAuBA,qBAC/BrW,QAAQwhE,aAAeA,aACvBxhE,QAAQyhE,oBAAsBA,oBAC9BzhE,QAAQuhE,UAAYA,UACpBvhE,QAAQ0hE,2BAA6BA,2BACrC1hE,QAAQ6hE,kBAAoBA,kBAC5B7hE,QAAQwwD,eAAiBA,eACzBxwD,QAAQywD,SAAWA,SACnBzwD,QAAQ0wD,kBAAoBA,kBAC5B1wD,QAAQ2wD,gBAAkBA,gBAC1B3wD,QAAQgR,KAAOA,KACfhR,QAAQ4wD,aAAeA,aACvB5wD,QAAQsgC,aAAeA,aACvBtgC,QAAQqgC,UAAYA,UACpBrgC,QAAQquB,gBAAkBA,gBAC1BruB,QAAQ0oD,6BAA+BA,6BACvC1oD,QAAQ2oD,UAAYA,UACpB3oD,QAAQipD,aAAeA,aACvBjpD,QAAQ8oD,gBAAkBA,gBAC1B9oD,QAAQ6oD,MAAQA,MAChB7oD,QAAQmpD,UAAYA,UACpBnpD,QAAQkpD,aAAeA,aACvBlpD,QAAQ6pD,UAAYA,UACpB7pD,QAAQ2pD,UAAYA,UACpB3pD,QAAQkqD,YAAcA,YACtBlqD,QAAQoqD,aAAeA,aACvBpqD,QAAQ+pD,MAAQA,MAChB/pD,QAAQiqD,OAASA,OACjBjqD,QAAQ8pD,KAAOA,KACf9pD,QAAQqqD,uBAAyBA,uBACjCrqD,QAAQsqD,iBAAmBA,iBAC3BtqD,QAAQuqD,SAAWA,SACnBvqD,QAAQkjB,kBAAoBA,kBAC5BljB,QAAQyqD,QAAUA,QAClBzqD,QAAQ8qD,QAAUA,QAClB9qD,QAAQuM,iBAAmBA,iBAC3BvM,QAAQuoD,WAAaA,WACrBvoD,QAAQ+G,WAAaA,WACrB/G,QAAQkH,kBAAoBA,kBAC5BlH,QAAQoL,OAASA,OACjBpL,QAAQ4J,SAAWA,SACnB5J,QAAQ+rD,mBAAqBA,mBAC7B/rD,QAAQgQ,0BAA4BA,0BACpChQ,QAAQ6P,cAAgBA,cACxB7P,QAAQ4R,eAAiBA,eACzB5R,QAAQgvB,eAAiBA,eACzBhvB,QAAQoK,OAASA,OACjBpK,QAAQiK,SAAWA,SACnBjK,QAAQmK,KAAOA,KACfnK,QAAQkK,SAAWA,SACnBlK,QAAQ2nD,KAAOA,KACf3nD,QAAQmY,OAASA,OACjBnY,QAAQm3D,oBAAsBA,oBAC9Bn3D,QAAQw3D,SAAWA,SACnBx3D,QAAQ43D,UAAYA,UACpB53D,QAAQ+/B,iBAAmBA,iBAC3B//B,QAAQ03D,oBAAsBA,oBAC9B13D,QAAQy3D,aAAeA,aACvBz3D,QAAQwvD,iBAAmBA,iBAC3BxvD,QAAQivD,SAAWA,SACnBjvD,QAAQyvD,gBAAkBA,gBAC1BzvD,QAAQ8uD,6BAA+BA,6BACvC9uD,QAAQ2vD,iBAAmBA,iBAC3B3vD,QAAQ0vD,aAAeA,aACvB1vD,QAAQ8vD,yBAA2BA,yBACnC9vD,QAAQ61B,WAAaA,WACrB71B,QAAQswD,gBAAkBA,gBAC1BtwD,QAAQqwD,YAAcA,YACtBrwD,QAAQ63D,sBAAwBA,sBAChC73D,QAAQsZ,iBAAmBA,iBAC3BtZ,QAAQi3B,UAAYA,UACpBj3B,QAAQu4D,uBAAyBA,uBACjCv4D,QAAQm4D,6BAA+BA,6BACvCn4D,QAAQg5D,YAAcA,YACtBh5D,QAAQi5D,iBAAmBA,iBAC3Bj5D,QAAQo5D,gBAAkBA,gBAC1Bp5D,QAAQm5D,QAAUA,QAClBn5D,QAAQ2M,wBAA0BA,wBAClC3M,QAAQk5D,kBAAoBA,kBAC5Bl5D,QAAQ+6D,sBAAwBA,sBAChC/6D,QAAQ6gE,gBAAkBA,gBAC1B7gE,QAAQihE,gBAAkBA,gBAC1BjhE,QAAQo2B,aAAeA,aACvBp2B,QAAQoiB,aAAeA,aACvBpiB,QAAQshE,aAAeA,aACvBthE,QAAQuqE,0BAA4BxzD,yBACpC/W,QAAQwqE,wBAA0Bhc,uBAClCxuD,QAAQyqE,cAAgBzvD,aACxBhb,QAAQ0qE,oBAAsBxvD,mBAC9Blb,QAAQ2qE,sBAAwBvhB,qBAChCppD,QAAQ4qE,kCAAoCn+D,iCAC5CzM,QAAQ6qE,SAAWjc,QACnB5uD,QAAQ8qE,oBAAsB9/D,mBAC9BhL,QAAQ+qE,kBAAoBpb,iBAC5B3vD,QAAQgrE,iCAAmCjb,gCAC3C/vD,QAAQirE,wBAA0Bp/D,uBAClC7L,QAAQkrE,iBAAmB3T,gBAC3Bv3D,QAAQmrE,eAAiBhtD,cACzBne,QAAQorE,gBAAkBnrD,eAC1BjgB,QAAQqrE,cAAgBtuD,aACxB/c,QAAQsrE,QAAUzpE,QAClB7B,QAAQurE,gBAAkB3oE,eAC1B5C,QAAQwrE,WAAazoE,UACrB/C,QAAQyrE,eAAiB9nE,cACzB3D,QAAQ0rE,cAAgBz5D,aACxBjS,QAAQ2rE,WAAa35D,UACrBhS,QAAQ4rE,gBAAkBltC,eAC1B1+B,QAAQ6rE,uBAAyBptC,sBACjCz+B,QAAQ8rE,kBAAoBttC,iBAC5Bx+B,QAAQ+rE,uCAAyC51C,sCACjDn2B,QAAQgsE,iBAAmBvvB,gBAC3Bz8C,QAAQisE,iBAAmBnC,gBAC3B9pE,QAAQksE,YAAc3tB,WACtBv+C,QAAQmsE,eAAiB1qC,cACzBzhC,QAAQosE,iBAAmBlzB,gBAC3Bl5C,QAAQqsE,QAAUpxB,SAClBj7C,QAAQssE,mBAAqBnxB,kBAC7Bn7C,QAAQusE,wBAA0BlxB,uBAClCr7C,QAAQwsE,yBAA2BjxB,wBACnCv7C,QAAQysE,iBAAmBhxB,gBAC3Bz7C,QAAQ0sE,eAAiBvuB,cACzBn+C,QAAQ2sE,oBAAsBvvB,mBAC9Bp9C,QAAQ4sE,IAAM97B,UACd9wC,QAAQ6sE,GAAKllC,UACb3nC,QAAQ8sE,GAAKx/B,aACbttC,QAAQ+sE,GAAKl9B,SACb7vC,QAAQgtE,GAAK1iE,KACbtK,QAAQitE,GAAKn5B,kBACb9zC,QAAQktE,GAAK3iD,MACbvqB,QAAQmtE,GAAK93B,WACbr1C,QAAQotE,GAAK3oE,KACbzE,QAAQqtE,IAAMl2B,eACdn3C,QAAQstE,IAAMl2B,eACdp3C,QAAQutE,IAAMh2B,eACdv3C,QAAQwtE,IAAM/1B,eACdz3C,QAAQytE,IAAM71B,eACd53C,QAAQ0tE,IAAM51B,eACd93C,QAAQ2tE,IAAM31B,eACdh4C,QAAQ4tE,IAAM11B,eACdl4C,QAAQ6tE,IAAM72B,eACdh3C,QAAQ8tE,KAAOjuB,UACf7/C,QAAQ+tE,KAAOhuB,UACf//C,QAAQguE,KAAOhuB,UACfhgD,QAAQiuE,KAAOhuB,UACfjgD,QAAQkuE,KAAOhuB,UACflgD,QAAQmuE,IAAM1vB,cACdz+C,QAAQouE,IAAMxvB,cACd5+C,QAAQquE,IAAMvvB,cACd9+C,QAAQsuE,IAAMvvB,cACd/+C,QAAQuuE,IAAMvvB,cACdh/C,QAAQwuE,IAAMvvB,cACdj/C,QAAQyuE,IAAMtvB,cACdn/C,QAAQ0uE,IAAMrvB,cACdr/C,QAAQ2uE,IAAMpvB,cACdv/C,QAAQ4uE,IAAMnvB,cACdz/C,QAAQ6uE,IAAMl7B,sBACd3zC,QAAQ8uE,IAAMl7B,oBACd5zC,QAAQ+uE,IAAM1tB,aACdrhD,QAAQgvE,GAAKt+B,WACb1wC,QAAQivE,GAAKj+B,gBACbhxC,QAAQkvE,IAAMx6B,cACd10C,QAAQmvE,GAAKt+B,iBACb7wC,QAAQovE,GAAKp9B,aACbhyC,QAAQqvE,GAAKh9B,aACbryC,QAAQsvE,GAAKx8B,YACb9yC,QAAQuvE,GAAKn7B,gBACbp0C,QAAQwvE,GAAKniC,iBACbrtC,QAAQyvE,IAAMr3B,MACdp4C,QAAQ0vE,IAAMr3B,KACdr4C,QAAQ2vE,IAAMz2C,KACdl5B,QAAQ4vE,6BAA+B5tB,4BACvChiD,QAAQ6vE,8BAAgC1tB,6BACxCniD,QAAQ8vE,+BAAiCztB,8BACzCriD,QAAQ+vE,4BAA8BxtB,2BACtCviD,QAAQgwE,oCAAsCvtB,mCAC9CziD,QAAQiwE,cAAgB1uB,aACxBvhD,QAAQkwE,eAAiBxuB,aACzB1hD,SAAQmwE,aAAevuB,YACvB5hD,QAAQowE,qBAAuBtuB,oBAC/B9hD,QAAQqwE,uBAAyBl3D,sBACjCnZ,QAAQswE,aAAenL,cACvBnlE,QAAQuwE,WAAanL,UACrBplE,QAAQwwE,KAAO/mD,UACfzpB,QAAQywE,KAAOl+C,uBACfvyB,QAAQ0wE,KAAOltC,sBACfxjC,QAAQ2wE,KAAOhuD,oBACf3iB,QAAQ4wE,KAAO98C,aACf9zB,QAAQ6wE,KAAOpmD,WACfzqB,QAAQ8wE,sBAAwBhsD,qBAChC9kB,QAAQ+wE,mCAAqCj+C,kCAC7C9yB,QAAQgxE,mBAAqB3oD,kBAC7BroB,QAAQixE,aAAehpD,YACvBjoB,QAAQkxE,KAAOtiD,UACf5uB,QAAQmxE,KAAOxiD,iBACf3uB,QAAQoxE,KAAO94C,aACft4B,QAAQqxE,KAAO79C,UACfxzB,QAAQsxE,KAAOt9C,QACfh0B,QAAQuxE,KAAO5hD,YACf3vB,QAAQwxE,KAAO74C,aACf34B,QAAQyxE,KAAO74C,cACf54B,QAAQ0xE,KAAOl5C,YACfx4B,QAAQ2xE,KAAO96C,SACf72B,QAAQ4xE,KAAOv4C,QACfr5B,QAAQ6xE,KAAO5vD,YACfjiB,QAAQ8xE,KAAOrgD,QACfzxB,QAAQ+xE,WAvVS,IAwVjB/xE,QAAQgyE,QAAUluB,WAClB9jD,QAAQooE,QAAUrkB,WAClB/jD,QAAQiyE,MAAQjuB,SAChBhkD,QAAQkyE,SAAWjuB,YACnBjkD,QAAQ0yC,MAAQwR,SAChBlkD,QAAQygB,MAAQ0jC,SAChBnkD,QAAQmyE,UAAY/tB,aACpBpkD,QAAQoyE,WAAa/tB,cACrBrkD,QAAQqyE,IAAMrvB,UACdhjD,QAAQsyE,IAAMpvB,QACdljD,QAAQuyE,IAAM9uB,YACdzjD,QAAQwyE,IAAMpvB,WACdpjD,QAAQyyE,IAAMjvB,QACdxjD,QAAQ0yE,IAAMrvB,QACdrjD,QAAQ2yE,IAAMjvB,aACd1jD,QAAQ4yE,IAAM9vB,UACd9iD,QAAQ6yE,GAAKt2D,wBACbvc,QAAQ8yE,GAAKr2D,wBACbzc,QAAQ+yE,GAAKp2D,eACb3c,QAAQgzE,GAAK7gE,4BACbnS,QAAQizE,GAAKz2D,uBACbxc,QAAQkzE,GAAKx2D,uBACb1c,QAAQmzE,GAAKvY,6BACb56D,QAAQozE,GAAK1T,6BACb1/D,QAAQqzE,GAAKlnB,oBACbnsD,QAAQszE,GAAK3jE,qBACb3P,QAAQuzE,GAAKpjE,2BACbnQ,QAAQwzE,GAAKjjB,WACbvwD,QAAQyzE,GAAKvgE,YACblT,QAAQ0zE,GAAK5gE,UACb9S,QAAQ2zE,IAAMhgE,aACd3T,QAAQ4zE,GAAKzgE,MACbnT,QAAQ6zE,IAAMtgE,eACdvT,QAAQ8zE,IAAMt4B,6BACdx7C,QAAQ+zE,IAAMz4B,wBACdt7C,QAAQg0E,IAAM94B,sBACdl7C,QAAQi0E,IAAM75B,wBACdp6C,QAAQk0E,IAAM94B,uBACdp7C,QAAQm0E,IAAMj9B,eACdl3C,QAAQo0E,IAAM98B,gBACdt3C,QAAQq0E,IAAM18B,gBACd33C,QAAQs0E,IAAM/7B,wBACdv4C,QAAQu0E,IAAMj8B,eACdt4C,QAAQw0E,IAAM5oC,gBACd5rC,QAAQy0E,GAAKnvE,mBACbtF,QAAQ00E,GAAK5uE,kBACb9F,QAAQ20E,IAAMzlD,KACdlvB,QAAQ40E,IAAM3P,aAEd3jE,OAAOwD,eAAe9E,QAAS,cAAgB+E,OAAO","file":"core.umd.min.js","sourcesContent":["/**\n * @license Angular v6.0.0-beta.7-c499c8f\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs/Observable'), require('rxjs/observable/merge'), require('rxjs/operator/share'), require('rxjs/Subject'), require('rxjs/Subscription')) :\n\ttypeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs/Observable', 'rxjs/observable/merge', 'rxjs/operator/share', 'rxjs/Subject', 'rxjs/Subscription'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.core = {}),global.Rx,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx,global.Rx));\n}(this, (function (exports,rxjs_Observable,rxjs_observable_merge,rxjs_operator_share,rxjs_Subject,rxjs_Subscription) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v6.0.0-beta.7-c499c8f\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents a type that a Component or other object is instances of.\n *\n * \\@description\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * \\@stable\n */\nvar Type = Function;\n/**\n * @param {?} v\n * @return {?}\n */\nfunction isType(v) {\n    return typeof v === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _global = __window || __global || __self;\nvar promise = Promise.resolve(0);\nvar _symbolIterator = null;\n/**\n * @return {?}\n */\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        var /** @type {?} */ Symbol_1 = _global['Symbol'];\n        if (Symbol_1 && Symbol_1.iterator) {\n            _symbolIterator = Symbol_1.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n                var /** @type {?} */ key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    (/** @type {?} */ (Map)).prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nfunction scheduleMicroTask(fn) {\n    if (typeof Zone === 'undefined') {\n        // use promise to schedule microTask instead of use Zone\n        promise.then(function () { fn && fn.apply(null, null); });\n    }\n    else {\n        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n    }\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * ES7 syntax:\n *\n * ```\n * \\@ng.Component({...})\n * class MyClass {...}\n * ```\n * \\@stable\n * @record\n */\n\nvar ANNOTATIONS = '__annotations__';\nvar PARAMETERS = '__paramaters__';\nvar PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @param {?=} chainFn\n * @param {?=} typeFn\n * @return {?}\n */\nfunction makeDecorator(name, props, parentClass, chainFn, typeFn) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function DecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call.apply(metaCtor, [this].concat(args));\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new ((_a = (/** @type {?} */ (DecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        var /** @type {?} */ TypeDecorator = /** @type {?} */ (function TypeDecorator(cls) {\n            typeFn && typeFn.apply(void 0, [cls].concat(args));\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                (/** @type {?} */ (cls))[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            return cls;\n        });\n        if (chainFn)\n            chainFn(TypeDecorator);\n        return TypeDecorator;\n        var _a;\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (DecoratorFactory)).annotationCls = DecoratorFactory;\n    return /** @type {?} */ (DecoratorFactory);\n}\n/**\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataCtor(props) {\n    return function ctor() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (props) {\n            var /** @type {?} */ values = props.apply(void 0, args);\n            for (var /** @type {?} */ propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makeParamDecorator(name, props, parentClass) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function ParamDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new ((_a = (/** @type {?} */ (ParamDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        (/** @type {?} */ (ParamDecorator)).annotation = annotationInstance;\n        return ParamDecorator;\n        /**\n         * @param {?} cls\n         * @param {?} unusedKey\n         * @param {?} index\n         * @return {?}\n         */\n        function ParamDecorator(cls, unusedKey, index) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ parameters = cls.hasOwnProperty(PARAMETERS) ?\n                (/** @type {?} */ (cls))[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n        var _a;\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (ParamDecoratorFactory)).annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makePropDecorator(name, props, parentClass) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function PropDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof PropDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var /** @type {?} */ decoratorInstance = new ((_a = (/** @type {?} */ (PropDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        return function PropDecorator(target, name) {\n            var /** @type {?} */ constructor = target.constructor;\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                (/** @type {?} */ (constructor))[PROP_METADATA] :\n                Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n            meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n            meta[name].unshift(decoratorInstance);\n        };\n        var _a;\n    }\n    if (parentClass) {\n        PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    PropDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (PropDecoratorFactory)).annotationCls = PropDecoratorFactory;\n    return PropDecoratorFactory;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Attention: These regex has to hold even if the code is minified!\n */\nvar DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nvar INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\nvar INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\nvar ReflectionCapabilities = /** @class */ (function () {\n    function ReflectionCapabilities(reflect) {\n        this._reflect = reflect || _global['Reflect'];\n    }\n    /**\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.isReflectionEnabled = /**\n     * @return {?}\n     */\n    function () { return true; };\n    /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.factory = /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new (t.bind.apply(t, [void 0].concat(args)))();\n    }; };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    function (paramTypes, paramAnnotations) {\n        var /** @type {?} */ result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var /** @type {?} */ i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownParameters = /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (type, parentCtor) {\n        var /** @type {?} */ typeStr = type.toString();\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(typeStr) ||\n            (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n            return null;\n        }\n        // Prefer the direct API.\n        if ((/** @type {?} */ (type)).parameters && (/** @type {?} */ (type)).parameters !== parentCtor.parameters) {\n            return (/** @type {?} */ (type)).parameters;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        var /** @type {?} */ tsickleCtorParams = (/** @type {?} */ (type)).ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            // Newer tsickle uses a function closure\n            // Retain the non-function case for compatibility with older tsickle\n            var /** @type {?} */ ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            var /** @type {?} */ paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n            var /** @type {?} */ paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n            });\n            return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n        }\n        // API for metadata created by invoking the decorators.\n        var /** @type {?} */ paramAnnotations = type.hasOwnProperty(PARAMETERS) && (/** @type {?} */ (type))[PARAMETERS];\n        var /** @type {?} */ paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array((/** @type {?} */ (type.length))).fill(undefined);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(type);\n        var /** @type {?} */ parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownAnnotations = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).annotations && (/** @type {?} */ (typeOrFunc)).annotations !== parentCtor.annotations) {\n            var /** @type {?} */ annotations = (/** @type {?} */ (typeOrFunc)).annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).decorators && (/** @type {?} */ (typeOrFunc)).decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata((/** @type {?} */ (typeOrFunc)).decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return (/** @type {?} */ (typeOrFunc))[ANNOTATIONS];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        var /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownPropMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).propMetadata &&\n            (/** @type {?} */ (typeOrFunc)).propMetadata !== parentCtor.propMetadata) {\n            var /** @type {?} */ propMetadata = (/** @type {?} */ (typeOrFunc)).propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).propDecorators &&\n            (/** @type {?} */ (typeOrFunc)).propDecorators !== parentCtor.propDecorators) {\n            var /** @type {?} */ propDecorators_1 = (/** @type {?} */ (typeOrFunc)).propDecorators;\n            var /** @type {?} */ propMetadata_1 = /** @type {?} */ ({});\n            Object.keys(propDecorators_1).forEach(function (prop) {\n                propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n            });\n            return propMetadata_1;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return (/** @type {?} */ (typeOrFunc))[PROP_METADATA];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ propMetadata = {};\n        if (parentCtor !== Object) {\n            var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                propMetadata[propName] = parentPropMetadata_1[propName];\n            });\n        }\n        var /** @type {?} */ ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach(function (propName) {\n                var /** @type {?} */ decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push.apply(decorators, propMetadata[propName]);\n                }\n                decorators.push.apply(decorators, ownPropMetadata[propName]);\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return type instanceof Type && lcProperty in type.prototype;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.guards = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return {}; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return /** @type {?} */ (new Function('o', 'return o.' + name + ';')); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return /** @type {?} */ (new Function('o', 'v', 'return o.' + name + ' = v;'));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return /** @type {?} */ (new Function('o', 'args', functionBody));\n    };\n    // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return \"./\" + stringify(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return \"./\" + stringify(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return runtime;\n    };\n    /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveEnum = /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (enumIdentifier, name) { return enumIdentifier[name]; };\n    return ReflectionCapabilities;\n}());\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(function (decoratorInvocation) {\n        var /** @type {?} */ decoratorType = decoratorInvocation.type;\n        var /** @type {?} */ annotationCls = decoratorType.annotationCls;\n        var /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\n    });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor) {\n    var /** @type {?} */ parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n    var /** @type {?} */ parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @template T\n * @param {?} objWithPropertyToExtract\n * @param {?} target\n * @return {?}\n */\nfunction getClosureSafeProperty(objWithPropertyToExtract, target) {\n    for (var /** @type {?} */ key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === target) {\n            return key;\n        }\n    }\n    throw Error('Could not find renamed property on target object.');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An interface that a function passed into {\\@link forwardRef} has to implement.\n *\n * ### Example\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * \\@experimental\n * @record\n */\n\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n *\n * ### Example\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * \\@experimental\n * @param {?} forwardRefFn\n * @return {?}\n */\nfunction forwardRef(forwardRefFn) {\n    (/** @type {?} */ (forwardRefFn)).__forward_ref__ = forwardRef;\n    (/** @type {?} */ (forwardRefFn)).toString = function () { return stringify(this()); };\n    return (/** @type {?} */ (/** @type {?} */ (forwardRefFn)));\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * See: {\\@link forwardRef}\n * \\@experimental\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n        type.__forward_ref__ === forwardRef) {\n        return (/** @type {?} */ (type))();\n    }\n    else {\n        return type;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Inject decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Inject decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n/**\n * Type of the Optional decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Optional decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Optional = makeParamDecorator('Optional');\n/**\n * Type of the Self decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Self decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Self = makeParamDecorator('Self');\n/**\n * Type of the SkipSelf decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * SkipSelf decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Type of the Host decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Host decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Host = makeParamDecorator('Host');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SOURCE = '__source';\nvar _THROW_IF_NOT_FOUND = new Object();\nvar THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nvar _NullInjector = /** @class */ (function () {\n    function _NullInjector() {\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    _NullInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n        }\n        return notFoundValue;\n    };\n    return _NullInjector;\n}());\n/**\n * \\@whatItDoes Injector interface\n * \\@howToUse\n * ```\n * const injector: Injector = ...;\n * injector.get(...);\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n * \\@stable\n * @abstract\n */\nvar Injector = /** @class */ (function () {\n    function Injector() {\n    }\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     */\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} options\n     * @param {?=} parent\n     * @return {?}\n     */\n    Injector.create = /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} options\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (options, parent) {\n        if (Array.isArray(options)) {\n            return new StaticInjector(options, parent);\n        }\n        else {\n            return new StaticInjector(options.providers, options.parent, options.name || null);\n        }\n    };\n    Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    Injector.NULL = new _NullInjector();\n    return Injector;\n}());\nvar IDENT = function (value) {\n    return value;\n};\nvar EMPTY = /** @type {?} */ ([]);\nvar CIRCULAR = IDENT;\nvar MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\nvar GET_PROPERTY_NAME$1 = /** @type {?} */ ({});\nvar ɵ2 = GET_PROPERTY_NAME$1;\nvar USE_VALUE$1 = getClosureSafeProperty$1({ provide: String, useValue: ɵ2 });\nvar NG_TOKEN_PATH = 'ngTokenPath';\nvar NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nvar NULL_INJECTOR = Injector.NULL;\nvar NEW_LINE = /\\n/gm;\nvar NO_NEW_LINE = 'ɵ';\nvar StaticInjector = /** @class */ (function () {\n    function StaticInjector(providers, parent, source) {\n        if (parent === void 0) { parent = NULL_INJECTOR; }\n        if (source === void 0) { source = null; }\n        this.parent = parent;\n        this.source = source;\n        var /** @type {?} */ records = this._records = new Map();\n        records.set(Injector, /** @type {?} */ ({ token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false }));\n        recursivelyProcessProviders(records, providers);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @param {?=} flags\n     * @return {?}\n     */\n    StaticInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @param {?=} flags\n     * @return {?}\n     */\n    function (token, notFoundValue, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var /** @type {?} */ record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ tokenPath = e[NG_TEMP_TOKEN_PATH];\n            if (token[SOURCE]) {\n                tokenPath.unshift(token[SOURCE]);\n            }\n            e.message = formatError('\\n' + e.message, tokenPath, this.source);\n            e[NG_TOKEN_PATH] = tokenPath;\n            e[NG_TEMP_TOKEN_PATH] = null;\n            throw e;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    StaticInjector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokens = /** @type {?} */ ([]), /** @type {?} */ records = this._records;\n        records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n        return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n    };\n    return StaticInjector;\n}());\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction resolveProvider(provider) {\n    var /** @type {?} */ deps = computeDeps(provider);\n    var /** @type {?} */ fn = IDENT;\n    var /** @type {?} */ value = EMPTY;\n    var /** @type {?} */ useNew = false;\n    var /** @type {?} */ provide = resolveForwardRef(provider.provide);\n    if (USE_VALUE$1 in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = (/** @type {?} */ (provider)).useValue;\n    }\n    else if ((/** @type {?} */ (provider)).useFactory) {\n        fn = (/** @type {?} */ (provider)).useFactory;\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        // Just use IDENT\n    }\n    else if ((/** @type {?} */ (provider)).useClass) {\n        useNew = true;\n        fn = resolveForwardRef((/** @type {?} */ (provider)).useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps: deps, fn: fn, useNew: useNew, value: value };\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\n/**\n * @param {?} records\n * @param {?} provider\n * @return {?}\n */\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (var /** @type {?} */ i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            // At this point we have what looks like a provider: {provide: ?, ....}\n            var /** @type {?} */ token = resolveForwardRef(provider.provide);\n            var /** @type {?} */ resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                // This is a multi provider.\n                var /** @type {?} */ multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = /** @type {?} */ ({\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    }));\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n            }\n            var /** @type {?} */ record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @param {?} flags\n * @return {?}\n */\nfunction tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue, flags);\n    }\n    catch (/** @type {?} */ e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        var /** @type {?} */ path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path.unshift(token);\n        if (record && record.value == CIRCULAR) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @param {?} flags\n * @return {?}\n */\nfunction resolveToken(token, record, records, parent, notFoundValue, flags) {\n    var /** @type {?} */ value;\n    if (record && !(flags & 1 /* SkipSelf */)) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR) {\n            throw Error(NO_NEW_LINE + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR;\n            var /** @type {?} */ obj = undefined;\n            var /** @type {?} */ useNew = record.useNew;\n            var /** @type {?} */ fn = record.fn;\n            var /** @type {?} */ depRecords = record.deps;\n            var /** @type {?} */ deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (var /** @type {?} */ i = 0; i < depRecords.length; i++) {\n                    var /** @type {?} */ depRecord = depRecords[i];\n                    var /** @type {?} */ options = depRecord.options;\n                    var /** @type {?} */ childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, childRecord, records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                }\n            }\n            record.value = value = useNew ? new ((_a = (/** @type {?} */ (fn))).bind.apply(_a, [void 0].concat(deps)))() : fn.apply(obj, deps);\n        }\n    }\n    else if (!(flags & 2 /* Self */)) {\n        value = parent.get(token, notFoundValue, 0 /* Default */);\n    }\n    return value;\n    var _a;\n}\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction computeDeps(provider) {\n    var /** @type {?} */ deps = EMPTY;\n    var /** @type {?} */ providerDeps = (/** @type {?} */ (provider)).deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (var /** @type {?} */ i = 0; i < providerDeps.length; i++) {\n            var /** @type {?} */ options = 6;\n            var /** @type {?} */ token = resolveForwardRef(providerDeps[i]);\n            if (token instanceof Array) {\n                for (var /** @type {?} */ j = 0, /** @type {?} */ annotations = token; j < annotations.length; j++) {\n                    var /** @type {?} */ annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject) {\n                        token = (/** @type {?} */ (annotation)).token;\n                    }\n                    else {\n                        token = resolveForwardRef(annotation);\n                    }\n                }\n            }\n            deps.push({ token: token, options: options });\n        }\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        var /** @type {?} */ token = resolveForwardRef((/** @type {?} */ (provider)).useExisting);\n        deps = [{ token: token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE$1 in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @param {?=} source\n * @return {?}\n */\nfunction formatError(text, obj, source) {\n    if (source === void 0) { source = null; }\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    var /** @type {?} */ context = stringify(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        var /** @type {?} */ parts = /** @type {?} */ ([]);\n        for (var /** @type {?} */ key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                var /** @type {?} */ value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n            }\n        }\n        context = \"{\" + parts.join(', ') + \"}\";\n    }\n    return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj));\n}\n/**\n * @template T\n * @param {?} objWithPropertyToExtract\n * @return {?}\n */\nfunction getClosureSafeProperty$1(objWithPropertyToExtract) {\n    for (var /** @type {?} */ key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME$1) {\n            return key;\n        }\n    }\n    throw Error('!prop');\n}\nvar _currentInjector = null;\n/**\n * @param {?} injector\n * @return {?}\n */\nfunction setCurrentInjector(injector) {\n    var /** @type {?} */ former = _currentInjector;\n    _currentInjector = injector;\n    return former;\n}\n/**\n * @template T\n * @param {?} token\n * @param {?=} notFoundValue\n * @param {?=} flags\n * @return {?}\n */\nfunction inject(token, notFoundValue, flags) {\n    if (flags === void 0) { flags = 0 /* Default */; }\n    if (_currentInjector === null) {\n        throw new Error(\"inject() must be called from an injection context\");\n    }\n    return _currentInjector.get(token, notFoundValue, flags);\n}\n/**\n * @param {?} types\n * @return {?}\n */\nfunction injectArgs(types) {\n    var /** @type {?} */ args = [];\n    for (var /** @type {?} */ i = 0; i < types.length; i++) {\n        var /** @type {?} */ arg = types[i];\n        if (Array.isArray(arg)) {\n            if (arg.length === 0) {\n                throw new Error('Arguments array must have arguments.');\n            }\n            var /** @type {?} */ type = undefined;\n            var /** @type {?} */ defaultValue = undefined;\n            var /** @type {?} */ flags = 0;\n            for (var /** @type {?} */ j = 0; j < arg.length; j++) {\n                var /** @type {?} */ meta = arg[j];\n                if (meta instanceof Optional || meta.__proto__.ngMetadataName === 'Optional') {\n                    defaultValue = null;\n                }\n                else if (meta instanceof SkipSelf || meta.__proto__.ngMetadataName === 'SkipSelf') {\n                    flags |= 1 /* SkipSelf */;\n                }\n                else if (meta instanceof Self || meta.__proto__.ngMetadataName === 'Self') {\n                    flags |= 2 /* Self */;\n                }\n                else if (meta instanceof Inject) {\n                    type = meta.token;\n                }\n                else {\n                    type = meta;\n                }\n            }\n            args.push(inject(/** @type {?} */ ((type)), defaultValue, 0 /* Default */));\n        }\n        else {\n            args.push(inject(arg));\n        }\n    }\n    return args;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GET_PROPERTY_NAME = /** @type {?} */ ({});\nvar ɵ0 = GET_PROPERTY_NAME;\nvar USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ0 }, GET_PROPERTY_NAME);\n/**\n * Type of the Injectable decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\nvar EMPTY_ARRAY = [];\n/**\n * @param {?} type\n * @param {?=} provider\n * @return {?}\n */\nfunction convertInjectableProviderToFactory(type, provider) {\n    if (!provider) {\n        var /** @type {?} */ reflectionCapabilities = new ReflectionCapabilities();\n        var /** @type {?} */ deps_1 = reflectionCapabilities.parameters(type);\n        // TODO - convert to flags.\n        return function () { return new (type.bind.apply(type, [void 0].concat(injectArgs(/** @type {?} */ (deps_1)))))(); };\n    }\n    if (USE_VALUE in provider) {\n        var /** @type {?} */ valueProvider_1 = (/** @type {?} */ (provider));\n        return function () { return valueProvider_1.useValue; };\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        var /** @type {?} */ existingProvider_1 = (/** @type {?} */ (provider));\n        return function () { return inject(existingProvider_1.useExisting); };\n    }\n    else if ((/** @type {?} */ (provider)).useFactory) {\n        var /** @type {?} */ factoryProvider_1 = (/** @type {?} */ (provider));\n        return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, injectArgs(factoryProvider_1.deps || EMPTY_ARRAY)); };\n    }\n    else if ((/** @type {?} */ (provider)).useClass) {\n        var /** @type {?} */ classProvider_1 = (/** @type {?} */ (provider));\n        var /** @type {?} */ deps_2 = (/** @type {?} */ (provider)).deps;\n        if (!deps_2) {\n            var /** @type {?} */ reflectionCapabilities = new ReflectionCapabilities();\n            deps_2 = reflectionCapabilities.parameters(type);\n        }\n        return function () {\n            return new ((_a = classProvider_1.useClass).bind.apply(_a, [void 0].concat(injectArgs(deps_2))))();\n            var _a;\n        };\n    }\n    else {\n        var /** @type {?} */ deps_3 = (/** @type {?} */ (provider)).deps;\n        if (!deps_3) {\n            var /** @type {?} */ reflectionCapabilities = new ReflectionCapabilities();\n            deps_3 = reflectionCapabilities.parameters(type);\n        }\n        return function () { return new (type.bind.apply(type, [void 0].concat(injectArgs(/** @type {?} */ ((deps_3))))))(); };\n    }\n}\n/**\n * Define injectable\n *\n * \\@experimental\n * @param {?} opts\n * @return {?}\n */\nfunction defineInjectable(opts) {\n    return opts;\n}\n/**\n * Injectable decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (injectableType, options) {\n    if (options && options.scope) {\n        (/** @type {?} */ (injectableType)).ngInjectableDef = defineInjectable({\n            scope: options.scope,\n            factory: convertInjectableProviderToFactory(injectableType, options)\n        });\n    }\n});\n/**\n * Type representing injectable service.\n *\n * \\@experimental\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * \\@stable\n */\nvar InjectionToken = /** @class */ (function () {\n    function InjectionToken(_desc, options) {\n        this._desc = _desc;\n        /**\n         * \\@internal\n         */\n        this.ngMetadataName = 'InjectionToken';\n        if (options !== undefined) {\n            this.ngInjectableDef = defineInjectable({\n                scope: options.scope,\n                factory: options.factory,\n            });\n        }\n        else {\n            this.ngInjectableDef = undefined;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    InjectionToken.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return \"InjectionToken \" + this._desc; };\n    return InjectionToken;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * \\@NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * \\@experimental\n */\nvar ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Type of the Attribute decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Attribute decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * Base class for query metadata.\n *\n * See {\\@link ContentChildren}, {\\@link ContentChild}, {\\@link ViewChildren}, {\\@link ViewChild} for\n * more information.\n *\n * \\@stable\n * @abstract\n */\nvar Query = /** @class */ (function () {\n    function Query() {\n    }\n    return Query;\n}());\n/**\n * Type of the ContentChildren decorator / constructor function.\n *\n * See {\\@link ContentChildren}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * ContentChildren decorator and metadata.\n *\n *  \\@stable\n *  \\@Annotation\n */\nvar ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n}, Query);\n/**\n * Type of the ContentChild decorator / constructor function.\n *\n *\n * \\@stable\n * @record\n */\n\n/**\n * ContentChild decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n}, Query);\n/**\n * Type of the ViewChildren decorator / constructor function.\n *\n * See {\\@link ViewChildren}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * ViewChildren decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n}, Query);\n/**\n * Type of the ViewChild decorator / constructor function.\n *\n * See {\\@link ViewChild}\n *\n * \\@stable\n * @record\n */\n\n/**\n * ViewChild decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n}, Query);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    /**\n       * `OnPush` means that the change detector's mode will be initially set to `CheckOnce`.\n       */\n    OnPush: 0,\n    /**\n       * `Default` means that the change detector's mode will be initially set to `CheckAlways`.\n       */\n    Default: 1,\n};\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\n/** @enum {number} */\nvar ChangeDetectorStatus = {\n    /**\n       * `CheckOnce` means that after calling detectChanges the mode of the change detector\n       * will become `Checked`.\n       */\n    CheckOnce: 0,\n    /**\n       * `Checked` means that the change detector should be skipped until its mode changes to\n       * `CheckOnce`.\n       */\n    Checked: 1,\n    /**\n       * `CheckAlways` means that after calling detectChanges the mode of the change detector\n       * will remain `CheckAlways`.\n       */\n    CheckAlways: 2,\n    /**\n       * `Detached` means that the change detector sub tree is not a part of the main tree and\n       * should be skipped.\n       */\n    Detached: 3,\n    /**\n       * `Errored` means that the change detector encountered an error checking a binding\n       * or calling a directive lifecycle method and is now in an inconsistent state. Change\n       * detectors in this state will no longer detect changes.\n       */\n    Errored: 4,\n    /**\n       * `Destroyed` means that the change detector is destroyed.\n       */\n    Destroyed: 5,\n};\nChangeDetectorStatus[ChangeDetectorStatus.CheckOnce] = \"CheckOnce\";\nChangeDetectorStatus[ChangeDetectorStatus.Checked] = \"Checked\";\nChangeDetectorStatus[ChangeDetectorStatus.CheckAlways] = \"CheckAlways\";\nChangeDetectorStatus[ChangeDetectorStatus.Detached] = \"Detached\";\nChangeDetectorStatus[ChangeDetectorStatus.Errored] = \"Errored\";\nChangeDetectorStatus[ChangeDetectorStatus.Destroyed] = \"Destroyed\";\n/**\n * @param {?} changeDetectionStrategy\n * @return {?}\n */\nfunction isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n    return changeDetectionStrategy == null ||\n        changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Directive decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Directive decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Directive = makeDecorator('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * Type of the Component decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Component decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Component = makeDecorator('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n}, Directive);\n/**\n * Type of the Pipe decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Pipe decorator and metadata.\n *\n * Use the `\\@Pipe` annotation to declare that a given class is a pipe. A pipe\n * class must also implement {\\@link PipeTransform} interface.\n *\n * To use the pipe include a reference to the pipe class in\n * {\\@link NgModule#declarations}.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * Type of the Input decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Input decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * Type of the Output decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Output decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * Type of the HostBinding decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * HostBinding decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * Type of the HostListener decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * HostListener decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A wrapper around a module that also includes the providers.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Interface for schema definitions in \\@NgModules.\n *\n * \\@experimental\n * @record\n */\n\n/**\n * Defines a schema that will allow:\n * - any non-Angular elements with a `-` in their name,\n * - any properties on elements with a `-` in their name which is the common rule for custom\n * elements.\n *\n * \\@stable\n */\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\n/**\n * Defines a schema that will allow any property on any element.\n *\n * \\@experimental\n */\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\n/**\n * Type of the NgModule decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * NgModule decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar ViewEncapsulation = {\n    /**\n       * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n       * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n       * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n       * selectors.\n       *\n       * This is the default option.\n       */\n    Emulated: 0,\n    /**\n       * Use the native encapsulation mechanism of the renderer.\n       *\n       * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n       * creating a ShadowRoot for Component's Host Element.\n       */\n    Native: 1,\n    /**\n       * Don't provide any template or style encapsulation.\n       */\n    None: 2,\n};\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents the version of Angular\n *\n * \\@stable\n */\nvar Version = /** @class */ (function () {\n    function Version(full) {\n        this.full = full;\n        this.major = full.split('.')[0];\n        this.minor = full.split('.')[1];\n        this.patch = full.split('.').slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * \\@stable\n */\nvar VERSION = new Version('6.0.0-beta.7-c499c8f');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nvar ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nvar ERROR_LOGGER = 'ngErrorLogger';\n/**\n * @param {?} error\n * @return {?}\n */\n\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getDebugContext(error) {\n    return (/** @type {?} */ (error))[ERROR_DEBUG_CONTEXT];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getOriginalError(error) {\n    return (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getErrorLogger(error) {\n    return (/** @type {?} */ (error))[ERROR_LOGGER] || defaultErrorLogger;\n}\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nfunction defaultErrorLogger(console) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    console.error.apply(console, values);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a hook for centralized exception handling.\n *\n * \\@description\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * \\@NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * \\@stable\n */\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        /**\n         * \\@internal\n         */\n        this._console = console;\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype.handleError = /**\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        var /** @type {?} */ originalError = this._findOriginalError(error);\n        var /** @type {?} */ context = this._findContext(error);\n        // Note: Browser consoles show the place from where console.error was called.\n        // We can use this to give users additional information about the error.\n        var /** @type {?} */ errorLogger = getErrorLogger(error);\n        errorLogger(this._console, \"ERROR\", error);\n        if (originalError) {\n            errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findContext = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findOriginalError = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        var /** @type {?} */ e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    };\n    return ErrorHandler;\n}());\n/**\n * @param {?} message\n * @param {?} originalError\n * @return {?}\n */\nfunction wrappedError(message, originalError) {\n    var /** @type {?} */ msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction findFirstClosedCycle(keys) {\n    var /** @type {?} */ res = [];\n    for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        var /** @type {?} */ reversed = findFirstClosedCycle(keys.slice().reverse());\n        var /** @type {?} */ tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\n/**\n * @record\n */\n\n/**\n * @param {?} injector\n * @param {?} key\n * @param {?} constructResolvingMessage\n * @param {?=} originalError\n * @return {?}\n */\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    var /** @type {?} */ keys = [key];\n    var /** @type {?} */ errMsg = constructResolvingMessage(keys);\n    var /** @type {?} */ error = /** @type {?} */ ((originalError ? wrappedError(errMsg, originalError) : Error(errMsg)));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n/**\n * @this {?}\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n *\n * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify(keys[0].token);\n        return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n * @param {?} injector\n * @param {?} originalException\n * @param {?} originalStack\n * @param {?} key\n * @return {?}\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify(keys[0].token);\n        return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n    }, originalException);\n}\n/**\n * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n * creation.\n *\n * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n * @param {?} provider\n * @return {?}\n */\nfunction invalidProviderError(provider) {\n    return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n * \\@stable\n * @param {?} typeOrFunc\n * @param {?} params\n * @return {?}\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    var /** @type {?} */ signature = [];\n    for (var /** @type {?} */ i = 0, /** @type {?} */ ii = params.length; i < ii; i++) {\n        var /** @type {?} */ parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n * \\@stable\n * @param {?} index\n * @return {?}\n */\nfunction outOfBoundsError(index) {\n    return Error(\"Index \" + index + \" is out-of-bounds.\");\n}\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n * @param {?} provider1\n * @param {?} provider2\n * @return {?}\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nvar ReflectiveKey = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n        this.displayName = stringify(this.token);\n    }\n    /**\n     * Retrieves a `Key` for a token.\n     */\n    /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    ReflectiveKey.get = /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        return _globalKeyRegistry.get(resolveForwardRef(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @returns the number of keys registered in the system.\n         */\n        get: /**\n         * @return {?} the number of keys registered in the system.\n         */\n        function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\nvar KeyRegistry = /** @class */ (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    KeyRegistry.prototype.get = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return /** @type {?} */ ((this._allKeys.get(token)));\n        }\n        var /** @type {?} */ newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nvar _globalKeyRegistry = new KeyRegistry();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar Reflector = /** @class */ (function () {\n    function Reflector(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    /**\n     * @param {?} caps\n     * @return {?}\n     */\n    Reflector.prototype.updateCapabilities = /**\n     * @param {?} caps\n     * @return {?}\n     */\n    function (caps) { this.reflectionCapabilities = caps; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.factory = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.factory(type); };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.parameters = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    Reflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.getter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.setter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.method(name); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.importUri(type); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.resourceUri(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    Reflector.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.resolveEnum = /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    };\n    return Reflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The {\\@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nvar reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar ReflectiveDependency = /** @class */ (function () {\n    function ReflectiveDependency(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    ReflectiveDependency.fromKey = /**\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        return new ReflectiveDependency(key, false, null);\n    };\n    return ReflectiveDependency;\n}());\nvar _EMPTY_LIST = [];\n/**\n * An internal resolved representation of a {\\@link Provider} used by the {\\@link Injector}.\n *\n * It is usually created automatically by `Injector.resolveAndCreate`.\n *\n * It can be created manually, as follows:\n *\n * ### Example ([live demo](http://plnkr.co/edit/RfEnhh8kUEI0G3qsnIeT?p%3Dpreview&p=preview))\n *\n * ```typescript\n * var resolvedProviders = Injector.resolve([{ provide: 'message', useValue: 'Hello' }]);\n * var injector = Injector.fromResolvedProviders(resolvedProviders);\n *\n * expect(injector.get('message')).toEqual('Hello');\n * ```\n *\n * \\@experimental\n * @record\n */\n\nvar ResolvedReflectiveProvider_ = /** @class */ (function () {\n    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n        this.resolvedFactory = this.resolvedFactories[0];\n    }\n    return ResolvedReflectiveProvider_;\n}());\n/**\n * An internal resolved representation of a factory function created by resolving {\\@link\n * Provider}.\n * \\@experimental\n */\nvar ResolvedReflectiveFactory = /** @class */ (function () {\n    function ResolvedReflectiveFactory(factory, dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n    return ResolvedReflectiveFactory;\n}());\n/**\n * Resolve a single provider.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveFactory(provider) {\n    var /** @type {?} */ factoryFn;\n    var /** @type {?} */ resolvedDeps;\n    if (provider.useClass) {\n        var /** @type {?} */ useClass = resolveForwardRef(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = function (aliasInstance) { return aliasInstance; };\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = function () { return provider.useValue; };\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the {\\@link Provider} into {\\@link ResolvedProvider}.\n *\n * {\\@link Injector} internally only uses {\\@link ResolvedProvider}, {\\@link Provider} contains\n * convenience provider syntax.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n * @param {?} providers\n * @return {?}\n */\nfunction resolveReflectiveProviders(providers) {\n    var /** @type {?} */ normalized = _normalizeProviders(providers, []);\n    var /** @type {?} */ resolved = normalized.map(resolveReflectiveProvider);\n    var /** @type {?} */ resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where\n * each key is contained exactly once and multi providers\n * have been merged.\n * @param {?} providers\n * @param {?} normalizedProvidersMap\n * @return {?}\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n        var /** @type {?} */ provider = providers[i];\n        var /** @type {?} */ existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (var /** @type {?} */ j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            var /** @type {?} */ resolvedProvider = void 0;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\n/**\n * @param {?} providers\n * @param {?} res\n * @return {?}\n */\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(function (b) {\n        if (b instanceof Type) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && (/** @type {?} */ (b)).provide !== undefined) {\n            res.push(/** @type {?} */ (b));\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\n/**\n * @param {?} typeOrFunc\n * @param {?=} dependencies\n * @return {?}\n */\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        var /** @type {?} */ params_1 = dependencies.map(function (t) { return [t]; });\n        return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n    }\n}\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nfunction _dependenciesFor(typeOrFunc) {\n    var /** @type {?} */ params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(function (p) { return p == null; })) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} metadata\n * @param {?} params\n * @return {?}\n */\nfunction _extractToken(typeOrFunc, metadata, params) {\n    var /** @type {?} */ token = null;\n    var /** @type {?} */ optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    var /** @type {?} */ visibility = null;\n    for (var /** @type {?} */ i = 0; i < metadata.length; ++i) {\n        var /** @type {?} */ paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\n/**\n * @param {?} token\n * @param {?} optional\n * @param {?} visibility\n * @return {?}\n */\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Threshold for the dynamic version\nvar UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * \\@Injectable()\n * class Engine {\n * }\n *\n * \\@Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @abstract\n */\nvar ReflectiveInjector = /** @class */ (function () {\n    function ReflectiveInjector() {\n    }\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n     */\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector.resolve = /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        return resolveReflectiveProviders(providers);\n    };\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {@link ReflectiveInjector#resolve resolve} and\n     * {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n     */\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve resolve} and\n     * {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.resolveAndCreate = /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve resolve} and\n     * {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    };\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @experimental\n     */\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.fromResolvedProviders = /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    };\n    return ReflectiveInjector;\n}());\nvar ReflectiveInjector_ = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveInjector_(_providers, _parent) {\n        /**\n         * \\@internal\n         */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this.parent = _parent || null;\n        var /** @type {?} */ len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndCreateChild = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.createChildFromResolved = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        var /** @type {?} */ inj = new ReflectiveInjector_(providers);\n        (/** @type {?} */ (inj)).parent = this;\n        return inj;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndInstantiate = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.instantiateResolved = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.getProviderAtIndex = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._new = /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getMaxNumberOfObjects = /**\n     * @return {?}\n     */\n    function () { return this.objs.length; };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.multiProvider) {\n            var /** @type {?} */ res = new Array(provider.resolvedFactories.length);\n            for (var /** @type {?} */ i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiate = /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    function (provider, ResolvedReflectiveFactory$$1) {\n        var _this = this;\n        var /** @type {?} */ factory = ResolvedReflectiveFactory$$1.factory;\n        var /** @type {?} */ deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n        }\n        catch (/** @type {?} */ e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        var /** @type {?} */ obj;\n        try {\n            obj = factory.apply(void 0, deps);\n        }\n        catch (/** @type {?} */ e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    };\n    /**\n     * @param {?} dep\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByReflectiveDependency = /**\n     * @param {?} dep\n     * @return {?}\n     */\n    function (dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    };\n    /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKey = /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    };\n    /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getObjByKeyId = /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    function (keyId) {\n        for (var /** @type {?} */ i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._throwOrNull = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeySelf = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        var /** @type {?} */ obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeyDefault = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    function (key, notFoundValue, visibility) {\n        var /** @type {?} */ inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this.parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            var /** @type {?} */ inj_ = /** @type {?} */ (inj);\n            var /** @type {?} */ obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_.parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                .join(', ');\n            return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.displayName; };\n    ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n    return ReflectiveInjector_;\n}());\n/**\n * @param {?} injector\n * @param {?} fn\n * @return {?}\n */\nfunction _mapProviders(injector, fn) {\n    var /** @type {?} */ res = new Array(injector._providers.length);\n    for (var /** @type {?} */ i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A scope which targets the root injector.\n *\n * When specified as the `scope` parameter to `\\@Injectable` or `InjectionToken`, this special\n * scope indicates the provider for the service or token being configured belongs in the root\n * injector. This is loosely equivalent to the convention of having a `forRoot()` static\n * function within a module that configures the provider, and expecting users to only import that\n * module via its `forRoot()` function in the root injector.\n *\n * \\@experimental\n */\nvar APP_ROOT_SCOPE = /** @type {?} */ (new InjectionToken('The presence of this token marks an injector as being the root injector.'));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n * @param {?} obj\n * @return {?}\n */\nfunction isObservable(obj) {\n    // TODO use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n    return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A function that will be executed when an application is initialized.\n * \\@experimental\n */\nvar APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n *\n * \\@experimental\n */\nvar ApplicationInitStatus = /** @class */ (function () {\n    function ApplicationInitStatus(appInits) {\n        var _this = this;\n        this.appInits = appInits;\n        this.initialized = false;\n        this.done = false;\n        this.donePromise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationInitStatus.prototype.runInitializers = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.initialized) {\n            return;\n        }\n        var /** @type {?} */ asyncInitPromises = [];\n        var /** @type {?} */ complete = function () {\n            (/** @type {?} */ (_this)).done = true;\n            _this.resolve();\n        };\n        if (this.appInits) {\n            for (var /** @type {?} */ i = 0; i < this.appInits.length; i++) {\n                var /** @type {?} */ initResult = this.appInits[i]();\n                if (isPromise(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    };\n    ApplicationInitStatus.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationInitStatus.ctorParameters = function () { return [\n        { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional },] },\n    ]; };\n    return ApplicationInitStatus;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {\\@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {\\@link Injector}\n * using this token.\n * \\@experimental\n */\nvar APP_ID = new InjectionToken('AppId');\n/**\n * @return {?}\n */\nfunction _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * \\@experimental\n */\nvar APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: /** @type {?} */ ([]),\n};\n/**\n * @return {?}\n */\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * \\@experimental\n */\nvar PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * \\@experimental\n */\nvar PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * \\@experimental\n */\nvar APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * \\@experimental\n */\nvar PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Console = /** @class */ (function () {\n    function Console() {\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.log = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    };\n    // Note: for reporting errors use `DOM.logError()` as it is platform specific\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.warn = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    };\n    Console.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Console.ctorParameters = function () { return []; };\n    return Console;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * \\@experimental\n */\nvar ModuleWithComponentFactories = /** @class */ (function () {\n    function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n        this.ngModuleFactory = ngModuleFactory;\n        this.componentFactories = componentFactories;\n    }\n    return ModuleWithComponentFactories;\n}());\n/**\n * @return {?}\n */\nfunction _throwError() {\n    throw new Error(\"Runtime compiler is not loaded\");\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {\\@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `\\@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n * \\@stable\n */\nvar Compiler = /** @class */ (function () {\n    function Compiler() {\n    }\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     */\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleSync = /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Compiles the given NgModule and all of its components\n     */\n    /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAsync = /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsSync = /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Clears all caches.\n     */\n    /**\n     * Clears all caches.\n     * @return {?}\n     */\n    Compiler.prototype.clearCache = /**\n     * Clears all caches.\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Clears the cache for the given component/ngModule.\n     */\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    Compiler.prototype.clearCacheFor = /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { };\n    Compiler.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Compiler.ctorParameters = function () { return []; };\n    return Compiler;\n}());\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * \\@experimental\n */\nvar COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * \\@experimental\n * @abstract\n */\nvar CompilerFactory = /** @class */ (function () {\n    function CompilerFactory() {\n    }\n    return CompilerFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n * \\@stable\n * @abstract\n */\nvar ComponentRef = /** @class */ (function () {\n    function ComponentRef() {\n    }\n    return ComponentRef;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactory = /** @class */ (function () {\n    function ComponentFactory() {\n    }\n    return ComponentFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} component\n * @return {?}\n */\nfunction noComponentFactoryError(component) {\n    var /** @type {?} */ error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT] = component;\n    return error;\n}\nvar ERROR_COMPONENT = 'ngComponent';\n/**\n * @param {?} error\n * @return {?}\n */\n\nvar _NullComponentFactoryResolver = /** @class */ (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        throw noComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactoryResolver = /** @class */ (function () {\n    function ComponentFactoryResolver() {\n    }\n    ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n    return ComponentFactoryResolver;\n}());\nvar CodegenComponentFactoryResolver = /** @class */ (function () {\n    function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n        this._parent = _parent;\n        this._ngModule = _ngModule;\n        this._factories = new Map();\n        for (var /** @type {?} */ i = 0; i < factories.length; i++) {\n            var /** @type {?} */ factory = factories[i];\n            this._factories.set(factory.componentType, factory);\n        }\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    CodegenComponentFactoryResolver.prototype.resolveComponentFactory = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        var /** @type {?} */ factory = this._factories.get(component);\n        if (!factory && this._parent) {\n            factory = this._parent.resolveComponentFactory(component);\n        }\n        if (!factory) {\n            throw noComponentFactoryError(component);\n        }\n        return new ComponentFactoryBoundToModule(factory, this._ngModule);\n    };\n    return CodegenComponentFactoryResolver;\n}());\nvar ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n    __extends(ComponentFactoryBoundToModule, _super);\n    function ComponentFactoryBoundToModule(factory, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.ngModule = ngModule;\n        _this.selector = factory.selector;\n        _this.componentType = factory.componentType;\n        _this.ngContentSelectors = factory.ngContentSelectors;\n        _this.inputs = factory.inputs;\n        _this.outputs = factory.outputs;\n        return _this;\n    }\n    /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactoryBoundToModule.prototype.create = /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    };\n    return ComponentFactoryBoundToModule;\n}(ComponentFactory));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * \\@stable\n * @abstract\n */\nvar NgModuleRef = /** @class */ (function () {\n    function NgModuleRef() {\n    }\n    return NgModuleRef;\n}());\n/**\n * @record\n */\n\n/**\n * \\@experimental\n * @abstract\n */\nvar NgModuleFactory = /** @class */ (function () {\n    function NgModuleFactory() {\n    }\n    return NgModuleFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * \\@experimental\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar trace;\nvar events;\n/**\n * @return {?}\n */\nfunction detectWTF() {\n    var /** @type {?} */ wtf = (/** @type {?} */ (_global /** TODO #9100 */) /** TODO #9100 */)['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nfunction createScope(signature, flags) {\n    if (flags === void 0) { flags = null; }\n    return events.createScope(signature, flags);\n}\n/**\n * @template T\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nfunction leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\n/**\n * @param {?} rangeType\n * @param {?} action\n * @return {?}\n */\nfunction startTimeRange(rangeType, action) {\n    return trace.beginTimeRange(rangeType, action);\n}\n/**\n * @param {?} range\n * @return {?}\n */\nfunction endTimeRange(range) {\n    trace.endTimeRange(range);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * True if WTF is enabled.\n */\nvar wtfEnabled = detectWTF();\n/**\n * @param {?=} arg0\n * @param {?=} arg1\n * @return {?}\n */\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * \\@experimental\n */\nvar wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * \\@experimental\n */\nvar wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * \\@experimental\n */\nvar wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * \\@experimental\n */\nvar wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * \\@Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n * \\@stable\n */\nvar EventEmitter = /** @class */ (function (_super) {\n    __extends(EventEmitter, _super);\n    /**\n     * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n     * delivers events synchronously or asynchronously.\n     *\n     * @param isAsync By default, events are delivered synchronously (default value: `false`).\n     * Set to `true` for asynchronous event delivery.\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    EventEmitter.prototype.emit = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) { _super.prototype.next.call(this, value); };\n    /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    EventEmitter.prototype.subscribe = /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    function (generatorOrNext, error, complete) {\n        var /** @type {?} */ schedulerFn;\n        var /** @type {?} */ errorFn = function (err) { return null; };\n        var /** @type {?} */ completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                function (value) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        var /** @type {?} */ sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n        if (generatorOrNext instanceof rxjs_Subscription.Subscription) {\n            generatorOrNext.add(sink);\n        }\n        return sink;\n    };\n    return EventEmitter;\n}(rxjs_Subject.Subject));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n *\n * \\@Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nvar NgZone = /** @class */ (function () {\n    function NgZone(_a) {\n        var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueued in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error(\"In this configuration Angular requires Zone.js\");\n        }\n        Zone.assertZonePatched();\n        var /** @type {?} */ self = /** @type {?} */ ((this));\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if ((/** @type {?} */ (Zone))['wtfZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['wtfZoneSpec']);\n        }\n        if (enableLongStackTrace && (/** @type {?} */ (Zone))['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    /**\n     * @return {?}\n     */\n    NgZone.isInAngularZone = /**\n     * @return {?}\n     */\n    function () { return Zone.current.get('isAngularZone') === true; };\n    /**\n     * @return {?}\n     */\n    NgZone.assertInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgZone.assertNotInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.run = /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.run(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    NgZone.prototype.runTask = /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs, name) {\n        var /** @type {?} */ zone = (/** @type {?} */ ((this)))._inner;\n        var /** @type {?} */ task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n        try {\n            return /** @type {?} */ (zone.runTask(task, applyThis, applyArgs));\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    };\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     */\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.runGuarded = /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.runGuarded(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n     */\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NgZone.prototype.runOutsideAngular = /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._outer.run(fn));\n    };\n    return NgZone;\n}());\n/**\n * @return {?}\n */\nfunction noop() { }\nvar EMPTY_PAYLOAD = {};\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: /** @type {?} */ ({ 'isAngularZone': true }),\n        onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: function (delegate, current, target, hasTaskState) {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: function (delegate, current, target, error) {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n            return false;\n        }\n    });\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nvar NoopNgZone = /** @class */ (function () {\n    function NoopNgZone() {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        this.isStable = true;\n        this.onUnstable = new EventEmitter();\n        this.onMicrotaskEmpty = new EventEmitter();\n        this.onStable = new EventEmitter();\n        this.onError = new EventEmitter();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.run = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runGuarded = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runOutsideAngular = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runTask = /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    return NoopNgZone;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * \\@experimental\n */\nvar Testability = /** @class */ (function () {\n    function Testability(_ngZone) {\n        this._ngZone = _ngZone;\n        /**\n         * \\@internal\n         */\n        this._pendingCount = 0;\n        /**\n         * \\@internal\n         */\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * \\@internal\n         */\n        this._didWork = false;\n        /**\n         * \\@internal\n         */\n        this._callbacks = [];\n        this._watchAngularEvents();\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._watchAngularEvents = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._ngZone.onUnstable.subscribe({\n            next: function () {\n                _this._didWork = true;\n                _this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.subscribe({\n                next: function () {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(function () {\n                        _this._isZoneStable = true;\n                        _this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    };\n    /**\n     * Increases the number of pending request\n     */\n    /**\n     * Increases the number of pending request\n     * @return {?}\n     */\n    Testability.prototype.increasePendingRequestCount = /**\n     * Increases the number of pending request\n     * @return {?}\n     */\n    function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    /**\n     * Decreases the number of pending request\n     */\n    /**\n     * Decreases the number of pending request\n     * @return {?}\n     */\n    Testability.prototype.decreasePendingRequestCount = /**\n     * Decreases the number of pending request\n     * @return {?}\n     */\n    function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    /**\n     * Whether an associated application is stable\n     */\n    /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    Testability.prototype.isStable = /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    function () {\n        return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._runCallbacksIfReady = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    (/** @type {?} */ ((_this._callbacks.pop())))(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            // Not Ready\n            this._didWork = true;\n        }\n    };\n    /**\n     * Run callback when the application is stable\n     * @param callback function to be called after the application is stable\n     */\n    /**\n     * Run callback when the application is stable\n     * @param {?} callback function to be called after the application is stable\n     * @return {?}\n     */\n    Testability.prototype.whenStable = /**\n     * Run callback when the application is stable\n     * @param {?} callback function to be called after the application is stable\n     * @return {?}\n     */\n    function (callback) {\n        this._callbacks.push(callback);\n        this._runCallbacksIfReady();\n    };\n    /**\n     * Get the number of pending requests\n     */\n    /**\n     * Get the number of pending requests\n     * @return {?}\n     */\n    Testability.prototype.getPendingRequestCount = /**\n     * Get the number of pending requests\n     * @return {?}\n     */\n    function () { return this._pendingCount; };\n    /**\n     * Find providers by name\n     * @param using The root element to search from\n     * @param provider The name of binding variable\n     * @param exactMatch Whether using exactMatch\n     */\n    /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    Testability.prototype.findProviders = /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    Testability.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Testability.ctorParameters = function () { return [\n        { type: NgZone, },\n    ]; };\n    return Testability;\n}());\n/**\n * A global registry of {\\@link Testability} instances for specific elements.\n * \\@experimental\n */\nvar TestabilityRegistry = /** @class */ (function () {\n    function TestabilityRegistry() {\n        /**\n         * \\@internal\n         */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param token token of application, root element\n     * @param testability Testability hook\n     */\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.registerApplication = /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    /**\n     * Unregisters an application.\n     * @param token token of application, root element\n     */\n    /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterApplication = /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    function (token) { this._applications.delete(token); };\n    /**\n     * Unregisters all applications\n     */\n    /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterAllApplications = /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    function () { this._applications.clear(); };\n    /**\n     * Get a testability hook associated with the application\n     * @param elem root element\n     */\n    /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getTestability = /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    function (elem) { return this._applications.get(elem) || null; };\n    /**\n     * Get all registered testabilities\n     */\n    /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllTestabilities = /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.values()); };\n    /**\n     * Get all registered applications(root elements)\n     */\n    /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllRootElements = /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.keys()); };\n    /**\n     * Find testability of a node in the Tree\n     * @param elem node\n     * @param findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     */\n    /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.findTestabilityInTree = /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    TestabilityRegistry.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    TestabilityRegistry.ctorParameters = function () { return []; };\n    return TestabilityRegistry;\n}());\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n *\n * \\@experimental Testability apis are primarily intended to be used by e2e test tool vendors like\n * the Protractor team.\n * @record\n */\n\nvar _NoopGetTestability = /** @class */ (function () {\n    function _NoopGetTestability() {\n    }\n    /**\n     * @param {?} registry\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.addToWindow = /**\n     * @param {?} registry\n     * @return {?}\n     */\n    function (registry) { };\n    /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.findTestabilityInTree = /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\n/**\n * Set the {\\@link GetTestability} implementation used by the Angular testing framework.\n * \\@experimental\n * @param {?} getter\n * @return {?}\n */\nfunction setTestabilityGetter(getter) {\n    _testabilityGetter = getter;\n}\nvar _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _devMode = true;\nvar _runModeLocked = false;\nvar _platform;\nvar ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n * \\@stable\n * @return {?}\n */\nfunction enableProdMode() {\n    if (_runModeLocked) {\n        throw new Error('Cannot enable prod mode after platform setup.');\n    }\n    _devMode = false;\n}\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * \\@experimental\n */\nvar NgProbeToken = /** @class */ (function () {\n    function NgProbeToken(name, token) {\n        this.name = name;\n        this.token = token;\n    }\n    return NgProbeToken;\n}());\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} injector\n * @return {?}\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    var /** @type {?} */ inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach(function (init) { return init(); });\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} parentPlatformFactory\n * @param {?} name\n * @param {?=} providers\n * @return {?}\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers) {\n    if (providers === void 0) { providers = []; }\n    var /** @type {?} */ desc = \"Platform: \" + name;\n    var /** @type {?} */ marker = new InjectionToken(desc);\n    return function (extraProviders) {\n        if (extraProviders === void 0) { extraProviders = []; }\n        var /** @type {?} */ platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                var /** @type {?} */ injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} requiredToken\n * @return {?}\n */\nfunction assertPlatform(requiredToken) {\n    var /** @type {?} */ platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Destroy the existing platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction destroyPlatform() {\n    if (_platform && !_platform.destroyed) {\n        _platform.destroy();\n    }\n}\n/**\n * Returns the current platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * Provides additional options to the bootstraping process.\n *\n * \\@stable\n * @record\n */\n\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {\\@link platformBrowser}), or explicitly by calling the {\\@link createPlatform} function.\n *\n * \\@stable\n */\nvar PlatformRef = /** @class */ (function () {\n    /** @internal */\n    function PlatformRef(_injector) {\n        this._injector = _injector;\n        this._modules = [];\n        this._destroyListeners = [];\n        this._destroyed = false;\n    }\n    /**\n     * Creates an instance of an `@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModuleFactory = /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    function (moduleFactory, options) {\n        var _this = this;\n        // Note: We need to create the NgZone _before_ we instantiate the module,\n        // as instantiating the module creates some providers eagerly.\n        // So we create a mini parent injector that just contains the new NgZone and\n        // pass that as parent to the NgModuleFactory.\n        var /** @type {?} */ ngZoneOption = options ? options.ngZone : undefined;\n        var /** @type {?} */ ngZone = getNgZone(ngZoneOption);\n        var /** @type {?} */ providers = [{ provide: NgZone, useValue: ngZone }];\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(function () {\n            var /** @type {?} */ ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n            var /** @type {?} */ moduleRef = /** @type {?} */ (moduleFactory.create(ngZoneInjector));\n            var /** @type {?} */ exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); }); /** @type {?} */\n            ((ngZone)).runOutsideAngular(function () { return ((ngZone)).onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n            return _callAndReportToErrorHandler(exceptionHandler, /** @type {?} */ ((ngZone)), function () {\n                var /** @type {?} */ initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(function () {\n                    _this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    };\n    /**\n     * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * @stable\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * \\@stable\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModule = /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * \\@stable\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    function (moduleType, compilerOptions) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        var /** @type {?} */ compilerFactory = this.injector.get(CompilerFactory);\n        var /** @type {?} */ options = optionsReducer({}, compilerOptions);\n        var /** @type {?} */ compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType)\n            .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n    };\n    /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    PlatformRef.prototype._moduleDoBootstrap = /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    function (moduleRef) {\n        var /** @type {?} */ appRef = /** @type {?} */ (moduleRef.injector.get(ApplicationRef));\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                \"Please define one of these.\");\n        }\n        this._modules.push(moduleRef);\n    };\n    /**\n     * Register a listener to be called when the platform is disposed.\n     */\n    /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    PlatformRef.prototype.onDestroy = /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    Object.defineProperty(PlatformRef.prototype, \"injector\", {\n        /**\n         * Retrieve the platform {@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         */\n        get: /**\n         * Retrieve the platform {\\@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         * @return {?}\n         */\n        function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     */\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    PlatformRef.prototype.destroy = /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(function (module) { return module.destroy(); });\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n        this._destroyed = true;\n    };\n    Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    PlatformRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    PlatformRef.ctorParameters = function () { return [\n        { type: Injector, },\n    ]; };\n    return PlatformRef;\n}());\n/**\n * @param {?=} ngZoneOption\n * @return {?}\n */\nfunction getNgZone(ngZoneOption) {\n    var /** @type {?} */ ngZone;\n    if (ngZoneOption === 'noop') {\n        ngZone = new NoopNgZone();\n    }\n    else {\n        ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n            new NgZone({ enableLongStackTrace: isDevMode() });\n    }\n    return ngZone;\n}\n/**\n * @param {?} errorHandler\n * @param {?} ngZone\n * @param {?} callback\n * @return {?}\n */\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        var /** @type {?} */ result = callback();\n        if (isPromise(result)) {\n            return result.catch(function (e) {\n                ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (/** @type {?} */ e) {\n        ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\n/**\n * @template T\n * @param {?} dst\n * @param {?} objs\n * @return {?}\n */\nfunction optionsReducer(dst, objs) {\n    if (Array.isArray(objs)) {\n        dst = objs.reduce(optionsReducer, dst);\n    }\n    else {\n        dst = __assign({}, dst, (/** @type {?} */ (objs)));\n    }\n    return dst;\n}\n/**\n * A reference to an Angular application running on a page.\n *\n * \\@stable\n */\nvar ApplicationRef = /** @class */ (function () {\n    /** @internal */\n    function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        var _this = this;\n        this._zone = _zone;\n        this._console = _console;\n        this._injector = _injector;\n        this._exceptionHandler = _exceptionHandler;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._initStatus = _initStatus;\n        this._bootstrapListeners = [];\n        this._views = [];\n        this._runningTick = false;\n        this._enforceNoNewChanges = false;\n        this._stable = true;\n        /**\n         * Get a list of component types registered to this application.\n         * This list is populated even before the component is created.\n         */\n        this.componentTypes = [];\n        /**\n         * Get a list of components registered to this application.\n         */\n        this.components = [];\n        this._enforceNoNewChanges = isDevMode();\n        this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        var /** @type {?} */ isCurrentlyStable = new rxjs_Observable.Observable(function (observer) {\n            _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                !_this._zone.hasPendingMicrotasks;\n            _this._zone.runOutsideAngular(function () {\n                observer.next(_this._stable);\n                observer.complete();\n            });\n        });\n        var /** @type {?} */ isStable = new rxjs_Observable.Observable(function (observer) {\n            // Create the subscription to onStable outside the Angular Zone so that\n            // the callback is run outside the Angular Zone.\n            var /** @type {?} */ stableSub;\n            _this._zone.runOutsideAngular(function () {\n                stableSub = _this._zone.onStable.subscribe(function () {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(function () {\n                        if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                            !_this._zone.hasPendingMicrotasks) {\n                            _this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            var /** @type {?} */ unstableSub = _this._zone.onUnstable.subscribe(function () {\n                NgZone.assertInAngularZone();\n                if (_this._stable) {\n                    _this._stable = false;\n                    _this._zone.runOutsideAngular(function () { observer.next(false); });\n                }\n            });\n            return function () {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        (/** @type {?} */ (this)).isStable =\n            rxjs_observable_merge.merge(isCurrentlyStable, rxjs_operator_share.share.call(isStable));\n    }\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {@example core/ts/platform/platform.ts region='longform'}\n     */\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    ApplicationRef.prototype.bootstrap = /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    function (componentOrFactory, rootSelectorOrNode) {\n        var _this = this;\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        var /** @type {?} */ componentFactory;\n        if (componentOrFactory instanceof ComponentFactory) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory =\n                /** @type {?} */ ((this._componentFactoryResolver.resolveComponentFactory(componentOrFactory)));\n        }\n        this.componentTypes.push(componentFactory.componentType);\n        // Create a factory associated with the current module if it's not bound to some other\n        var /** @type {?} */ ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef);\n        var /** @type {?} */ selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        var /** @type {?} */ compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n        var /** @type {?} */ testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n        }\n        return compRef;\n    };\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     */\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    ApplicationRef.prototype.tick = /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        var /** @type {?} */ scope = ApplicationRef._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach(function (view) { return view.detectChanges(); });\n            if (this._enforceNoNewChanges) {\n                this._views.forEach(function (view) { return view.checkNoChanges(); });\n            }\n        }\n        catch (/** @type {?} */ e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    };\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     */\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.attachView = /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        var /** @type {?} */ view = (/** @type {?} */ (viewRef));\n        this._views.push(view);\n        view.attachToAppRef(this);\n    };\n    /**\n     * Detaches a view from dirty checking again.\n     */\n    /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.detachView = /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        var /** @type {?} */ view = (/** @type {?} */ (viewRef));\n        remove(this._views, view);\n        view.detachFromAppRef();\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._loadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this.components.push(componentRef);\n        // Get the listeners lazily to prevent DI cycles.\n        var /** @type {?} */ listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach(function (listener) { return listener(componentRef); });\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._unloadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this.components, componentRef);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationRef.prototype.ngOnDestroy = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach(function (view) { return view.destroy(); });\n    };\n    Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n        /**\n         * Returns the number of attached views.\n         */\n        get: /**\n         * Returns the number of attached views.\n         * @return {?}\n         */\n        function () { return this._views.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     */\n    ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n    ApplicationRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationRef.ctorParameters = function () { return [\n        { type: NgZone, },\n        { type: Console, },\n        { type: Injector, },\n        { type: ErrorHandler, },\n        { type: ComponentFactoryResolver, },\n        { type: ApplicationInitStatus, },\n    ]; };\n    return ApplicationRef;\n}());\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove(list, el) {\n    var /** @type {?} */ index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nvar RenderComponentType = /** @class */ (function () {\n    function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n        this.id = id;\n        this.templateUrl = templateUrl;\n        this.slotCount = slotCount;\n        this.encapsulation = encapsulation;\n        this.styles = styles;\n        this.animations = animations;\n    }\n    return RenderComponentType;\n}());\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n * @abstract\n */\nvar RenderDebugInfo = /** @class */ (function () {\n    function RenderDebugInfo() {\n    }\n    return RenderDebugInfo;\n}());\n/**\n * @deprecated Use the `Renderer2` instead.\n * @record\n */\n\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nvar Renderer = /** @class */ (function () {\n    function Renderer() {\n    }\n    return Renderer;\n}());\nvar Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link Renderer#setElementProperty setElementProperty} or\n * {\\@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n * @abstract\n */\nvar RootRenderer = /** @class */ (function () {\n    function RootRenderer() {\n    }\n    return RootRenderer;\n}());\n/**\n * \\@experimental\n * @record\n */\n\n/**\n * \\@experimental\n * @abstract\n */\nvar RendererFactory2 = /** @class */ (function () {\n    function RendererFactory2() {\n    }\n    return RendererFactory2;\n}());\n/** @enum {number} */\nvar RendererStyleFlags2 = {\n    Important: 1,\n    DashCase: 2,\n};\nRendererStyleFlags2[RendererStyleFlags2.Important] = \"Important\";\nRendererStyleFlags2[RendererStyleFlags2.DashCase] = \"DashCase\";\n/**\n * \\@experimental\n * @abstract\n */\nvar Renderer2 = /** @class */ (function () {\n    function Renderer2() {\n    }\n    return Renderer2;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * \\@security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n * \\@stable\n */\nvar ElementRef = /** @class */ (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to load ng module factories.\n * \\@stable\n * @abstract\n */\nvar NgModuleFactoryLoader = /** @class */ (function () {\n    function NgModuleFactoryLoader() {\n    }\n    return NgModuleFactoryLoader;\n}());\nvar moduleFactories = new Map();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * \\@experimental\n * @param {?} id\n * @param {?} factory\n * @return {?}\n */\nfunction registerModuleFactory(id, factory) {\n    var /** @type {?} */ existing = moduleFactories.get(id);\n    if (existing) {\n        throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n    }\n    moduleFactories.set(id, factory);\n}\n/**\n * @return {?}\n */\n\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * \\@experimental\n * @param {?} id\n * @return {?}\n */\nfunction getModuleFactory(id) {\n    var /** @type {?} */ factory = moduleFactories.get(id);\n    if (!factory)\n        throw new Error(\"No module with ID \" + id + \" loaded\");\n    return factory;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * \\@Component({...})\n * class Container {\n *   \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * \\@stable\n */\nvar QueryList = /** @class */ (function () {\n    function QueryList() {\n        this.dirty = true;\n        this._results = [];\n        this.changes = new EventEmitter();\n        this.length = 0;\n    }\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.map = /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return this._results.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.filter = /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.find = /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    QueryList.prototype.reduce = /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    function (fn, init) {\n        return this._results.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.forEach = /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._results.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.some = /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.some(fn);\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toArray = /**\n     * @return {?}\n     */\n    function () { return this._results.slice(); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype[getSymbolIterator()] = /**\n     * @return {?}\n     */\n    function () { return (/** @type {?} */ (this._results))[getSymbolIterator()](); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this._results.toString(); };\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    QueryList.prototype.reset = /**\n     * @param {?} res\n     * @return {?}\n     */\n    function (res) {\n        this._results = flatten(res);\n        (/** @type {?} */ (this)).dirty = false;\n        (/** @type {?} */ (this)).length = this._results.length;\n        (/** @type {?} */ (this)).last = this._results[this.length - 1];\n        (/** @type {?} */ (this)).first = this._results[0];\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.notifyOnChanges = /**\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this.changes)).emit(this); };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.setDirty = /**\n     * internal\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this)).dirty = true; };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.destroy = /**\n     * internal\n     * @return {?}\n     */\n    function () {\n        (/** @type {?} */ (this.changes)).complete();\n        (/** @type {?} */ (this.changes)).unsubscribe();\n    };\n    return QueryList;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SEPARATOR = '#';\nvar FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * \\@experimental\n * @abstract\n */\nvar SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n    function SystemJsNgModuleLoaderConfig() {\n    }\n    return SystemJsNgModuleLoaderConfig;\n}());\nvar DEFAULT_CONFIG = {\n    factoryPathPrefix: '',\n    factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * \\@experimental\n */\nvar SystemJsNgModuleLoader = /** @class */ (function () {\n    function SystemJsNgModuleLoader(_compiler, config) {\n        this._compiler = _compiler;\n        this._config = config || DEFAULT_CONFIG;\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.load = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var /** @type {?} */ offlineMode = this._compiler instanceof Compiler;\n        return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.loadAndCompile = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var _this = this;\n        var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n        if (exportName === undefined) {\n            exportName = 'default';\n        }\n        return System.import(module)\n            .then(function (module) { return module[exportName]; })\n            .then(function (type) { return checkNotEmpty(type, module, exportName); })\n            .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.loadFactory = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n        var /** @type {?} */ factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n        if (exportName === undefined) {\n            exportName = 'default';\n            factoryClassSuffix = '';\n        }\n        return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n            .then(function (module) { return module[exportName + factoryClassSuffix]; })\n            .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n    };\n    SystemJsNgModuleLoader.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    SystemJsNgModuleLoader.ctorParameters = function () { return [\n        { type: Compiler, },\n        { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional },] },\n    ]; };\n    return SystemJsNgModuleLoader;\n}());\n/**\n * @param {?} value\n * @param {?} modulePath\n * @param {?} exportName\n * @return {?}\n */\nfunction checkNotEmpty(value, modulePath, exportName) {\n    if (!value) {\n        throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n    }\n    return value;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n *\n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {\\@link Query}.\n *\n * To instantiate Embedded Views based on a Template, use {\\@link ViewContainerRef#\n * createEmbeddedView}, which will create the View and attach it to the View Container.\n * \\@stable\n * @abstract\n */\nvar TemplateRef = /** @class */ (function () {\n    function TemplateRef() {\n    }\n    return TemplateRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a container where one or more Views can be attached.\n *\n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n *\n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n *\n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n *\n * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n * \\@stable\n * @abstract\n */\nvar ViewContainerRef = /** @class */ (function () {\n    function ViewContainerRef() {\n    }\n    return ViewContainerRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ChangeDetectorRef = /** @class */ (function () {\n    function ChangeDetectorRef() {\n    }\n    return ChangeDetectorRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ViewRef = /** @class */ (function (_super) {\n    __extends(ViewRef, _super);\n    function ViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ViewRef;\n}(ChangeDetectorRef));\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two {\\@link TemplateRef}s:\n *\n * Outer {\\@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner {\\@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n *\n * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n */\nvar EmbeddedViewRef = /** @class */ (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef));\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventListener = /** @class */ (function () {\n    function EventListener(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n    return EventListener;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugNode = /** @class */ (function () {\n    function DebugNode(nativeNode, parent, _debugContext) {\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement) {\n            parent.addChild(this);\n        }\n        else {\n            this.parent = null;\n        }\n        this.listeners = [];\n    }\n    Object.defineProperty(DebugNode.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.references; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.providerTokens; },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugElement = /** @class */ (function (_super) {\n    __extends(DebugElement, _super);\n    function DebugElement(nativeNode, parent, _debugContext) {\n        var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n        _this.properties = {};\n        _this.attributes = {};\n        _this.classes = {};\n        _this.styles = {};\n        _this.childNodes = [];\n        _this.nativeElement = nativeNode;\n        return _this;\n    }\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.addChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    };\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.removeChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        var /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    };\n    /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    DebugElement.prototype.insertChildrenAfter = /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    function (child, newChildren) {\n        var _this = this;\n        var /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            (_a = this.childNodes).splice.apply(_a, [siblingIndex + 1, 0].concat(newChildren));\n            newChildren.forEach(function (c) {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                c.parent = _this;\n            });\n        }\n        var _a;\n    };\n    /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugElement.prototype.insertBefore = /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (refChild, newChild) {\n        var /** @type {?} */ refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.query = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAll = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAllNodes = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    };\n    Object.defineProperty(DebugElement.prototype, \"children\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return /** @type {?} */ (this.childNodes.filter(function (node) { return node instanceof DebugElement; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    DebugElement.prototype.triggerEventHandler = /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement;\n}(DebugNode));\n/**\n * \\@experimental\n * @param {?} debugEls\n * @return {?}\n */\nfunction asNativeElements(debugEls) {\n    return debugEls.map(function (el) { return el.nativeElement; });\n}\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(function (node) {\n        if (node instanceof DebugElement) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nvar _nativeNodeToDebugNode = new Map();\n/**\n * \\@experimental\n * @param {?} nativeNode\n * @return {?}\n */\nfunction getDebugNode(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n/**\n * @return {?}\n */\n\n/**\n * @param {?} node\n * @return {?}\n */\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * \\@experimental All debugging apis are currently experimental.\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction devModeEqual(a, b) {\n    var /** @type {?} */ isListLikeIterableA = isListLikeIterable(a);\n    var /** @type {?} */ isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        var /** @type {?} */ isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        var /** @type {?} */ isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference has not changed.\n *\n * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n * is stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * \\@stable\n */\nvar WrappedValue = /** @class */ (function () {\n    function WrappedValue(value) {\n        this.wrapped = value;\n    }\n    /** Creates a wrapped value. */\n    /**\n     * Creates a wrapped value.\n     * @param {?} value\n     * @return {?}\n     */\n    WrappedValue.wrap = /**\n     * Creates a wrapped value.\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return new WrappedValue(value); };\n    /**\n     * Returns the underlying value of a wrapped value.\n     * Returns the given `value` when it is not wrapped.\n     **/\n    /**\n     * Returns the underlying value of a wrapped value.\n     * Returns the given `value` when it is not wrapped.\n     *\n     * @param {?} value\n     * @return {?}\n     */\n    WrappedValue.unwrap = /**\n     * Returns the underlying value of a wrapped value.\n     * Returns the given `value` when it is not wrapped.\n     *\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n    /** Returns true if `value` is a wrapped value. */\n    /**\n     * Returns true if `value` is a wrapped value.\n     * @param {?} value\n     * @return {?}\n     */\n    WrappedValue.isWrapped = /**\n     * Returns true if `value` is a wrapped value.\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return value instanceof WrappedValue; };\n    return WrappedValue;\n}());\n/**\n * Represents a basic change from a previous to a new value.\n * \\@stable\n */\nvar SimpleChange = /** @class */ (function () {\n    function SimpleChange(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     */\n    /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    SimpleChange.prototype.isFirstChange = /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    function () { return this.firstChange; };\n    return SimpleChange;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n            // JS Map are iterables but return entries as [k, v]\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nfunction areIterablesEqual(a, b, comparator) {\n    var /** @type {?} */ iterator1 = a[getSymbolIterator()]();\n    var /** @type {?} */ iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        var /** @type {?} */ item1 = iterator1.next();\n        var /** @type {?} */ item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var /** @type {?} */ i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var /** @type {?} */ iterator = obj[getSymbolIterator()]();\n        var /** @type {?} */ item = void 0;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultIterableDifferFactory = /** @class */ (function () {\n    function DefaultIterableDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return isListLikeIterable(obj); };\n    /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.create = /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    function (trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    };\n    return DefaultIterableDifferFactory;\n}());\nvar trackByIdentity = function (index, item) { return item; };\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nvar DefaultIterableDiffer = /** @class */ (function () {\n    function DefaultIterableDiffer(trackByFn) {\n        this.length = 0;\n        this._linkedRecords = null;\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachOperation = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ nextIt = this._itHead;\n        var /** @type {?} */ nextRemove = this._removalsHead;\n        var /** @type {?} */ addRemoveOffset = 0;\n        var /** @type {?} */ moveOffsets = null;\n        while (nextIt || nextRemove) {\n            // Figure out which is the next record to process\n            // Order: remove, add, move\n            var /** @type {?} */ record = !nextRemove ||\n                nextIt && /** @type {?} */ ((nextIt.currentIndex)) < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ? /** @type {?} */\n                ((nextIt)) :\n                nextRemove;\n            var /** @type {?} */ adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            var /** @type {?} */ currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = /** @type {?} */ ((nextIt))._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    var /** @type {?} */ localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    var /** @type {?} */ localCurrentIndex = /** @type {?} */ ((currentIndex)) - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (var /** @type {?} */ i = 0; i < localMovePreviousIndex; i++) {\n                            var /** @type {?} */ offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            var /** @type {?} */ index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        var /** @type {?} */ previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachMovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachIdentityChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.diff = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.check = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ record = this._itHead;\n        var /** @type {?} */ mayBeDirty = false;\n        var /** @type {?} */ index;\n        var /** @type {?} */ item;\n        var /** @type {?} */ itemTrackBy;\n        if (Array.isArray(collection)) {\n            (/** @type {?} */ (this)).length = collection.length;\n            for (var /** @type {?} */ index_1 = 0; index_1 < this.length; index_1++) {\n                item = collection[index_1];\n                itemTrackBy = this._trackByFn(index_1, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index_1);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, function (item) {\n                itemTrackBy = _this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = _this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        _this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            (/** @type {?} */ (this)).length = index;\n        }\n        this._truncate(record);\n        (/** @type {?} */ (this)).collection = collection;\n        return this.isDirty;\n    };\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n        /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n         * changes.\n         */\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._movesHead !== null ||\n                this._removalsHead !== null || this._identityChangesHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * @internal\n     */\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reset = /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            var /** @type {?} */ nextRecord = void 0;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // todo(vicb) when assert gets supported\n            // assert(!this.isDirty);\n        }\n    };\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * @internal\n     */\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._mismatch = /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        // The previous record after which we will append the current one.\n        var /** @type {?} */ previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    };\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * @internal\n     */\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._verifyReinsertion = /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        var /** @type {?} */ reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, /** @type {?} */ ((record._prev)), index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    };\n    /**\n     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {@link IterableChangeRecord_}.\n     *\n     * @internal\n     */\n    /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._truncate = /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            var /** @type {?} */ nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reinsertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prevRemoved;\n        var /** @type {?} */ next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._moveAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // todo(vicb)\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._insertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        // todo(vicb)\n        // assert(record != prevRecord);\n        // assert(record._next === null);\n        // assert(record._prev === null);\n        var /** @type {?} */ next = prevRecord === null ? this._itHead : prevRecord._next;\n        // todo(vicb)\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._remove = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        return this._addToRemovals(this._unlink(record));\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._unlink = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prev;\n        var /** @type {?} */ next = record._next;\n        // todo(vicb)\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToMoves = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    function (record, toIndex) {\n        // todo(vicb)\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // todo(vicb)\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToRemovals = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // todo(vicb)\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // todo(vicb)\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addIdentityChange = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    function (record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    };\n    return DefaultIterableDiffer;\n}());\n/**\n * \\@stable\n */\nvar IterableChangeRecord_ = /** @class */ (function () {\n    function IterableChangeRecord_(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prevDup = null;\n        /**\n         * \\@internal\n         */\n        this._nextDup = null;\n        /**\n         * \\@internal\n         */\n        this._prevRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextMoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextIdentityChange = null;\n    }\n    return IterableChangeRecord_;\n}());\nvar _DuplicateItemRecordList = /** @class */ (function () {\n    function _DuplicateItemRecordList() {\n        /**\n         * \\@internal\n         */\n        this._head = null;\n        /**\n         * \\@internal\n         */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     */\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.add = /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            /** @type {?} */ ((\n            // todo(vicb)\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail))._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    };\n    // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n    // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n    /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.get = /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= /** @type {?} */ ((record.currentIndex))) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     */\n    /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.remove = /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // todo(vicb)\n        // assert(() {\n        //  // verify that the record being removed is in the list.\n        //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n        //    if (identical(cursor, record)) return true;\n        //  }\n        //  return false;\n        //});\n        var /** @type {?} */ prev = record._prevDup;\n        var /** @type {?} */ next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    };\n    return _DuplicateItemRecordList;\n}());\nvar _DuplicateMap = /** @class */ (function () {\n    function _DuplicateMap() {\n        this.map = new Map();\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.put = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    };\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     */\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateMap.prototype.get = /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ key = trackById;\n        var /** @type {?} */ recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    };\n    /**\n     * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     */\n    /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.remove = /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ recordList = /** @type {?} */ ((this.map.get(key)));\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    };\n    Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.map.size === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    _DuplicateMap.prototype.clear = /**\n     * @return {?}\n     */\n    function () { this.map.clear(); };\n    return _DuplicateMap;\n}());\n/**\n * @param {?} item\n * @param {?} addRemoveOffset\n * @param {?} moveOffsets\n * @return {?}\n */\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    var /** @type {?} */ previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    var /** @type {?} */ moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultKeyValueDifferFactory = /** @class */ (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return obj instanceof Map || isJsObject(obj); };\n    /**\n     * @template K, V\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.create = /**\n     * @template K, V\n     * @return {?}\n     */\n    function () { return new DefaultKeyValueDiffer(); };\n    return DefaultKeyValueDifferFactory;\n}());\nvar DefaultKeyValueDiffer = /** @class */ (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?=} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.diff = /**\n     * @param {?=} map\n     * @return {?}\n     */\n    function (map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n        }\n        return this.check(map) ? this : null;\n    };\n    /**\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     */\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.check = /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    function (map) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, function (value, key) {\n            if (insertBefore && insertBefore.key === key) {\n                _this._maybeAddToChanges(insertBefore, value);\n                _this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                var /** @type {?} */ record = _this._getOrCreateRecordForKey(key, value);\n                insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (var /** @type {?} */ record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    };\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    function (before, record) {\n        if (before) {\n            var /** @type {?} */ prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    function (key, value) {\n        if (this._records.has(key)) {\n            var /** @type {?} */ record_1 = /** @type {?} */ ((this._records.get(key)));\n            this._maybeAddToChanges(record_1, value);\n            var /** @type {?} */ prev = record_1._prev;\n            var /** @type {?} */ next = record_1._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record_1._next = null;\n            record_1._prev = null;\n            return record_1;\n        }\n        var /** @type {?} */ record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._reset = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    };\n    /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._maybeAddToChanges = /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    function (record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToAdditions = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._additionsTail))._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToChanges = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._changesTail))._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._forEach = /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    function (obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\n/**\n * \\@stable\n */\nvar KeyValueChangeRecord_ = /** @class */ (function () {\n    function KeyValueChangeRecord_(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextChanged = null;\n    }\n    return KeyValueChangeRecord_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A strategy for tracking changes over time to an iterable. Used by {\\@link NgForOf} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\n\n/**\n * @deprecated v4.0.0 - Use IterableChangeRecord instead.\n * @record\n */\n\n/**\n * An optional function passed into {\\@link NgForOf} that defines how to track\n * items in an iterable (e.g. fby index or id)\n *\n * \\@stable\n * @record\n */\n\n/**\n * Provides a factory for {\\@link IterableDiffer}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n * \\@stable\n */\nvar IterableDiffers = /** @class */ (function () {\n    function IterableDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    IterableDiffers.create = /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent != null) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new IterableDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {@link IterableDiffers} instance with the provided factories and return a new\n     * {@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    IterableDiffers.extend = /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    IterableDiffers.prototype.find = /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    function (iterable) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(iterable); });\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n        }\n    };\n    return IterableDiffers;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A differ that tracks changes made to an object over time.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Provides a factory for {\\@link KeyValueDiffer}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n * \\@stable\n */\nvar KeyValueDiffers = /** @class */ (function () {\n    function KeyValueDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    KeyValueDiffers.create = /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n     * {@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    KeyValueDiffers.extend = /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} kv\n     * @return {?}\n     */\n    KeyValueDiffers.prototype.find = /**\n     * @param {?} kv\n     * @return {?}\n     */\n    function (kv) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(kv); });\n        if (factory) {\n            return factory;\n        }\n        throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n    };\n    return KeyValueDiffers;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nvar keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nvar iterableDiff = [new DefaultIterableDifferFactory()];\nvar defaultIterableDiffers = new IterableDiffers(iterableDiff);\nvar defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef, deps: [Injector] },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/**\n * This platform has to be included in any other platform\n *\n * \\@experimental\n */\nvar platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provide this token to set the locale of your application.\n * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n * DecimalPipe and PercentPipe) and by ICU expressions.\n *\n * See the {\\@linkDocs guide/i18n#setting-up-locale i18n guide} for more information.\n *\n * ### Example\n *\n * ```typescript\n * import { LOCALE_ID } from '\\@angular/core';\n * import { platformBrowserDynamic } from '\\@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n * });\n * ```\n *\n * \\@experimental i18n support is experimental.\n */\nvar LOCALE_ID = new InjectionToken('LocaleId');\n/**\n * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n * `xlf` or `xlf2`) when you want to translate your application in another language.\n *\n * See the {\\@linkDocs guide/i18n#merge i18n guide} for more information.\n *\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS } from '\\@angular/core';\n * import { platformBrowserDynamic } from '\\@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * // content of your translation file\n * const translations = '....';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n * });\n * ```\n *\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS = new InjectionToken('Translations');\n/**\n * Provide this token at bootstrap to set the format of your {\\@link TRANSLATIONS}: `xtb`,\n * `xlf` or `xlf2`.\n *\n * See the {\\@linkDocs guide/i18n#merge i18n guide} for more information.\n *\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS_FORMAT } from '\\@angular/core';\n * import { platformBrowserDynamic } from '\\@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n * });\n * ```\n *\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n/** @enum {number} */\nvar MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\n/**\n * @return {?}\n */\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\n/**\n * @param {?=} locale\n * @return {?}\n */\nfunction _localeFactory(locale) {\n    return locale || 'en-US';\n}\n/**\n * This module includes the providers of \\@angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n *\n * \\@experimental\n */\nvar ApplicationModule = /** @class */ (function () {\n    // Inject ApplicationRef to make it eager...\n    function ApplicationModule(appRef) {\n    }\n    ApplicationModule.decorators = [\n        { type: NgModule, args: [{\n                    providers: [\n                        ApplicationRef,\n                        ApplicationInitStatus,\n                        Compiler,\n                        APP_ID_RANDOM_PROVIDER,\n                        { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n                        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n                        {\n                            provide: LOCALE_ID,\n                            useFactory: _localeFactory,\n                            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n                        },\n                    ]\n                },] },\n    ];\n    /** @nocollapse */\n    ApplicationModule.ctorParameters = function () { return [\n        { type: ApplicationRef, },\n    ]; };\n    return ApplicationModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n * that needs sanitizing.\n * Depending upon browser support we must use one of three strategies for doing this.\n * Support: Safari 10.x -> XHR strategy\n * Support: Firefox -> DomParser strategy\n * Default: InertDocument strategy\n */\nvar InertBodyHelper = /** @class */ (function () {\n    function InertBodyHelper(defaultDoc) {\n        this.defaultDoc = defaultDoc;\n        this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n        this.inertBodyElement = this.inertDocument.body;\n        if (this.inertBodyElement == null) {\n            // usually there should be only one body element in the document, but IE doesn't have any, so\n            // we need to create one.\n            var /** @type {?} */ inertHtml = this.inertDocument.createElement('html');\n            this.inertDocument.appendChild(inertHtml);\n            this.inertBodyElement = this.inertDocument.createElement('body');\n            inertHtml.appendChild(this.inertBodyElement);\n        }\n        this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n        if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n            // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n            // so use the XHR strategy.\n            this.getInertBodyElement = this.getInertBodyElement_XHR;\n            return;\n        }\n        this.inertBodyElement.innerHTML =\n            '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n        if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n            // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n            // so use the DOMParser strategy, if it is available.\n            // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n            // fall through to the default strategy below.\n            if (isDOMParserAvailable()) {\n                this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                return;\n            }\n        }\n        // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n        this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n    }\n    /**\n     * Use XHR to create and fill an inert body element (on Safari 10.1)\n     * See\n     * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n     * @param {?} html\n     * @return {?}\n     */\n    InertBodyHelper.prototype.getInertBodyElement_XHR = /**\n     * Use XHR to create and fill an inert body element (on Safari 10.1)\n     * See\n     * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n     * @param {?} html\n     * @return {?}\n     */\n    function (html) {\n        // We add these extra elements to ensure that the rest of the content is parsed as expected\n        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n        // `<head>` tag.\n        html = '<body><remove></remove>' + html + '</body>';\n        try {\n            html = encodeURI(html);\n        }\n        catch (/** @type {?} */ e) {\n            return null;\n        }\n        var /** @type {?} */ xhr = new XMLHttpRequest();\n        xhr.responseType = 'document';\n        xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n        xhr.send(null);\n        var /** @type {?} */ body = xhr.response.body;\n        body.removeChild(/** @type {?} */ ((body.firstChild)));\n        return body;\n    };\n    /**\n     * Use DOMParser to create and fill an inert body element (on Firefox)\n     * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n     *\n     * @param {?} html\n     * @return {?}\n     */\n    InertBodyHelper.prototype.getInertBodyElement_DOMParser = /**\n     * Use DOMParser to create and fill an inert body element (on Firefox)\n     * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n     *\n     * @param {?} html\n     * @return {?}\n     */\n    function (html) {\n        // We add these extra elements to ensure that the rest of the content is parsed as expected\n        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n        // `<head>` tag.\n        html = '<body><remove></remove>' + html + '</body>';\n        try {\n            var /** @type {?} */ body = /** @type {?} */ (new (/** @type {?} */ (window))\n                .DOMParser()\n                .parseFromString(html, 'text/html')\n                .body);\n            body.removeChild(/** @type {?} */ ((body.firstChild)));\n            return body;\n        }\n        catch (/** @type {?} */ e) {\n            return null;\n        }\n    };\n    /**\n     * Use an HTML5 `template` element, if supported, or an inert body element created via\n     * `createHtmlDocument` to create and fill an inert DOM element.\n     * This is the default sane strategy to use if the browser does not require one of the specialised\n     * strategies above.\n     * @param {?} html\n     * @return {?}\n     */\n    InertBodyHelper.prototype.getInertBodyElement_InertDocument = /**\n     * Use an HTML5 `template` element, if supported, or an inert body element created via\n     * `createHtmlDocument` to create and fill an inert DOM element.\n     * This is the default sane strategy to use if the browser does not require one of the specialised\n     * strategies above.\n     * @param {?} html\n     * @return {?}\n     */\n    function (html) {\n        // Prefer using <template> element if supported.\n        var /** @type {?} */ templateEl = this.inertDocument.createElement('template');\n        if ('content' in templateEl) {\n            templateEl.innerHTML = html;\n            return templateEl;\n        }\n        this.inertBodyElement.innerHTML = html;\n        // Support: IE 9-11 only\n        // strip custom-namespaced attributes on IE<=11\n        if ((/** @type {?} */ (this.defaultDoc)).documentMode) {\n            this.stripCustomNsAttrs(this.inertBodyElement);\n        }\n        return this.inertBodyElement;\n    };\n    /**\n     * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n     * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n     * 'ns1:xlink:foo').\n     *\n     * This is undesirable since we don't want to allow any of these custom attributes. This method\n     * strips them all.\n     * @param {?} el\n     * @return {?}\n     */\n    InertBodyHelper.prototype.stripCustomNsAttrs = /**\n     * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n     * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n     * 'ns1:xlink:foo').\n     *\n     * This is undesirable since we don't want to allow any of these custom attributes. This method\n     * strips them all.\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var /** @type {?} */ elAttrs = el.attributes;\n        // loop backwards so that we can support removals.\n        for (var /** @type {?} */ i = elAttrs.length - 1; 0 < i; i--) {\n            var /** @type {?} */ attrib = elAttrs.item(i);\n            var /** @type {?} */ attrName = attrib.name;\n            if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                el.removeAttribute(attrName);\n            }\n        }\n        var /** @type {?} */ childNode = el.firstChild;\n        while (childNode) {\n            if (childNode.nodeType === Node.ELEMENT_NODE)\n                this.stripCustomNsAttrs(/** @type {?} */ (childNode));\n            childNode = childNode.nextSibling;\n        }\n    };\n    return InertBodyHelper;\n}());\n/**\n * We need to determine whether the DOMParser exists in the global context.\n * The try-catch is because, on some browsers, trying to access this property\n * on window can actually throw an error.\n *\n * @suppress {uselessCode}\n * @return {?}\n */\nfunction isDOMParserAvailable() {\n    try {\n        return !!(/** @type {?} */ (window)).DOMParser;\n    }\n    catch (/** @type {?} */ e) {\n        return false;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n *\n * This regular expression matches a subset of URLs that will not cause script\n * execution if used in URL context within a HTML document. Specifically, this\n * regular expression matches if (comment from here on and regex copied from\n * Soy's EscapingConventions):\n * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n * (2) or no protocol.  A protocol must be followed by a colon. The below\n *     allows that by allowing colons only after one of the characters [/?#].\n *     A colon after a hash (#) must be in the fragment.\n *     Otherwise, a colon after a (?) must be in a query.\n *     Otherwise, a colon after a single solidus (/) must be in a path.\n *     Otherwise, a colon after a double solidus (//) must be in the authority\n *     (before port).\n *\n * The pattern disallows &, used in HTML entity declarations before\n * one of the characters in [/?#]. This disallows HTML entities used in the\n * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n * It also disallows HTML entities in the first path part of a relative path,\n * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n * that. More importantly, it disallows masking of a colon,\n * e.g. \"javascript&#58;...\".\n *\n * This regular expression was taken from the Closure sanitization library.\n */\nvar SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n/**\n * A pattern that matches safe data URLs. Only matches image, video and audio types.\n */\nvar DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n/**\n * @param {?} url\n * @return {?}\n */\nfunction _sanitizeUrl(url) {\n    url = String(url);\n    if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n        return url;\n    if (isDevMode()) {\n        console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n    }\n    return 'unsafe:' + url;\n}\n/**\n * @param {?} srcset\n * @return {?}\n */\nfunction sanitizeSrcset(srcset) {\n    srcset = String(srcset);\n    return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} tags\n * @return {?}\n */\nfunction tagSet(tags) {\n    var /** @type {?} */ res = {};\n    for (var _i = 0, _a = tags.split(','); _i < _a.length; _i++) {\n        var t = _a[_i];\n        res[t] = true;\n    }\n    return res;\n}\n/**\n * @param {...?} sets\n * @return {?}\n */\nfunction merge$1() {\n    var sets = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sets[_i] = arguments[_i];\n    }\n    var /** @type {?} */ res = {};\n    for (var _a = 0, sets_1 = sets; _a < sets_1.length; _a++) {\n        var s = sets_1[_a];\n        for (var /** @type {?} */ v in s) {\n            if (s.hasOwnProperty(v))\n                res[v] = true;\n        }\n    }\n    return res;\n}\n// Good source of info about elements and attributes\n// http://dev.w3.org/html5/spec/Overview.html#semantics\n// http://simon.html5.org/html-elements\n// Safe Void Elements - HTML5\n// http://dev.w3.org/html5/spec/Overview.html#void-elements\nvar VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n// Elements that you can, intentionally, leave open (and which close themselves)\n// http://dev.w3.org/html5/spec/Overview.html#optional-tags\nvar OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\nvar OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\nvar OPTIONAL_END_TAG_ELEMENTS = merge$1(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n// Safe Block Elements - HTML5\nvar BLOCK_ELEMENTS = merge$1(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n    'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n    'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n// Inline Elements - HTML5\nvar INLINE_ELEMENTS = merge$1(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n    'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n    'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\nvar VALID_ELEMENTS = merge$1(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n// Attributes that have href and hence need to be sanitized\nvar URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n// Attributes that have special href set hence need to be sanitized\nvar SRCSET_ATTRS = tagSet('srcset');\nvar HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n    'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n    'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n    'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n    'valign,value,vspace,width');\n// NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n// issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n// innerHTML is required, SVG attributes should be added here.\n// NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n// can be sanitized, but they increase security surface area without a legitimate use case, so they\n// are left out here.\nvar VALID_ATTRS = merge$1(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n/**\n * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n * attributes.\n */\nvar SanitizingHtmlSerializer = /** @class */ (function () {\n    function SanitizingHtmlSerializer() {\n        this.sanitizedSomething = false;\n        this.buf = [];\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    SanitizingHtmlSerializer.prototype.sanitizeChildren = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n        // However this code never accesses properties off of `document` before deleting its contents\n        // again, so it shouldn't be vulnerable to DOM clobbering.\n        var /** @type {?} */ current = /** @type {?} */ ((el.firstChild));\n        while (current) {\n            if (current.nodeType === Node.ELEMENT_NODE) {\n                this.startElement(/** @type {?} */ (current));\n            }\n            else if (current.nodeType === Node.TEXT_NODE) {\n                this.chars(/** @type {?} */ ((current.nodeValue)));\n            }\n            else {\n                // Strip non-element, non-text nodes.\n                this.sanitizedSomething = true;\n            }\n            if (current.firstChild) {\n                current = /** @type {?} */ ((current.firstChild));\n                continue;\n            }\n            while (current) {\n                // Leaving the element. Walk up and to the right, closing tags as we go.\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.endElement(/** @type {?} */ (current));\n                }\n                var /** @type {?} */ next = this.checkClobberedElement(current, /** @type {?} */ ((current.nextSibling)));\n                if (next) {\n                    current = next;\n                    break;\n                }\n                current = this.checkClobberedElement(current, /** @type {?} */ ((current.parentNode)));\n            }\n        }\n        return this.buf.join('');\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    SanitizingHtmlSerializer.prototype.startElement = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var /** @type {?} */ tagName = element.nodeName.toLowerCase();\n        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.sanitizedSomething = true;\n            return;\n        }\n        this.buf.push('<');\n        this.buf.push(tagName);\n        var /** @type {?} */ elAttrs = element.attributes;\n        for (var /** @type {?} */ i = 0; i < elAttrs.length; i++) {\n            var /** @type {?} */ elAttr = elAttrs.item(i);\n            var /** @type {?} */ attrName = elAttr.name;\n            var /** @type {?} */ lower = attrName.toLowerCase();\n            if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                this.sanitizedSomething = true;\n                continue;\n            }\n            var /** @type {?} */ value = elAttr.value;\n            // TODO(martinprobst): Special case image URIs for data:image/...\n            if (URI_ATTRS[lower])\n                value = _sanitizeUrl(value);\n            if (SRCSET_ATTRS[lower])\n                value = sanitizeSrcset(value);\n            this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n        }\n        this.buf.push('>');\n    };\n    /**\n     * @param {?} current\n     * @return {?}\n     */\n    SanitizingHtmlSerializer.prototype.endElement = /**\n     * @param {?} current\n     * @return {?}\n     */\n    function (current) {\n        var /** @type {?} */ tagName = current.nodeName.toLowerCase();\n        if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.buf.push('</');\n            this.buf.push(tagName);\n            this.buf.push('>');\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    SanitizingHtmlSerializer.prototype.chars = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) { this.buf.push(encodeEntities(chars)); };\n    /**\n     * @param {?} node\n     * @param {?} nextNode\n     * @return {?}\n     */\n    SanitizingHtmlSerializer.prototype.checkClobberedElement = /**\n     * @param {?} node\n     * @param {?} nextNode\n     * @return {?}\n     */\n    function (node, nextNode) {\n        if (nextNode &&\n            (node.compareDocumentPosition(nextNode) &\n                Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n            throw new Error(\"Failed to sanitize html because the element is clobbered: \" + ((/** @type {?} */ (node))).outerHTML);\n        }\n        return nextNode;\n    };\n    return SanitizingHtmlSerializer;\n}());\n// Regular Expressions for parsing tags and attributes\nvar SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n// ! to ~ is the ASCII range.\nvar NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n * @param {?} value\n * @return {?}\n */\nfunction encodeEntities(value) {\n    return value.replace(/&/g, '&amp;')\n        .replace(SURROGATE_PAIR_REGEXP, function (match) {\n        var /** @type {?} */ hi = match.charCodeAt(0);\n        var /** @type {?} */ low = match.charCodeAt(1);\n        return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n    })\n        .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n}\nvar inertBodyHelper;\n/**\n * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n * the DOM in a browser environment.\n * @param {?} defaultDoc\n * @param {?} unsafeHtmlInput\n * @return {?}\n */\nfunction _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n    var /** @type {?} */ inertBodyElement = null;\n    try {\n        inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n        // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n        var /** @type {?} */ unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n        inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n        // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n        var /** @type {?} */ mXSSAttempts = 5;\n        var /** @type {?} */ parsedHtml = unsafeHtml;\n        do {\n            if (mXSSAttempts === 0) {\n                throw new Error('Failed to sanitize html because the input is unstable');\n            }\n            mXSSAttempts--;\n            unsafeHtml = parsedHtml;\n            parsedHtml = /** @type {?} */ ((inertBodyElement)).innerHTML;\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        } while (unsafeHtml !== parsedHtml);\n        var /** @type {?} */ sanitizer = new SanitizingHtmlSerializer();\n        var /** @type {?} */ safeHtml = sanitizer.sanitizeChildren(/** @type {?} */ (getTemplateContent(/** @type {?} */ ((inertBodyElement)))) || inertBodyElement);\n        if (isDevMode() && sanitizer.sanitizedSomething) {\n            console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n        }\n        return safeHtml;\n    }\n    finally {\n        // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n        if (inertBodyElement) {\n            var /** @type {?} */ parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n            while (parent_1.firstChild) {\n                parent_1.removeChild(parent_1.firstChild);\n            }\n        }\n    }\n}\n/**\n * @param {?} el\n * @return {?}\n */\nfunction getTemplateContent(el) {\n    return 'content' in el && isTemplateElement(el) ? el.content : null;\n}\n/**\n * @param {?} el\n * @return {?}\n */\nfunction isTemplateElement(el) {\n    return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Regular expression for safe style values.\n *\n * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n *\n * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n * of XSS.\n *\n * The function expression checks only for XSS safety, not for CSS validity.\n *\n * This regular expression was taken from the Closure sanitization library, and augmented for\n * transformation values.\n */\nvar VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\nvar TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\nvar COLOR_FNS = '(?:rgb|hsl)a?';\nvar GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\nvar CSS3_FNS = '(?:calc|attr)';\nvar FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\nvar SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n    (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n    (FN_ARGS + \")$\"), 'g');\n/**\n * Matches a `url(...)` value with an arbitrary argument as long as it does\n * not contain parentheses.\n *\n * The URL value still needs to be sanitized separately.\n *\n * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n * by observing whether scroll bars are displayed, or character ranges used by a font face\n * definition.\n *\n * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n * binding a URL value without further cooperation from the page will cause an information leak, and\n * if so, it is just a leak, not a full blown XSS vulnerability.\n *\n * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n * code is permissive and allows URLs that sanitize otherwise.\n */\nvar URL_RE = /^url\\(([^)]+)\\)$/;\n/**\n * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n * that neither escape (\\) nor any other character that could result in\n * breaking out of a string parsing context are allowed;\n * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n *\n * This code was taken from the Closure sanitization library.\n * @param {?} value\n * @return {?}\n */\nfunction hasBalancedQuotes(value) {\n    var /** @type {?} */ outsideSingle = true;\n    var /** @type {?} */ outsideDouble = true;\n    for (var /** @type {?} */ i = 0; i < value.length; i++) {\n        var /** @type {?} */ c = value.charAt(i);\n        if (c === '\\'' && outsideDouble) {\n            outsideSingle = !outsideSingle;\n        }\n        else if (c === '\"' && outsideSingle) {\n            outsideDouble = !outsideDouble;\n        }\n    }\n    return outsideSingle && outsideDouble;\n}\n/**\n * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n * value) and returns a value that is safe to use in a browser environment.\n * @param {?} value\n * @return {?}\n */\nfunction _sanitizeStyle(value) {\n    value = String(value).trim(); // Make sure it's actually a string.\n    if (!value)\n        return '';\n    // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n    // reasoning behind this.\n    var /** @type {?} */ urlMatch = value.match(URL_RE);\n    if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n        value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n        return value; // Safe style values.\n    }\n    if (isDevMode()) {\n        console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n    }\n    return 'unsafe';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * \\@stable\n * @abstract\n */\nvar Sanitizer = /** @class */ (function () {\n    function Sanitizer() {\n    }\n    return Sanitizer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n * @record\n */\n\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * @param {?} view\n * @param {?} priorInitState\n * @param {?} newInitState\n * @return {?}\n */\nfunction shiftInitState(view, priorInitState, newInitState) {\n    // Only update the InitState if we are currently in the prior state.\n    // For example, only move into CallingInit if we are in BeforeInit. Only\n    // move into CallingContentInit if we are in CallingInit. Normally this will\n    // always be true because of how checkCycle is called in checkAndUpdateView.\n    // However, if checkAndUpdateView is called recursively or if an exception is\n    // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n    // from the beginning. This ensures the state is monotonically increasing,\n    // terminating in the AfterInit state, which ensures the Init methods are called\n    // at least once and only once.\n    var /** @type {?} */ state = view.state;\n    var /** @type {?} */ initState = state & 1792;\n    if (initState === priorInitState) {\n        view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n        view.initIndex = -1;\n        return true;\n    }\n    return initState === newInitState;\n}\n/**\n * @param {?} view\n * @param {?} initState\n * @param {?} index\n * @return {?}\n */\nfunction shouldCallLifecycleInitHook(view, initState, index) {\n    if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n        view.initIndex = index + 1;\n        return true;\n    }\n    return false;\n}\n/**\n * @record\n */\n\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asTextData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asElementData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asProviderData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asPureExpressionData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asQueryList(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * @record\n */\n\n/**\n * @abstract\n */\nvar DebugContext = /** @class */ (function () {\n    function DebugContext() {\n    }\n    return DebugContext;\n}());\n/**\n * @record\n */\n\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nvar Services = {\n    setCurrentNode: /** @type {?} */ ((undefined)),\n    createRootView: /** @type {?} */ ((undefined)),\n    createEmbeddedView: /** @type {?} */ ((undefined)),\n    createComponentView: /** @type {?} */ ((undefined)),\n    createNgModuleRef: /** @type {?} */ ((undefined)),\n    overrideProvider: /** @type {?} */ ((undefined)),\n    overrideComponentView: /** @type {?} */ ((undefined)),\n    clearOverrides: /** @type {?} */ ((undefined)),\n    checkAndUpdateView: /** @type {?} */ ((undefined)),\n    checkNoChangesView: /** @type {?} */ ((undefined)),\n    destroyView: /** @type {?} */ ((undefined)),\n    resolveDep: /** @type {?} */ ((undefined)),\n    createDebugContext: /** @type {?} */ ((undefined)),\n    handleEvent: /** @type {?} */ ((undefined)),\n    updateDirectives: /** @type {?} */ ((undefined)),\n    updateRenderer: /** @type {?} */ ((undefined)),\n    dirtyParentQueries: /** @type {?} */ ((undefined)),\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} context\n * @param {?} oldValue\n * @param {?} currValue\n * @param {?} isFirstCheck\n * @return {?}\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    var /** @type {?} */ msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (isFirstCheck) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    return viewDebugError(msg, context);\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} msg\n * @param {?} context\n * @return {?}\n */\nfunction viewDebugError(msg, context) {\n    var /** @type {?} */ err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction _addDebugContext(err, context) {\n    (/** @type {?} */ (err))[ERROR_DEBUG_CONTEXT] = context;\n    (/** @type {?} */ (err))[ERROR_LOGGER] = context.logError.bind(context);\n}\n/**\n * @param {?} err\n * @return {?}\n */\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\n/**\n * @param {?} action\n * @return {?}\n */\nfunction viewDestroyedError(action) {\n    return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOOP = function () { };\nvar _tokenKeyCache = new Map();\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenKey(token) {\n    var /** @type {?} */ key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\n/**\n * @param {?} view\n * @param {?} nodeIdx\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction unwrapValue(view, nodeIdx, bindingIdx, value) {\n    if (WrappedValue.isWrapped(value)) {\n        value = WrappedValue.unwrap(value);\n        var /** @type {?} */ globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n        var /** @type {?} */ oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n        view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n    }\n    return value;\n}\nvar UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nvar EMPTY_RENDERER_TYPE_ID = '$$empty';\n/**\n * @param {?} values\n * @return {?}\n */\nfunction createRendererType2(values) {\n    return {\n        id: UNDEFINED_RENDERER_TYPE_ID,\n        styles: values.styles,\n        encapsulation: values.encapsulation,\n        data: values.data\n    };\n}\nvar _renderCompCount = 0;\n/**\n * @param {?=} type\n * @return {?}\n */\nfunction resolveRendererType2(type) {\n    if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n        // first time we see this RendererType2. Initialize it...\n        var /** @type {?} */ isFilled = ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None) ||\n            type.styles.length || Object.keys(type.data).length);\n        if (isFilled) {\n            type.id = \"c\" + _renderCompCount++;\n        }\n        else {\n            type.id = EMPTY_RENDERER_TYPE_ID;\n        }\n    }\n    if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n        type = null;\n    }\n    return type || null;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBinding(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateBinding(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        var /** @type {?} */ bindingName = def.bindings[bindingIdx].name;\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markParentViewsForCheck(view) {\n    var /** @type {?} */ currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} endView\n * @return {?}\n */\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n    var /** @type {?} */ currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (/** @type {?} */ e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        var /** @type {?} */ parentView = view.parent;\n        return asElementData(parentView, /** @type {?} */ ((view.parentNodeDef)).nodeIndex);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n * @param {?} view\n * @return {?}\n */\nfunction viewParentEl(view) {\n    var /** @type {?} */ parentView = view.parent;\n    if (parentView) {\n        return /** @type {?} */ ((view.parentNodeDef)).parent;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.nodeIndex).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.nodeIndex).renderText;\n    }\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isComponentView(view) {\n    return !!view.parent && !!(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} queryId\n * @return {?}\n */\nfunction filterQueryId(queryId) {\n    return 1 << (queryId % 32);\n}\n/**\n * @param {?} matchedQueriesDsl\n * @return {?}\n */\nfunction splitMatchedQueriesDsl(matchedQueriesDsl) {\n    var /** @type {?} */ matchedQueries = {};\n    var /** @type {?} */ matchedQueryIds = 0;\n    var /** @type {?} */ references = {};\n    if (matchedQueriesDsl) {\n        matchedQueriesDsl.forEach(function (_a) {\n            var queryId = _a[0], valueType = _a[1];\n            if (typeof queryId === 'number') {\n                matchedQueries[queryId] = valueType;\n                matchedQueryIds |= filterQueryId(queryId);\n            }\n            else {\n                references[queryId] = valueType;\n            }\n        });\n    }\n    return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n}\n/**\n * @param {?} deps\n * @param {?=} sourceName\n * @return {?}\n */\nfunction splitDepsDsl(deps, sourceName) {\n    return deps.map(function (value) {\n        var /** @type {?} */ token;\n        var /** @type {?} */ flags;\n        if (Array.isArray(value)) {\n            flags = value[0], token = value[1];\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n            Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n        }\n        return { flags: flags, token: token, tokenKey: tokenKey(token) };\n    });\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction getParentRenderElement(view, renderHost, def) {\n    var /** @type {?} */ renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (/** @type {?} */ ((renderParent.element)).componentRendererType && /** @type {?} */ ((/** @type {?} */ ((renderParent.element)).componentRendererType)).encapsulation === ViewEncapsulation.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, /** @type {?} */ ((def.renderParent)).nodeIndex).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\nvar DEFINITION_CACHE = new WeakMap();\n/**\n * @template D\n * @param {?} factory\n * @return {?}\n */\nfunction resolveDefinition(factory) {\n    var /** @type {?} */ value = /** @type {?} */ (((DEFINITION_CACHE.get(factory))));\n    if (!value) {\n        value = factory(function () { return NOOP; });\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction rootRenderNodes(view) {\n    var /** @type {?} */ renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, /** @type {?} */ ((view.def.lastRenderRootNode))));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} ngContentIndex\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    var /** @type {?} */ hostView = /** @type {?} */ ((compView)).parent;\n    var /** @type {?} */ hostElDef = viewParentEl(/** @type {?} */ ((compView)));\n    var /** @type {?} */ startIndex = /** @type {?} */ ((hostElDef)).nodeIndex + 1;\n    var /** @type {?} */ endIndex = /** @type {?} */ ((hostElDef)).nodeIndex + /** @type {?} */ ((hostElDef)).childCount;\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = /** @type {?} */ ((hostView)).def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(/** @type {?} */ ((hostView)), nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!/** @type {?} */ ((hostView)).parent) {\n        // a root view\n        var /** @type {?} */ projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (var /** @type {?} */ i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, /** @type {?} */ ((nodeDef.ngContent)).index, action, parentNode, nextSibling, target);\n    }\n    else {\n        var /** @type {?} */ rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                var /** @type {?} */ compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            var /** @type {?} */ embeddedViews = /** @type {?} */ ((asElementData(view, nodeDef.nodeIndex).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !/** @type {?} */ ((nodeDef.element)).name) {\n            visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            /** @type {?} */ ((target)).push(renderNode);\n            break;\n    }\n}\nvar NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        var /** @type {?} */ match = /** @type {?} */ ((name.match(NS_PREFIX_RE)));\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\n/**\n * @param {?} bindings\n * @return {?}\n */\nfunction calcBindingFlags(bindings) {\n    var /** @type {?} */ flags = 0;\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        flags |= bindings[i].flags;\n    }\n    return flags;\n}\n/**\n * @param {?} valueCount\n * @param {?} constAndInterp\n * @return {?}\n */\nfunction interpolate(valueCount, constAndInterp) {\n    var /** @type {?} */ result = '';\n    for (var /** @type {?} */ i = 0; i < valueCount * 2; i = i + 2) {\n        result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n    }\n    return result + constAndInterp[valueCount * 2];\n}\n/**\n * @param {?} valueCount\n * @param {?} c0\n * @param {?} a1\n * @param {?} c1\n * @param {?=} a2\n * @param {?=} c2\n * @param {?=} a3\n * @param {?=} c3\n * @param {?=} a4\n * @param {?=} c4\n * @param {?=} a5\n * @param {?=} c5\n * @param {?=} a6\n * @param {?=} c6\n * @param {?=} a7\n * @param {?=} c7\n * @param {?=} a8\n * @param {?=} c8\n * @param {?=} a9\n * @param {?=} c9\n * @return {?}\n */\nfunction inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n    switch (valueCount) {\n        case 1:\n            return c0 + _toStringWithNull(a1) + c1;\n        case 2:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n        case 3:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3;\n        case 4:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4;\n        case 5:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n        case 6:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n        case 7:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7;\n        case 8:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n        case 9:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n        default:\n            throw new Error(\"Does not support more than 9 expressions\");\n    }\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction _toStringWithNull(v) {\n    return v != null ? v.toString() : '';\n}\nvar EMPTY_ARRAY$1 = [];\nvar EMPTY_MAP = {};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?=} handleEvent\n * @param {?=} templateFactory\n * @return {?}\n */\nfunction anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n    flags |= 1 /* TypeElement */;\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var /** @type {?} */ template = templateFactory ? resolveDefinition(templateFactory) : null;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        checkIndex: -1,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: {\n            ns: null,\n            name: null,\n            attrs: null, template: template,\n            componentProvider: null,\n            componentView: null,\n            componentRendererType: null,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?} namespaceAndName\n * @param {?=} fixedAttrs\n * @param {?=} bindings\n * @param {?=} outputs\n * @param {?=} handleEvent\n * @param {?=} componentView\n * @param {?=} componentRendererType\n * @return {?}\n */\nfunction elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n    if (fixedAttrs === void 0) { fixedAttrs = []; }\n    if (!handleEvent) {\n        handleEvent = NOOP;\n    }\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var /** @type {?} */ ns = /** @type {?} */ ((null));\n    var /** @type {?} */ name = /** @type {?} */ ((null));\n    if (namespaceAndName) {\n        _b = splitNamespace(namespaceAndName), ns = _b[0], name = _b[1];\n    }\n    bindings = bindings || [];\n    var /** @type {?} */ bindingDefs = new Array(bindings.length);\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        var _c = bindings[i], bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n        var _d = splitNamespace(namespaceAndName_1), ns_1 = _d[0], name_1 = _d[1];\n        var /** @type {?} */ securityContext = /** @type {?} */ ((undefined));\n        var /** @type {?} */ suffix = /** @type {?} */ ((undefined));\n        switch (bindingFlags & 15 /* Types */) {\n            case 4 /* TypeElementStyle */:\n                suffix = /** @type {?} */ (suffixOrSecurityContext);\n                break;\n            case 1 /* TypeElementAttribute */:\n            case 8 /* TypeProperty */:\n                securityContext = /** @type {?} */ (suffixOrSecurityContext);\n                break;\n        }\n        bindingDefs[i] =\n            { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n    }\n    outputs = outputs || [];\n    var /** @type {?} */ outputDefs = new Array(outputs.length);\n    for (var /** @type {?} */ i = 0; i < outputs.length; i++) {\n        var _e = outputs[i], target = _e[0], eventName = _e[1];\n        outputDefs[i] = {\n            type: 0 /* ElementOutput */,\n            target: /** @type {?} */ (target), eventName: eventName,\n            propName: null\n        };\n    }\n    fixedAttrs = fixedAttrs || [];\n    var /** @type {?} */ attrs = /** @type {?} */ (fixedAttrs.map(function (_a) {\n        var namespaceAndName = _a[0], value = _a[1];\n        var _b = splitNamespace(namespaceAndName), ns = _b[0], name = _b[1];\n        return [ns, name, value];\n    }));\n    componentRendererType = resolveRendererType2(componentRendererType);\n    if (componentView) {\n        flags |= 33554432 /* ComponentView */;\n    }\n    flags |= 1 /* TypeElement */;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: bindingDefs,\n        bindingFlags: calcBindingFlags(bindingDefs),\n        outputs: outputDefs,\n        element: {\n            ns: ns,\n            name: name,\n            attrs: attrs,\n            template: null,\n            // will bet set by the view definition\n            componentProvider: null,\n            componentView: componentView || null,\n            componentRendererType: componentRendererType,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP,\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n    var _b;\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createElement(view, renderHost, def) {\n    var /** @type {?} */ elDef = /** @type {?} */ ((def.element));\n    var /** @type {?} */ rootSelectorOrNode = view.root.selectorOrNode;\n    var /** @type {?} */ renderer = view.renderer;\n    var /** @type {?} */ el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        el = renderer.selectRootElement(rootSelectorOrNode);\n    }\n    if (elDef.attrs) {\n        for (var /** @type {?} */ i = 0; i < elDef.attrs.length; i++) {\n            var _a = elDef.attrs[i], ns = _a[0], name_2 = _a[1], value = _a[2];\n            renderer.setAttribute(el, name_2, value, ns);\n        }\n    }\n    return el;\n}\n/**\n * @param {?} view\n * @param {?} compView\n * @param {?} def\n * @param {?} el\n * @return {?}\n */\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n        var /** @type {?} */ output = def.outputs[i];\n        var /** @type {?} */ handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n        var /** @type {?} */ listenTarget = output.target;\n        var /** @type {?} */ listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        var /** @type {?} */ disposable = /** @type {?} */ (listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure)); /** @type {?} */\n        ((view.disposables))[def.outputIndex + i] = disposable;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = def.bindings.length;\n    var /** @type {?} */ changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n        return false;\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ elData = asElementData(view, def.nodeIndex);\n    var /** @type {?} */ renderNode$$1 = elData.renderElement;\n    var /** @type {?} */ name = /** @type {?} */ ((binding.name));\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode$$1, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode$$1, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            var /** @type {?} */ bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode$$1, name, value);\n            break;\n    }\n    return true;\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    var /** @type {?} */ renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode$$1, name, ns);\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementClass(view, renderNode$$1, name, value) {\n    var /** @type {?} */ renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode$$1, name);\n    }\n    else {\n        renderer.removeClass(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementStyle(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ renderValue = view.root.sanitizer.sanitize(SecurityContext.STYLE, /** @type {?} */ (value));\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        var /** @type {?} */ unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    var /** @type {?} */ renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode$$1, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementProperty(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode$$1, name, renderValue);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar UNDEFINED_VALUE = new Object();\nvar InjectorRefTokenKey$1 = tokenKey(Injector);\nvar NgModuleRefTokenKey = tokenKey(NgModuleRef);\n/**\n * @param {?} scope\n * @param {?} factory\n * @return {?}\n */\n\n/**\n * @param {?} flags\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nfunction moduleProvideDef(flags, token, value, deps) {\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var /** @type {?} */ depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the module definition\n        index: -1,\n        deps: depDefs, flags: flags, token: token, value: value\n    };\n}\n/**\n * @param {?} providers\n * @return {?}\n */\nfunction moduleDef(providers) {\n    var /** @type {?} */ providersByKey = {};\n    var /** @type {?} */ modules = [];\n    var /** @type {?} */ isRoot = false;\n    for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n        var /** @type {?} */ provider = providers[i];\n        if (provider.token === APP_ROOT_SCOPE) {\n            isRoot = true;\n        }\n        if (provider.flags & 1073741824 /* TypeNgModule */) {\n            modules.push(provider.token);\n        }\n        provider.index = i;\n        providersByKey[tokenKey(provider.token)] = provider;\n    }\n    return {\n        // Will be filled later...\n        factory: null,\n        providersByKey: providersByKey,\n        providers: providers,\n        modules: modules,\n        isRoot: isRoot,\n    };\n}\n/**\n * @param {?} data\n * @return {?}\n */\nfunction initNgModule(data) {\n    var /** @type {?} */ def = data._def;\n    var /** @type {?} */ providers = data._providers = new Array(def.providers.length);\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        if (!(provDef.flags & 4096 /* LazyProvider */)) {\n            providers[i] = _createProviderInstance$1(data, provDef);\n        }\n    }\n}\n/**\n * @param {?} data\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveNgModuleDep(data, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    if (depDef.flags & 1 /* SkipSelf */) {\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    switch (tokenKey$$1) {\n        case InjectorRefTokenKey$1:\n        case NgModuleRefTokenKey:\n            return data;\n    }\n    var /** @type {?} */ providerDef = data._def.providersByKey[tokenKey$$1];\n    if (providerDef) {\n        var /** @type {?} */ providerInstance = data._providers[providerDef.index];\n        if (providerInstance === undefined) {\n            providerInstance = data._providers[providerDef.index] =\n                _createProviderInstance$1(data, providerDef);\n        }\n        return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n    }\n    else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n        var /** @type {?} */ injectableDef_1 = /** @type {?} */ (depDef.token.ngInjectableDef);\n        var /** @type {?} */ key = tokenKey$$1;\n        var /** @type {?} */ index = data._providers.length;\n        data._def.providersByKey[depDef.tokenKey] = {\n            flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n            value: injectableDef_1.factory,\n            deps: [], index: index,\n            token: depDef.token,\n        };\n        var /** @type {?} */ former = setCurrentInjector(data);\n        try {\n            data._providers[index] = UNDEFINED_VALUE;\n            return (data._providers[index] =\n                _createProviderInstance$1(data, data._def.providersByKey[depDef.tokenKey]));\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    return data._parent.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} ngModule\n * @param {?} scope\n * @return {?}\n */\nfunction moduleTransitivelyPresent(ngModule, scope) {\n    return ngModule._def.modules.indexOf(scope) > -1;\n}\n/**\n * @param {?} ngModule\n * @param {?} def\n * @return {?}\n */\nfunction targetsModule(ngModule, def) {\n    return def.scope != null && (moduleTransitivelyPresent(ngModule, def.scope) ||\n        def.scope === APP_ROOT_SCOPE && ngModule._def.isRoot);\n}\n/**\n * @param {?} ngModule\n * @param {?} providerDef\n * @return {?}\n */\nfunction _createProviderInstance$1(ngModule, providerDef) {\n    var /** @type {?} */ injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction _createClass(ngModule, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction _callFactory(ngModule, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return factory.apply(void 0, depValues);\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n    var /** @type {?} */ def = ngModule._def;\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            var /** @type {?} */ instance = ngModule._providers[i];\n            if (instance && instance !== UNDEFINED_VALUE) {\n                instance.ngOnDestroy();\n            }\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} parentView\n * @param {?} elementData\n * @param {?} viewIndex\n * @param {?} view\n * @return {?}\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, /** @type {?} */ ((viewIndex)), view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    var /** @type {?} */ prevView = /** @type {?} */ ((viewIndex)) > 0 ? embeddedViews[/** @type {?} */ ((viewIndex)) - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\n/**\n * @param {?} vcElementData\n * @param {?} view\n * @return {?}\n */\nfunction attachProjectedView(vcElementData, view) {\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even accross component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(/** @type {?} */ ((view.parent)).def, /** @type {?} */ ((view.parentNodeDef)));\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeDef\n * @return {?}\n */\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    var /** @type {?} */ parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\n/**\n * @param {?} elementData\n * @param {?=} viewIndex\n * @return {?}\n */\nfunction detachEmbeddedView(elementData, viewIndex) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    var /** @type {?} */ view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\n/**\n * @param {?} elementData\n * @param {?} oldViewIndex\n * @param {?} newViewIndex\n * @return {?}\n */\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    var /** @type {?} */ view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    var /** @type {?} */ prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\n/**\n * @param {?} elementData\n * @param {?} prevView\n * @param {?} view\n * @return {?}\n */\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    var /** @type {?} */ prevRenderNode = prevView ? renderNode(prevView, /** @type {?} */ ((prevView.def.lastRenderRootNode))) :\n        elementData.renderElement;\n    var /** @type {?} */ parentNode = view.renderer.parentNode(prevRenderNode);\n    var /** @type {?} */ nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_CONTEXT = new Object();\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} ngContentSelectors\n * @return {?}\n */\nfunction createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n    return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\n/**\n * @param {?} componentFactory\n * @return {?}\n */\nfunction getComponentViewDefinitionFactory(componentFactory) {\n    return (/** @type {?} */ (componentFactory)).viewDefFactory;\n}\nvar ComponentFactory_ = /** @class */ (function (_super) {\n    __extends(ComponentFactory_, _super);\n    function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.selector = selector;\n        _this.componentType = componentType;\n        _this._inputs = _inputs;\n        _this._outputs = _outputs;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.viewDefFactory = viewDefFactory;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ inputsArr = [];\n            var /** @type {?} */ inputs = /** @type {?} */ ((this._inputs));\n            for (var /** @type {?} */ propName in inputs) {\n                var /** @type {?} */ templateName = inputs[propName];\n                inputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return inputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ outputsArr = [];\n            for (var /** @type {?} */ propName in this._outputs) {\n                var /** @type {?} */ templateName = this._outputs[propName];\n                outputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return outputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new component.\n     */\n    /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactory_.prototype.create = /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        var /** @type {?} */ viewDef = resolveDefinition(this.viewDefFactory);\n        var /** @type {?} */ componentNodeIndex = /** @type {?} */ ((/** @type {?} */ ((viewDef.nodes[0].element)).componentProvider)).nodeIndex;\n        var /** @type {?} */ view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        var /** @type {?} */ component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    };\n    return ComponentFactory_;\n}(ComponentFactory));\nvar ComponentRef_ = /** @class */ (function (_super) {\n    __extends(ComponentRef_, _super);\n    function ComponentRef_(_view, _viewRef, _component) {\n        var _this = _super.call(this) || this;\n        _this._view = _view;\n        _this._viewRef = _viewRef;\n        _this._component = _component;\n        _this._elDef = _this._view.def.nodes[0];\n        _this.hostView = _viewRef;\n        _this.changeDetectorRef = _viewRef;\n        _this.instance = _component;\n        return _this;\n    }\n    Object.defineProperty(ComponentRef_.prototype, \"location\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return /** @type {?} */ (this._component.constructor); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ComponentRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this._viewRef.destroy(); };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ComponentRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._viewRef.onDestroy(callback); };\n    return ComponentRef_;\n}(ComponentRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} elData\n * @return {?}\n */\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nvar ViewContainerRef_ = /** @class */ (function () {\n    function ViewContainerRef_(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * \\@internal\n         */\n        this._embeddedViews = [];\n    }\n    Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new ElementRef(this._data.renderElement); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ view = this._view;\n            var /** @type {?} */ elDef = this._elDef.parent;\n            while (!elDef && view) {\n                elDef = viewParentEl(view);\n                view = /** @type {?} */ ((view.parent));\n            }\n            return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.clear = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ len = this._embeddedViews.length;\n        for (var /** @type {?} */ i = len - 1; i >= 0; i--) {\n            var /** @type {?} */ view = /** @type {?} */ ((detachEmbeddedView(this._data, i)));\n            Services.destroyView(view);\n        }\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.get = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ view = this._embeddedViews[index];\n        if (view) {\n            var /** @type {?} */ ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    };\n    Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._embeddedViews.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createEmbeddedView = /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    function (templateRef, context, index) {\n        var /** @type {?} */ viewRef = templateRef.createEmbeddedView(context || /** @type {?} */ ({}));\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createComponent = /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        var /** @type {?} */ contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        var /** @type {?} */ componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.insert = /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ viewRef_ = /** @type {?} */ (viewRef);\n        var /** @type {?} */ viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.move = /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    function (viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.indexOf = /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        return this._embeddedViews.indexOf((/** @type {?} */ (viewRef))._view);\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.remove = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.detach = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    };\n    return ViewContainerRef_;\n}());\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nvar ViewRef_ = /** @class */ (function () {\n    function ViewRef_(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return rootRenderNodes(this._view); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._view.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.markForCheck = /**\n     * @return {?}\n     */\n    function () { markParentViewsForCheck(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detach = /**\n     * @return {?}\n     */\n    function () { this._view.state &= ~4 /* Attached */; };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detectChanges = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ fs = this._view.root.rendererFactory;\n        if (fs.begin) {\n            fs.begin();\n        }\n        try {\n            Services.checkAndUpdateView(this._view);\n        }\n        finally {\n            if (fs.end) {\n                fs.end();\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.checkNoChanges = /**\n     * @return {?}\n     */\n    function () { Services.checkNoChangesView(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.reattach = /**\n     * @return {?}\n     */\n    function () { this._view.state |= 4 /* Attached */; };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ViewRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(/** @type {?} */ (callback));\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detachFromAppRef = /**\n     * @return {?}\n     */\n    function () {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    };\n    /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToAppRef = /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToViewContainerRef = /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    return ViewRef_;\n}());\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nvar TemplateRef_ = /** @class */ (function (_super) {\n    __extends(TemplateRef_, _super);\n    function TemplateRef_(_parentView, _def) {\n        var _this = _super.call(this) || this;\n        _this._parentView = _parentView;\n        _this._def = _def;\n        return _this;\n    }\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateRef_.prototype.createEmbeddedView = /**\n     * @param {?} context\n     * @return {?}\n     */\n    function (context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, /** @type {?} */ ((/** @type {?} */ ((this._def.element)).template)), context));\n    };\n    Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateRef_;\n}(TemplateRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nfunction createInjector(view, elDef) {\n    return new Injector_(view, elDef);\n}\nvar Injector_ = /** @class */ (function () {\n    function Injector_(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    Injector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var /** @type {?} */ allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n    };\n    return Injector_;\n}());\n/**\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction nodeValue(view, index) {\n    var /** @type {?} */ def = view.def.nodes[index];\n    if (def.flags & 1 /* TypeElement */) {\n        var /** @type {?} */ elData = asElementData(view, def.nodeIndex);\n        return /** @type {?} */ ((def.element)).template ? elData.template : elData.renderElement;\n    }\n    else if (def.flags & 2 /* TypeText */) {\n        return asTextData(view, def.nodeIndex).renderText;\n    }\n    else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n        return asProviderData(view, def.nodeIndex).instance;\n    }\n    throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nvar RendererAdapter = /** @class */ (function () {\n    function RendererAdapter(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    RendererAdapter.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    RendererAdapter.prototype.createElement = /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    function (parent, namespaceAndName) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        var /** @type {?} */ el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    };\n    /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createViewRoot = /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    function (hostElement) { return hostElement; };\n    /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createTemplateAnchor = /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (parentElement) {\n        var /** @type {?} */ comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    RendererAdapter.prototype.createText = /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    function (parentElement, value) {\n        var /** @type {?} */ node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.projectNodes = /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (parentElement, nodes) {\n        for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    };\n    /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.attachViewAfter = /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (node, viewRootNodes) {\n        var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n        var /** @type {?} */ nextSibling = this.delegate.nextSibling(node);\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    };\n    /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.detachView = /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (viewRootNodes) {\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            var /** @type {?} */ node = viewRootNodes[i];\n            var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    };\n    /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.destroyView = /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    function (hostElement, viewAllNodes) {\n        for (var /** @type {?} */ i = 0; i < viewAllNodes.length; i++) {\n            /** @type {?} */ ((this.delegate.destroyNode))(viewAllNodes[i]);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listen = /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listenGlobal = /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, name, callback) {\n        return this.delegate.listen(target, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementProperty = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementAttribute = /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    function (renderElement, namespaceAndName, attributeValue) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setBindingDebugInfo = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) { };\n    /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementClass = /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    function (renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementStyle = /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    function (renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    RendererAdapter.prototype.invokeElementMethod = /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    function (renderElement, methodName, args) {\n        (/** @type {?} */ (renderElement))[methodName].apply(renderElement, args);\n    };\n    /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    RendererAdapter.prototype.setText = /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n    /**\n     * @return {?}\n     */\n    RendererAdapter.prototype.animate = /**\n     * @return {?}\n     */\n    function () { throw new Error('Renderer.animate is no longer supported!'); };\n    return RendererAdapter;\n}());\n/**\n * @param {?} moduleType\n * @param {?} parent\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nvar NgModuleRef_ = /** @class */ (function () {\n    function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        this.injector = this;\n        initNgModule(this);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @param {?=} injectFlags\n     * @return {?}\n     */\n    NgModuleRef_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @param {?=} injectFlags\n     * @return {?}\n     */\n    function (token, notFoundValue, injectFlags) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n        var /** @type {?} */ flags = 0;\n        if (injectFlags & 1 /* SkipSelf */) {\n            flags |= 1 /* SkipSelf */;\n        }\n        else if (injectFlags & 2 /* Self */) {\n            flags |= 4 /* Self */;\n        }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n    };\n    Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(this._moduleType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(ComponentFactoryResolver); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgModuleRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    NgModuleRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    return NgModuleRef_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RendererV1TokenKey = tokenKey(Renderer);\nvar Renderer2TokenKey = tokenKey(Renderer2);\nvar ElementRefTokenKey = tokenKey(ElementRef);\nvar ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nvar TemplateRefTokenKey = tokenKey(TemplateRef);\nvar ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nvar InjectorRefTokenKey = tokenKey(Injector);\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} childCount\n * @param {?} ctor\n * @param {?} deps\n * @param {?=} props\n * @param {?=} outputs\n * @return {?}\n */\nfunction directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n    var /** @type {?} */ bindings = [];\n    if (props) {\n        for (var /** @type {?} */ prop in props) {\n            var _a = props[prop], bindingIndex = _a[0], nonMinifiedName = _a[1];\n            bindings[bindingIndex] = {\n                flags: 8 /* TypeProperty */,\n                name: prop, nonMinifiedName: nonMinifiedName,\n                ns: null,\n                securityContext: null,\n                suffix: null\n            };\n        }\n    }\n    var /** @type {?} */ outputDefs = [];\n    if (outputs) {\n        for (var /** @type {?} */ propName in outputs) {\n            outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n        }\n    }\n    flags |= 16384 /* TypeDirective */;\n    return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\n/**\n * @param {?} flags\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction pipeDef(flags, ctor, deps) {\n    flags |= 16 /* TypePipe */;\n    return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nfunction providerDef(flags, matchedQueries, token, value, deps) {\n    return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} childCount\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @param {?=} bindings\n * @param {?=} outputs\n * @return {?}\n */\nfunction _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    if (!outputs) {\n        outputs = [];\n    }\n    if (!bindings) {\n        bindings = [];\n    }\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var /** @type {?} */ depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n        ngContentIndex: -1, childCount: childCount, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n        element: null,\n        provider: { token: token, value: value, deps: depDefs },\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createProviderInstance(view, def) {\n    return _createProviderInstance(view, def);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPipeInstance(view, def) {\n    // deps are looked up from component.\n    var /** @type {?} */ compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    // pipes can see the private services of the component\n    var /** @type {?} */ allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(/** @type {?} */ ((compView.parent)), /** @type {?} */ ((viewParentEl(compView))), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createDirectiveInstance(view, def) {\n    // components can see other private services, other directives can't.\n    var /** @type {?} */ allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    // directives are always eager and classes!\n    var /** @type {?} */ instance = createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n    if (def.outputs.length) {\n        for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n            var /** @type {?} */ output = def.outputs[i];\n            var /** @type {?} */ subscription = instance[/** @type {?} */ ((output.propName))].subscribe(eventHandlerClosure(view, /** @type {?} */ ((def.parent)).nodeIndex, output.eventName)); /** @type {?} */\n            ((view.disposables))[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n        }\n    }\n    return instance;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = /** @type {?} */ ((undefined));\n    var /** @type {?} */ bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    var /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = /** @type {?} */ ((undefined));\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction _createProviderInstance(view, def) {\n    // private services can see other private services\n    var /** @type {?} */ allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    var /** @type {?} */ providerDef = def.provider;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            return createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 1024 /* TypeFactoryProvider */:\n            return callFactory(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 2048 /* TypeUseExistingProvider */:\n            return resolveDep(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).deps[0]);\n        case 256 /* TypeValueProvider */:\n            return /** @type {?} */ ((providerDef)).value;\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return factory.apply(void 0, depValues);\n    }\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nvar NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    var /** @type {?} */ startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && /** @type {?} */ ((elDef.element)).componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = /** @type {?} */ ((elDef.parent));\n    }\n    var /** @type {?} */ searchView = view;\n    while (searchView) {\n        if (elDef) {\n            switch (tokenKey$$1) {\n                case RendererV1TokenKey: {\n                    var /** @type {?} */ compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    var /** @type {?} */ compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (/** @type {?} */ ((elDef.element)).template) {\n                        return asElementData(searchView, elDef.nodeIndex).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    var /** @type {?} */ cdView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey:\n                    return createInjector(searchView, elDef);\n                default:\n                    var /** @type {?} */ providerDef_1 = /** @type {?} */ (((allowPrivateServices ? /** @type {?} */ ((elDef.element)).allProviders : /** @type {?} */ ((elDef.element)).publicProviders)))[tokenKey$$1];\n                    if (providerDef_1) {\n                        var /** @type {?} */ providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                        if (!providerData) {\n                            providerData = { instance: _createProviderInstance(searchView, providerDef_1) };\n                            searchView.nodes[providerDef_1.nodeIndex] = /** @type {?} */ (providerData);\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(searchView);\n        elDef = /** @type {?} */ ((viewParentEl(searchView)));\n        searchView = /** @type {?} */ ((searchView.parent));\n        if (depDef.flags & 4 /* Self */) {\n            searchView = null;\n        }\n    }\n    var /** @type {?} */ value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @return {?}\n */\nfunction findCompView(view, elDef, allowPrivateServices) {\n    var /** @type {?} */ compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.nodeIndex).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\n/**\n * @param {?} view\n * @param {?} providerData\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((def.parent)).nodeIndex).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ propName = /** @type {?} */ ((binding.name));\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        var /** @type {?} */ oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n        var /** @type {?} */ binding_1 = def.bindings[bindingIdx];\n        changes[/** @type {?} */ ((binding_1.nonMinifiedName))] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    var /** @type {?} */ nodes = view.def.nodes;\n    var /** @type {?} */ initIndex = 0;\n    for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n        var /** @type {?} */ nodeDef = nodes[i];\n        var /** @type {?} */ parent_1 = nodeDef.parent;\n        if (!parent_1 && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n            i === parent_1.nodeIndex + parent_1.childCount) {\n            // last child of an element\n            if (parent_1.directChildFlags & lifecycles) {\n                initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n            }\n            parent_1 = parent_1.parent;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} lifecycles\n * @param {?} initIndex\n * @return {?}\n */\nfunction callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n    for (var /** @type {?} */ i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n    return initIndex;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} lifecycles\n * @param {?} initIndex\n * @return {?}\n */\nfunction callProviderLifecycles(view, index, lifecycles, initIndex) {\n    var /** @type {?} */ providerData = asProviderData(view, index);\n    if (!providerData) {\n        return;\n    }\n    var /** @type {?} */ provider = providerData.instance;\n    if (!provider) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */ &&\n        shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */ &&\n        shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} flags\n * @param {?} id\n * @param {?} bindings\n * @return {?}\n */\nfunction queryDef(flags, id, bindings) {\n    var /** @type {?} */ bindingDefs = [];\n    for (var /** @type {?} */ propName in bindings) {\n        var /** @type {?} */ bindingType = bindings[propName];\n        bindingDefs.push({ propName: propName, bindingType: bindingType });\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        // TODO(vicb): check\n        checkIndex: -1, flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        ngContentIndex: -1,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n        ngContent: null\n    };\n}\n/**\n * @return {?}\n */\nfunction createQuery() {\n    return new QueryList();\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction dirtyParentQueries(view) {\n    var /** @type {?} */ queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        var /** @type {?} */ tplDef = /** @type {?} */ ((view.parentNodeDef));\n        view = view.parent;\n        // content queries\n        var /** @type {?} */ end = tplDef.nodeIndex + tplDef.childCount;\n        for (var /** @type {?} */ i = 0; i <= end; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (/** @type {?} */ ((nodeDef.query)).filterId & queryIds) === /** @type {?} */ ((nodeDef.query)).filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (var /** @type {?} */ i = 0; i < view.def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkAndUpdateQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (!queryList.dirty) {\n        return;\n    }\n    var /** @type {?} */ directiveInstance;\n    var /** @type {?} */ newValues = /** @type {?} */ ((undefined));\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        var /** @type {?} */ elementDef = /** @type {?} */ ((/** @type {?} */ ((nodeDef.parent)).parent));\n        newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = asProviderData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    var /** @type {?} */ bindings = /** @type {?} */ ((nodeDef.query)).bindings;\n    var /** @type {?} */ notify = false;\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        var /** @type {?} */ binding = bindings[i];\n        var /** @type {?} */ boundValue = void 0;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryDef\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        var /** @type {?} */ valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && /** @type {?} */ ((nodeDef.element)).template &&\n            (/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).template)).nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            var /** @type {?} */ elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n                for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                    var /** @type {?} */ embeddedView = embeddedViews[k];\n                    var /** @type {?} */ dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            var /** @type {?} */ projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ k = 0; k < projectedViews.length; k++) {\n                    var /** @type {?} */ projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryValueType\n * @return {?}\n */\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                return asElementData(view, nodeDef.nodeIndex).renderElement;\n            case 0 /* ElementRef */:\n                return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n            case 2 /* TemplateRef */:\n                return asElementData(view, nodeDef.nodeIndex).template;\n            case 3 /* ViewContainerRef */:\n                return asElementData(view, nodeDef.nodeIndex).viewContainer;\n            case 4 /* Provider */:\n                return asProviderData(view, nodeDef.nodeIndex).instance;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ngContentIndex\n * @param {?} index\n * @return {?}\n */\nfunction ngContentDef(ngContentIndex, index) {\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: -1,\n        flags: 8 /* TypeNgContent */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: { index: index }\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction appendNgContent(view, renderHost, def) {\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    var /** @type {?} */ ngContentIndex = /** @type {?} */ ((def.ngContent)).index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} checkIndex\n * @param {?} argCount\n * @return {?}\n */\nfunction purePipeDef(checkIndex, argCount) {\n    // argCount + 1 to include the pipe as first arg\n    return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n}\n/**\n * @param {?} checkIndex\n * @param {?} argCount\n * @return {?}\n */\nfunction pureArrayDef(checkIndex, argCount) {\n    return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n}\n/**\n * @param {?} checkIndex\n * @param {?} propToIndex\n * @return {?}\n */\nfunction pureObjectDef(checkIndex, propToIndex) {\n    var /** @type {?} */ keys = Object.keys(propToIndex);\n    var /** @type {?} */ nbKeys = keys.length;\n    var /** @type {?} */ propertyNames = new Array(nbKeys);\n    for (var /** @type {?} */ i = 0; i < nbKeys; i++) {\n        var /** @type {?} */ key = keys[i];\n        var /** @type {?} */ index = propToIndex[key];\n        propertyNames[index] = key;\n    }\n    return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n}\n/**\n * @param {?} flags\n * @param {?} checkIndex\n * @param {?} propertyNames\n * @return {?}\n */\nfunction _pureExpressionDef(flags, checkIndex, propertyNames) {\n    var /** @type {?} */ bindings = new Array(propertyNames.length);\n    for (var /** @type {?} */ i = 0; i < propertyNames.length; i++) {\n        var /** @type {?} */ prop = propertyNames[i];\n        bindings[i] = {\n            flags: 8 /* TypeProperty */,\n            name: prop,\n            ns: null,\n            nonMinifiedName: prop,\n            securityContext: null,\n            suffix: null\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        ngContentIndex: -1,\n        childCount: 0, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[/** @type {?} */ ((bindings[0].name))] = v0;\n                if (bindLen > 1)\n                    value[/** @type {?} */ ((bindings[1].name))] = v1;\n                if (bindLen > 2)\n                    value[/** @type {?} */ ((bindings[2].name))] = v2;\n                if (bindLen > 3)\n                    value[/** @type {?} */ ((bindings[3].name))] = v3;\n                if (bindLen > 4)\n                    value[/** @type {?} */ ((bindings[4].name))] = v4;\n                if (bindLen > 5)\n                    value[/** @type {?} */ ((bindings[5].name))] = v5;\n                if (bindLen > 6)\n                    value[/** @type {?} */ ((bindings[6].name))] = v6;\n                if (bindLen > 7)\n                    value[/** @type {?} */ ((bindings[7].name))] = v7;\n                if (bindLen > 8)\n                    value[/** @type {?} */ ((bindings[8].name))] = v8;\n                if (bindLen > 9)\n                    value[/** @type {?} */ ((bindings[9].name))] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (var /** @type {?} */ i = 0; i < values.length; i++) {\n                    value[/** @type {?} */ ((bindings[i].name))] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = values[0];\n                var /** @type {?} */ params = values.slice(1);\n                value = pipe.transform.apply(pipe, params);\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} checkIndex\n * @param {?} ngContentIndex\n * @param {?} staticText\n * @return {?}\n */\nfunction textDef(checkIndex, ngContentIndex, staticText) {\n    var /** @type {?} */ bindings = new Array(staticText.length - 1);\n    for (var /** @type {?} */ i = 1; i < staticText.length; i++) {\n        bindings[i - 1] = {\n            flags: 8 /* TypeProperty */,\n            name: null,\n            ns: null,\n            nonMinifiedName: null,\n            securityContext: null,\n            suffix: staticText[i],\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: 2 /* TypeText */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0, bindings: bindings,\n        bindingFlags: 8 /* TypeProperty */,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: { prefix: staticText[0] },\n        query: null,\n        ngContent: null,\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createText(view, renderHost, def) {\n    var /** @type {?} */ renderNode$$1;\n    var /** @type {?} */ renderer = view.renderer;\n    renderNode$$1 = renderer.createText(/** @type {?} */ ((def.text)).prefix);\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode$$1);\n    }\n    return { renderText: renderNode$$1 };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ value = /** @type {?} */ ((def.text)).prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ value = '';\n        for (var /** @type {?} */ i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = /** @type {?} */ ((def.text)).prefix + value;\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} value\n * @param {?} binding\n * @return {?}\n */\nfunction _addInterpolationPart(value, binding) {\n    var /** @type {?} */ valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} flags\n * @param {?} nodes\n * @param {?=} updateDirectives\n * @param {?=} updateRenderer\n * @return {?}\n */\nfunction viewDef(flags, nodes, updateDirectives, updateRenderer) {\n    // clone nodes and set auto calculated values\n    var /** @type {?} */ viewBindingCount = 0;\n    var /** @type {?} */ viewDisposableCount = 0;\n    var /** @type {?} */ viewNodeFlags = 0;\n    var /** @type {?} */ viewRootNodeFlags = 0;\n    var /** @type {?} */ viewMatchedQueries = 0;\n    var /** @type {?} */ currentParent = null;\n    var /** @type {?} */ currentRenderParent = null;\n    var /** @type {?} */ currentElementHasPublicProviders = false;\n    var /** @type {?} */ currentElementHasPrivateProviders = false;\n    var /** @type {?} */ lastRenderRootNode = null;\n    for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n        var /** @type {?} */ node = nodes[i];\n        node.nodeIndex = i;\n        node.parent = currentParent;\n        node.bindingIndex = viewBindingCount;\n        node.outputIndex = viewDisposableCount;\n        node.renderParent = currentRenderParent;\n        viewNodeFlags |= node.flags;\n        viewMatchedQueries |= node.matchedQueryIds;\n        if (node.element) {\n            var /** @type {?} */ elDef = node.element;\n            elDef.publicProviders =\n                currentParent ? /** @type {?} */ ((currentParent.element)).publicProviders : Object.create(null);\n            elDef.allProviders = elDef.publicProviders;\n            // Note: We assume that all providers of an element are before any child element!\n            currentElementHasPublicProviders = false;\n            currentElementHasPrivateProviders = false;\n            if (node.element.template) {\n                viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        validateNode(currentParent, node, nodes.length);\n        viewBindingCount += node.bindings.length;\n        viewDisposableCount += node.outputs.length;\n        if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n            lastRenderRootNode = node;\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            if (!currentElementHasPublicProviders) {\n                currentElementHasPublicProviders = true; /** @type {?} */\n                ((/** @type {?} */ ((currentParent)).element)).publicProviders = Object.create(/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders); /** @type {?} */\n                ((/** @type {?} */ ((currentParent)).element)).allProviders = /** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders;\n            }\n            var /** @type {?} */ isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n            var /** @type {?} */ isComponent = (node.flags & 32768 /* Component */) !== 0;\n            if (!isPrivateService || isComponent) {\n                /** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            else {\n                if (!currentElementHasPrivateProviders) {\n                    currentElementHasPrivateProviders = true; /** @type {?} */\n                    ((/** @type {?} */ ((currentParent)).element)).allProviders = Object.create(/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders);\n                } /** @type {?} */\n                ((/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).allProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            if (isComponent) {\n                /** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).componentProvider = node;\n            }\n        }\n        if (currentParent) {\n            currentParent.childFlags |= node.flags;\n            currentParent.directChildFlags |= node.flags;\n            currentParent.childMatchedQueries |= node.matchedQueryIds;\n            if (node.element && node.element.template) {\n                currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        else {\n            viewRootNodeFlags |= node.flags;\n        }\n        if (node.childCount > 0) {\n            currentParent = node;\n            if (!isNgContainer(node)) {\n                currentRenderParent = node;\n            }\n        }\n        else {\n            // When the current node has no children, check if it is the last children of its parent.\n            // When it is, propagate the flags up.\n            // The loop is required because an element could be the last transitive children of several\n            // elements. We loop to either the root or the highest opened element (= with remaining\n            // children)\n            while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                var /** @type {?} */ newParent = currentParent.parent;\n                if (newParent) {\n                    newParent.childFlags |= currentParent.childFlags;\n                    newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                }\n                currentParent = newParent;\n                // We also need to update the render parent & account for ng-container\n                if (currentParent && isNgContainer(currentParent)) {\n                    currentRenderParent = currentParent.renderParent;\n                }\n                else {\n                    currentRenderParent = currentParent;\n                }\n            }\n        }\n    }\n    var /** @type {?} */ handleEvent = function (view, nodeIndex, eventName, event) { return ((/** @type {?} */ ((nodes[nodeIndex].element)).handleEvent))(view, eventName, event); };\n    return {\n        // Will be filled later...\n        factory: null,\n        nodeFlags: viewNodeFlags,\n        rootNodeFlags: viewRootNodeFlags,\n        nodeMatchedQueries: viewMatchedQueries, flags: flags,\n        nodes: nodes,\n        updateDirectives: updateDirectives || NOOP,\n        updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n        bindingCount: viewBindingCount,\n        outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n    };\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction isNgContainer(node) {\n    return (node.flags & 1 /* TypeElement */) !== 0 && /** @type {?} */ ((node.element)).name === null;\n}\n/**\n * @param {?} parent\n * @param {?} node\n * @param {?} nodeCount\n * @return {?}\n */\nfunction validateNode(parent, node, nodeCount) {\n    var /** @type {?} */ template = node.element && node.element.template;\n    if (template) {\n        if (!template.lastRenderRootNode) {\n            throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n        }\n        if (template.lastRenderRootNode &&\n            template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n            throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.flags & 20224 /* CatProvider */) {\n        var /** @type {?} */ parentFlags = parent ? parent.flags : 0;\n        if ((parentFlags & 1 /* TypeElement */) === 0) {\n            throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.query) {\n        if (node.flags & 67108864 /* TypeContentQuery */ &&\n            (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n            throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n        }\n        if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n            throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.childCount) {\n        var /** @type {?} */ parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n        if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n            throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n    // embedded views are seen as siblings to the anchor, so we need\n    // to get the parent of the anchor and use it as parentIndex.\n    var /** @type {?} */ view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nfunction createRootView(root, def, context) {\n    var /** @type {?} */ view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    var /** @type {?} */ rendererType = /** @type {?} */ ((nodeDef.element)).componentRendererType;\n    var /** @type {?} */ compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, /** @type {?} */ ((nodeDef.element)).componentProvider, viewDef);\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    var /** @type {?} */ nodes = new Array(def.nodes.length);\n    var /** @type {?} */ disposables = def.outputCount ? new Array(def.outputCount) : null;\n    var /** @type {?} */ view = {\n        def: def,\n        parent: parent,\n        viewContainerParent: null, parentNodeDef: parentNodeDef,\n        context: null,\n        component: null, nodes: nodes,\n        state: 13 /* CatInit */, root: root, renderer: renderer,\n        oldValues: new Array(def.bindingCount), disposables: disposables,\n        initIndex: -1\n    };\n    return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view) {\n    var /** @type {?} */ renderHost;\n    if (isComponentView(view)) {\n        var /** @type {?} */ hostDef = view.parentNodeDef;\n        renderHost = asElementData(/** @type {?} */ ((view.parent)), /** @type {?} */ ((/** @type {?} */ ((hostDef)).parent)).nodeIndex).renderElement;\n    }\n    var /** @type {?} */ def = view.def;\n    var /** @type {?} */ nodes = view.nodes;\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        var /** @type {?} */ nodeData = void 0;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                var /** @type {?} */ el = /** @type {?} */ (createElement(view, renderHost, nodeDef));\n                var /** @type {?} */ componentView = /** @type {?} */ ((undefined));\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    var /** @type {?} */ compViewDef = resolveDefinition(/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).componentView)));\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = /** @type {?} */ ({\n                    renderElement: el,\n                    componentView: componentView,\n                    viewContainer: null,\n                    template: /** @type {?} */ ((nodeDef.element)).template ? createTemplateData(view, nodeDef) : undefined\n                });\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = /** @type {?} */ (createText(view, renderHost, nodeDef));\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                nodeData = nodes[i];\n                if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                    var /** @type {?} */ instance = createProviderInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance: instance });\n                }\n                break;\n            }\n            case 16 /* TypePipe */: {\n                var /** @type {?} */ instance = createPipeInstance(view, nodeDef);\n                nodeData = /** @type {?} */ ({ instance: instance });\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                nodeData = nodes[i];\n                if (!nodeData) {\n                    var /** @type {?} */ instance = createDirectiveInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance: instance });\n                }\n                if (nodeDef.flags & 32768 /* Component */) {\n                    var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).componentView;\n                    initView(compView, nodeData.instance, nodeData.instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = /** @type {?} */ (createPureExpression(view, nodeDef));\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = /** @type {?} */ (createQuery());\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    var /** @type {?} */ callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markProjectedViewsForCheck(view) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            var /** @type {?} */ projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                    var /** @type {?} */ projectedView = projectedViews[i_1];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementDynamic(view, nodeDef, values);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextDynamic(view, nodeDef, values);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" not dirty\", \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (var /** @type {?} */ i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view) {\n    var /** @type {?} */ len = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        var /** @type {?} */ def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\n/** @enum {number} */\nvar ViewAction = {\n    CreateViewNodes: 0,\n    CheckNoChanges: 1,\n    CheckNoChangesProjectedViews: 2,\n    CheckAndUpdate: 3,\n    CheckAndUpdateProjectedViews: 4,\n    Destroy: 5,\n};\nViewAction[ViewAction.CreateViewNodes] = \"CreateViewNodes\";\nViewAction[ViewAction.CheckNoChanges] = \"CheckNoChanges\";\nViewAction[ViewAction.CheckNoChangesProjectedViews] = \"CheckNoChangesProjectedViews\";\nViewAction[ViewAction.CheckAndUpdate] = \"CheckAndUpdate\";\nViewAction[ViewAction.CheckAndUpdateProjectedViews] = \"CheckAndUpdateProjectedViews\";\nViewAction[ViewAction.Destroy] = \"Destroy\";\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            // a leaf\n            var /** @type {?} */ embeddedViews = /** @type {?} */ ((asElementData(view, i).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view, action) {\n    var /** @type {?} */ viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} checkType\n * @return {?}\n */\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    var /** @type {?} */ nodeCount = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < nodeCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.nodeIndex);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar initialized = false;\n/**\n * @return {?}\n */\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var /** @type {?} */ services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.overrideComponentView = services.overrideComponentView;\n    Services.clearOverrides = services.clearOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n    return {\n        setCurrentNode: function () { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        overrideComponentView: NOOP,\n        clearOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: function (view, nodeIndex, eventName, event) {\n            return view.def.handleEvent(view, nodeIndex, eventName, event);\n        },\n        updateDirectives: function (view, checkType) {\n            return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n        updateRenderer: function (view, checkType) {\n            return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n    };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        overrideComponentView: debugOverrideComponentView,\n        clearOverrides: debugClearOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    var /** @type {?} */ root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n/**\n * @param {?} elInjector\n * @param {?} ngModule\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    var /** @type {?} */ sanitizer = ngModule.injector.get(Sanitizer);\n    var /** @type {?} */ errorHandler = ngModule.injector.get(ErrorHandler);\n    var /** @type {?} */ renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule: ngModule,\n        injector: elInjector, projectableNodes: projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n    };\n}\n/**\n * @param {?} parentView\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n    var /** @type {?} */ overrideComponentView = viewDefOverrides.get(/** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).componentProvider)).provider)).token);\n    if (overrideComponentView) {\n        viewDef$$1 = overrideComponentView;\n    }\n    else {\n        viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n    }\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n}\n/**\n * @param {?} moduleType\n * @param {?} parentInjector\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\nvar providerOverrides = new Map();\nvar viewDefOverrides = new Map();\n/**\n * @param {?} override\n * @return {?}\n */\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n}\n/**\n * @param {?} comp\n * @param {?} compFactory\n * @return {?}\n */\nfunction debugOverrideComponentView(comp, compFactory) {\n    var /** @type {?} */ hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n    var /** @type {?} */ compViewDef = resolveDefinition(/** @type {?} */ ((/** @type {?} */ ((hostViewDef.nodes[0].element)).componentView)));\n    viewDefOverrides.set(comp, compViewDef);\n}\n/**\n * @return {?}\n */\nfunction debugClearOverrides() {\n    providerOverrides.clear();\n    viewDefOverrides.clear();\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    var /** @type {?} */ elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    for (var /** @type {?} */ i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function findElementIndicesWithOverwrittenProviders(def) {\n        var /** @type {?} */ elIndicesWithOverwrittenProviders = [];\n        var /** @type {?} */ lastElementDef = null;\n        for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(/** @type {?} */ ((nodeDef.provider)).token)) {\n                elIndicesWithOverwrittenProviders.push(/** @type {?} */ ((lastElementDef)).nodeIndex);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    /**\n     * @param {?} viewDef\n     * @param {?} elIndex\n     * @return {?}\n     */\n    function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n        for (var /** @type {?} */ i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                var /** @type {?} */ provider = /** @type {?} */ ((nodeDef.provider));\n                var /** @type {?} */ override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToNgModule(def) {\n    var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n    if (!hasOverrides) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    applyProviderOverrides(def);\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function calcHasOverrides(def) {\n        var /** @type {?} */ hasOverrides = false;\n        var /** @type {?} */ hasDeprecatedOverrides = false;\n        if (providerOverrides.size === 0) {\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        def.providers.forEach(function (node) {\n            var /** @type {?} */ override = providerOverrides.get(node.token);\n            if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                hasOverrides = true;\n                hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n            }\n        });\n        return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n    }\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function applyProviderOverrides(def) {\n        for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n            var /** @type {?} */ provider = def.providers[i];\n            if (hasDeprecatedOverrides) {\n                // We had a bug where me made\n                // all providers lazy. Keep this logic behind a flag\n                // for migrating existing users.\n                provider.flags |= 4096 /* LazyProvider */;\n            }\n            var /** @type {?} */ override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\n/** @enum {number} */\nvar DebugAction = {\n    create: 0,\n    detectChanges: 1,\n    checkNoChanges: 2,\n    destroy: 3,\n    handleEvent: 4,\n};\nDebugAction[DebugAction.create] = \"create\";\nDebugAction[DebugAction.detectChanges] = \"detectChanges\";\nDebugAction[DebugAction.checkNoChanges] = \"checkNoChanges\";\nDebugAction[DebugAction.destroy] = \"destroy\";\nDebugAction[DebugAction.handleEvent] = \"handleEvent\";\nvar _currentAction;\nvar _currentView;\nvar _currentNodeIndex;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    var /** @type {?} */ changed = (/** @type {?} */ (checkAndUpdateNode)).apply(void 0, [view, nodeDef, argStyle].concat(givenValues));\n    if (changed) {\n        var /** @type {?} */ values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            var /** @type {?} */ bindingValues = {};\n            for (var /** @type {?} */ i = 0; i < nodeDef.bindings.length; i++) {\n                var /** @type {?} */ binding = nodeDef.bindings[i];\n                var /** @type {?} */ value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(/** @type {?} */ ((binding.nonMinifiedName)))] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            var /** @type {?} */ elDef = /** @type {?} */ ((nodeDef.parent));\n            var /** @type {?} */ el = asElementData(view, elDef.nodeIndex).renderElement;\n            if (!/** @type {?} */ ((elDef.element)).name) {\n                // a comment.\n                view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n            }\n            else {\n                // a regular element.\n                for (var /** @type {?} */ attr in bindingValues) {\n                    var /** @type {?} */ value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} values\n * @return {?}\n */\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    (/** @type {?} */ (checkNoChangesNode)).apply(void 0, [view, nodeDef, argStyle].concat(values));\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return \"ng-reflect-\" + name;\n}\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return '-' + m[1].toLowerCase();\n    });\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (/** @type {?} */ e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nvar DebugContext_ = /** @class */ (function () {\n    function DebugContext_(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ elDef = this.nodeDef;\n        var /** @type {?} */ elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = /** @type {?} */ ((elDef.parent));\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = /** @type {?} */ ((viewParentEl(elView)));\n                elView = /** @type {?} */ ((elView.parent));\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Has to be done lazily as we use the DebugContext also during creation of elements...\n            return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return createInjector(this.elView, this.elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"component\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ tokens = [];\n            if (this.elDef) {\n                for (var /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        tokens.push(/** @type {?} */ ((childDef.provider)).token);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return tokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ references = {};\n            if (this.elDef) {\n                collectReferences(this.elView, this.elDef, references);\n                for (var /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        collectReferences(this.elView, childDef, references);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return references;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ elData = findHostElement(this.elOrCompView);\n            return elData ? elData.renderElement : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                renderNode(this.elView, this.elDef);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    DebugContext_.prototype.logError = /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        var /** @type {?} */ logViewDef;\n        var /** @type {?} */ logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.nodeIndex;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.nodeIndex;\n        }\n        // Note: we only generate a log function for text and element nodes\n        // to make the generated code as small as possible.\n        var /** @type {?} */ renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        var /** @type {?} */ currRenderNodeIndex = -1;\n        var /** @type {?} */ nodeLogger = function () {\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return (_a = console.error).bind.apply(_a, [console].concat(values));\n            }\n            else {\n                return NOOP;\n            }\n            var _a;\n        }; /** @type {?} */\n        ((logViewDef.factory))(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error.apply(console, values);\n        }\n    };\n    return DebugContext_;\n}());\n/**\n * @param {?} viewDef\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction getRenderNodeIndex(viewDef$$1, nodeIndex) {\n    var /** @type {?} */ renderNodeIndex = -1;\n    for (var /** @type {?} */ i = 0; i <= nodeIndex; i++) {\n        var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = /** @type {?} */ ((view.parent));\n    }\n    if (view.parent) {\n        return asElementData(view.parent, /** @type {?} */ ((viewParentEl(view))).nodeIndex);\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view, nodeDef, references) {\n    for (var /** @type {?} */ refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action, fn, self, args) {\n    var /** @type {?} */ oldAction = _currentAction;\n    var /** @type {?} */ oldView = _currentView;\n    var /** @type {?} */ oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        var /** @type {?} */ result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (/** @type {?} */ e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, /** @type {?} */ ((getCurrentDebugContext())));\n    }\n}\n/**\n * @return {?}\n */\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nvar DebugRendererFactory2 = /** @class */ (function () {\n    function DebugRendererFactory2(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.createRenderer = /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    function (element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.begin = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.end = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.whenRenderingDone = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    };\n    return DebugRendererFactory2;\n}());\nvar DebugRenderer2 = /** @class */ (function () {\n    function DebugRenderer2(delegate) {\n        this.delegate = delegate;\n        this.data = this.delegate.data;\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroyNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        removeDebugNodeFromIndex(/** @type {?} */ ((getDebugNode(node))));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this.delegate.destroy(); };\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createElement = /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (name, namespace) {\n        var /** @type {?} */ el = this.delegate.createElement(name, namespace);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            var /** @type {?} */ debugEl = new DebugElement(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createComment = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ comment = this.delegate.createComment(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(comment, null, debugCtx));\n        }\n        return comment;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createText = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ text = this.delegate.createText(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(text, null, debugCtx));\n        }\n        return text;\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.appendChild = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (parent, newChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.insertBefore = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    function (parent, newChild, refChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        var /** @type {?} */ debugRefEl = /** @type {?} */ ((getDebugNode(refChild)));\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeChild = /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    function (parent, oldChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    };\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    DebugRenderer2.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        var /** @type {?} */ el = this.delegate.selectRootElement(selectorOrNode);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement(el, null, debugCtx));\n        }\n        return el;\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, value, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.addClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, value, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setProperty = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (el, name, value) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    DebugRenderer2.prototype.listen = /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, eventName, callback) {\n        if (typeof target !== 'string') {\n            var /** @type {?} */ debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.parentNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.parentNode(node); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.nextSibling = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.nextSibling(node); };\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setValue = /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    function (node, value) { return this.delegate.setValue(node, value); };\n    return DebugRenderer2;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} override\n * @return {?}\n */\nfunction overrideProvider(override) {\n    initServicesIfNeeded();\n    return Services.overrideProvider(override);\n}\n/**\n * @param {?} comp\n * @param {?} componentFactory\n * @return {?}\n */\nfunction overrideComponentView(comp, componentFactory) {\n    initServicesIfNeeded();\n    return Services.overrideComponentView(comp, componentFactory);\n}\n/**\n * @return {?}\n */\nfunction clearOverrides() {\n    initServicesIfNeeded();\n    return Services.clearOverrides();\n}\n/**\n * @param {?} ngModuleType\n * @param {?} bootstrapComponents\n * @param {?} defFactory\n * @return {?}\n */\nfunction createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n    return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\nvar NgModuleFactory_ = /** @class */ (function (_super) {\n    __extends(NgModuleFactory_, _super);\n    function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.moduleType = moduleType;\n        _this._bootstrapComponents = _bootstrapComponents;\n        _this._ngModuleDefFactory = _ngModuleDefFactory;\n        return _this;\n    }\n    /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    NgModuleFactory_.prototype.create = /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    function (parentInjector) {\n        initServicesIfNeeded();\n        var /** @type {?} */ def = resolveDefinition(this._ngModuleDefFactory);\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    };\n    return NgModuleFactory_;\n}(NgModuleFactory));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// The functions in this file verify that the assumptions we are making\n// about state in an instruction are correct before implementing any logic.\n// They are meant only to be called in dev mode as sanity checks.\n/**\n * @param {?} actual\n * @param {?} msg\n * @return {?}\n */\n\n/**\n * @template T\n * @param {?} actual\n * @param {?} expected\n * @param {?} msg\n * @return {?}\n */\nfunction assertEqual(actual, expected, msg) {\n    if (actual != expected) {\n        throwError(msg);\n    }\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} expected\n * @param {?} msg\n * @return {?}\n */\nfunction assertNotEqual(actual, expected, msg) {\n    if (actual == expected) {\n        throwError(msg);\n    }\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} expected\n * @param {?} msg\n * @return {?}\n */\nfunction assertSame(actual, expected, msg) {\n    if (actual !== expected) {\n        throwError(msg);\n    }\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} expected\n * @param {?} msg\n * @return {?}\n */\nfunction assertLessThan(actual, expected, msg) {\n    if (actual >= expected) {\n        throwError(msg);\n    }\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} msg\n * @return {?}\n */\nfunction assertNull(actual, msg) {\n    if (actual != null) {\n        throwError(msg);\n    }\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} msg\n * @return {?}\n */\nfunction assertNotNull(actual, msg) {\n    if (actual == null) {\n        throwError(msg);\n    }\n}\n/**\n * @param {?} msg\n * @return {?}\n */\nfunction throwError(msg) {\n    throw new Error(\"ASSERTION ERROR: \" + msg);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n * TView.initHooks during directiveCreate.\n *\n * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n * directive index), then saved in the even indices of the initHooks array. The odd indices\n * hold the hook functions themselves.\n *\n * @param {?} index The index of the directive in LView.data\n * @param {?} onInit\n * @param {?} doCheck\n * @param {?} tView The current TView\n * @return {?}\n */\nfunction queueInitHooks(index, onInit, doCheck, tView) {\n    if (tView.firstTemplatePass === true) {\n        if (onInit != null) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck != null) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n}\n/**\n * Loops through the directives on a node and queues all their hooks except ngOnInit\n * and ngDoCheck, which are queued separately in directiveCreate.\n * @param {?} flags\n * @param {?} currentView\n * @return {?}\n */\nfunction queueLifecycleHooks(flags, currentView) {\n    var /** @type {?} */ tView = currentView.tView;\n    if (tView.firstTemplatePass === true) {\n        var /** @type {?} */ size = (flags & 4092 /* SIZE_MASK */) >> 2;\n        var /** @type {?} */ start = flags >> 12;\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var /** @type {?} */ i = start, /** @type {?} */ end = start + size; i < end; i++) {\n            var /** @type {?} */ def = (/** @type {?} */ (tView.data[i]));\n            queueContentHooks(def, tView, i);\n            queueViewHooks(def, tView, i);\n            queueDestroyHooks(def, tView, i);\n        }\n    }\n}\n/**\n * Queues afterContentInit and afterContentChecked hooks on TView\n * @param {?} def\n * @param {?} tView\n * @param {?} i\n * @return {?}\n */\nfunction queueContentHooks(def, tView, i) {\n    if (def.afterContentInit != null) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n    }\n    if (def.afterContentChecked != null) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n        (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n    }\n}\n/**\n * Queues afterViewInit and afterViewChecked hooks on TView\n * @param {?} def\n * @param {?} tView\n * @param {?} i\n * @return {?}\n */\nfunction queueViewHooks(def, tView, i) {\n    if (def.afterViewInit != null) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n    }\n    if (def.afterViewChecked != null) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n        (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n    }\n}\n/**\n * Queues onDestroy hooks on TView\n * @param {?} def\n * @param {?} tView\n * @param {?} i\n * @return {?}\n */\nfunction queueDestroyHooks(def, tView, i) {\n    if (def.onDestroy != null) {\n        (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n    }\n}\n/**\n * Calls onInit and doCheck calls if they haven't already been called.\n *\n * @param {?} currentView The current view\n * @param {?} tView\n * @param {?} creationMode\n * @return {?}\n */\nfunction executeInitHooks(currentView, tView, creationMode) {\n    if (currentView.lifecycleStage === 1 /* INIT */) {\n        executeHooks(currentView.data, tView.initHooks, tView.checkHooks, creationMode);\n        currentView.lifecycleStage = 2 /* CONTENT_INIT */;\n    }\n}\n/**\n * Calls all afterContentInit and afterContentChecked hooks for the view, then splices\n * out afterContentInit hooks to prep for the next run in update mode.\n *\n * @param {?} currentView The current view\n * @param {?} tView\n * @param {?} creationMode\n * @return {?}\n */\nfunction executeContentHooks(currentView, tView, creationMode) {\n    if (currentView.lifecycleStage < 3 /* VIEW_INIT */) {\n        executeHooks(currentView.data, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        currentView.lifecycleStage = 3 /* VIEW_INIT */;\n    }\n}\n/**\n * Iterates over afterViewInit and afterViewChecked functions and calls them.\n *\n * @param {?} data\n * @param {?} allHooks\n * @param {?} checkHooks\n * @param {?} creationMode\n * @return {?}\n */\nfunction executeHooks(data, allHooks, checkHooks, creationMode) {\n    var /** @type {?} */ hooksToCall = creationMode ? allHooks : checkHooks;\n    if (hooksToCall != null) {\n        callHooks(data, hooksToCall);\n    }\n}\n/**\n * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n * creation mode.\n *\n * @param {?} data\n * @param {?} arr The array in which the hooks are found\n * @return {?}\n */\nfunction callHooks(data, arr) {\n    for (var /** @type {?} */ i = 0; i < arr.length; i += 2) {\n        (/** @type {?} */ (arr[i | 1])).call(data[/** @type {?} */ (arr[i])]);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nif (typeof ngDevMode == 'undefined') {\n    if (typeof window != 'undefined')\n        (/** @type {?} */ (window)).ngDevMode = true;\n    if (typeof self != 'undefined')\n        (/** @type {?} */ (self)).ngDevMode = true;\n    if (typeof global != 'undefined')\n        (/** @type {?} */ (global)).ngDevMode = true;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Linked list of projected nodes (using the pNextOrParent property).\n * @record\n */\n\nvar NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} node\n * @param {?} type\n * @return {?}\n */\nfunction assertNodeType(node, type) {\n    assertNotNull(node, 'should be called with a node');\n    assertEqual(node.flags & 3 /* TYPE_MASK */, type, \"should be a \" + typeName(type));\n}\n/**\n * @param {?} node\n * @param {...?} types\n * @return {?}\n */\nfunction assertNodeOfPossibleTypes(node) {\n    var types = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        types[_i - 1] = arguments[_i];\n    }\n    assertNotNull(node, 'should be called with a node');\n    var /** @type {?} */ nodeType = node.flags & 3;\n    var /** @type {?} */ found = types.some(function (type) { return nodeType === type; });\n    assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', '));\n}\n/**\n * @param {?} type\n * @return {?}\n */\nfunction typeName(type) {\n    if (type == 1 /* Projection */)\n        return 'Projection';\n    if (type == 0 /* Container */)\n        return 'Container';\n    if (type == 2 /* View */)\n        return 'View';\n    if (type == 3 /* Element */)\n        return 'Element';\n    return '<unknown>';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The state associated with an LContainer\n * @record\n */\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\n/**\n * LNode is an internal data structure which is used for the incremental DOM algorithm.\n * The \"L\" stands for \"Logical\" to differentiate between `RNodes` (actual rendered DOM\n * node) and our logical representation of DOM nodes, `LNodes`.\n *\n * The data structure is optimized for speed and size.\n *\n * In order to be fast, all subtypes of `LNode` should have the same shape.\n * Because size of the `LNode` matters, many fields have multiple roles depending\n * on the `LNode` subtype.\n *\n * See: https://en.wikipedia.org/wiki/Inline_caching#Monomorphic_inline_caching\n *\n * NOTE: This is a private data structure and should not be exported by any of the\n * instructions.\n * @record\n */\n\n/**\n * LNode representing an element.\n * @record\n */\n\n/**\n * LNode representing a #text node.\n * @record\n */\n\n/**\n * Abstract node which contains root nodes of a view.\n * @record\n */\n\n/**\n * Abstract node container which contains other views.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * LNode binding data (flyweight) for a particular node that is shared between all templates\n * of a specific type.\n *\n * If a property is:\n *    - PropertyAliases: that property's data was generated and this is it\n *    - Null: that property's data was already generated and nothing was found.\n *    - Undefined: that property's data has not yet been generated\n *\n * see: https://en.wikipedia.org/wiki/Flyweight_pattern for more on the Flyweight pattern\n * @record\n */\n\n/**\n * Static data for an LElementNode\n * @record\n */\n\n/**\n * Static data for an LContainerNode\n * @record\n */\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar RendererStyleFlags3 = {\n    Important: 1,\n    DashCase: 2,\n};\nRendererStyleFlags3[RendererStyleFlags3.Important] = \"Important\";\nRendererStyleFlags3[RendererStyleFlags3.DashCase] = \"DashCase\";\n/**\n * Object Oriented style of API needed to create elements and text nodes.\n *\n * This is the native browser API style, e.g. operations are methods on individual objects\n * like HTMLElement. With this style, no additional code is needed as a facade\n * (reducing payload size).\n *\n * @record\n */\n\n/**\n * Returns wether the `renderer` is a `ProceduralRenderer3`\n * @param {?} renderer\n * @return {?}\n */\nfunction isProceduralRenderer(renderer) {\n    return !!((/** @type {?} */ (renderer)).listen);\n}\n/**\n * Procedural style of API needed to create elements and text nodes.\n *\n * In non-native browser environments (e.g. platforms such as web-workers), this is the\n * facade that enables element manipulation. This also facilitates backwards compatibility\n * with Renderer2.\n * @record\n */\n\n/**\n * @record\n */\n\nvar domRendererFactory3 = {\n    createRenderer: function (hostElement, rendererType) { return document; }\n};\n/**\n * Subset of API needed for appending elements and text nodes.\n * @record\n */\n\n/**\n * Subset of API needed for writing attributes, properties, and setting up\n * listeners on Element.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `LView` stores all of the information needed to process the instructions as\n * they are invoked from the template. Each embedded view and component view has its\n * own `LView`. When processing a particular view, we set the `currentView` to that\n * `LView`. When that view is done processing, the `currentView` is set back to\n * whatever the original `currentView` was before (the parent `LView`).\n *\n * Keeping separate state for each view facilities view insertion / deletion, so we\n * don't have to edit the data array based on which views are present.\n * @record\n */\n\n/**\n * Interface necessary to work with view tree traversal\n * @record\n */\n\n/**\n * The static data for an LView (shared between all templates of a\n * given type).\n *\n * Stored on the template function as ngPrivateData.\n * @record\n */\n\n/**\n * RootContext contains information which is shared for all components which\n * were bootstrapped with {\\@link renderComponent}.\n * @record\n */\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns the first RNode following the given LNode in the same parent DOM element.\n *\n * This is needed in order to insert the given node with insertBefore.\n *\n * @param {?} node The node whose following DOM node must be found.\n * @param {?} stopNode A parent node at which the lookup in the tree should be stopped, or null if the\n * lookup should not be stopped until the result is found.\n * @return {?} RNode before which the provided node should be inserted or null if the lookup was\n * stopped\n * or if there is no native node after the given logical node in the same native parent.\n */\nfunction findNextRNodeSibling(node, stopNode) {\n    var /** @type {?} */ currentNode = node;\n    while (currentNode && currentNode !== stopNode) {\n        var /** @type {?} */ pNextOrParent = currentNode.pNextOrParent;\n        if (pNextOrParent) {\n            var /** @type {?} */ pNextOrParentType = pNextOrParent.flags & 3;\n            while (pNextOrParentType !== 1 /* Projection */) {\n                var /** @type {?} */ nativeNode = findFirstRNode(pNextOrParent);\n                if (nativeNode) {\n                    return nativeNode;\n                }\n                pNextOrParent = /** @type {?} */ ((pNextOrParent.pNextOrParent));\n            }\n            currentNode = pNextOrParent;\n        }\n        else {\n            var /** @type {?} */ currentSibling = currentNode.next;\n            while (currentSibling) {\n                var /** @type {?} */ nativeNode = findFirstRNode(currentSibling);\n                if (nativeNode) {\n                    return nativeNode;\n                }\n                currentSibling = currentSibling.next;\n            }\n            var /** @type {?} */ parentNode = currentNode.parent;\n            currentNode = null;\n            if (parentNode) {\n                var /** @type {?} */ parentType = parentNode.flags & 3;\n                if (parentType === 0 /* Container */ || parentType === 2 /* View */) {\n                    currentNode = parentNode;\n                }\n            }\n        }\n    }\n    return null;\n}\n/**\n * Get the next node in the LNode tree, taking into account the place where a node is\n * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n *\n * @param {?} node The node whose next node in the LNode tree must be found.\n * @return {?} LNode|null The next sibling in the LNode tree.\n */\nfunction getNextLNodeWithProjection(node) {\n    var /** @type {?} */ pNextOrParent = node.pNextOrParent;\n    if (pNextOrParent) {\n        // The node is projected\n        var /** @type {?} */ isLastProjectedNode = (pNextOrParent.flags & 3 /* TYPE_MASK */) === 1;\n        // returns pNextOrParent if we are not at the end of the list, null otherwise\n        return isLastProjectedNode ? null : pNextOrParent;\n    }\n    // returns node.next because the the node is not projected\n    return node.next;\n}\n/**\n * Find the next node in the LNode tree, taking into account the place where a node is\n * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n *\n * If there is no sibling node, this function goes to the next sibling of the parent node...\n * until it reaches rootNode (at which point null is returned).\n *\n * @param {?} initialNode The node whose following node in the LNode tree must be found.\n * @param {?} rootNode The root node at which the lookup should stop.\n * @return {?} LNode|null The following node in the LNode tree.\n */\nfunction getNextOrParentSiblingNode(initialNode, rootNode) {\n    var /** @type {?} */ node = initialNode;\n    var /** @type {?} */ nextNode = getNextLNodeWithProjection(node);\n    while (node && !nextNode) {\n        // if node.pNextOrParent is not null here, it is not the next node\n        // (because, at this point, nextNode is null, so it is the parent)\n        node = node.pNextOrParent || node.parent;\n        if (node === rootNode) {\n            return null;\n        }\n        nextNode = node && getNextLNodeWithProjection(node);\n    }\n    return nextNode;\n}\n/**\n * Returns the first RNode inside the given LNode.\n *\n * @param {?} rootNode\n * @return {?} RNode The first RNode of the given LNode or null if there is none.\n */\nfunction findFirstRNode(rootNode) {\n    var /** @type {?} */ node = rootNode;\n    while (node) {\n        var /** @type {?} */ type = node.flags & 3;\n        var /** @type {?} */ nextNode = null;\n        if (type === 3 /* Element */) {\n            // A LElementNode has a matching RNode in LElementNode.native\n            return (/** @type {?} */ (node)).native;\n        }\n        else if (type === 0 /* Container */) {\n            // For container look at the first node of the view next\n            var /** @type {?} */ childContainerData = (/** @type {?} */ (node)).data;\n            nextNode = childContainerData.views.length ? childContainerData.views[0].child : null;\n        }\n        else if (type === 1 /* Projection */) {\n            // For Projection look at the first projected node\n            nextNode = (/** @type {?} */ (node)).data.head;\n        }\n        else {\n            // Otherwise look at the first child\n            nextNode = (/** @type {?} */ (node)).child;\n        }\n        node = nextNode === null ? getNextOrParentSiblingNode(node, rootNode) : nextNode;\n    }\n    return null;\n}\n/**\n * @param {?} container\n * @param {?} rootNode\n * @param {?} insertMode\n * @param {?=} beforeNode\n * @return {?}\n */\nfunction addRemoveViewFromContainer(container, rootNode, insertMode, beforeNode) {\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    ngDevMode && assertNodeType(rootNode, 2 /* View */);\n    var /** @type {?} */ parentNode = container.data.renderParent;\n    var /** @type {?} */ parent = parentNode ? parentNode.native : null;\n    var /** @type {?} */ node = rootNode.child;\n    if (parent) {\n        while (node) {\n            var /** @type {?} */ type = node.flags & 3;\n            var /** @type {?} */ nextNode = null;\n            var /** @type {?} */ renderer = container.view.renderer;\n            if (type === 3 /* Element */) {\n                if (insertMode) {\n                    isProceduralRenderer(renderer) ?\n                        renderer.insertBefore(parent, /** @type {?} */ ((node.native)), /** @type {?} */ (beforeNode)) :\n                        parent.insertBefore(/** @type {?} */ ((node.native)), /** @type {?} */ (beforeNode), true);\n                }\n                else {\n                    isProceduralRenderer(renderer) ? renderer.removeChild(/** @type {?} */ (parent), /** @type {?} */ ((node.native))) :\n                        parent.removeChild(/** @type {?} */ ((node.native)));\n                }\n                nextNode = node.next;\n            }\n            else if (type === 0 /* Container */) {\n                // if we get to a container, it must be a root node of a view because we are only\n                // propagating down into child views / containers and not child elements\n                var /** @type {?} */ childContainerData = (/** @type {?} */ (node)).data;\n                childContainerData.renderParent = parentNode;\n                nextNode = childContainerData.views.length ? childContainerData.views[0].child : null;\n            }\n            else if (type === 1 /* Projection */) {\n                nextNode = (/** @type {?} */ (node)).data.head;\n            }\n            else {\n                nextNode = (/** @type {?} */ (node)).child;\n            }\n            if (nextNode === null) {\n                node = getNextOrParentSiblingNode(node, rootNode);\n            }\n            else {\n                node = nextNode;\n            }\n        }\n    }\n}\n/**\n * Traverses the tree of component views and containers to remove listeners and\n * call onDestroy callbacks.\n *\n * Notes:\n *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n *  - Must process containers instead of their views to avoid splicing\n *  when views are destroyed and re-added.\n *  - Using a while loop because it's faster than recursion\n *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n *\n *  \\@param rootView The view to destroy\n * @param {?} rootView\n * @return {?}\n */\nfunction destroyViewTree(rootView) {\n    var /** @type {?} */ viewOrContainer = rootView;\n    while (viewOrContainer) {\n        var /** @type {?} */ next = null;\n        if (viewOrContainer.views && viewOrContainer.views.length) {\n            next = viewOrContainer.views[0].data;\n        }\n        else if (viewOrContainer.child) {\n            next = viewOrContainer.child;\n        }\n        else if (viewOrContainer.next) {\n            cleanUpView(/** @type {?} */ (viewOrContainer));\n            next = viewOrContainer.next;\n        }\n        if (next == null) {\n            // If the viewOrContainer is the rootView, then the cleanup is done twice.\n            // Without this check, ngOnDestroy would be called twice for a directive on an element.\n            while (viewOrContainer && !/** @type {?} */ ((viewOrContainer)).next && viewOrContainer !== rootView) {\n                cleanUpView(/** @type {?} */ (viewOrContainer));\n                viewOrContainer = getParentState(viewOrContainer, rootView);\n            }\n            cleanUpView(/** @type {?} */ (viewOrContainer) || rootView);\n            next = viewOrContainer && viewOrContainer.next;\n        }\n        viewOrContainer = next;\n    }\n}\n/**\n * Inserts a view into a container.\n *\n * This adds the view to the container's array of active views in the correct\n * position. It also adds the view's elements to the DOM if the container isn't a\n * root node of another view (in that case, the view's elements will be added when\n * the container's parent view is added later).\n *\n * @param {?} container The container into which the view should be inserted\n * @param {?} newView The view to insert\n * @param {?} index The index at which to insert the view\n * @return {?} The inserted view\n */\nfunction insertView(container, newView, index) {\n    var /** @type {?} */ state = container.data;\n    var /** @type {?} */ views = state.views;\n    if (index > 0) {\n        // This is a new view, we need to add it to the children.\n        setViewNext(views[index - 1], newView);\n    }\n    if (index < views.length && views[index].data.id !== newView.data.id) {\n        // View ID change replace the view.\n        setViewNext(newView, views[index]);\n        views.splice(index, 0, newView);\n    }\n    else if (index >= views.length) {\n        views.push(newView);\n    }\n    if (state.nextIndex <= index) {\n        state.nextIndex++;\n    }\n    // If the container's renderParent is null, we know that it is a root node of its own parent view\n    // and we should wait until that parent processes its nodes (otherwise, we will insert this view's\n    // nodes twice - once now and once when its parent inserts its views).\n    if (container.data.renderParent !== null) {\n        var /** @type {?} */ beforeNode = findNextRNodeSibling(newView, container);\n        if (!beforeNode) {\n            var /** @type {?} */ containerNextNativeNode = container.native;\n            if (containerNextNativeNode === undefined) {\n                containerNextNativeNode = container.native = findNextRNodeSibling(container, null);\n            }\n            beforeNode = containerNextNativeNode;\n        }\n        addRemoveViewFromContainer(container, newView, true, beforeNode);\n    }\n    return newView;\n}\n/**\n * Removes a view from a container.\n *\n * This method splices the view from the container's array of active views. It also\n * removes the view's elements from the DOM and conducts cleanup (e.g. removing\n * listeners, calling onDestroys).\n *\n * @param {?} container The container from which to remove a view\n * @param {?} removeIndex The index of the view to remove\n * @return {?} The removed view\n */\nfunction removeView(container, removeIndex) {\n    var /** @type {?} */ views = container.data.views;\n    var /** @type {?} */ viewNode = views[removeIndex];\n    if (removeIndex > 0) {\n        setViewNext(views[removeIndex - 1], viewNode.next);\n    }\n    views.splice(removeIndex, 1);\n    destroyViewTree(viewNode.data);\n    addRemoveViewFromContainer(container, viewNode, false);\n    // Notify query that view has been removed\n    container.data.queries && container.data.queries.removeView(removeIndex);\n    return viewNode;\n}\n/**\n * Sets a next on the view node, so views in for loops can easily jump from\n * one view to the next to add/remove elements. Also adds the LView (view.data)\n * to the view tree for easy traversal when cleaning up the view.\n *\n * @param {?} view The view to set up\n * @param {?} next The view's new next\n * @return {?}\n */\nfunction setViewNext(view, next) {\n    view.next = next;\n    view.data.next = next ? next.data : null;\n}\n/**\n * Determines which LViewOrLContainer to jump to when traversing back up the\n * tree in destroyViewTree.\n *\n * Normally, the view's parent LView should be checked, but in the case of\n * embedded views, the container (which is the view node's parent, but not the\n * LView's parent) needs to be checked for a possible next property.\n *\n * @param {?} state The LViewOrLContainer for which we need a parent state\n * @param {?} rootView The rootView, so we don't propagate too far up the view tree\n * @return {?} The correct parent LViewOrLContainer\n */\nfunction getParentState(state, rootView) {\n    var /** @type {?} */ node;\n    if ((node = /** @type {?} */ (((/** @type {?} */ (state)))).node) && (node.flags & 3 /* TYPE_MASK */) === 2 /* View */) {\n        // if it's an embedded view, the state needs to go up to the container, in case the\n        // container has a next\n        return /** @type {?} */ (((node.parent)).data);\n    }\n    else {\n        // otherwise, use parent view for containers or component views\n        return state.parent === rootView ? null : state.parent;\n    }\n}\n/**\n * Removes all listeners and call all onDestroys in a given view.\n *\n * @param {?} view The LView to clean up\n * @return {?}\n */\nfunction cleanUpView(view) {\n    removeListeners(view);\n    executeOnDestroys(view);\n}\n/**\n * Removes listeners and unsubscribes from output subscriptions\n * @param {?} view\n * @return {?}\n */\nfunction removeListeners(view) {\n    var /** @type {?} */ cleanup = /** @type {?} */ ((view.cleanup));\n    if (cleanup != null) {\n        for (var /** @type {?} */ i = 0; i < cleanup.length - 1; i += 2) {\n            if (typeof cleanup[i] === 'string') {\n                /** @type {?} */ ((cleanup))[i + 1].removeEventListener(cleanup[i], cleanup[i + 2], cleanup[i + 3]);\n                i += 2;\n            }\n            else {\n                cleanup[i].call(cleanup[i + 1]);\n            }\n        }\n        view.cleanup = null;\n    }\n}\n/**\n * Calls onDestroy hooks for this view\n * @param {?} view\n * @return {?}\n */\nfunction executeOnDestroys(view) {\n    var /** @type {?} */ tView = view.tView;\n    var /** @type {?} */ destroyHooks;\n    if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n        callHooks(view.data, destroyHooks);\n    }\n}\n/**\n * Returns whether a native element should be inserted in the given parent.\n *\n * The native node can be inserted when its parent is:\n * - A regular element => Yes\n * - A component host element =>\n *    - if the `currentView` === the parent `view`: The element is in the content (vs the\n *      template)\n *      => don't add as the parent component will project if needed.\n *    - `currentView` !== the parent `view` => The element is in the template (vs the content),\n *      add it\n * - View element => delay insertion, will be done on `viewEnd()`\n *\n * @param {?} parent The parent in which to insert the child\n * @param {?} currentView The LView being processed\n * @return {?} boolean Whether the child element should be inserted.\n */\nfunction canInsertNativeNode(parent, currentView) {\n    var /** @type {?} */ parentIsElement = (parent.flags & 3 /* TYPE_MASK */) === 3;\n    return parentIsElement &&\n        (parent.view !== currentView || parent.data === null /* Regular Element. */);\n}\n/**\n * Appends the `child` element to the `parent`.\n *\n * The element insertion might be delayed {\\@link canInsertNativeNode}\n *\n * @param {?} parent The parent to which to append the child\n * @param {?} child The child that should be appended\n * @param {?} currentView The current LView\n * @return {?} Whether or not the child was appended\n */\nfunction appendChild(parent, child, currentView) {\n    if (child !== null && canInsertNativeNode(parent, currentView)) {\n        // We only add element if not in View or not projected.\n        var /** @type {?} */ renderer = currentView.renderer;\n        isProceduralRenderer(renderer) ? renderer.appendChild(/** @type {?} */ (((parent.native))), child) : /** @type {?} */ ((parent.native)).appendChild(child);\n        return true;\n    }\n    return false;\n}\n/**\n * Inserts the provided node before the correct element in the DOM.\n *\n * The element insertion might be delayed {\\@link canInsertNativeNode}\n *\n * @param {?} node Node to insert\n * @param {?} currentView Current LView\n * @return {?}\n */\nfunction insertChild(node, currentView) {\n    var /** @type {?} */ parent = /** @type {?} */ ((node.parent));\n    if (canInsertNativeNode(parent, currentView)) {\n        var /** @type {?} */ nativeSibling = findNextRNodeSibling(node, null);\n        var /** @type {?} */ renderer = currentView.renderer;\n        isProceduralRenderer(renderer) ?\n            renderer.insertBefore(/** @type {?} */ ((parent.native)), /** @type {?} */ ((node.native)), nativeSibling) : /** @type {?} */ ((parent.native)).insertBefore(/** @type {?} */ ((node.native)), nativeSibling, false);\n    }\n}\n/**\n * Appends a projected node to the DOM, or in the case of a projected container,\n * appends the nodes from all of the container's active views to the DOM.\n *\n * @param {?} node The node to process\n * @param {?} currentParent The last parent element to be processed\n * @param {?} currentView Current LView\n * @return {?}\n */\nfunction appendProjectedNode(node, currentParent, currentView) {\n    if ((node.flags & 3 /* TYPE_MASK */) !== 0 /* Container */) {\n        appendChild(currentParent, (/** @type {?} */ (node)).native, currentView);\n    }\n    else if (canInsertNativeNode(currentParent, currentView)) {\n        // The node we are adding is a Container and we are adding it to Element which\n        // is not a component (no more re-projection).\n        // Alternatively a container is projected at the root of a component's template\n        // and can't be re-projected (as not content of any component).\n        // Assignee the final projection location in those cases.\n        var /** @type {?} */ lContainer = (/** @type {?} */ (node)).data;\n        lContainer.renderParent = /** @type {?} */ (currentParent);\n        var /** @type {?} */ views = lContainer.views;\n        for (var /** @type {?} */ i = 0; i < views.length; i++) {\n            addRemoveViewFromContainer(/** @type {?} */ (node), views[i], true, null);\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} nodeClassAttrVal\n * @param {?} cssClassToMatch\n * @return {?}\n */\nfunction isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n    var /** @type {?} */ nodeClassesLen = nodeClassAttrVal.length;\n    var /** @type {?} */ matchIndex = /** @type {?} */ ((nodeClassAttrVal)).indexOf(cssClassToMatch);\n    var /** @type {?} */ matchEndIdx = matchIndex + cssClassToMatch.length;\n    if (matchIndex === -1 // no match\n        || (matchIndex > 0 && /** @type {?} */ ((nodeClassAttrVal))[matchIndex - 1] !== ' ') // no space before\n        ||\n            (matchEndIdx < nodeClassesLen && /** @type {?} */ ((nodeClassAttrVal))[matchEndIdx] !== ' ')) {\n        return false;\n    }\n    return true;\n}\n/**\n * A utility function to match an Ivy node static data against a simple CSS selector\n *\n * @param {?} tNode\n * @param {?} selector\n * @return {?} true if node matches the selector.\n */\nfunction isNodeMatchingSimpleSelector(tNode, selector) {\n    var /** @type {?} */ noOfSelectorParts = selector.length;\n    ngDevMode && assertNotNull(selector[0], 'the selector should have a tag name');\n    var /** @type {?} */ tagNameInSelector = selector[0];\n    // check tag tame\n    if (tagNameInSelector !== '' && tagNameInSelector !== tNode.tagName) {\n        return false;\n    }\n    // short-circuit case where we are only matching on element's tag name\n    if (noOfSelectorParts === 1) {\n        return true;\n    }\n    // short-circuit case where an element has no attrs but a selector tries to match some\n    if (noOfSelectorParts > 1 && !tNode.attrs) {\n        return false;\n    }\n    var /** @type {?} */ attrsInNode = /** @type {?} */ ((tNode.attrs));\n    for (var /** @type {?} */ i = 1; i < noOfSelectorParts; i += 2) {\n        var /** @type {?} */ attrNameInSelector = selector[i];\n        var /** @type {?} */ attrIdxInNode = attrsInNode.indexOf(attrNameInSelector);\n        if (attrIdxInNode % 2 !== 0) {\n            // attribute names are stored at even indexes\n            return false;\n        }\n        else {\n            var /** @type {?} */ attrValInSelector = selector[i + 1];\n            if (attrValInSelector !== '') {\n                // selector should also match on an attribute value\n                var /** @type {?} */ attrValInNode = attrsInNode[attrIdxInNode + 1];\n                if (attrNameInSelector === 'class') {\n                    // iterate over all the remaining items in the selector selector array = class names\n                    for (i++; i < noOfSelectorParts; i++) {\n                        if (!isCssClassMatching(attrValInNode, selector[i])) {\n                            return false;\n                        }\n                    }\n                }\n                else if (attrValInSelector !== attrValInNode) {\n                    return false;\n                }\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {?} tNode\n * @param {?} selector\n * @return {?}\n */\nfunction isNodeMatchingSelectorWithNegations(tNode, selector) {\n    var /** @type {?} */ positiveSelector = selector[0];\n    if (positiveSelector != null && !isNodeMatchingSimpleSelector(tNode, positiveSelector)) {\n        return false;\n    }\n    // do we have any negation parts in this selector?\n    var /** @type {?} */ negativeSelectors = selector[1];\n    if (negativeSelectors) {\n        for (var /** @type {?} */ i = 0; i < negativeSelectors.length; i++) {\n            // if one of negative selectors matched than the whole selector doesn't match\n            if (isNodeMatchingSimpleSelector(tNode, negativeSelectors[i])) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {?} tNode\n * @param {?} selector\n * @return {?}\n */\nfunction isNodeMatchingSelector(tNode, selector) {\n    for (var /** @type {?} */ i = 0; i < selector.length; i++) {\n        if (isNodeMatchingSelectorWithNegations(tNode, selector[i])) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {?} tNode\n * @return {?}\n */\nfunction getProjectAsAttrValue(tNode) {\n    var /** @type {?} */ nodeAttrs = tNode.attrs;\n    if (nodeAttrs != null) {\n        var /** @type {?} */ ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n        // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n        // (attribute names are stored at even indexes)\n        if ((ngProjectAsAttrIdx & 1) === 0) {\n            return nodeAttrs[ngProjectAsAttrIdx + 1];\n        }\n    }\n    return null;\n}\n/**\n * Checks a given node against matching selectors and returns\n * selector index (or 0 if none matched).\n *\n * This function takes into account the ngProjectAs attribute: if present its value will be compared\n * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n * @param {?} tNode\n * @param {?} selectors\n * @param {?} textSelectors\n * @return {?}\n */\nfunction matchingSelectorIndex(tNode, selectors, textSelectors) {\n    var /** @type {?} */ ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n    for (var /** @type {?} */ i = 0; i < selectors.length; i++) {\n        // if a node has the ngProjectAs attribute match it against unparsed selector\n        // match a node against a parsed selector only if ngProjectAs attribute is not present\n        if (ngProjectAsAttrVal === textSelectors[i] ||\n            ngProjectAsAttrVal === null && isNodeMatchingSelector(tNode, selectors[i])) {\n            return i + 1; // first matching selector \"captures\" a given node\n        }\n    }\n    return 0;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Must use this method for CD (instead of === ) since NaN !== NaN\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction isDifferent(a, b) {\n    // NaN is the only value that is not equal to itself so the first\n    // test checks if both a and b are not NaN\n    return !(a !== a && b !== b) && a !== b;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction stringify$1(value) {\n    if (typeof value == 'function')\n        return value.name || value;\n    if (typeof value == 'string')\n        return value;\n    if (value == null)\n        return '';\n    return '' + value;\n}\n/**\n *  Function that throws a \"not implemented\" error so it's clear certain\n *  behaviors/methods aren't yet ready.\n *\n * @return {?} Not implemented error\n */\nfunction notImplemented() {\n    return new Error('NotImplemented');\n}\n/**\n * Flattens an array in non-recursive way. Input arrays are not modified.\n * @param {?} list\n * @return {?}\n */\nfunction flatten$1(list) {\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ i = 0;\n    while (i < list.length) {\n        var /** @type {?} */ item = list[i];\n        if (Array.isArray(item)) {\n            if (item.length > 0) {\n                list = item.concat(list.slice(i + 1));\n                i = 0;\n            }\n            else {\n                i++;\n            }\n        }\n        else {\n            result.push(item);\n            i++;\n        }\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive (D) sets a property on all component instances using this constant as a key and the\n * component's host node (LElement) as the value. This is used in methods like detectChanges to\n * facilitate jumping from an instance to the host node.\n */\nvar NG_HOST_SYMBOL = '__ngHostLNode__';\n/**\n * A permanent marker promise which signifies that the current CD tree is\n * clean.\n */\nvar _CLEAN_PROMISE = Promise.resolve(null);\n/**\n * This property gets set before entering a template.\n *\n * This renderer can be one of two varieties of Renderer3:\n *\n * - ObjectedOrientedRenderer3\n *\n * This is the native browser API style, e.g. operations are methods on individual objects\n * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n * size).\n *\n * - ProceduralRenderer3\n *\n * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n * that enables element manipulation. This also facilitates backwards compatibility with\n * Renderer2.\n */\nvar renderer;\nvar rendererFactory;\n/**\n * @return {?}\n */\nfunction getRenderer() {\n    // top level variables should not be exported for performance reason (PERF_NOTES.md)\n    return renderer;\n}\n/**\n * Used to set the parent property when nodes are created.\n */\nvar previousOrParentNode;\n/**\n * @return {?}\n */\nfunction getPreviousOrParentNode() {\n    // top level variables should not be exported for performance reason (PERF_NOTES.md)\n    return previousOrParentNode;\n}\n/**\n * If `isParent` is:\n *  - `true`: then `previousOrParentNode` points to a parent node.\n *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n */\nvar isParent;\n/**\n * Static data that corresponds to the instance-specific data array on an LView.\n *\n * Each node's static data is stored in tData at the same index that it's stored\n * in the data array. Each directive's definition is stored here at the same index\n * as its directive instance in the data array. Any nodes that do not have static\n * data store a null value in tData to avoid a sparse array.\n */\nvar tData;\n/**\n * State of the current view being processed.\n *\n * NOTE: we cheat here and initialize it to `null` even thought the type does not\n * contain `null`. This is because we expect this value to be not `null` as soon\n * as we enter the view. Declaring the type as `null` would require us to place `!`\n * in most instructions since they all assume that `currentView` is defined.\n */\nvar currentView = /** @type {?} */ ((null));\nvar currentQueries;\n/**\n * @param {?} QueryType\n * @return {?}\n */\nfunction getCurrentQueries(QueryType) {\n    // top level variables should not be exported for performance reason (PERF_NOTES.md)\n    return currentQueries || (currentQueries = new QueryType());\n}\n/**\n * This property gets set before entering a template.\n */\nvar creationMode;\n/**\n * @return {?}\n */\nfunction getCreationMode() {\n    // top level variables should not be exported for performance reason (PERF_NOTES.md)\n    return creationMode;\n}\n/**\n * An array of nodes (text, element, container, etc), pipes, their bindings, and\n * any local variables that need to be stored between invocations.\n */\nvar data;\n/**\n * Points to the next binding index to read or write to.\n */\nvar bindingIndex;\n/**\n * When a view is destroyed, listeners need to be released and outputs need to be\n * unsubscribed. This cleanup array stores both listener data (in chunks of 4)\n * and output data (in chunks of 2) for a particular view. Combining the arrays\n * saves on memory (70 bytes per array) and on a few bytes of code size (for two\n * separate for loops).\n *\n * If it's a listener being stored:\n * 1st index is: event name to remove\n * 2nd index is: native element\n * 3rd index is: listener function\n * 4th index is: useCapture boolean\n *\n * If it's an output subscription:\n * 1st index is: unsubscribe function\n * 2nd index is: context for function\n */\nvar cleanup;\n/**\n * Swap the current state with a new state.\n *\n * For performance reasons we store the state in the top level of the module.\n * This way we minimize the number of properties to read. Whenever a new view\n * is entered we have to store the state for later, and when the view is\n * exited the state has to be restored\n *\n * @param {?} newView New state to become active\n * @param {?} host Element to which the View is a child of\n * @return {?} the previous state;\n */\nfunction enterView(newView, host) {\n    var /** @type {?} */ oldView = currentView;\n    data = newView && newView.data;\n    bindingIndex = newView && newView.bindingStartIndex || 0;\n    tData = newView && newView.tView.data;\n    creationMode = newView && (newView.flags & 1 /* CreationMode */) === 1 /* CreationMode */;\n    cleanup = newView && newView.cleanup;\n    renderer = newView && newView.renderer;\n    if (host != null) {\n        previousOrParentNode = host;\n        isParent = true;\n    }\n    currentView = newView;\n    currentQueries = newView && newView.queries;\n    return /** @type {?} */ ((oldView));\n}\n/**\n * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n * the direction of traversal (up or down the view tree) a bit clearer.\n * @param {?} newView\n * @return {?}\n */\nfunction leaveView(newView) {\n    executeHooks(currentView.data, currentView.tView.viewHooks, currentView.tView.viewCheckHooks, creationMode);\n    // Views should be clean and in update mode after being checked, so these bits are cleared\n    currentView.flags &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n    currentView.lifecycleStage = 1 /* INIT */;\n    currentView.tView.firstTemplatePass = false;\n    enterView(newView, null);\n}\n/**\n * @param {?} viewId\n * @param {?} renderer\n * @param {?} tView\n * @param {?} template\n * @param {?} context\n * @param {?} flags\n * @return {?}\n */\nfunction createLView(viewId, renderer, tView, template, context, flags) {\n    var /** @type {?} */ newView = {\n        parent: currentView,\n        id: viewId,\n        // -1 for component views\n        flags: flags | 1 /* CreationMode */,\n        node: /** @type {?} */ ((null)),\n        // until we initialize it in createNode.\n        data: [],\n        tView: tView,\n        cleanup: null,\n        renderer: renderer,\n        child: null,\n        tail: null,\n        next: null,\n        bindingStartIndex: null,\n        template: template,\n        context: context,\n        dynamicViewCount: 0,\n        lifecycleStage: 1 /* INIT */,\n        queries: null,\n    };\n    return newView;\n}\n/**\n * @param {?} index\n * @param {?} type\n * @param {?} native\n * @param {?=} state\n * @return {?}\n */\nfunction createLNode(index, type, native, state) {\n    var /** @type {?} */ parent = isParent ? previousOrParentNode :\n        previousOrParentNode && /** @type {?} */ (previousOrParentNode.parent);\n    var /** @type {?} */ queries = (isParent ? currentQueries : previousOrParentNode && previousOrParentNode.queries) ||\n        parent && parent.queries && parent.queries.child();\n    var /** @type {?} */ isState = state != null;\n    var /** @type {?} */ node = {\n        flags: type,\n        native: /** @type {?} */ (native),\n        view: currentView,\n        parent: /** @type {?} */ (parent),\n        child: null,\n        next: null,\n        nodeInjector: parent ? parent.nodeInjector : null,\n        data: isState ? /** @type {?} */ (state) : null,\n        queries: queries,\n        tNode: null,\n        pNextOrParent: null\n    };\n    if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n        // Bit of a hack to bust through the readonly because there is a circular dep between\n        // LView and LNode.\n        ngDevMode && assertNull((/** @type {?} */ (state)).node, 'LView.node should not have been initialized');\n        (/** @type {?} */ ((state))).node = node;\n    }\n    if (index != null) {\n        // We are Element or Container\n        ngDevMode && assertDataNext(index);\n        data[index] = node;\n        // Every node adds a value to the static data array to avoid a sparse array\n        if (index >= tData.length) {\n            tData[index] = null;\n        }\n        else {\n            node.tNode = /** @type {?} */ (tData[index]);\n        }\n        // Now link ourselves into the tree.\n        if (isParent) {\n            currentQueries = null;\n            if (previousOrParentNode.view === currentView ||\n                (previousOrParentNode.flags & 3 /* TYPE_MASK */) === 2 /* View */) {\n                // We are in the same view, which means we are adding content node to the parent View.\n                ngDevMode && assertNull(previousOrParentNode.child, \"previousOrParentNode's child should not have been set.\");\n                previousOrParentNode.child = node;\n            }\n            else {\n                // We are adding component view, so we don't link parent node child to this node.\n            }\n        }\n        else if (previousOrParentNode) {\n            ngDevMode && assertNull(previousOrParentNode.next, \"previousOrParentNode's next property should not have been set.\");\n            previousOrParentNode.next = node;\n        }\n    }\n    previousOrParentNode = node;\n    isParent = true;\n    return node;\n}\n/**\n * Resets the application state.\n * @return {?}\n */\nfunction resetApplicationState() {\n    isParent = false;\n    previousOrParentNode = /** @type {?} */ ((null));\n}\n/**\n *\n * @template T\n * @param {?} hostNode\n * @param {?} template Template function with the instructions.\n * @param {?} context to pass into the template.\n * @param {?} providedRendererFactory\n * @param {?} host Existing node to render into.\n * @return {?}\n */\n\n/**\n * @template T\n * @param {?} viewNode\n * @param {?} template\n * @param {?} context\n * @param {?} renderer\n * @return {?}\n */\nfunction renderEmbeddedTemplate(viewNode, template, context, renderer) {\n    var /** @type {?} */ _isParent = isParent;\n    var /** @type {?} */ _previousOrParentNode = previousOrParentNode;\n    try {\n        isParent = true;\n        previousOrParentNode = /** @type {?} */ ((null));\n        var /** @type {?} */ cm = false;\n        if (viewNode == null) {\n            var /** @type {?} */ view = createLView(-1, renderer, createTView(), template, context, 2 /* CheckAlways */);\n            viewNode = createLNode(null, 2 /* View */, null, view);\n            cm = true;\n        }\n        enterView(viewNode.data, viewNode);\n        template(context, cm);\n    }\n    finally {\n        refreshDynamicChildren();\n        leaveView(/** @type {?} */ ((/** @type {?} */ ((currentView)).parent)));\n        isParent = _isParent;\n        previousOrParentNode = _previousOrParentNode;\n    }\n    return viewNode;\n}\n/**\n * @template T\n * @param {?} node\n * @param {?} hostView\n * @param {?} componentOrContext\n * @param {?=} template\n * @return {?}\n */\nfunction renderComponentOrTemplate(node, hostView, componentOrContext, template) {\n    var /** @type {?} */ oldView = enterView(hostView, node);\n    try {\n        if (rendererFactory.begin) {\n            rendererFactory.begin();\n        }\n        if (template) {\n            template(/** @type {?} */ ((componentOrContext)), creationMode);\n        }\n        else {\n            // Element was stored at 0 and directive was stored at 1 in renderComponent\n            // so to refresh the component, refresh() needs to be called with (1, 0)\n            directiveRefresh(1, 0);\n        }\n    }\n    finally {\n        if (rendererFactory.end) {\n            rendererFactory.end();\n        }\n        leaveView(oldView);\n    }\n}\n/**\n * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n *\n * @param {?} index Index of the element in the data array\n * @param {?=} nameOrComponentType Name of the DOM Node or `ComponentType` to create.\n * @param {?=} attrs Statically bound set of attributes to be written into the DOM element on creation.\n * @param {?=} directiveTypes A set of directives declared on this element.\n * @param {?=} localRefs A set of local reference bindings on the element.\n *\n * Attributes and localRefs are passed as an array of strings where elements with an even index\n * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n * ['id', 'warning5', 'class', 'alert']\n * @return {?}\n */\nfunction elementStart(index, nameOrComponentType, attrs, directiveTypes, localRefs) {\n    var /** @type {?} */ node;\n    var /** @type {?} */ native;\n    if (nameOrComponentType == null) {\n        // native node retrieval - used for exporting elements as tpl local variables (<div #foo>)\n        var /** @type {?} */ node_1 = /** @type {?} */ ((data[index]));\n        native = node_1 && (/** @type {?} */ (node_1)).native;\n    }\n    else {\n        ngDevMode &&\n            assertNull(currentView.bindingStartIndex, 'elements should be created before any bindings');\n        var /** @type {?} */ isHostElement = typeof nameOrComponentType !== 'string';\n        // MEGAMORPHIC: `ngComponentDef` is a megamorphic property access here.\n        // This is OK, since we will refactor this code and store the result in `TView.data`\n        // which means that we will be reading this value only once. We are trading clean/simple\n        // template\n        // code for slight startup(first run) performance. (No impact on subsequent runs)\n        // TODO(misko): refactor this to store the `ComponentDef` in `TView.data`.\n        var /** @type {?} */ hostComponentDef = isHostElement ? (/** @type {?} */ (nameOrComponentType)).ngComponentDef : null;\n        var /** @type {?} */ name_1 = isHostElement ? /** @type {?} */ ((hostComponentDef)).tag : /** @type {?} */ (nameOrComponentType);\n        if (name_1 === null) {\n            // TODO: future support for nameless components.\n            throw 'for now name is required';\n        }\n        else {\n            native = renderer.createElement(name_1);\n            var /** @type {?} */ componentView = null;\n            if (isHostElement) {\n                var /** @type {?} */ tView = getOrCreateTView(/** @type {?} */ ((hostComponentDef)).template);\n                var /** @type {?} */ hostView = createLView(-1, rendererFactory.createRenderer(native, /** @type {?} */ ((hostComponentDef)).rendererType), tView, null, null, /** @type {?} */ ((hostComponentDef)).onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n                componentView = addToViewTree(hostView);\n            }\n            // Only component views should be added to the view tree directly. Embedded views are\n            // accessed through their containers because they may be removed / re-added later.\n            node = createLNode(index, 3 /* Element */, native, componentView);\n            // TODO(misko): implement code which caches the local reference resolution\n            var /** @type {?} */ queryName = hack_findQueryName(hostComponentDef, localRefs, '');\n            if (node.tNode == null) {\n                ngDevMode && assertDataInRange(index - 1);\n                node.tNode = tData[index] =\n                    createTNode(name_1, attrs || null, null, hostComponentDef ? null : queryName);\n            }\n            if (attrs)\n                setUpAttributes(native, attrs);\n            appendChild(/** @type {?} */ ((node.parent)), native, currentView);\n            if (hostComponentDef) {\n                // TODO(mhevery): This assumes that the directives come in correct order, which\n                // is not guaranteed. Must be refactored to take it into account.\n                var /** @type {?} */ instance = hostComponentDef.n();\n                directiveCreate(++index, instance, hostComponentDef, queryName);\n                initChangeDetectorIfExisting(node.nodeInjector, instance);\n            }\n            hack_declareDirectives(index, directiveTypes, localRefs);\n        }\n    }\n    return native;\n}\n/**\n * Sets the context for a ChangeDetectorRef to the given instance.\n * @param {?} injector\n * @param {?} instance\n * @return {?}\n */\nfunction initChangeDetectorIfExisting(injector, instance) {\n    if (injector && injector.changeDetectorRef != null) {\n        (/** @type {?} */ (injector.changeDetectorRef))._setComponentContext(instance);\n    }\n}\n/**\n * This function instantiates a directive with a correct queryName. It is a hack since we should\n * compute the query value only once and store it with the template (rather than on each invocation)\n * @param {?} index\n * @param {?} directiveTypes\n * @param {?} localRefs\n * @return {?}\n */\nfunction hack_declareDirectives(index, directiveTypes, localRefs) {\n    if (directiveTypes) {\n        // TODO(mhevery): This assumes that the directives come in correct order, which\n        // is not guaranteed. Must be refactored to take it into account.\n        for (var /** @type {?} */ i = 0; i < directiveTypes.length; i++) {\n            // MEGAMORPHIC: `ngDirectiveDef` is a megamorphic property access here.\n            // This is OK, since we will refactor this code and store the result in `TView.data`\n            // which means that we will be reading this value only once. We are trading clean/simple\n            // template\n            // code for slight startup(first run) performance. (No impact on subsequent runs)\n            // TODO(misko): refactor this to store the `DirectiveDef` in `TView.data`.\n            var /** @type {?} */ directiveType = directiveTypes[i];\n            var /** @type {?} */ directiveDef = directiveType.ngDirectiveDef;\n            directiveCreate(++index, directiveDef.n(), directiveDef, hack_findQueryName(directiveDef, localRefs));\n        }\n    }\n}\n/**\n * This function returns the queryName for a directive. It is a hack since we should\n * compute the query value only once and store it with the template (rather than on each invocation)\n * @param {?} directiveDef\n * @param {?} localRefs\n * @param {?=} defaultExport\n * @return {?}\n */\nfunction hack_findQueryName(directiveDef, localRefs, defaultExport) {\n    var /** @type {?} */ exportAs = directiveDef && directiveDef.exportAs || defaultExport;\n    if (exportAs != null && localRefs) {\n        for (var /** @type {?} */ i = 0; i < localRefs.length; i = i + 2) {\n            var /** @type {?} */ local = localRefs[i];\n            var /** @type {?} */ toExportAs = localRefs[i | 1];\n            if (toExportAs === exportAs || toExportAs === defaultExport) {\n                return local;\n            }\n        }\n    }\n    return null;\n}\n/**\n * Gets TView from a template function or creates a new TView\n * if it doesn't already exist.\n *\n * @param {?} template The template from which to get static data\n * @return {?} TView\n */\nfunction getOrCreateTView(template) {\n    return template.ngPrivateData || (template.ngPrivateData = /** @type {?} */ (createTView()));\n}\n/**\n * Creates a TView instance\n * @return {?}\n */\nfunction createTView() {\n    return {\n        data: [],\n        firstTemplatePass: true,\n        initHooks: null,\n        checkHooks: null,\n        contentHooks: null,\n        contentCheckHooks: null,\n        viewHooks: null,\n        viewCheckHooks: null,\n        destroyHooks: null\n    };\n}\n/**\n * @param {?} native\n * @param {?} attrs\n * @return {?}\n */\nfunction setUpAttributes(native, attrs) {\n    ngDevMode && assertEqual(attrs.length % 2, 0, 'each attribute should have a key and a value');\n    var /** @type {?} */ isProc = isProceduralRenderer(renderer);\n    for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n        var /** @type {?} */ attrName = attrs[i];\n        if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n            var /** @type {?} */ attrVal = attrs[i + 1];\n            isProc ? (/** @type {?} */ (renderer)).setAttribute(native, attrName, attrVal) :\n                native.setAttribute(attrName, attrVal);\n        }\n    }\n}\n/**\n * @param {?} text\n * @param {?} token\n * @return {?}\n */\nfunction createError(text, token) {\n    return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n}\n/**\n * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n *\n * @param {?} factory\n * @param {?} elementOrSelector Render element or CSS selector to locate the element.\n * @return {?}\n */\nfunction locateHostElement(factory, elementOrSelector) {\n    ngDevMode && assertDataInRange(-1);\n    rendererFactory = factory;\n    var /** @type {?} */ defaultRenderer = factory.createRenderer(null, null);\n    var /** @type {?} */ rNode = typeof elementOrSelector === 'string' ?\n        (isProceduralRenderer(defaultRenderer) ?\n            defaultRenderer.selectRootElement(elementOrSelector) :\n            defaultRenderer.querySelector(elementOrSelector)) :\n        elementOrSelector;\n    if (ngDevMode && !rNode) {\n        if (typeof elementOrSelector === 'string') {\n            throw createError('Host node with selector not found:', elementOrSelector);\n        }\n        else {\n            throw createError('Host node is required:', elementOrSelector);\n        }\n    }\n    return rNode;\n}\n/**\n * Creates the host LNode.\n *\n * @param {?} rNode Render host element.\n * @param {?} def ComponentDef\n *\n * @return {?} LElementNode created\n */\nfunction hostElement(rNode, def) {\n    resetApplicationState();\n    return createLNode(0, 3 /* Element */, rNode, createLView(-1, renderer, getOrCreateTView(def.template), null, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */));\n}\n/**\n * Adds an event listener to the current node.\n *\n * If an output exists on one of the node's directives, it also subscribes to the output\n * and saves the subscription for later cleanup.\n *\n * @param {?} eventName Name of the event\n * @param {?} listenerFn The function to be called when event emits\n * @param {?=} useCapture Whether or not to use capture in event listener.\n * @return {?}\n */\nfunction listener(eventName, listenerFn, useCapture) {\n    if (useCapture === void 0) { useCapture = false; }\n    ngDevMode && assertPreviousIsParent();\n    var /** @type {?} */ node = previousOrParentNode;\n    var /** @type {?} */ native = /** @type {?} */ (node.native);\n    // In order to match current behavior, native DOM event listeners must be added for all\n    // events (including outputs).\n    var /** @type {?} */ cleanupFns = cleanup || (cleanup = currentView.cleanup = []);\n    if (isProceduralRenderer(renderer)) {\n        var /** @type {?} */ wrappedListener = wrapListenerWithDirtyLogic(currentView, listenerFn);\n        var /** @type {?} */ cleanupFn = renderer.listen(native, eventName, wrappedListener);\n        cleanupFns.push(cleanupFn, null);\n    }\n    else {\n        var /** @type {?} */ wrappedListener = wrapListenerWithDirtyAndDefault(currentView, listenerFn);\n        native.addEventListener(eventName, wrappedListener, useCapture);\n        cleanupFns.push(eventName, native, wrappedListener, useCapture);\n    }\n    var /** @type {?} */ tNode = /** @type {?} */ ((node.tNode));\n    if (tNode.outputs === undefined) {\n        // if we create TNode here, inputs must be undefined so we know they still need to be\n        // checked\n        tNode.outputs = generatePropertyAliases(node.flags, 1 /* Output */);\n    }\n    var /** @type {?} */ outputs = tNode.outputs;\n    var /** @type {?} */ outputData;\n    if (outputs && (outputData = outputs[eventName])) {\n        createOutput(outputData, listenerFn);\n    }\n}\n/**\n * Iterates through the outputs associated with a particular event name and subscribes to\n * each output.\n * @param {?} outputs\n * @param {?} listener\n * @return {?}\n */\nfunction createOutput(outputs, listener) {\n    for (var /** @type {?} */ i = 0; i < outputs.length; i += 2) {\n        ngDevMode && assertDataInRange(/** @type {?} */ (outputs[i]));\n        var /** @type {?} */ subscription = data[/** @type {?} */ (outputs[i])][outputs[i | 1]].subscribe(listener); /** @type {?} */\n        ((cleanup)).push(subscription.unsubscribe, subscription);\n    }\n}\n/**\n * Mark the end of the element.\n * @return {?}\n */\nfunction elementEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertHasParent();\n        previousOrParentNode = /** @type {?} */ ((previousOrParentNode.parent));\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n    var /** @type {?} */ queries = previousOrParentNode.queries;\n    queries && queries.addNode(previousOrParentNode);\n    queueLifecycleHooks(previousOrParentNode.flags, currentView);\n}\n/**\n * Updates the value of removes an attribute on an Element.\n *\n * @param {?} index\n * @param {?} name name The name of the attribute.\n * @param {?} value value The attribute is removed when value is `null` or `undefined`.\n *                  Otherwise the attribute value is set to the stringified value.\n * @param {?=} sanitizer An optional function used to sanitize the value.\n * @return {?}\n */\nfunction elementAttribute(index, name, value, sanitizer) {\n    if (value !== NO_CHANGE) {\n        var /** @type {?} */ element = data[index];\n        if (value == null) {\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element.native, name) :\n                element.native.removeAttribute(name);\n        }\n        else {\n            var /** @type {?} */ strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n            isProceduralRenderer(renderer) ? renderer.setAttribute(element.native, name, strValue) :\n                element.native.setAttribute(name, strValue);\n        }\n    }\n}\n/**\n * Update a property on an Element.\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new \\@Inputs don't have to be re-compiled.\n *\n * @template T\n * @param {?} index The index of the element to update in the data array\n * @param {?} propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param {?} value New value to write.\n * @param {?=} sanitizer An optional function used to sanitize the value.\n * @return {?}\n */\nfunction elementProperty(index, propName, value, sanitizer) {\n    if (value === NO_CHANGE)\n        return;\n    var /** @type {?} */ node = /** @type {?} */ (data[index]);\n    var /** @type {?} */ tNode = /** @type {?} */ ((node.tNode));\n    // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n    // yet been checked\n    if (tNode.inputs === undefined) {\n        // mark inputs as checked\n        tNode.inputs = generatePropertyAliases(node.flags, 0 /* Input */);\n    }\n    var /** @type {?} */ inputData = tNode.inputs;\n    var /** @type {?} */ dataValue;\n    if (inputData && (dataValue = inputData[propName])) {\n        setInputsForProperty(dataValue, value);\n        markDirtyIfOnPush(node);\n    }\n    else {\n        value = /** @type {?} */ ((sanitizer != null ? sanitizer(value) : stringify$1(value)));\n        var /** @type {?} */ native = node.native;\n        isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n            (native.setProperty ? native.setProperty(propName, value) :\n                (/** @type {?} */ (native))[propName] = value);\n    }\n}\n/**\n * Constructs a TNode object from the arguments.\n *\n * @param {?} tagName\n * @param {?} attrs\n * @param {?} data\n * @param {?} localName\n * @return {?} the TNode object\n */\nfunction createTNode(tagName, attrs, data, localName) {\n    return {\n        tagName: tagName,\n        attrs: attrs,\n        localNames: localName ? [localName, -1] : null,\n        initialInputs: undefined,\n        inputs: undefined,\n        outputs: undefined,\n        data: data\n    };\n}\n/**\n * Given a list of directive indices and minified input names, sets the\n * input properties on the corresponding directives.\n * @param {?} inputs\n * @param {?} value\n * @return {?}\n */\nfunction setInputsForProperty(inputs, value) {\n    for (var /** @type {?} */ i = 0; i < inputs.length; i += 2) {\n        ngDevMode && assertDataInRange(/** @type {?} */ (inputs[i]));\n        data[/** @type {?} */ (inputs[i])][inputs[i | 1]] = value;\n    }\n}\n/**\n * Consolidates all inputs or outputs of all directives on this logical node.\n *\n * @param {?} lNodeFlags\n * @param {?} direction\n * @return {?} PropertyAliases|null aggregate of all properties if any, `null` otherwise\n */\nfunction generatePropertyAliases(lNodeFlags, direction) {\n    var /** @type {?} */ size = (lNodeFlags & 4092 /* SIZE_MASK */) >> 2;\n    var /** @type {?} */ propStore = null;\n    if (size > 0) {\n        var /** @type {?} */ start = lNodeFlags >> 12;\n        var /** @type {?} */ isInput = direction === 0;\n        for (var /** @type {?} */ i = start, /** @type {?} */ ii = start + size; i < ii; i++) {\n            var /** @type {?} */ directiveDef = /** @type {?} */ (((tData))[i]);\n            var /** @type {?} */ propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n            for (var /** @type {?} */ publicName in propertyAliasMap) {\n                if (propertyAliasMap.hasOwnProperty(publicName)) {\n                    propStore = propStore || {};\n                    var /** @type {?} */ internalName = propertyAliasMap[publicName];\n                    var /** @type {?} */ hasProperty = propStore.hasOwnProperty(publicName);\n                    hasProperty ? propStore[publicName].push(i, internalName) :\n                        (propStore[publicName] = [i, internalName]);\n                }\n            }\n        }\n    }\n    return propStore;\n}\n/**\n * Add or remove a class in a classList.\n *\n * This instruction is meant to handle the [class.foo]=\"exp\" case\n *\n * @template T\n * @param {?} index The index of the element to update in the data array\n * @param {?} className Name of class to toggle. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param {?} value A value indicating if a given class should be added or removed.\n * @return {?}\n */\nfunction elementClass(index, className, value) {\n    if (value !== NO_CHANGE) {\n        var /** @type {?} */ lElement = /** @type {?} */ (data[index]);\n        if (value) {\n            isProceduralRenderer(renderer) ? renderer.addClass(lElement.native, className) :\n                lElement.native.classList.add(className);\n        }\n        else {\n            isProceduralRenderer(renderer) ? renderer.removeClass(lElement.native, className) :\n                lElement.native.classList.remove(className);\n        }\n    }\n}\n/**\n * @template T\n * @param {?} index\n * @param {?} styleName\n * @param {?} value\n * @param {?=} suffixOrSanitizer\n * @return {?}\n */\nfunction elementStyle(index, styleName, value, suffixOrSanitizer) {\n    if (value !== NO_CHANGE) {\n        var /** @type {?} */ lElement = /** @type {?} */ (data[index]);\n        if (value == null) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(lElement.native, styleName, RendererStyleFlags3.DashCase) :\n                lElement.native.style.removeProperty(styleName);\n        }\n        else {\n            var /** @type {?} */ strValue = typeof suffixOrSanitizer == 'function' ? suffixOrSanitizer(value) : stringify$1(value);\n            if (typeof suffixOrSanitizer == 'string')\n                strValue = strValue + suffixOrSanitizer;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(lElement.native, styleName, strValue, RendererStyleFlags3.DashCase) :\n                lElement.native.style.setProperty(styleName, strValue);\n        }\n    }\n}\n/**\n * Create static text node\n *\n * @param {?} index Index of the node in the data array.\n * @param {?=} value Value to write. This value will be stringified.\n *   If value is not provided than the actual creation of the text node is delayed.\n * @return {?}\n */\nfunction text(index, value) {\n    ngDevMode &&\n        assertNull(currentView.bindingStartIndex, 'text nodes should be created before bindings');\n    var /** @type {?} */ textNode = value != null ?\n        (isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value))) :\n        null;\n    var /** @type {?} */ node = createLNode(index, 3 /* Element */, textNode);\n    // Text nodes are self closing.\n    isParent = false;\n    appendChild(/** @type {?} */ ((node.parent)), textNode, currentView);\n}\n/**\n * Create text node with binding\n * Bindings should be handled externally with the proper bind(1-8) method\n *\n * @template T\n * @param {?} index Index of the node in the data array.\n * @param {?} value Stringified value to write.\n * @return {?}\n */\nfunction textBinding(index, value) {\n    ngDevMode && assertDataInRange(index);\n    var /** @type {?} */ existingNode = /** @type {?} */ (data[index]);\n    ngDevMode && assertNotNull(existingNode, 'existing node');\n    if (existingNode.native) {\n        // If DOM node exists and value changed, update textContent\n        value !== NO_CHANGE &&\n            (isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n                existingNode.native.textContent = stringify$1(value));\n    }\n    else {\n        // Node was created but DOM node creation was delayed. Create and append now.\n        existingNode.native = isProceduralRenderer(renderer) ?\n            renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n        insertChild(existingNode, currentView);\n    }\n}\n/**\n * Create a directive.\n *\n * NOTE: directives can be created in order other than the index order. They can also\n *       be retrieved before they are created in which case the value will be null.\n *\n * @template T\n * @param {?} index Each directive in a `View` will have a unique index. Directives can\n *        be created or retrieved out of order.\n * @param {?} directive The directive instance.\n * @param {?} directiveDef DirectiveDef object which contains information about the template.\n * @param {?=} queryName Name under which the query can retrieve the directive instance.\n * @return {?}\n */\nfunction directiveCreate(index, directive, directiveDef, queryName) {\n    var /** @type {?} */ instance;\n    ngDevMode &&\n        assertNull(currentView.bindingStartIndex, 'directives should be created before any bindings');\n    ngDevMode && assertPreviousIsParent();\n    var /** @type {?} */ flags = /** @type {?} */ ((previousOrParentNode)).flags;\n    var /** @type {?} */ size = flags & 4092;\n    if (size === 0) {\n        flags = (index << 12 /* INDX_SHIFT */) | 4 /* SIZE_SKIP */ | flags & 3 /* TYPE_MASK */;\n    }\n    else {\n        flags += 4 /* SIZE_SKIP */;\n    } /** @type {?} */\n    ((previousOrParentNode)).flags = flags;\n    ngDevMode && assertDataInRange(index - 1);\n    Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n    data[index] = instance = directive;\n    if (index >= tData.length) {\n        tData[index] = /** @type {?} */ ((directiveDef));\n        if (queryName) {\n            ngDevMode && assertNotNull(previousOrParentNode.tNode, 'previousOrParentNode.tNode');\n            var /** @type {?} */ tNode_1 = /** @type {?} */ ((/** @type {?} */ ((previousOrParentNode)).tNode));\n            (tNode_1.localNames || (tNode_1.localNames = [])).push(queryName, index);\n        }\n    }\n    var /** @type {?} */ diPublic = /** @type {?} */ ((directiveDef)).diPublic;\n    if (diPublic) {\n        diPublic(/** @type {?} */ ((directiveDef)));\n    }\n    if (/** @type {?} */ ((directiveDef)).attributes != null && (previousOrParentNode.flags & 3 /* TYPE_MASK */) == 3 /* Element */) {\n        setUpAttributes((/** @type {?} */ (previousOrParentNode)).native, /** @type {?} */ (((directiveDef)).attributes));\n    }\n    var /** @type {?} */ tNode = /** @type {?} */ ((previousOrParentNode.tNode));\n    if (tNode && tNode.attrs) {\n        setInputsFromAttrs(instance, /** @type {?} */ ((directiveDef)).inputs, tNode);\n    }\n    // Init hooks are queued now so ngOnInit is called in host components before\n    // any projected components.\n    queueInitHooks(index, directiveDef.onInit, directiveDef.doCheck, currentView.tView);\n    return instance;\n}\n/**\n * Sets initial input properties on directive instances from attribute data\n *\n * @template T\n * @param {?} instance Instance of the directive on which to set the initial inputs\n * @param {?} inputs The list of inputs from the directive def\n * @param {?} tNode The static data for this node\n * @return {?}\n */\nfunction setInputsFromAttrs(instance, inputs, tNode) {\n    var /** @type {?} */ directiveIndex = ((previousOrParentNode.flags & 4092 /* SIZE_MASK */) >> 2 /* SIZE_SHIFT */) - 1;\n    var /** @type {?} */ initialInputData = /** @type {?} */ (tNode.initialInputs);\n    if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n        initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n    }\n    var /** @type {?} */ initialInputs = initialInputData[directiveIndex];\n    if (initialInputs) {\n        for (var /** @type {?} */ i = 0; i < initialInputs.length; i += 2) {\n            (/** @type {?} */ (instance))[initialInputs[i]] = initialInputs[i | 1];\n        }\n    }\n}\n/**\n * Generates initialInputData for a node and stores it in the template's static storage\n * so subsequent template invocations don't have to recalculate it.\n *\n * initialInputData is an array containing values that need to be set as input properties\n * for directives on this node, but only once on creation. We need this array to support\n * the case where you set an \\@Input property of a directive using attribute-like syntax.\n * e.g. if you have a `name` \\@Input, you can set it once like this:\n *\n * <my-component name=\"Bess\"></my-component>\n *\n * @param {?} directiveIndex Index to store the initial input data\n * @param {?} inputs The list of inputs from the directive def\n * @param {?} tNode The static data on this node\n * @return {?}\n */\nfunction generateInitialInputs(directiveIndex, inputs, tNode) {\n    var /** @type {?} */ initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n    initialInputData[directiveIndex] = null;\n    var /** @type {?} */ attrs = /** @type {?} */ ((tNode.attrs));\n    for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n        var /** @type {?} */ attrName = attrs[i];\n        var /** @type {?} */ minifiedInputName = inputs[attrName];\n        if (minifiedInputName !== undefined) {\n            var /** @type {?} */ inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n            inputsToStore.push(minifiedInputName, attrs[i | 1]);\n        }\n    }\n    return initialInputData;\n}\n/**\n * Creates an LContainerNode.\n *\n * Only `LViewNodes` can go into `LContainerNodes`.\n *\n * @param {?} index The index of the container in the data array\n * @param {?=} directiveTypes\n * @param {?=} template Optional inline template\n * @param {?=} tagName The name of the container element, if applicable\n * @param {?=} attrs The attrs attached to the container, if applicable\n * @param {?=} localRefs A set of local reference bindings on the element.\n * @return {?}\n */\nfunction container(index, directiveTypes, template, tagName, attrs, localRefs) {\n    ngDevMode &&\n        assertNull(currentView.bindingStartIndex, 'container nodes should be created before any bindings');\n    var /** @type {?} */ currentParent = isParent ? previousOrParentNode : /** @type {?} */ ((previousOrParentNode.parent));\n    ngDevMode && assertNotNull(currentParent, 'containers should have a parent');\n    var /** @type {?} */ lContainer = /** @type {?} */ ({\n        views: [],\n        nextIndex: 0,\n        // If the direct parent of the container is a view, its views will need to be added\n        // through insertView() when its parent view is being inserted:\n        renderParent: canInsertNativeNode(currentParent, currentView) ? currentParent : null,\n        template: template == null ? null : template,\n        next: null,\n        parent: currentView,\n        dynamicViewCount: 0,\n        queries: null\n    });\n    var /** @type {?} */ node = createLNode(index, 0 /* Container */, undefined, lContainer);\n    if (node.tNode == null) {\n        // TODO(misko): implement queryName caching\n        var /** @type {?} */ queryName = hack_findQueryName(null, localRefs, '');\n        node.tNode = tData[index] = createTNode(tagName || null, attrs || null, [], queryName || null);\n    }\n    // Containers are added to the current view tree instead of their embedded views\n    // because views can be removed and re-inserted.\n    addToViewTree(node.data);\n    hack_declareDirectives(index, directiveTypes, localRefs);\n    isParent = false;\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    var /** @type {?} */ queries = node.queries;\n    if (queries) {\n        // check if a given container node matches\n        queries.addNode(node);\n        // prepare place for matching nodes from views inserted into a given container\n        lContainer.queries = queries.container();\n    }\n}\n/**\n * Sets a container up to receive views.\n *\n * @param {?} index The index of the container in the data array\n * @return {?}\n */\nfunction containerRefreshStart(index) {\n    ngDevMode && assertDataInRange(index);\n    previousOrParentNode = /** @type {?} */ (data[index]);\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    isParent = true;\n    (/** @type {?} */ (previousOrParentNode)).data.nextIndex = 0;\n    ngDevMode && assertSame((/** @type {?} */ (previousOrParentNode)).native, undefined, \"the container's native element should not have been set yet.\");\n    // We need to execute init hooks here so ngOnInit hooks are called in top level views\n    // before they are called in embedded views (for backwards compatibility).\n    executeInitHooks(currentView, currentView.tView, creationMode);\n}\n/**\n * Marks the end of the LContainerNode.\n *\n * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n * @return {?}\n */\nfunction containerRefreshEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n        ngDevMode && assertHasParent();\n        previousOrParentNode = /** @type {?} */ ((previousOrParentNode.parent));\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    var /** @type {?} */ container = /** @type {?} */ (previousOrParentNode);\n    container.native = undefined;\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    var /** @type {?} */ nextIndex = container.data.nextIndex;\n    while (nextIndex < container.data.views.length) {\n        // remove extra view.\n        removeView(container, nextIndex);\n    }\n}\n/**\n * @return {?}\n */\nfunction refreshDynamicChildren() {\n    for (var /** @type {?} */ current = currentView.child; current !== null; current = current.next) {\n        if (current.dynamicViewCount !== 0 && (/** @type {?} */ (current)).views) {\n            var /** @type {?} */ container_1 = /** @type {?} */ (current);\n            for (var /** @type {?} */ i = 0; i < container_1.views.length; i++) {\n                var /** @type {?} */ view = container_1.views[i];\n                renderEmbeddedTemplate(view, /** @type {?} */ ((view.data.template)), /** @type {?} */ ((view.data.context)), renderer);\n            }\n        }\n    }\n}\n/**\n * Marks the start of an embedded view.\n *\n * @param {?} viewBlockId The ID of this view\n * @return {?} boolean Whether or not this view is in creation mode\n */\nfunction embeddedViewStart(viewBlockId) {\n    var /** @type {?} */ container = /** @type {?} */ ((isParent ? previousOrParentNode : /** @type {?} */ ((previousOrParentNode.parent))));\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    var /** @type {?} */ lContainer = container.data;\n    var /** @type {?} */ views = lContainer.views;\n    var /** @type {?} */ existingView = !creationMode && lContainer.nextIndex < views.length && views[lContainer.nextIndex];\n    var /** @type {?} */ viewUpdateMode = existingView && viewBlockId === (/** @type {?} */ (existingView)).data.id;\n    if (viewUpdateMode) {\n        previousOrParentNode = views[lContainer.nextIndex++];\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n        isParent = true;\n        enterView((/** @type {?} */ (existingView)).data, /** @type {?} */ (previousOrParentNode));\n    }\n    else {\n        // When we create a new LView, we always reset the state of the instructions.\n        var /** @type {?} */ newView = createLView(viewBlockId, renderer, getOrCreateEmbeddedTView(viewBlockId, container), null, null, 2 /* CheckAlways */);\n        if (lContainer.queries) {\n            newView.queries = lContainer.queries.enterView(lContainer.nextIndex);\n        }\n        enterView(newView, createLNode(null, 2 /* View */, null, newView));\n        lContainer.nextIndex++;\n    }\n    return !viewUpdateMode;\n}\n/**\n * Initialize the TView (e.g. static data) for the active embedded view.\n *\n * Each embedded view needs to set the global tData variable to the static data for\n * that view. Otherwise, the view's static data for a particular node would overwrite\n * the static data for a node in the view above it with the same index (since it's in the\n * same template).\n *\n * @param {?} viewIndex The index of the TView in TContainer\n * @param {?} parent The parent container in which to look for the view's static data\n * @return {?} TView\n */\nfunction getOrCreateEmbeddedTView(viewIndex, parent) {\n    ngDevMode && assertNodeType(parent, 0 /* Container */);\n    var /** @type {?} */ tContainer = (/** @type {?} */ (((parent)).tNode)).data;\n    if (viewIndex >= tContainer.length || tContainer[viewIndex] == null) {\n        tContainer[viewIndex] = createTView();\n    }\n    return tContainer[viewIndex];\n}\n/**\n * Marks the end of an embedded view.\n * @return {?}\n */\nfunction embeddedViewEnd() {\n    isParent = false;\n    var /** @type {?} */ viewNode = previousOrParentNode = /** @type {?} */ (currentView.node);\n    var /** @type {?} */ container = /** @type {?} */ (previousOrParentNode.parent);\n    if (container) {\n        ngDevMode && assertNodeType(viewNode, 2 /* View */);\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var /** @type {?} */ containerState = container.data;\n        var /** @type {?} */ previousView = containerState.nextIndex <= containerState.views.length ? /** @type {?} */ (containerState.views[containerState.nextIndex - 1]) :\n            null;\n        var /** @type {?} */ viewIdChanged = previousView == null ? true : previousView.data.id !== viewNode.data.id;\n        if (viewIdChanged) {\n            insertView(container, viewNode, containerState.nextIndex - 1);\n        }\n    }\n    leaveView(/** @type {?} */ ((/** @type {?} */ ((currentView)).parent)));\n    ngDevMode && assertEqual(isParent, false, 'isParent');\n    ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n}\n/**\n * Refreshes the directive, triggering init and content hooks.\n *\n * When it is a component, it also enters the component's view and processes it to update bindings,\n * queries, etc.\n *\n * @template T\n * @param {?} directiveIndex\n * @param {?} elementIndex\n * @return {?}\n */\nfunction directiveRefresh(directiveIndex, elementIndex) {\n    executeInitHooks(currentView, currentView.tView, creationMode);\n    executeContentHooks(currentView, currentView.tView, creationMode);\n    var /** @type {?} */ template = (/** @type {?} */ (tData[directiveIndex])).template;\n    if (template != null) {\n        ngDevMode && assertDataInRange(elementIndex);\n        var /** @type {?} */ element = /** @type {?} */ (((data))[elementIndex]);\n        ngDevMode && assertNodeType(element, 3 /* Element */);\n        ngDevMode &&\n            assertNotNull(element.data, \"Component's host node should have an LView attached.\");\n        var /** @type {?} */ hostView = /** @type {?} */ ((element.data));\n        // Only CheckAlways components or dirty OnPush components should be checked\n        if (hostView.flags & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            ngDevMode && assertDataInRange(directiveIndex);\n            detectChangesInternal(hostView, element, getDirectiveInstance(data[directiveIndex]));\n        }\n    }\n}\n/**\n * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n * It takes all the selectors from the entire component's template and decides where\n * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n * backed by a selector).\n *\n * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n * un-parsed form.\n *\n * The parsed form is needed for efficient matching of a node against a given CSS selector.\n * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n *\n * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n * drawbacks:\n * - having only a textual form would require runtime parsing of CSS selectors;\n * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n * template author).\n *\n * @param {?} index\n * @param {?=} selectors A collection of parsed CSS selectors\n * @param {?=} textSelectors\n * @return {?}\n */\nfunction projectionDef(index, selectors, textSelectors) {\n    var /** @type {?} */ noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n    var /** @type {?} */ distributedNodes = new Array(noOfNodeBuckets);\n    for (var /** @type {?} */ i = 0; i < noOfNodeBuckets; i++) {\n        distributedNodes[i] = [];\n    }\n    var /** @type {?} */ componentNode = findComponentHost(currentView);\n    var /** @type {?} */ componentChild = componentNode.child;\n    while (componentChild !== null) {\n        // execute selector matching logic if and only if:\n        // - there are selectors defined\n        // - a node has a tag name / attributes that can be matched\n        if (selectors && componentChild.tNode) {\n            var /** @type {?} */ matchedIdx = matchingSelectorIndex(componentChild.tNode, selectors, /** @type {?} */ ((textSelectors)));\n            distributedNodes[matchedIdx].push(componentChild);\n        }\n        else {\n            distributedNodes[0].push(componentChild);\n        }\n        componentChild = componentChild.next;\n    }\n    ngDevMode && assertDataNext(index);\n    data[index] = distributedNodes;\n}\n/**\n * Updates the linked list of a projection node, by appending another linked list.\n *\n * @param {?} projectionNode Projection node whose projected nodes linked list has to be updated\n * @param {?} appendedFirst First node of the linked list to append.\n * @param {?} appendedLast Last node of the linked list to append.\n * @return {?}\n */\nfunction appendToProjectionNode(projectionNode, appendedFirst, appendedLast) {\n    ngDevMode && assertEqual(!!appendedFirst, !!appendedLast, 'appendedFirst can be null if and only if appendedLast is also null');\n    if (!appendedLast) {\n        // nothing to append\n        return;\n    }\n    var /** @type {?} */ projectionNodeData = projectionNode.data;\n    if (projectionNodeData.tail) {\n        projectionNodeData.tail.pNextOrParent = appendedFirst;\n    }\n    else {\n        projectionNodeData.head = appendedFirst;\n    }\n    projectionNodeData.tail = appendedLast;\n    appendedLast.pNextOrParent = projectionNode;\n}\n/**\n * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n * to the projectionDef instruction.\n *\n * @param {?} nodeIndex\n * @param {?} localIndex - index under which distribution of projected nodes was memorized\n * @param {?=} selectorIndex - 0 means <ng-content> without any selector\n * @param {?=} attrs - attributes attached to the ng-content node, if present\n * @return {?}\n */\nfunction projection(nodeIndex, localIndex, selectorIndex, attrs) {\n    if (selectorIndex === void 0) { selectorIndex = 0; }\n    var /** @type {?} */ node = createLNode(nodeIndex, 1 /* Projection */, null, { head: null, tail: null });\n    if (node.tNode == null) {\n        node.tNode = createTNode(null, attrs || null, null, null);\n    }\n    isParent = false; // self closing\n    var /** @type {?} */ currentParent = node.parent;\n    // re-distribution of projectable nodes is memorized on a component's view level\n    var /** @type {?} */ componentNode = findComponentHost(currentView);\n    // make sure that nodes to project were memorized\n    var /** @type {?} */ nodesForSelector = /** @type {?} */ ((/** @type {?} */ ((componentNode.data)).data))[localIndex][selectorIndex];\n    // build the linked list of projected nodes:\n    for (var /** @type {?} */ i = 0; i < nodesForSelector.length; i++) {\n        var /** @type {?} */ nodeToProject = nodesForSelector[i];\n        if ((nodeToProject.flags & 3 /* TYPE_MASK */) === 1 /* Projection */) {\n            var /** @type {?} */ previouslyProjected = (/** @type {?} */ (nodeToProject)).data;\n            appendToProjectionNode(node, previouslyProjected.head, previouslyProjected.tail);\n        }\n        else {\n            appendToProjectionNode(node, /** @type {?} */ (nodeToProject), /** @type {?} */ (nodeToProject));\n        }\n    }\n    if (canInsertNativeNode(currentParent, currentView)) {\n        // process each node in the list of projected nodes:\n        var /** @type {?} */ nodeToProject = node.data.head;\n        var /** @type {?} */ lastNodeToProject = node.data.tail;\n        while (nodeToProject) {\n            appendProjectedNode(/** @type {?} */ (nodeToProject), currentParent, currentView);\n            nodeToProject = nodeToProject === lastNodeToProject ? null : nodeToProject.pNextOrParent;\n        }\n    }\n}\n/**\n * Given a current view, finds the nearest component's host (LElement).\n *\n * @param {?} lView LView for which we want a host element node\n * @return {?} The host node\n */\nfunction findComponentHost(lView) {\n    var /** @type {?} */ viewRootLNode = lView.node;\n    while ((viewRootLNode.flags & 3 /* TYPE_MASK */) === 2 /* View */) {\n        ngDevMode && assertNotNull(lView.parent, 'lView.parent');\n        lView = /** @type {?} */ ((lView.parent));\n        viewRootLNode = lView.node;\n    }\n    ngDevMode && assertNodeType(viewRootLNode, 3 /* Element */);\n    ngDevMode && assertNotNull(viewRootLNode.data, 'node.data');\n    return /** @type {?} */ (viewRootLNode);\n}\n/**\n * Adds a LView or a LContainer to the end of the current view tree.\n *\n * This structure will be used to traverse through nested views to remove listeners\n * and call onDestroy callbacks.\n *\n * @template T\n * @param {?} state The LView or LContainer to add to the view tree\n * @return {?} The state passed in\n */\nfunction addToViewTree(state) {\n    currentView.tail ? (currentView.tail.next = state) : (currentView.child = state);\n    currentView.tail = state;\n    return state;\n}\n/**\n * If node is an OnPush component, marks its LView dirty.\n * @param {?} node\n * @return {?}\n */\nfunction markDirtyIfOnPush(node) {\n    // Because data flows down the component tree, ancestors do not need to be marked dirty\n    if (node.data && !(node.data.flags & 2 /* CheckAlways */)) {\n        node.data.flags |= 4 /* Dirty */;\n    }\n}\n/**\n * Wraps an event listener so its host view and its ancestor views will be marked dirty\n * whenever the event fires. Necessary to support OnPush components.\n * @param {?} view\n * @param {?} listenerFn\n * @return {?}\n */\nfunction wrapListenerWithDirtyLogic(view, listenerFn) {\n    return function (e) {\n        markViewDirty(view);\n        return listenerFn(e);\n    };\n}\n/**\n * Wraps an event listener so its host view and its ancestor views will be marked dirty\n * whenever the event fires. Also wraps with preventDefault behavior.\n * @param {?} view\n * @param {?} listenerFn\n * @return {?}\n */\nfunction wrapListenerWithDirtyAndDefault(view, listenerFn) {\n    return function (e) {\n        markViewDirty(view);\n        if (listenerFn(e) === false) {\n            e.preventDefault();\n            // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n            e.returnValue = false;\n        }\n    };\n}\n/**\n * Marks current view and all ancestors dirty\n * @param {?} view\n * @return {?}\n */\nfunction markViewDirty(view) {\n    var /** @type {?} */ currentView = view;\n    while (currentView.parent != null) {\n        currentView.flags |= 4 /* Dirty */;\n        currentView = currentView.parent;\n    }\n    currentView.flags |= 4 /* Dirty */;\n    ngDevMode && assertNotNull(/** @type {?} */ ((currentView)).context, 'rootContext');\n    scheduleTick(/** @type {?} */ (((currentView)).context));\n}\n/**\n * Used to schedule change detection on the whole application.\n *\n * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n * It is usually called indirectly by calling `markDirty` when the view needs to be\n * re-rendered.\n *\n * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n * `scheduleTick` requests. The scheduling function can be overridden in\n * `renderComponent`'s `scheduler` option.\n * @template T\n * @param {?} rootContext\n * @return {?}\n */\nfunction scheduleTick(rootContext) {\n    if (rootContext.clean == _CLEAN_PROMISE) {\n        var /** @type {?} */ res_1;\n        rootContext.clean = new Promise(function (r) { return res_1 = r; });\n        rootContext.scheduler(function () {\n            tick(rootContext.component); /** @type {?} */\n            ((res_1))(null);\n            rootContext.clean = _CLEAN_PROMISE;\n        });\n    }\n}\n/**\n * Used to perform change detection on the whole application.\n *\n * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n * executes lifecycle hooks and conditionally checks components based on their\n * `ChangeDetectionStrategy` and dirtiness.\n *\n * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n * be changed when calling `renderComponent` and providing the `scheduler` option.\n * @template T\n * @param {?} component\n * @return {?}\n */\nfunction tick(component) {\n    var /** @type {?} */ rootView = getRootView(component);\n    var /** @type {?} */ rootComponent = (/** @type {?} */ (rootView.context)).component;\n    var /** @type {?} */ hostNode = _getComponentHostLElementNode(rootComponent);\n    ngDevMode && assertNotNull(hostNode.data, 'Component host node should be attached to an LView');\n    renderComponentOrTemplate(hostNode, rootView, rootComponent);\n}\n/**\n * Retrieve the root view from any component by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param {?} component any component\n * @return {?}\n */\nfunction getRootView(component) {\n    ngDevMode && assertNotNull(component, 'component');\n    var /** @type {?} */ lElementNode = _getComponentHostLElementNode(component);\n    var /** @type {?} */ lView = lElementNode.view;\n    while (lView.parent) {\n        lView = lView.parent;\n    }\n    return lView;\n}\n/**\n * Synchronously perform change detection on a component (and possibly its sub-components).\n *\n * This function triggers change detection in a synchronous way on a component. There should\n * be very little reason to call this function directly since a preferred way to do change\n * detection is to {\\@link markDirty} the component and wait for the scheduler to call this method\n * at some future point in time. This is because a single user action often results in many\n * components being invalidated and calling change detection on each component synchronously\n * would be inefficient. It is better to wait until all components are marked as dirty and\n * then perform single change detection across all of the components\n *\n * @template T\n * @param {?} component The component which the change detection should be performed on.\n * @return {?}\n */\nfunction detectChanges(component) {\n    var /** @type {?} */ hostNode = _getComponentHostLElementNode(component);\n    ngDevMode && assertNotNull(hostNode.data, 'Component host node should be attached to an LView');\n    detectChangesInternal(/** @type {?} */ (hostNode.data), hostNode, component);\n}\n/**\n * Checks the view of the component provided. Does not gate on dirty checks or execute doCheck.\n * @template T\n * @param {?} hostView\n * @param {?} hostNode\n * @param {?} component\n * @return {?}\n */\nfunction detectChangesInternal(hostView, hostNode, component) {\n    var /** @type {?} */ componentIndex = hostNode.flags >> 12;\n    var /** @type {?} */ template = (/** @type {?} */ (hostNode.view.tView.data[componentIndex])).template;\n    var /** @type {?} */ oldView = enterView(hostView, hostNode);\n    if (template != null) {\n        try {\n            template(component, creationMode);\n        }\n        finally {\n            refreshDynamicChildren();\n            leaveView(oldView);\n        }\n    }\n}\n/**\n * Mark the component as dirty (needing change detection).\n *\n * Marking a component dirty will schedule a change detection on this\n * component at some point in the future. Marking an already dirty\n * component as dirty is a noop. Only one outstanding change detection\n * can be scheduled per component tree. (Two components bootstrapped with\n * separate `renderComponent` will have separate schedulers)\n *\n * When the root component is bootstrapped with `renderComponent`, a scheduler\n * can be provided.\n *\n * @template T\n * @param {?} component Component to mark as dirty.\n * @return {?}\n */\n\n/**\n * A special value which designates that a value has not changed.\n */\nvar NO_CHANGE = /** @type {?} */ ({});\n/**\n *  Initializes the binding start index. Will get inlined.\n *\n *  This function must be called before any binding related function is called\n *  (ie `bind()`, `interpolationX()`, `pureFunctionX()`)\n * @return {?}\n */\nfunction initBindings() {\n    // `bindingIndex` is initialized when the view is first entered when not in creation mode\n    ngDevMode &&\n        assertEqual(creationMode, true, 'should only be called in creationMode for performance reasons');\n    if (currentView.bindingStartIndex == null) {\n        bindingIndex = currentView.bindingStartIndex = data.length;\n    }\n}\n/**\n * Creates a single value binding.\n *\n * @template T\n * @param {?} value Value to diff\n * @return {?}\n */\nfunction bind(value) {\n    if (creationMode) {\n        initBindings();\n        return data[bindingIndex++] = value;\n    }\n    var /** @type {?} */ changed = value !== NO_CHANGE && isDifferent(data[bindingIndex], value);\n    if (changed) {\n        data[bindingIndex] = value;\n    }\n    bindingIndex++;\n    return changed ? value : NO_CHANGE;\n}\n/**\n * Create interpolation bindings with a variable number of expressions.\n *\n * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n * Those are faster because there is no need to create an array of expressions and iterate over it.\n *\n * `values`:\n * - has static text at even indexes,\n * - has evaluated expressions at odd indexes.\n *\n * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n * @param {?} values\n * @return {?}\n */\nfunction interpolationV(values) {\n    ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n    ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n    var /** @type {?} */ different = false;\n    for (var /** @type {?} */ i = 1; i < values.length; i += 2) {\n        // Check if bindings (odd indexes) have changed\n        bindingUpdated(values[i]) && (different = true);\n    }\n    if (!different) {\n        return NO_CHANGE;\n    }\n    // Build the updated content\n    var /** @type {?} */ content = values[0];\n    for (var /** @type {?} */ i = 1; i < values.length; i += 2) {\n        content += stringify$1(values[i]) + values[i + 1];\n    }\n    return content;\n}\n/**\n * Creates an interpolation binding with 1 expression.\n *\n * @param {?} prefix static value used for concatenation only.\n * @param {?} v0 value checked for change.\n * @param {?} suffix static value used for concatenation only.\n * @return {?}\n */\nfunction interpolation1(prefix, v0, suffix) {\n    var /** @type {?} */ different = bindingUpdated(v0);\n    return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 2 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} suffix\n * @return {?}\n */\nfunction interpolation2(prefix, v0, i0, v1, suffix) {\n    var /** @type {?} */ different = bindingUpdated2(v0, v1);\n    return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n}\n/**\n * Creates an interpolation bindings with 3 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} suffix\n * @return {?}\n */\nfunction interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n    var /** @type {?} */ different = bindingUpdated2(v0, v1);\n    different = bindingUpdated(v2) || different;\n    return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n        NO_CHANGE;\n}\n/**\n * Create an interpolation binding with 4 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} suffix\n * @return {?}\n */\nfunction interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n    var /** @type {?} */ different = bindingUpdated4(v0, v1, v2, v3);\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n            suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 5 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} suffix\n * @return {?}\n */\nfunction interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n    var /** @type {?} */ different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated(v4) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 6 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} i4\n * @param {?} v5\n * @param {?} suffix\n * @return {?}\n */\nfunction interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n    var /** @type {?} */ different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated2(v4, v5) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 7 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} i4\n * @param {?} v5\n * @param {?} i5\n * @param {?} v6\n * @param {?} suffix\n * @return {?}\n */\nfunction interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n    var /** @type {?} */ different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated2(v4, v5) || different;\n    different = bindingUpdated(v6) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 8 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} i4\n * @param {?} v5\n * @param {?} i5\n * @param {?} v6\n * @param {?} i6\n * @param {?} v7\n * @param {?} suffix\n * @return {?}\n */\nfunction interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n    var /** @type {?} */ different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated4(v4, v5, v6, v7) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n        NO_CHANGE;\n}\n/**\n * Store a value in the `data` at a given `index`.\n * @template T\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction store(index, value) {\n    // We don't store any static data for local variables, so the first time\n    // we see the template, we should store as null to avoid a sparse array\n    if (index >= tData.length) {\n        tData[index] = null;\n    }\n    data[index] = value;\n}\n/**\n * Retrieves a value from the `data`.\n * @template T\n * @param {?} index\n * @return {?}\n */\nfunction load(index) {\n    ngDevMode && assertDataInRange(index, data);\n    return data[index];\n}\n/**\n * Gets the current binding value and increments the binding index.\n * @return {?}\n */\nfunction consumeBinding() {\n    ngDevMode && assertDataInRange(bindingIndex);\n    ngDevMode &&\n        assertNotEqual(data[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n    return data[bindingIndex++];\n}\n/**\n * Updates binding if changed, then returns whether it was updated.\n * @param {?} value\n * @return {?}\n */\nfunction bindingUpdated(value) {\n    ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n    if (creationMode || isDifferent(data[bindingIndex], value)) {\n        creationMode && initBindings();\n        data[bindingIndex++] = value;\n        return true;\n    }\n    else {\n        bindingIndex++;\n        return false;\n    }\n}\n/**\n * Updates binding if changed, then returns the latest value.\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateBinding$1(value) {\n    bindingUpdated(value);\n    return value;\n}\n/**\n * Updates 2 bindings if changed, then returns whether either was updated.\n * @param {?} exp1\n * @param {?} exp2\n * @return {?}\n */\nfunction bindingUpdated2(exp1, exp2) {\n    var /** @type {?} */ different = bindingUpdated(exp1);\n    return bindingUpdated(exp2) || different;\n}\n/**\n * Updates 4 bindings if changed, then returns whether any was updated.\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @return {?}\n */\nfunction bindingUpdated4(exp1, exp2, exp3, exp4) {\n    var /** @type {?} */ different = bindingUpdated2(exp1, exp2);\n    return bindingUpdated2(exp3, exp4) || different;\n}\n/**\n * @return {?}\n */\nfunction getTView() {\n    return currentView.tView;\n}\n/**\n * @template T\n * @param {?} instanceOrArray\n * @return {?}\n */\nfunction getDirectiveInstance(instanceOrArray) {\n    // Directives with content queries store an array in data[directiveIndex]\n    // with the instance as the first index\n    return Array.isArray(instanceOrArray) ? instanceOrArray[0] : instanceOrArray;\n}\n/**\n * @return {?}\n */\nfunction assertPreviousIsParent() {\n    assertEqual(isParent, true, 'previousOrParentNode should be a parent');\n}\n/**\n * @return {?}\n */\nfunction assertHasParent() {\n    assertNotNull(previousOrParentNode.parent, 'previousOrParentNode should have a parent');\n}\n/**\n * @param {?} index\n * @param {?=} arr\n * @return {?}\n */\nfunction assertDataInRange(index, arr) {\n    if (arr == null)\n        arr = data;\n    assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n}\n/**\n * @param {?} index\n * @return {?}\n */\nfunction assertDataNext(index) {\n    assertEqual(data.length, index, 'index expected to be at the end of data');\n}\n/**\n * @template T\n * @param {?} component\n * @return {?}\n */\nfunction _getComponentHostLElementNode(component) {\n    ngDevMode && assertNotNull(component, 'expecting component got null');\n    var /** @type {?} */ lElementNode = /** @type {?} */ ((/** @type {?} */ (component))[NG_HOST_SYMBOL]);\n    ngDevMode && assertNotNull(component, 'object is not a component');\n    return lElementNode;\n}\nvar CLEAN_PROMISE = _CLEAN_PROMISE;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ViewRef$1 = /** @class */ (function () {\n    function ViewRef(context) {\n        this.context = /** @type {?} */ ((context));\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} context\n     * @return {?}\n     */\n    ViewRef.prototype._setComponentContext = /**\n     * \\@internal\n     * @param {?} context\n     * @return {?}\n     */\n    function (context) { this.context = context; };\n    /**\n     * @return {?}\n     */\n    ViewRef.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { notImplemented(); };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ViewRef.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { notImplemented(); };\n    /**\n     * @return {?}\n     */\n    ViewRef.prototype.markForCheck = /**\n     * @return {?}\n     */\n    function () { notImplemented(); };\n    /**\n     * @return {?}\n     */\n    ViewRef.prototype.detach = /**\n     * @return {?}\n     */\n    function () { notImplemented(); };\n    /**\n     * @return {?}\n     */\n    ViewRef.prototype.detectChanges = /**\n     * @return {?}\n     */\n    function () { detectChanges(this.context); };\n    /**\n     * @return {?}\n     */\n    ViewRef.prototype.checkNoChanges = /**\n     * @return {?}\n     */\n    function () { notImplemented(); };\n    /**\n     * @return {?}\n     */\n    ViewRef.prototype.reattach = /**\n     * @return {?}\n     */\n    function () { notImplemented(); };\n    return ViewRef;\n}());\nvar EmbeddedViewRef$1 = /** @class */ (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef(viewNode, template, context) {\n        var _this = _super.call(this, context) || this;\n        _this._lViewNode = viewNode;\n        return _this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef$1));\n/**\n * Creates a ViewRef bundled with destroy functionality.\n *\n * @template T\n * @param {?} context The context for this view\n * @return {?} The ViewRef\n */\nfunction createViewRef(context) {\n    // TODO: add detectChanges back in when implementing ChangeDetectorRef.detectChanges\n    return addDestroyable(new ViewRef$1(context));\n}\n/**\n * Interface for destroy logic. Implemented by addDestroyable.\n * @record\n */\n\n/**\n * Decorates an object with destroy logic (implementing the DestroyRef interface)\n * and returns the enhanced object.\n *\n * @template T, C\n * @param {?} obj The object to decorate\n * @return {?} The object with destroy logic\n */\nfunction addDestroyable(obj) {\n    var /** @type {?} */ destroyFn = null;\n    obj.destroyed = false;\n    obj.destroy = function () {\n        destroyFn && destroyFn.forEach(function (fn) { return fn(); });\n        this.destroyed = true;\n    };\n    obj.onDestroy = function (fn) { return (destroyFn || (destroyFn = [])).push(fn); };\n    return obj;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Options that control how the component should be bootstrapped.\n * @record\n */\n\n/**\n * Bootstraps a component, then creates and returns a `ComponentRef` for that component.\n *\n * @template T\n * @param {?} componentType Component to bootstrap\n * @param {?} opts\n * @return {?}\n */\n\n// TODO: A hack to not pull in the NullInjector from @angular/core.\n\n/**\n * Bootstraps a Component into an existing host element and returns an instance\n * of the component.\n *\n * Use this function to bootstrap a component into the DOM tree. Each invocation\n * of this function will create a separate tree of components, injectors and\n * change detection cycles and lifetimes. To dynamically insert a new component\n * into an existing tree such that it shares the same injection, change detection\n * and object lifetime, use {\\@link ViewContainer#createComponent}.\n *\n * @template T\n * @param {?} componentType Component to bootstrap\n * @param {?=} opts\n * @return {?}\n */\nfunction renderComponent(componentType, opts) {\n    if (opts === void 0) { opts = {}; }\n    var /** @type {?} */ rendererFactory = opts.rendererFactory || domRendererFactory3;\n    var /** @type {?} */ componentDef = /** @type {?} */ (componentType.ngComponentDef);\n    if (componentDef.type != componentType)\n        componentDef.type = componentType;\n    var /** @type {?} */ component;\n    var /** @type {?} */ hostNode = locateHostElement(rendererFactory, opts.host || componentDef.tag);\n    var /** @type {?} */ rootContext = {\n        // Incomplete initialization due to circular reference.\n        component: /** @type {?} */ ((null)),\n        scheduler: opts.scheduler || requestAnimationFrame,\n        clean: CLEAN_PROMISE,\n    };\n    var /** @type {?} */ oldView = enterView(createLView(-1, rendererFactory.createRenderer(hostNode, componentDef.rendererType), createTView(), null, rootContext, componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */), /** @type {?} */ ((null)));\n    try {\n        // Create element node at index 0 in data array\n        var /** @type {?} */ elementNode = hostElement(hostNode, componentDef);\n        // Create directive instance with n() and store at index 1 in data array (el is 0)\n        component = rootContext.component =\n            getDirectiveInstance(directiveCreate(1, componentDef.n(), componentDef));\n        initChangeDetectorIfExisting(elementNode.nodeInjector, component);\n    }\n    finally {\n        // We must not use leaveView here because it will set creationMode to false too early,\n        // causing init-only hooks not to run. The detectChanges call below will execute\n        // leaveView at the appropriate time in the lifecycle.\n        enterView(oldView, null);\n    }\n    opts.hostFeatures && opts.hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n    tick(component);\n    return component;\n}\n/**\n * Used to enable lifecycle hooks on the root component.\n *\n * Include this feature when calling `renderComponent` if the root component\n * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n * be called properly.\n *\n * Example:\n *\n * ```\n * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n * ```\n * @param {?} component\n * @param {?} def\n * @return {?}\n */\n\n/**\n * Retrieve the host element of the component.\n *\n * Use this function to retrieve the host element of the component. The host\n * element is the element which the component is associated with.\n *\n * @template T\n * @param {?} component Component for which the host element should be retrieved.\n * @return {?}\n */\n\n/**\n * Retrieves the rendered text for a given component.\n *\n * This function retrieves the host element of a component and\n * and then returns the `textContent` for that element. This implies\n * that the text returned will include re-projected content of\n * the component as well.\n *\n * @param {?} component The component to return the content text for.\n * @return {?}\n */\n\n/**\n * Wait on component until it is rendered.\n *\n * This function returns a `Promise` which is resolved when the component's\n * change detection is executed. This is determined by finding the scheduler\n * associated with the `component`'s render tree and waiting until the scheduler\n * flushes. If nothing is scheduled, the function returns a resolved promise.\n *\n * Example:\n * ```\n * await whenRendered(myComponent);\n * ```\n *\n * @param {?} component Component to wait upon\n * @return {?} Promise which resolves when the component is rendered.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If a directive is diPublic, bloomAdd sets a property on the instance with this constant as\n * the key and the directive's unique ID as the value. This allows us to map directives to their\n * bloom filter bit for DI.\n */\nvar NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n/**\n * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n * directives that will share slots, and thus, the fewer false positives when checking for\n * the existence of a directive.\n */\nvar BLOOM_SIZE = 128;\n/**\n * Counter used to generate unique IDs for directives.\n */\nvar nextNgElementId = 0;\n/**\n * Registers this directive as present in its node's injector by flipping the directive's\n * corresponding bit in the injector's bloom filter.\n *\n * @param {?} injector The node injector in which the directive should be registered\n * @param {?} type The directive to register\n * @return {?}\n */\nfunction bloomAdd(injector, type) {\n    var /** @type {?} */ id = (/** @type {?} */ (type))[NG_ELEMENT_ID];\n    // Set a unique ID on the directive type, so if something tries to inject the directive,\n    // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n    if (id == null) {\n        id = (/** @type {?} */ (type))[NG_ELEMENT_ID] = nextNgElementId++;\n    }\n    // We only have BLOOM_SIZE (128) slots in our bloom filter (4 buckets * 32 bits each),\n    // so all unique IDs must be modulo-ed into a number from 0 - 127 to fit into the filter.\n    // This means that after 128, some directives will share slots, leading to some false positives\n    // when checking for a directive's presence.\n    var /** @type {?} */ bloomBit = id % BLOOM_SIZE;\n    // Create a mask that targets the specific bit associated with the directive.\n    // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n    // to bit positions 0 - 31 in a 32 bit integer.\n    var /** @type {?} */ mask = 1 << bloomBit;\n    // Use the raw bloomBit number to determine which bloom filter bucket we should check\n    // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127]\n    if (bloomBit < 64) {\n        if (bloomBit < 32) {\n            // Then use the mask to flip on the bit (0-31) associated with the directive in that bucket\n            injector.bf0 |= mask;\n        }\n        else {\n            injector.bf1 |= mask;\n        }\n    }\n    else {\n        if (bloomBit < 96) {\n            injector.bf2 |= mask;\n        }\n        else {\n            injector.bf3 |= mask;\n        }\n    }\n}\n/**\n * @return {?}\n */\nfunction getOrCreateNodeInjector() {\n    ngDevMode && assertPreviousIsParent();\n    return getOrCreateNodeInjectorForNode(/** @type {?} */ (getPreviousOrParentNode()));\n}\n/**\n * Creates (or gets an existing) injector for a given element or container.\n *\n * @param {?} node for which an injector should be retrieved / created.\n * @return {?} Node injector\n */\nfunction getOrCreateNodeInjectorForNode(node) {\n    var /** @type {?} */ nodeInjector = node.nodeInjector;\n    var /** @type {?} */ parentInjector = node.parent && node.parent.nodeInjector;\n    if (nodeInjector != parentInjector) {\n        return /** @type {?} */ ((nodeInjector));\n    }\n    return node.nodeInjector = {\n        parent: parentInjector,\n        node: node,\n        bf0: 0,\n        bf1: 0,\n        bf2: 0,\n        bf3: 0,\n        cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n        cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n        cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n        cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n        injector: null,\n        templateRef: null,\n        viewContainerRef: null,\n        elementRef: null,\n        changeDetectorRef: null\n    };\n}\n/**\n * Constructs an injection error with the given text and token.\n *\n * @param {?} text The text of the error\n * @param {?} token The token associated with the error\n * @return {?} The error that was created\n */\nfunction createInjectionError(text$$1, token) {\n    return new Error(\"ElementInjector: \" + text$$1 + \" [\" + stringify$1(token) + \"]\");\n}\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param {?} di The node injector in which a directive will be added\n * @param {?} def The definition of the directive to be made public\n * @return {?}\n */\nfunction diPublicInInjector(di, def) {\n    bloomAdd(di, def.type);\n}\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param {?} def The definition of the directive to be made public\n * @return {?}\n */\nfunction diPublic(def) {\n    diPublicInInjector(getOrCreateNodeInjector(), def);\n}\n/**\n * Searches for an instance of the given directive type up the injector tree and returns\n * that instance if found.\n *\n * If not found, it will propagate up to the next parent injector until the token\n * is found or the top is reached.\n *\n * Usage example (in factory function):\n *\n * class SomeDirective {\n *   constructor(directive: DirectiveA) {}\n *\n *   static ngDirectiveDef = defineDirective({\n *     type: SomeDirective,\n *     factory: () => new SomeDirective(inject(DirectiveA))\n *   });\n * }\n *\n * @template T\n * @param {?} token The directive type to search for\n * @param {?=} flags Injection flags (e.g. CheckParent)\n * @param {?=} defaultValue\n * @return {?} The instance found\n */\nfunction inject$1(token, flags, defaultValue) {\n    return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags, defaultValue);\n}\n/**\n * Creates an ElementRef and stores it on the injector.\n * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n *\n * @return {?} The ElementRef instance to use\n */\n\n/**\n * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n * exists, retrieves the existing TemplateRef.\n *\n * @template T\n * @return {?} The TemplateRef instance to use\n */\nfunction injectTemplateRef() {\n    return getOrCreateTemplateRef(getOrCreateNodeInjector());\n}\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @return {?} The ViewContainerRef instance to use\n */\nfunction injectViewContainerRef() {\n    return getOrCreateContainerRef(getOrCreateNodeInjector());\n}\n/**\n * Returns a ChangeDetectorRef (a.k.a. a ViewRef)\n * @return {?}\n */\nfunction injectChangeDetectorRef() {\n    return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n}\n/**\n * Inject static attribute value into directive constructor.\n *\n * This method is used with `factory` functions which are generated as part of\n * `defineDirective` or `defineComponent`. The method retrieves the static value\n * of an attribute. (Dynamic attributes are not supported since they are not resolved\n *  at the time of injection and can change over time.)\n *\n * # Example\n * Given:\n * ```\n * \\@Component(...)\n * class MyComponent {\n *   constructor(\\@Attribute('title') title: string) { ... }\n * }\n * ```\n * When instantiated with\n * ```\n * <my-component title=\"Hello\"></my-component>\n * ```\n *\n * Then factory method generated is:\n * ```\n * MyComponent.ngComponentDef = defineComponent({\n *   factory: () => new MyComponent(injectAttribute('title'))\n *   ...\n * })\n * ```\n *\n * \\@experimental\n * @param {?} attrName\n * @return {?}\n */\nfunction injectAttribute(attrName) {\n    ngDevMode && assertPreviousIsParent();\n    var /** @type {?} */ lElement = /** @type {?} */ (getPreviousOrParentNode());\n    ngDevMode && assertNodeType(lElement, 3 /* Element */);\n    var /** @type {?} */ tElement = /** @type {?} */ ((lElement.tNode));\n    ngDevMode && assertNotNull(tElement, 'expecting tNode');\n    var /** @type {?} */ attrs = tElement.attrs;\n    if (attrs) {\n        for (var /** @type {?} */ i = 0; i < attrs.length; i = i + 2) {\n            if (attrs[i] == attrName) {\n                return attrs[i + 1];\n            }\n        }\n    }\n    return undefined;\n}\n/**\n * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n * Or, if it already exists, retrieves the existing instance.\n *\n * @param {?} di\n * @param {?} context\n * @return {?} The ChangeDetectorRef to use\n */\nfunction getOrCreateChangeDetectorRef(di, context) {\n    if (di.changeDetectorRef)\n        return di.changeDetectorRef;\n    var /** @type {?} */ currentNode = di.node;\n    if (currentNode.data === null) {\n        // if data is null, this node is a regular element node (not a component)\n        return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view.node);\n    }\n    else if ((currentNode.flags & 3 /* TYPE_MASK */) === 3 /* Element */) {\n        // if it's an element node with data, it's a component and context will be set later\n        return di.changeDetectorRef = createViewRef(context);\n    }\n    return /** @type {?} */ ((null));\n}\n/**\n * Gets or creates ChangeDetectorRef for the closest host component\n * @param {?} currentNode\n * @return {?}\n */\nfunction getOrCreateHostChangeDetector(currentNode) {\n    var /** @type {?} */ hostNode = getClosestComponentAncestor(currentNode);\n    var /** @type {?} */ hostInjector = hostNode.nodeInjector;\n    var /** @type {?} */ existingRef = hostInjector && hostInjector.changeDetectorRef;\n    return existingRef ? existingRef :\n        createViewRef(hostNode.view.data[hostNode.flags >> 12 /* INDX_SHIFT */]);\n}\n/**\n * If the node is an embedded view, traverses up the view tree to return the closest\n * ancestor view that is attached to a component. If it's already a component node,\n * returns itself.\n * @param {?} node\n * @return {?}\n */\nfunction getClosestComponentAncestor(node) {\n    while ((node.flags & 3 /* TYPE_MASK */) === 2 /* View */) {\n        node = node.view.node;\n    }\n    return /** @type {?} */ (node);\n}\n/**\n * Searches for an instance of the given directive type up the injector tree and returns\n * that instance if found.\n *\n * Specifically, it gets the bloom filter bit associated with the directive (see bloomHashBit),\n * checks that bit against the bloom filter structure to identify an injector that might have\n * the directive (see bloomFindPossibleInjector), then searches the directives on that injector\n * for a match.\n *\n * If not found, it will propagate up to the next parent injector until the token\n * is found or the top is reached.\n *\n * @template T\n * @param {?} di Node injector where the search should start\n * @param {?} token The directive type to search for\n * @param {?=} flags Injection flags (e.g. CheckParent)\n * @param {?=} defaultValue\n * @return {?} The instance found\n */\nfunction getOrCreateInjectable(di, token, flags, defaultValue) {\n    var /** @type {?} */ bloomHash = bloomHashBit(token);\n    // If the token has a bloom hash, then it is a directive that is public to the injection system\n    // (diPublic). If there is no hash, fall back to the module injector.\n    if (bloomHash === null) {\n        var /** @type {?} */ moduleInjector = di.injector;\n        if (!moduleInjector) {\n            if (defaultValue != null) {\n                return defaultValue;\n            }\n            throw createInjectionError('NotFound', token);\n        }\n        moduleInjector.get(token);\n    }\n    else {\n        var /** @type {?} */ injector = di;\n        while (injector) {\n            // Get the closest potential matching injector (upwards in the injector tree) that\n            // *potentially* has the token.\n            injector = bloomFindPossibleInjector(injector, bloomHash);\n            // If no injector is found, we *know* that there is no ancestor injector that contains the\n            // token, so we abort.\n            if (!injector) {\n                break;\n            }\n            // At this point, we have an injector which *may* contain the token, so we step through the\n            // directives associated with the injector's corresponding node to get the directive instance.\n            var /** @type {?} */ node = injector.node;\n            // The size of the node's directive's list is stored in certain bits of the node's flags,\n            // so exact it with a mask and shift it back such that the bits reflect the real value.\n            var /** @type {?} */ flags_1 = node.flags;\n            var /** @type {?} */ size = (flags_1 & 4092 /* SIZE_MASK */) >> 2;\n            if (size !== 0) {\n                // The start index of the directives list is also part of the node's flags, but there is\n                // nothing to the \"left\" of it so it doesn't need a mask.\n                var /** @type {?} */ start = flags_1 >> 12;\n                var /** @type {?} */ tData = node.view.tView.data;\n                for (var /** @type {?} */ i = start, /** @type {?} */ ii = start + size; i < ii; i++) {\n                    // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                    // and matches the given token, return the directive instance.\n                    var /** @type {?} */ directiveDef = /** @type {?} */ (tData[i]);\n                    if (directiveDef.diPublic && directiveDef.type == token) {\n                        return getDirectiveInstance(node.view.data[i]);\n                    }\n                }\n            }\n            // If we *didn't* find the directive for the token from the candidate injector, we had a false\n            // positive. Traverse up the tree and continue.\n            injector = injector.parent;\n        }\n    }\n    // No directive was found for the given token.\n    // TODO: implement optional, check-self, and check-parent.\n    throw createInjectionError('Not found', token);\n}\n/**\n * Given a directive type, this function returns the bit in an injector's bloom filter\n * that should be used to determine whether or not the directive is present.\n *\n * When the directive was added to the bloom filter, it was given a unique ID that can be\n * retrieved on the class. Since there are only BLOOM_SIZE slots per bloom filter, the directive's\n * ID must be modulo-ed by BLOOM_SIZE to get the correct bloom bit (directives share slots after\n * BLOOM_SIZE is reached).\n *\n * @param {?} type The directive type\n * @return {?} The bloom bit to check for the directive\n */\nfunction bloomHashBit(type) {\n    var /** @type {?} */ id = (/** @type {?} */ (type))[NG_ELEMENT_ID];\n    return typeof id === 'number' ? id % BLOOM_SIZE : null;\n}\n/**\n * Finds the closest injector that might have a certain directive.\n *\n * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n * check and a starting injector, this function traverses up injectors until it finds an\n * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n * injector may have that directive. It only *may* have the directive because directives begin\n * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n * different directive sharing the bit.\n *\n * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n * the directive and do not need to be checked.\n *\n * @param {?} startInjector\n * @param {?} bloomBit The bit to check in each injector's bloom filter\n * @return {?} An injector that might have the directive\n */\nfunction bloomFindPossibleInjector(startInjector, bloomBit) {\n    // Create a mask that targets the specific bit associated with the directive we're looking for.\n    // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n    // to bit positions 0 - 31 in a 32 bit integer.\n    var /** @type {?} */ mask = 1 << bloomBit;\n    // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n    // match.\n    var /** @type {?} */ injector = startInjector;\n    while (injector) {\n        // Our bloom filter size is 128 bits, which is four 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127]\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var /** @type {?} */ value = bloomBit < 64 ? (bloomBit < 32 ? injector.bf0 : injector.bf1) :\n            (bloomBit < 96 ? injector.bf2 : injector.bf3);\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        if ((value & mask) === mask) {\n            return injector;\n        }\n        // If the current injector does not have the directive, check the bloom filters for the ancestor\n        // injectors (cbf0 - cbf3). These filters capture *all* ancestor injectors.\n        value = bloomBit < 64 ? (bloomBit < 32 ? injector.cbf0 : injector.cbf1) :\n            (bloomBit < 96 ? injector.cbf2 : injector.cbf3);\n        // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n        // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n        injector = (value & mask) ? injector.parent : null;\n    }\n    return null;\n}\nvar ReadFromInjectorFn = /** @class */ (function () {\n    function ReadFromInjectorFn(read) {\n        this.read = read;\n    }\n    return ReadFromInjectorFn;\n}());\n/**\n * Creates an ElementRef for a given node injector and stores it on the injector.\n * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n *\n * @param {?} di The node injector where we should store a created ElementRef\n * @return {?} The ElementRef instance to use\n */\nfunction getOrCreateElementRef(di) {\n    return di.elementRef ||\n        (di.elementRef = new ElementRef$1(((di.node.flags & 3 /* TYPE_MASK */) === 0 /* Container */) ? null :\n            di.node.native));\n}\nvar QUERY_READ_TEMPLATE_REF = /** @type {?} */ ((/** @type {?} */ (new ReadFromInjectorFn(function (injector) { return getOrCreateTemplateRef(injector); }))));\nvar QUERY_READ_CONTAINER_REF = /** @type {?} */ ((/** @type {?} */ (new ReadFromInjectorFn(function (injector) { return getOrCreateContainerRef(injector); }))));\nvar QUERY_READ_ELEMENT_REF = /** @type {?} */ ((/** @type {?} */ (new ReadFromInjectorFn(function (injector) { return getOrCreateElementRef(injector); }))));\nvar QUERY_READ_FROM_NODE = (/** @type {?} */ ((new ReadFromInjectorFn(function (injector, node, directiveIdx) {\n    ngDevMode && assertNodeOfPossibleTypes(node, 0 /* Container */, 3 /* Element */);\n    if (directiveIdx > -1) {\n        return node.view.data[directiveIdx];\n    }\n    else if ((node.flags & 3 /* TYPE_MASK */) === 3 /* Element */) {\n        return getOrCreateElementRef(injector);\n    }\n    else if ((node.flags & 3 /* TYPE_MASK */) === 0 /* Container */) {\n        return getOrCreateTemplateRef(injector);\n    }\n    throw new Error('fail');\n}))));\n/**\n * A ref to a node's native element.\n */\nvar ElementRef$1 = /** @class */ (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @param {?} di\n * @return {?} The ViewContainerRef instance to use\n */\nfunction getOrCreateContainerRef(di) {\n    return di.viewContainerRef ||\n        (di.viewContainerRef = new ViewContainerRef$1(/** @type {?} */ (di.node)));\n}\n/**\n * A ref to a container that enables adding and removing views from that container\n * imperatively.\n */\nvar ViewContainerRef$1 = /** @class */ (function () {\n    function ViewContainerRef(_node) {\n        this._node = _node;\n    }\n    /**\n     * @return {?}\n     */\n    ViewContainerRef.prototype.clear = /**\n     * @return {?}\n     */\n    function () { throw notImplemented(); };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ViewContainerRef.prototype.get = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) { throw notImplemented(); };\n    /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef.prototype.createEmbeddedView = /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    function (templateRef, context, index) {\n        var /** @type {?} */ viewRef = templateRef.createEmbeddedView(/** @type {?} */ ((context)));\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ViewContainerRef.prototype.createComponent = /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (componentFactory, index, injector, projectableNodes, ngModule) {\n        throw notImplemented();\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef.prototype.insert = /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    function (viewRef, index) {\n        if (index == null) {\n            index = this._node.data.views.length;\n        }\n        else {\n            // +1 because it's legal to insert at the end.\n            ngDevMode && assertLessThan(index, this._node.data.views.length + 1, 'index');\n        }\n        var /** @type {?} */ lView = (/** @type {?} */ (viewRef))._lViewNode;\n        insertView(this._node, lView, index);\n        // If the view is dynamic (has a template), it needs to be counted both at the container\n        // level and at the node above the container.\n        if (lView.data.template !== null) {\n            // Increment the container view count.\n            this._node.data.dynamicViewCount++;\n            // Look for the parent node and increment its dynamic view count.\n            if (this._node.parent !== null && this._node.parent.data !== null) {\n                ngDevMode &&\n                    assertNodeOfPossibleTypes(this._node.parent, 2 /* View */, 3 /* Element */);\n                this._node.parent.data.dynamicViewCount++;\n            }\n        }\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    ViewContainerRef.prototype.move = /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    function (viewRef, currentIndex) {\n        throw notImplemented();\n    };\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ViewContainerRef.prototype.indexOf = /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) { throw notImplemented(); };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef.prototype.remove = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) { throw notImplemented(); };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef.prototype.detach = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) { throw notImplemented(); };\n    return ViewContainerRef;\n}());\n/**\n * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n * exists, retrieves the existing TemplateRef.\n *\n * @template T\n * @param {?} di The node injector where we should store a created TemplateRef\n * @return {?} The TemplateRef instance to use\n */\nfunction getOrCreateTemplateRef(di) {\n    ngDevMode && assertNodeType(di.node, 0 /* Container */);\n    var /** @type {?} */ data = (/** @type {?} */ (di.node)).data;\n    return di.templateRef || (di.templateRef = new TemplateRef$1(getOrCreateElementRef(di), /** @type {?} */ ((data.template)), getRenderer()));\n}\nvar TemplateRef$1 = /** @class */ (function () {\n    function TemplateRef(elementRef, template, _renderer) {\n        this._renderer = _renderer;\n        this.elementRef = elementRef;\n        this._template = template;\n    }\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateRef.prototype.createEmbeddedView = /**\n     * @param {?} context\n     * @return {?}\n     */\n    function (context) {\n        var /** @type {?} */ viewNode = renderEmbeddedTemplate(null, this._template, context, this._renderer);\n        return addDestroyable(new EmbeddedViewRef$1(viewNode, this._template, context));\n    };\n    return TemplateRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a component definition object.\n *\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngComponentDef = defineComponent({\n *     ...\n *   });\n * }\n * ```\n * @template T\n * @param {?} componentDefinition\n * @return {?}\n */\nfunction defineComponent(componentDefinition) {\n    var /** @type {?} */ type = componentDefinition.type;\n    var /** @type {?} */ def = /** @type {?} */ ({\n        type: type,\n        diPublic: null,\n        n: componentDefinition.factory,\n        tag: (/** @type {?} */ (componentDefinition)).tag || /** @type {?} */ ((null)),\n        template: (/** @type {?} */ (componentDefinition)).template || /** @type {?} */ ((null)),\n        h: componentDefinition.hostBindings || noop$1,\n        attributes: componentDefinition.attributes || null,\n        inputs: invertObject(componentDefinition.inputs),\n        inputsPropertyName: componentDefinition.inputsPropertyName || null,\n        outputs: invertObject(componentDefinition.outputs),\n        methods: invertObject(componentDefinition.methods),\n        rendererType: resolveRendererType2(componentDefinition.rendererType) || null,\n        exportAs: componentDefinition.exportAs,\n        onInit: type.prototype.ngOnInit || null,\n        doCheck: type.prototype.ngDoCheck || null,\n        afterContentInit: type.prototype.ngAfterContentInit || null,\n        afterContentChecked: type.prototype.ngAfterContentChecked || null,\n        afterViewInit: type.prototype.ngAfterViewInit || null,\n        afterViewChecked: type.prototype.ngAfterViewChecked || null,\n        onDestroy: type.prototype.ngOnDestroy || null,\n        onPush: (/** @type {?} */ (componentDefinition)).changeDetection ===\n            ChangeDetectionStrategy.OnPush\n    });\n    var /** @type {?} */ feature = componentDefinition.features;\n    feature && feature.forEach(function (fn) { return fn(def); });\n    return def;\n}\nvar PRIVATE_PREFIX = '__ngOnChanges_';\n/**\n * @param {?} definition\n * @return {?}\n */\nfunction NgOnChangesFeature(definition) {\n    var /** @type {?} */ inputs = definition.inputs;\n    var /** @type {?} */ proto = definition.type.prototype;\n    var /** @type {?} */ inputsPropertyName = definition.inputsPropertyName;\n    // Place where we will store SimpleChanges if there is a change\n    Object.defineProperty(proto, PRIVATE_PREFIX, { value: undefined, writable: true });\n    var _loop_1 = function (pubKey) {\n        var /** @type {?} */ minKey = inputs[pubKey];\n        var /** @type {?} */ propertyName = inputsPropertyName && inputsPropertyName[minKey] || pubKey;\n        var /** @type {?} */ privateMinKey = PRIVATE_PREFIX + minKey;\n        // Create a place where the actual value will be stored and make it non-enumerable\n        Object.defineProperty(proto, privateMinKey, { value: undefined, writable: true });\n        var /** @type {?} */ existingDesc = Object.getOwnPropertyDescriptor(proto, minKey);\n        // create a getter and setter for property\n        Object.defineProperty(proto, minKey, {\n            get: function () {\n                return (existingDesc && existingDesc.get) ? existingDesc.get.call(this) :\n                    this[privateMinKey];\n            },\n            set: function (value) {\n                var /** @type {?} */ simpleChanges = this[PRIVATE_PREFIX];\n                var /** @type {?} */ isFirstChange = simpleChanges === undefined;\n                if (simpleChanges == null) {\n                    simpleChanges = this[PRIVATE_PREFIX] = {};\n                }\n                simpleChanges[propertyName] = new SimpleChange(this[privateMinKey], value, isFirstChange);\n                (existingDesc && existingDesc.set) ? existingDesc.set.call(this, value) :\n                    this[privateMinKey] = value;\n            }\n        });\n    };\n    for (var /** @type {?} */ pubKey in inputs) {\n        _loop_1(pubKey);\n    }\n    // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n    // so the call order is changes-init-check in creation mode. In subsequent\n    // change detection runs, only the check wrapper will be called.\n    if (definition.onInit != null) {\n        definition.onInit = onChangesWrapper(definition.onInit);\n    }\n    definition.doCheck = onChangesWrapper(definition.doCheck);\n    /**\n     * @param {?} delegateHook\n     * @return {?}\n     */\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var /** @type {?} */ simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            delegateHook && delegateHook.apply(this);\n        };\n    }\n}\n/**\n * @template T\n * @param {?} definition\n * @return {?}\n */\nfunction PublicFeature(definition) {\n    definition.diPublic = diPublic;\n}\nvar EMPTY$1 = {};\n/**\n * @return {?}\n */\nfunction noop$1() { }\n/**\n * Swaps the keys and values of an object.\n * @param {?} obj\n * @return {?}\n */\nfunction invertObject(obj) {\n    if (obj == null)\n        return EMPTY$1;\n    var /** @type {?} */ newObj = {};\n    for (var /** @type {?} */ minifiedKey in obj) {\n        newObj[obj[minifiedKey]] = minifiedKey;\n    }\n    return newObj;\n}\n/**\n * Create a directive definition object.\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngDirectiveDef = defineDirective({\n *     ...\n *   });\n * }\n * ```\n */\nvar defineDirective = /** @type {?} */ (defineComponent);\n/**\n * Create a pipe definition object.\n *\n * # Example\n * ```\n * class MyPipe implements PipeTransform {\n *   // Generated by Angular Template Compiler\n *   static ngPipeDef = definePipe({\n *     ...\n *   });\n * }\n * ```\n * @template T\n * @param {?} __0\n * @return {?}\n */\nfunction definePipe(_a) {\n    var type = _a.type, factory = _a.factory, pure = _a.pure;\n    return /** @type {?} */ ({\n        n: factory,\n        pure: pure !== false,\n        onDestroy: type.prototype.ngOnDestroy || null\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If the value hasn't been saved, calls the pure function to store and return the\n * value. If it has been saved, returns the saved value.\n *\n * @template T\n * @param {?} pureFn Function that returns a value\n * @param {?=} thisArg\n * @return {?} value\n */\nfunction pureFunction0(pureFn, thisArg) {\n    return getCreationMode() ? checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg) : pureFn()) :\n        consumeBinding();\n}\n/**\n * If the value of the provided exp has changed, calls the pure function to return\n * an updated value. Or if the value has not changed, returns cached value.\n *\n * @param {?} pureFn Function that returns an updated value\n * @param {?} exp Updated expression value\n * @param {?=} thisArg\n * @return {?} Updated value\n */\nfunction pureFunction1(pureFn, exp, thisArg) {\n    return bindingUpdated(exp) ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n        consumeBinding();\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?=} thisArg\n * @return {?} Updated value\n */\nfunction pureFunction2(pureFn, exp1, exp2, thisArg) {\n    return bindingUpdated2(exp1, exp2) ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n        consumeBinding();\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?=} thisArg\n * @return {?} Updated value\n */\nfunction pureFunction3(pureFn, exp1, exp2, exp3, thisArg) {\n    var /** @type {?} */ different = bindingUpdated2(exp1, exp2);\n    return bindingUpdated(exp3) || different ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n        consumeBinding();\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @param {?=} thisArg\n * @return {?} Updated value\n */\nfunction pureFunction4(pureFn, exp1, exp2, exp3, exp4, thisArg) {\n    return bindingUpdated4(exp1, exp2, exp3, exp4) ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n        consumeBinding();\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @param {?} exp5\n * @param {?=} thisArg\n * @return {?} Updated value\n */\nfunction pureFunction5(pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n    var /** @type {?} */ different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    return bindingUpdated(exp5) || different ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n            pureFn(exp1, exp2, exp3, exp4, exp5)) :\n        consumeBinding();\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @param {?} exp5\n * @param {?} exp6\n * @param {?=} thisArg\n * @return {?} Updated value\n */\nfunction pureFunction6(pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n    var /** @type {?} */ different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    return bindingUpdated2(exp5, exp6) || different ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n        consumeBinding();\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @param {?} exp5\n * @param {?} exp6\n * @param {?} exp7\n * @param {?=} thisArg\n * @return {?} Updated value\n */\nfunction pureFunction7(pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n    var /** @type {?} */ different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    different = bindingUpdated2(exp5, exp6) || different;\n    return bindingUpdated(exp7) || different ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n        consumeBinding();\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @param {?} exp5\n * @param {?} exp6\n * @param {?} exp7\n * @param {?} exp8\n * @param {?=} thisArg\n * @return {?} Updated value\n */\nfunction pureFunction8(pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n    var /** @type {?} */ different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    return bindingUpdated4(exp5, exp6, exp7, exp8) || different ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n        consumeBinding();\n}\n/**\n * pureFunction instruction that can support any number of bindings.\n *\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} pureFn A pure function that takes binding values and builds an object or array\n * containing those values.\n * @param {?} exps\n * @param {?=} thisArg\n * @return {?} Updated value\n */\nfunction pureFunctionV(pureFn, exps, thisArg) {\n    var /** @type {?} */ different = false;\n    for (var /** @type {?} */ i = 0; i < exps.length; i++) {\n        bindingUpdated(exps[i]) && (different = true);\n    }\n    return different ? checkAndUpdateBinding$1(pureFn.apply(thisArg, exps)) : consumeBinding();\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a pipe.\n *\n * @template T\n * @param {?} index Pipe index where the pipe will be stored.\n * @param {?} pipeDef Pipe definition object for registering life cycle hooks.\n * @param {?=} firstInstance (optional) The first instance of the pipe that can be reused for pure pipes.\n * @return {?} T the instance of the pipe.\n */\nfunction pipe(index, pipeDef, firstInstance) {\n    var /** @type {?} */ tView = getTView();\n    if (tView.firstTemplatePass) {\n        tView.data[index] = pipeDef;\n        if (pipeDef.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(index, pipeDef.onDestroy);\n        }\n    }\n    var /** @type {?} */ pipeInstance = pipeDef.pure && firstInstance ? firstInstance : pipeDef.n();\n    store(index, pipeInstance);\n    return pipeInstance;\n}\n/**\n * Invokes a pipe with 1 arguments.\n *\n * This instruction acts as a guard to {\\@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param {?} index Pipe index where the pipe was stored on creation.\n * @param {?} v1 1st argument to {\\@link PipeTransform#transform}.\n * @return {?}\n */\nfunction pipeBind1(index, v1) {\n    var /** @type {?} */ pipeInstance = load(index);\n    return isPure(index) ? pureFunction1(pipeInstance.transform, v1, pipeInstance) :\n        pipeInstance.transform(v1);\n}\n/**\n * Invokes a pipe with 2 arguments.\n *\n * This instruction acts as a guard to {\\@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param {?} index Pipe index where the pipe was stored on creation.\n * @param {?} v1 1st argument to {\\@link PipeTransform#transform}.\n * @param {?} v2 2nd argument to {\\@link PipeTransform#transform}.\n * @return {?}\n */\nfunction pipeBind2(index, v1, v2) {\n    var /** @type {?} */ pipeInstance = load(index);\n    return isPure(index) ? pureFunction2(pipeInstance.transform, v1, v2, pipeInstance) :\n        pipeInstance.transform(v1, v2);\n}\n/**\n * Invokes a pipe with 3 arguments.\n *\n * This instruction acts as a guard to {\\@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param {?} index Pipe index where the pipe was stored on creation.\n * @param {?} v1 1st argument to {\\@link PipeTransform#transform}.\n * @param {?} v2 2nd argument to {\\@link PipeTransform#transform}.\n * @param {?} v3 4rd argument to {\\@link PipeTransform#transform}.\n * @return {?}\n */\nfunction pipeBind3(index, v1, v2, v3) {\n    var /** @type {?} */ pipeInstance = load(index);\n    return isPure(index) ? pureFunction3(pipeInstance.transform.bind(pipeInstance), v1, v2, v3) :\n        pipeInstance.transform(v1, v2, v3);\n}\n/**\n * Invokes a pipe with 4 arguments.\n *\n * This instruction acts as a guard to {\\@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param {?} index Pipe index where the pipe was stored on creation.\n * @param {?} v1 1st argument to {\\@link PipeTransform#transform}.\n * @param {?} v2 2nd argument to {\\@link PipeTransform#transform}.\n * @param {?} v3 3rd argument to {\\@link PipeTransform#transform}.\n * @param {?} v4 4th argument to {\\@link PipeTransform#transform}.\n * @return {?}\n */\nfunction pipeBind4(index, v1, v2, v3, v4) {\n    var /** @type {?} */ pipeInstance = load(index);\n    return isPure(index) ? pureFunction4(pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n        pipeInstance.transform(v1, v2, v3, v4);\n}\n/**\n * Invokes a pipe with variable number of arguments.\n *\n * This instruction acts as a guard to {\\@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param {?} index Pipe index where the pipe was stored on creation.\n * @param {?} values Array of arguments to pass to {\\@link PipeTransform#transform} method.\n * @return {?}\n */\nfunction pipeBindV(index, values) {\n    var /** @type {?} */ pipeInstance = load(index);\n    return isPure(index) ? pureFunctionV(pipeInstance.transform, values, pipeInstance) :\n        pipeInstance.transform.apply(pipeInstance, values);\n}\n/**\n * @param {?} index\n * @return {?}\n */\nfunction isPure(index) {\n    return (/** @type {?} */ (getTView().data[index])).pure;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * `DirectiveDef` is a compiled version of the Directive used by the renderer instructions.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n *\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used for tracking queries (e.g. ViewChild, ContentChild).\n * @record\n */\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A predicate which determines if a given element/directive should be included in the query\n * results.\n * @record\n */\n\n/**\n * An object representing a query, which is a combination of:\n * - query predicate to determines if a given element/directive should be included in the query\n * - values collected based on a predicate\n * - `QueryList` to which collected values should be reported\n * @record\n */\n\nvar LQueries_ = /** @class */ (function () {\n    function LQueries_(deep) {\n        this.shallow = null;\n        this.deep = null;\n        this.deep = deep == null ? null : deep;\n    }\n    /**\n     * @template T\n     * @param {?} queryList\n     * @param {?} predicate\n     * @param {?=} descend\n     * @param {?=} read\n     * @return {?}\n     */\n    LQueries_.prototype.track = /**\n     * @template T\n     * @param {?} queryList\n     * @param {?} predicate\n     * @param {?=} descend\n     * @param {?=} read\n     * @return {?}\n     */\n    function (queryList, predicate, descend, read) {\n        // TODO(misko): This is not right. In case of inherited state, a calling track will incorrectly\n        // mutate parent.\n        if (descend) {\n            this.deep = createQuery$1(this.deep, queryList, predicate, read != null ? read : null);\n        }\n        else {\n            this.shallow = createQuery$1(this.shallow, queryList, predicate, read != null ? read : null);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    LQueries_.prototype.child = /**\n     * @return {?}\n     */\n    function () {\n        if (this.deep === null) {\n            // if we don't have any deep queries then no need to track anything more.\n            return null;\n        }\n        if (this.shallow === null) {\n            // DeepQuery: We can reuse the current state if the child state would be same as current\n            // state.\n            return this;\n        }\n        else {\n            // We need to create new state\n            return new LQueries_(this.deep);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    LQueries_.prototype.container = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = null;\n        var /** @type {?} */ query = this.deep;\n        while (query) {\n            var /** @type {?} */ containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var /** @type {?} */ clonedQuery = { next: null, list: query.list, predicate: query.predicate, values: containerValues };\n            clonedQuery.next = result;\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result ? new LQueries_(result) : null;\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    LQueries_.prototype.enterView = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ result = null;\n        var /** @type {?} */ query = this.deep;\n        while (query) {\n            var /** @type {?} */ viewValues = []; // prepare room for view nodes\n            query.values.splice(index, 0, viewValues);\n            var /** @type {?} */ clonedQuery = { next: null, list: query.list, predicate: query.predicate, values: viewValues };\n            clonedQuery.next = result;\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result ? new LQueries_(result) : null;\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    LQueries_.prototype.addNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        add(this.shallow, node);\n        add(this.deep, node);\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    LQueries_.prototype.removeView = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ query = this.deep;\n        while (query) {\n            var /** @type {?} */ removed = query.values.splice(index, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    };\n    return LQueries_;\n}());\n/**\n * Iterates over local names for a given node and returns directive index\n * (or -1 if a local name points to an element).\n *\n * @param {?} tNode static data of a node to check\n * @param {?} selector selector to match\n * @return {?} directive index, -1 or null if a selector didn't match any of the local names\n */\nfunction getIdxOfMatchingSelector(tNode, selector) {\n    var /** @type {?} */ localNames = tNode.localNames;\n    if (localNames) {\n        for (var /** @type {?} */ i = 0; i < localNames.length; i += 2) {\n            if (localNames[i] === selector) {\n                return /** @type {?} */ (localNames[i + 1]);\n            }\n        }\n    }\n    return null;\n}\n/**\n * Iterates over all the directives for a node and returns index of a directive for a given type.\n *\n * @param {?} node Node on which directives are present.\n * @param {?} type Type of a directive to look for.\n * @return {?} Index of a found directive or null when none found.\n */\nfunction geIdxOfMatchingDirective(node, type) {\n    var /** @type {?} */ tData = node.view.tView.data;\n    var /** @type {?} */ flags = node.flags;\n    for (var /** @type {?} */ i = flags >> 12 /* INDX_SHIFT */, /** @type {?} */\n    ii = i + ((flags & 4092 /* SIZE_MASK */) >> 2 /* SIZE_SHIFT */); i < ii; i++) {\n        var /** @type {?} */ def = /** @type {?} */ (tData[i]);\n        if (def.diPublic && def.type === type) {\n            return i;\n        }\n    }\n    return null;\n}\n/**\n * @param {?} nodeInjector\n * @param {?} node\n * @param {?} read\n * @param {?} directiveIdx\n * @return {?}\n */\nfunction readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n    if (read instanceof ReadFromInjectorFn) {\n        return read.read(nodeInjector, node, directiveIdx);\n    }\n    else {\n        var /** @type {?} */ matchingIdx = geIdxOfMatchingDirective(node, /** @type {?} */ (read));\n        if (matchingIdx !== null) {\n            return node.view.data[matchingIdx];\n        }\n    }\n    return null;\n}\n/**\n * @param {?} query\n * @param {?} node\n * @return {?}\n */\nfunction add(query, node) {\n    var /** @type {?} */ nodeInjector = getOrCreateNodeInjectorForNode(/** @type {?} */ (node));\n    while (query) {\n        var /** @type {?} */ predicate = query.predicate;\n        var /** @type {?} */ type = predicate.type;\n        if (type) {\n            var /** @type {?} */ directiveIdx = geIdxOfMatchingDirective(node, type);\n            if (directiveIdx !== null) {\n                // a node is matching a predicate - determine what to read\n                // if read token and / or strategy is not specified, use type as read token\n                var /** @type {?} */ result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n        }\n        else {\n            var /** @type {?} */ selector = /** @type {?} */ ((predicate.selector));\n            for (var /** @type {?} */ i = 0; i < selector.length; i++) {\n                ngDevMode && assertNotNull(node.tNode, 'node.tNode');\n                var /** @type {?} */ directiveIdx = getIdxOfMatchingSelector(/** @type {?} */ ((node.tNode)), selector[i]);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // note that queries using name selector must specify read strategy\n                    ngDevMode && assertNotNull(predicate.read, 'the node should have a predicate');\n                    var /** @type {?} */ result = readFromNodeInjector(nodeInjector, node, /** @type {?} */ ((predicate.read)), directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n        }\n        query = query.next;\n    }\n}\n/**\n * @param {?} query\n * @param {?} matchingValue\n * @return {?}\n */\nfunction addMatch(query, matchingValue) {\n    query.values.push(matchingValue);\n    query.list.setDirty();\n}\n/**\n * @template T\n * @param {?} predicate\n * @param {?} read\n * @return {?}\n */\nfunction createPredicate(predicate, read) {\n    var /** @type {?} */ isArray = Array.isArray(predicate);\n    return {\n        type: isArray ? null : /** @type {?} */ (predicate),\n        selector: isArray ? /** @type {?} */ (predicate) : null,\n        read: read\n    };\n}\n/**\n * @template T\n * @param {?} previous\n * @param {?} queryList\n * @param {?} predicate\n * @param {?} read\n * @return {?}\n */\nfunction createQuery$1(previous, queryList, predicate, read) {\n    return {\n        next: previous,\n        list: queryList,\n        predicate: createPredicate(predicate, read),\n        values: (/** @type {?} */ ((queryList)))._valuesTree\n    };\n}\nvar QueryList_ = /** @class */ (function () {\n    function QueryList_() {\n        this.dirty = true;\n        this.changes = new EventEmitter();\n        this._values = [];\n        /**\n         * \\@internal\n         */\n        this._valuesTree = [];\n    }\n    Object.defineProperty(QueryList_.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._values.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"first\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ values = this._values;\n            return values.length ? values[0] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"last\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ values = this._values;\n            return values.length ? values[values.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList_.prototype.map = /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return this._values.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList_.prototype.filter = /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._values.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList_.prototype.find = /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._values.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    QueryList_.prototype.reduce = /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    function (fn, init) {\n        return this._values.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList_.prototype.forEach = /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._values.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList_.prototype.some = /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._values.some(fn);\n    };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype.toArray = /**\n     * @return {?}\n     */\n    function () { return this._values.slice(0); };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype[getSymbolIterator()] = /**\n     * @return {?}\n     */\n    function () { return (/** @type {?} */ (this._values))[getSymbolIterator()](); };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this._values.toString(); };\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    QueryList_.prototype.reset = /**\n     * @param {?} res\n     * @return {?}\n     */\n    function (res) {\n        this._values = flatten$1(res);\n        (/** @type {?} */ (this)).dirty = false;\n    };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype.notifyOnChanges = /**\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this.changes)).emit(this); };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype.setDirty = /**\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this)).dirty = true; };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        (/** @type {?} */ (this.changes)).complete();\n        (/** @type {?} */ (this.changes)).unsubscribe();\n    };\n    return QueryList_;\n}());\nvar QueryList$1 = /** @type {?} */ (QueryList_);\n/**\n * Creates and returns a QueryList.\n *\n * @template T\n * @param {?} memoryIndex The index in memory where the QueryList should be saved. If null,\n * this is is a content query and the QueryList will be saved later through directiveCreate.\n * @param {?} predicate The type for which the query will search\n * @param {?=} descend Whether or not to descend into children\n * @param {?=} read What to save in the query\n * @return {?} QueryList<T>\n */\nfunction query(memoryIndex, predicate, descend, read) {\n    ngDevMode && assertPreviousIsParent();\n    var /** @type {?} */ queryList = new QueryList$1();\n    var /** @type {?} */ queries = getCurrentQueries(LQueries_);\n    queries.track(queryList, predicate, descend, read);\n    if (memoryIndex != null) {\n        store(memoryIndex, queryList);\n    }\n    return queryList;\n}\n/**\n * Refreshes a query by combining matches from all active views and removing matches from deleted\n * views.\n * Returns true if a query got dirty during change detection, false otherwise.\n * @param {?} queryList\n * @return {?}\n */\nfunction queryRefresh(queryList) {\n    var /** @type {?} */ queryListImpl = (/** @type {?} */ ((queryList)));\n    if (queryList.dirty) {\n        queryList.reset(queryListImpl._valuesTree);\n        queryList.notifyOnChanges();\n        return true;\n    }\n    return false;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BRAND = '__SANITIZER_TRUSTED_BRAND__';\n/**\n * A branded trusted string used with sanitization.\n *\n * See: {\\@link TrustedHtmlString}, {\\@link TrustedResourceUrlString}, {\\@link TrustedScriptString},\n * {\\@link TrustedStyleString}, {\\@link TrustedUrlString}\n * @record\n */\n\n/**\n * A branded trusted string used with sanitization of `html` strings.\n *\n * See: {\\@link bypassSanitizationTrustHtml} and {\\@link htmlSanitizer}.\n * @record\n */\n\n/**\n * A branded trusted string used with sanitization of `style` strings.\n *\n * See: {\\@link bypassSanitizationTrustStyle} and {\\@link styleSanitizer}.\n * @record\n */\n\n/**\n * A branded trusted string used with sanitization of `url` strings.\n *\n * See: {\\@link bypassSanitizationTrustScript} and {\\@link scriptSanitizer}.\n * @record\n */\n\n/**\n * A branded trusted string used with sanitization of `url` strings.\n *\n * See: {\\@link bypassSanitizationTrustUrl} and {\\@link urlSanitizer}.\n * @record\n */\n\n/**\n * A branded trusted string used with sanitization of `resourceUrl` strings.\n *\n * See: {\\@link bypassSanitizationTrustResourceUrl} and {\\@link resourceUrlSanitizer}.\n * @record\n */\n\n/**\n * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `html` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {\\@link bypassSanitizationTrustHtml}.\n *\n * @param {?} unsafeHtml untrusted `html`, typically from the user.\n * @return {?} `html` string which is safe to display to user, because all of the dangerous javascript\n * and urls have been removed.\n */\nfunction sanitizeHtml(unsafeHtml) {\n    if (unsafeHtml instanceof String && (/** @type {?} */ (unsafeHtml))[BRAND] === 'Html') {\n        return unsafeHtml.toString();\n    }\n    return _sanitizeHtml(document, stringify$1(unsafeHtml));\n}\n/**\n * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `style` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {\\@link bypassSanitizationTrustStyle}.\n *\n * @param {?} unsafeStyle untrusted `style`, typically from the user.\n * @return {?} `style` string which is safe to bind to the `style` properties, because all of the\n * dangerous javascript and urls have been removed.\n */\nfunction sanitizeStyle(unsafeStyle) {\n    if (unsafeStyle instanceof String && (/** @type {?} */ (unsafeStyle))[BRAND] === 'Style') {\n        return unsafeStyle.toString();\n    }\n    return _sanitizeStyle(stringify$1(unsafeStyle));\n}\n/**\n * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n * dangerous\n * content.\n *\n * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n * removes it.\n *\n * It is possible to mark a string as trusted by calling {\\@link bypassSanitizationTrustUrl}.\n *\n * @param {?} unsafeUrl untrusted `url`, typically from the user.\n * @return {?} `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * all of the dangerous javascript has been removed.\n */\nfunction sanitizeUrl(unsafeUrl) {\n    if (unsafeUrl instanceof String && (/** @type {?} */ (unsafeUrl))[BRAND] === 'Url') {\n        return unsafeUrl.toString();\n    }\n    return _sanitizeUrl(stringify$1(unsafeUrl));\n}\n/**\n * A `url` sanitizer which only lets trusted `url`s through.\n *\n * This passes only `url`s marked trusted by calling {\\@link bypassSanitizationTrustResourceUrl}.\n *\n * @param {?} unsafeResourceUrl untrusted `url`, typically from the user.\n * @return {?} `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * only trusted `url`s have been allowed to pass.\n */\nfunction sanitizeResourceUrl(unsafeResourceUrl) {\n    if (unsafeResourceUrl instanceof String &&\n        (/** @type {?} */ (unsafeResourceUrl))[BRAND] === 'ResourceUrl') {\n        return unsafeResourceUrl.toString();\n    }\n    throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n}\n/**\n * A `script` sanitizer which only lets trusted javascript through.\n *\n * This passes only `script`s marked trusted by calling {\\@link bypassSanitizationTrustScript}.\n *\n * @param {?} unsafeScript untrusted `script`, typically from the user.\n * @return {?} `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n * because only trusted `scripts`s have been allowed to pass.\n */\n\n/**\n * Mark `html` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {\\@link htmlSanitizer} to be trusted implicitly.\n *\n * @param {?} trustedHtml `html` string which needs to be implicitly trusted.\n * @return {?} a `html` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustHtml(trustedHtml) {\n    return bypassSanitizationTrustString(trustedHtml, 'Html');\n}\n/**\n * Mark `style` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {\\@link styleSanitizer} to be trusted implicitly.\n *\n * @param {?} trustedStyle `style` string which needs to be implicitly trusted.\n * @return {?} a `style` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustStyle(trustedStyle) {\n    return bypassSanitizationTrustString(trustedStyle, 'Style');\n}\n/**\n * Mark `script` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {\\@link scriptSanitizer} to be trusted implicitly.\n *\n * @param {?} trustedScript `script` string which needs to be implicitly trusted.\n * @return {?} a `script` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustScript(trustedScript) {\n    return bypassSanitizationTrustString(trustedScript, 'Script');\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {\\@link urlSanitizer} to be trusted implicitly.\n *\n * @param {?} trustedUrl `url` string which needs to be implicitly trusted.\n * @return {?} a `url` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustUrl(trustedUrl) {\n    return bypassSanitizationTrustString(trustedUrl, 'Url');\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {\\@link resourceUrlSanitizer} to be trusted implicitly.\n *\n * @param {?} trustedResourceUrl `url` string which needs to be implicitly trusted.\n * @return {?} a `url` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n    return bypassSanitizationTrustString(trustedResourceUrl, 'ResourceUrl');\n}\n/**\n * @param {?} trustedString\n * @param {?} mode\n * @return {?}\n */\nfunction bypassSanitizationTrustString(trustedString, mode) {\n    var /** @type {?} */ trusted = /** @type {?} */ (new String(trustedString));\n    trusted[BRAND] = mode;\n    return trusted;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// clang-format on\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link trigger trigger animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link state state animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link transition transition animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link keyframes keyframes animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link style style animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link animate animate animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link animateChild animateChild animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link useAnimation useAnimation animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link sequence sequence animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link group group animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link stagger stagger animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * `trigger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the\n * {\\@link Component#animations component animations metadata page} to gain a better\n * understanding of how animations in Angular are used.\n *\n * `trigger` Creates an animation trigger which will a list of {\\@link state state} and\n * {\\@link transition transition} entries that will be evaluated when the expression\n * bound to the trigger changes.\n *\n * Triggers are registered within the component annotation data under the\n * {\\@link Component#animations animations section}. An animation trigger can be placed on an element\n * within a template by referencing the name of the trigger followed by the expression value that\n * the\n * trigger is bound to (in the form of `[\\@triggerName]=\"expression\"`.\n *\n * Animation trigger bindings strigify values and then match the previous and current values against\n * any linked transitions. If a boolean value is provided into the trigger binding then it will both\n * be represented as `1` or `true` and `0` or `false` for a true and false boolean values\n * respectively.\n *\n * ### Usage\n *\n * `trigger` will create an animation trigger reference based on the provided `name` value. The\n * provided `animation` value is expected to be an array consisting of {\\@link state state} and\n * {\\@link transition transition} declarations.\n *\n * ```typescript\n * \\@Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * ## Disable Animations\n * A special animation control binding called `\\@.disabled` can be placed on an element which will\n * then disable animations for any inner animation triggers situated within the element as well as\n * any animations on the element itself.\n *\n * When true, the `\\@.disabled` binding will prevent all animations from rendering. The example\n * below shows how to use this feature:\n *\n * ```ts\n * \\@Component({\n *   selector: 'my-component',\n *   template: `\n *     <div [\\@.disabled]=\"isDisabled\">\n *       <div [\\@childAnimation]=\"exp\"></div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger(\"childAnimation\", [\n *       // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   isDisabled = true;\n *   exp = '...';\n * }\n * ```\n *\n * The `\\@childAnimation` trigger will not animate because `\\@.disabled` prevents it from happening\n * (when true).\n *\n * Note that `\\@.disabled` will only disable all animations (this means any animations running on\n * the same element will also be disabled).\n *\n * ### Disabling Animations Application-wide\n * When an area of the template is set to have animations disabled, **all** inner components will\n * also have their animations disabled as well. This means that all animations for an angular\n * application can be disabled by placing a host binding set on `\\@.disabled` on the topmost Angular\n * component.\n *\n * ```ts\n * import {Component, HostBinding} from '\\@angular/core';\n *\n * \\@Component({\n *   selector: 'app-component',\n *   templateUrl: 'app.component.html',\n * })\n * class AppComponent {\n *   \\@HostBinding('\\@.disabled')\n *   public animationsDisabled = true;\n * }\n * ```\n *\n * ### What about animations that us `query()` and `animateChild()`?\n * Despite inner animations being disabled, a parent animation can {\\@link query query} for inner\n * elements located in disabled areas of the template and still animate them as it sees fit. This is\n * also the case for when a sub animation is queried by a parent and then later animated using {\\@link\n * animateChild animateChild}.\n * ### Detecting when an animation is disabled\n * If a region of the DOM (or the entire application) has its animations disabled, then animation\n * trigger callbacks will still fire just as normal (only for zero seconds).\n *\n * When a trigger callback fires it will provide an instance of an {\\@link AnimationEvent}. If\n * animations\n * are disabled then the `.disabled` flag on the event will be true.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger$1(name, definitions) {\n    return { type: 7 /* Trigger */, name: name, definitions: definitions, options: {} };\n}\n/**\n * `animate` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `animate` specifies an animation step that will apply the provided `styles` data for a given\n * amount of time based on the provided `timing` expression value. Calls to `animate` are expected\n * to be used within {\\@link sequence an animation sequence}, {\\@link group group}, or {\\@link\n * transition transition}.\n *\n * ### Usage\n *\n * The `animate` function accepts two input parameters: `timing` and `styles`:\n *\n * - `timing` is a string based value that can be a combination of a duration with optional delay\n * and easing values. The format for the expression breaks down to `duration delay easing`\n * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n * delay=100, easing=ease-out`. If a numeric value is provided then that will be used as the\n * `duration` value in millisecond form.\n * - `styles` is the style input data which can either be a call to {\\@link style style} or {\\@link\n * keyframes keyframes}. If left empty then the styles from the destination state will be collected\n * and used (this is useful when describing an animation step that will complete an animation by\n * {\\@link transition#the-final-animate-call animating to the final state}).\n *\n * ```typescript\n * // various functions for specifying timing data\n * animate(500, style(...))\n * animate(\"1s\", style(...))\n * animate(\"100ms 0.5s\", style(...))\n * animate(\"5s ease\", style(...))\n * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n *\n * // either style() of keyframes() can be used\n * animate(500, style({ background: \"red\" }))\n * animate(500, keyframes([\n *   style({ background: \"blue\" })),\n *   style({ background: \"red\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate$1(timings, styles) {\n    if (styles === void 0) { styles = null; }\n    return { type: 4 /* Animate */, styles: styles, timings: timings };\n}\n/**\n * `group` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `group` specifies a list of animation steps that are all run in parallel. Grouped animations are\n * useful when a series of styles must be animated/closed off at different starting/ending times.\n *\n * The `group` function can either be used within a {\\@link sequence sequence} or a {\\@link transition\n * transition} and it will only continue to the next instruction once all of the inner animation\n * steps have completed.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `group` animation function can either consist of {\\@link\n * style style} or {\\@link animate animate} function calls. Each call to `style()` or `animate()`\n * within a group will be executed instantly (use {\\@link keyframes keyframes} or a {\\@link\n * animate#usage animate() with a delay value} to offset styles to be applied at a later time).\n *\n * ```typescript\n * group([\n *   animate(\"1s\", { background: \"black\" }))\n *   animate(\"2s\", { color: \"white\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction group$1(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 3 /* Group */, steps: steps, options: options };\n}\n/**\n * `sequence` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used by\n * default when an array is passed as animation data into {\\@link transition transition}.)\n *\n * The `sequence` function can either be used within a {\\@link group group} or a {\\@link transition\n * transition} and it will only continue to the next instruction once each of the inner animation\n * steps have completed.\n *\n * To perform animation styling in parallel with other animation steps then have a look at the\n * {\\@link group group} animation function.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `sequence` animation function can either consist of\n * {\\@link style style} or {\\@link animate animate} function calls. A call to `style()` will apply the\n * provided styling data immediately while a call to `animate()` will apply its styling data over a\n * given time depending on its timing data.\n *\n * ```typescript\n * sequence([\n *   style({ opacity: 0 })),\n *   animate(\"1s\", { opacity: 1 }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction sequence$1(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 2 /* Sequence */, steps: steps, options: options };\n}\n/**\n * `style` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `style` declares a key/value object containing CSS properties/styles that can then be used for\n * {\\@link state animation states}, within an {\\@link sequence animation sequence}, or as styling data\n * for both {\\@link animate animate} and {\\@link keyframes keyframes}.\n *\n * ### Usage\n *\n * `style` takes in a key/value string map as data and expects one or more CSS property/value pairs\n * to be defined.\n *\n * ```typescript\n * // string values are used for css properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical (pixel) values are also supported\n * style({ width: 100, height: 0 })\n * ```\n *\n * #### Auto-styles (using `*`)\n *\n * When an asterix (`*`) character is used as a value then it will be detected from the element\n * being animated and applied as animation data when the animation starts.\n *\n * This feature proves useful for a state depending on layout and/or environment factors; in such\n * cases the styles are calculated just before the animation starts.\n *\n * ```typescript\n * // the steps below will animate from 0 to the\n * // actual height of the element\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} tokens\n * @return {?}\n */\nfunction style$1(tokens) {\n    return { type: 6 /* Style */, styles: tokens, offset: null };\n}\n/**\n * `state` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `state` declares an animation state within the given trigger. When a state is active within a\n * component then its associated styles will persist on the element that the trigger is attached to\n * (even when the animation ends).\n *\n * To animate between states, have a look at the animation {\\@link transition transition} DSL\n * function. To register states to an animation trigger please have a look at the {\\@link trigger\n * trigger} function.\n *\n * #### The `void` state\n *\n * The `void` state value is a reserved word that angular uses to determine when the element is not\n * apart of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n * associated element is void).\n *\n * #### The `*` (default) state\n *\n * The `*` state (when styled) is a fallback state that will be used if the state that is being\n * animated is not declared within the trigger.\n *\n * ### Usage\n *\n * `state` will declare an animation state with its associated styles\n * within the given trigger.\n *\n * - `stateNameExpr` can be one or more state names separated by commas.\n * - `styles` refers to the {\\@link style styling data} that will be persisted on the element once\n * the state has been reached.\n *\n * ```typescript\n * // \"void\" is a reserved name for a state and is used to represent\n * // the state in which an element is detached from from the application.\n * state(\"void\", style({ height: 0 }))\n *\n * // user-defined states\n * state(\"closed\", style({ height: 0 }))\n * state(\"open, visible\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} styles\n * @param {?=} options\n * @return {?}\n */\nfunction state$1(name, styles, options) {\n    return { type: 0 /* State */, name: name, styles: styles, options: options };\n}\n/**\n * `keyframes` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `keyframes` specifies a collection of {\\@link style style} entries each optionally characterized\n * by an `offset` value.\n *\n * ### Usage\n *\n * The `keyframes` animation function is designed to be used alongside the {\\@link animate animate}\n * animation function. Instead of applying animations from where they are currently to their\n * destination, keyframes can describe how each style entry is applied and at what point within the\n * animation arc (much like CSS Keyframe Animations do).\n *\n * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at what\n * percentage of the animate time the styles will be applied.\n *\n * ```typescript\n * // the provided offset values describe when each backgroundColor value is applied.\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * Alternatively, if there are no `offset` values used within the style entries then the offsets\n * will be calculated automatically.\n *\n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes$1(steps) {\n    return { type: 5 /* Keyframes */, steps: steps };\n}\n/**\n * `transition` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `transition` declares the {\\@link sequence sequence of animation steps} that will be run when the\n * provided `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 =>\n * state2` which consists of two known states (use an asterix (`*`) to refer to a dynamic starting\n * and/or ending state).\n *\n * A function can also be provided as the `stateChangeExpr` argument for a transition and this\n * function will be executed each time a state change occurs. If the value returned within the\n * function is true then the associated animation will be run.\n *\n * Animation transitions are placed within an {\\@link trigger animation trigger}. For an transition\n * to animate to a state value and persist its styles then one or more {\\@link state animation\n * states} is expected to be defined.\n *\n * ### Usage\n *\n * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n * what the previous state is and what the current state has become. In other words, if a transition\n * is defined that matches the old/current state criteria then the associated animation will be\n * triggered.\n *\n * ```typescript\n * // all transition/state changes are defined within an animation trigger\n * trigger(\"myAnimationTrigger\", [\n *   // if a state is defined then its styles will be persisted when the\n *   // animation has fully completed itself\n *   state(\"on\", style({ background: \"green\" })),\n *   state(\"off\", style({ background: \"grey\" })),\n *\n *   // a transition animation that will be kicked off when the state value\n *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n *   transition(\"on => off\", animate(500)),\n *\n *   // it is also possible to do run the same animation for both directions\n *   transition(\"on <=> off\", animate(500)),\n *\n *   // or to define multiple states pairs separated by commas\n *   transition(\"on => off, off => void\", animate(500)),\n *\n *   // this is a catch-all state change for when an element is inserted into\n *   // the page and the destination state is unknown\n *   transition(\"void => *\", [\n *     style({ opacity: 0 }),\n *     animate(500)\n *   ]),\n *\n *   // this will capture a state change between any states\n *   transition(\"* => *\", animate(\"1s 0s\")),\n *\n *   // you can also go full out and include a function\n *   transition((fromState, toState) => {\n *     // when `true` then it will allow the animation below to be invoked\n *     return fromState == \"off\" && toState == \"on\";\n *   }, animate(\"1s 0s\"))\n * ])\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * #### The final `animate` call\n *\n * If the final step within the transition steps is a call to `animate()` that **only** uses a\n * timing value with **no style data** then it will be automatically used as the final animation arc\n * for the element to animate itself to the final state. This involves an automatic mix of\n * adding/removing CSS styles so that the element will be in the exact state it should be for the\n * applied state to be presented correctly.\n *\n * ```\n * // start off by hiding the element, but make sure that it animates properly to whatever state\n * // is currently active for \"myAnimationTrigger\"\n * transition(\"void => *\", [\n *   style({ opacity: 0 }),\n *   animate(500)\n * ])\n * ```\n *\n * ### Using :enter and :leave\n *\n * Given that enter (insertion) and leave (removal) animations are so common, the `transition`\n * function accepts both `:enter` and `:leave` values which are aliases for the `void => *` and `*\n * => void` state changes.\n *\n * ```\n * transition(\":enter\", [\n *   style({ opacity: 0 }),\n *   animate(500, style({ opacity: 1 }))\n * ]),\n * transition(\":leave\", [\n *   animate(500, style({ opacity: 0 }))\n * ])\n * ```\n *\n * ### Boolean values\n * if a trigger binding value is a boolean value then it can be matched using a transition\n * expression that compares `true` and `false` or `1` and `0`.\n *\n * ```\n * // in the template\n * <div [\\@openClose]=\"open ? true : false\">...</div>\n *\n * // in the component metadata\n * trigger('openClose', [\n *   state('true', style({ height: '*' })),\n *   state('false', style({ height: '0px' })),\n *   transition('false <=> true', animate(500))\n * ])\n * ```\n *\n * ### Using :increment and :decrement\n * In addition to the :enter and :leave transition aliases, the :increment and :decrement aliases\n * can be used to kick off a transition when a numeric value has increased or decreased in value.\n *\n * ```\n * import {group, animate, query, transition, style, trigger} from '\\@angular/animations';\n * import {Component} from '\\@angular/core';\n *\n * \\@Component({\n *   selector: 'banner-carousel-component',\n *   styles: [`\n *     .banner-container {\n *        position:relative;\n *        height:500px;\n *        overflow:hidden;\n *      }\n *     .banner-container > .banner {\n *        position:absolute;\n *        left:0;\n *        top:0;\n *        font-size:200px;\n *        line-height:500px;\n *        font-weight:bold;\n *        text-align:center;\n *        width:100%;\n *      }\n *   `],\n *   template: `\n *     <button (click)=\"previous()\">Previous</button>\n *     <button (click)=\"next()\">Next</button>\n *     <hr>\n *     <div [\\@bannerAnimation]=\"selectedIndex\" class=\"banner-container\">\n *       <div class=\"banner\" *ngFor=\"let banner of banners\"> {{ banner }} </div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger('bannerAnimation', [\n *       transition(\":increment\", group([\n *         query(':enter', [\n *           style({ left: '100%' }),\n *           animate('0.5s ease-out', style('*'))\n *         ]),\n *         query(':leave', [\n *           animate('0.5s ease-out', style({ left: '-100%' }))\n *         ])\n *       ])),\n *       transition(\":decrement\", group([\n *         query(':enter', [\n *           style({ left: '-100%' }),\n *           animate('0.5s ease-out', style('*'))\n *         ]),\n *         query(':leave', [\n *           animate('0.5s ease-out', style({ left: '100%' }))\n *         ])\n *       ]))\n *     ])\n *   ]\n * })\n * class BannerCarouselComponent {\n *   allBanners: string[] = ['1', '2', '3', '4'];\n *   selectedIndex: number = 0;\n *\n *   get banners() {\n *      return [this.allBanners[this.selectedIndex]];\n *   }\n *\n *   previous() {\n *     this.selectedIndex = Math.max(this.selectedIndex - 1, 0);\n *   }\n *\n *   next() {\n *     this.selectedIndex = Math.min(this.selectedIndex + 1, this.allBanners.length - 1);\n *   }\n * }\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction transition$1(stateChangeExpr, steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 1 /* Transition */, expr: stateChangeExpr, animation: steps, options: options };\n}\n/**\n * `animation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * `var myAnimation = animation(...)` is designed to produce a reusable animation that can be later\n * invoked in another animation or sequence. Reusable animations are designed to make use of\n * animation parameters and the produced animation can be used via the `useAnimation` method.\n *\n * ```\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *     style({ opacity: '{{ end }}'}))\n * ], { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n *\n * If parameters are attached to an animation then they act as **default parameter values**. When an\n * animation is invoked via `useAnimation` then parameter values are allowed to be passed in\n * directly. If any of the passed in parameter values are missing then the default values will be\n * used.\n *\n * ```\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n *\n * If one or more parameter values are missing before animated then an error will be thrown.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `animateChild` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It works by allowing a queried element to execute its own\n * animation within the animation sequence.\n *\n * Each time an animation is triggered in angular, the parent animation\n * will always get priority and any child animations will be blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations and then allow the animations to run using `animateChild`.\n *\n * The example HTML code below shows both parent and child elements that have animation\n * triggers that will execute at the same time.\n *\n * ```html\n * <!-- parent-child.component.html -->\n * <button (click)=\"exp =! exp\">Toggle</button>\n * <hr>\n *\n * <div [\\@parentAnimation]=\"exp\">\n *   <header>Hello</header>\n *   <div [\\@childAnimation]=\"exp\">\n *       one\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       two\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       three\n *   </div>\n * </div>\n * ```\n *\n * Now when the `exp` value changes to true, only the `parentAnimation` animation will animate\n * because it has priority. However, using `query` and `animateChild` each of the inner animations\n * can also fire:\n *\n * ```ts\n * // parent-child.component.ts\n * import {trigger, transition, animate, style, query, animateChild} from '\\@angular/animations';\n * \\@Component({\n *   selector: 'parent-child-component',\n *   animations: [\n *     trigger('parentAnimation', [\n *       transition('false => true', [\n *         query('header', [\n *           style({ opacity: 0 }),\n *           animate(500, style({ opacity: 1 }))\n *         ]),\n *         query('\\@childAnimation', [\n *           animateChild()\n *         ])\n *       ])\n *     ]),\n *     trigger('childAnimation', [\n *       transition('false => true', [\n *         style({ opacity: 0 }),\n *         animate(500, style({ opacity: 1 }))\n *       ])\n *     ])\n *   ]\n * })\n * class ParentChildCmp {\n *   exp: boolean = false;\n * }\n * ```\n *\n * In the animation code above, when the `parentAnimation` transition kicks off it first queries to\n * find the header element and fades it in. It then finds each of the sub elements that contain the\n * `\\@childAnimation` trigger and then allows for their animations to fire.\n *\n * This example can be further extended by using stagger:\n *\n * ```ts\n * query('\\@childAnimation', stagger(100, [\n *   animateChild()\n * ]))\n * ```\n *\n * Now each of the sub animations start off with respect to the `100ms` staggering step.\n *\n * ## The first frame of child animations\n * When sub animations are executed using `animateChild` the animation engine will always apply the\n * first frame of every sub animation immediately at the start of the animation sequence. This way\n * the parent animation does not need to set any initial styling data on the sub elements before the\n * sub animations kick off.\n *\n * In the example above the first frame of the `childAnimation`'s `false => true` transition\n * consists of a style of `opacity: 0`. This is applied immediately when the `parentAnimation`\n * animation transition sequence starts. Only then when the `\\@childAnimation` is queried and called\n * with `animateChild` will it then animate to its destination of `opacity: 1`.\n *\n * Note that this feature designed to be used alongside {\\@link query query()} and it will only work\n * with animations that are assigned using the Angular animation DSL (this means that CSS keyframes\n * and transitions are not handled by this API).\n *\n * \\@experimental Animation support is experimental.\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `useAnimation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is used to kick off a reusable animation that is created using {\\@link\n * animation animation()}.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `query` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * query() is used to find one or more inner elements within the current element that is\n * being animated within the sequence. The provided animation steps are applied\n * to the queried element (by default, an array is provided, then this will be\n * treated as an animation sequence).\n *\n * ### Usage\n *\n * query() is designed to collect mutiple elements and works internally by using\n * `element.querySelectorAll`. An additional options object can be provided which\n * can be used to limit the total amount of items to be collected.\n *\n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n *\n * query(), by default, will throw an error when zero items are found. If a query\n * has the `optional` flag set to true then this error will be ignored.\n *\n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n *\n * ### Special Selector Values\n *\n * The selector value within a query can collect elements that contain angular-specific\n * characteristics\n * using special pseudo-selectors tokens.\n *\n * These include:\n *\n *  - Querying for newly inserted/removed elements using `query(\":enter\")`/`query(\":leave\")`\n *  - Querying all currently animating elements using `query(\":animating\")`\n *  - Querying elements that contain an animation trigger using `query(\"\\@triggerName\")`\n *  - Querying all elements that contain an animation triggers using `query(\"\\@*\")`\n *  - Including the current element into the animation sequence using `query(\":self\")`\n *\n *\n *  Each of these pseudo-selector tokens can be merged together into a combined query selector\n * string:\n *\n *  ```\n *  query(':self, .record:enter, .record:leave, \\@subTrigger', [...])\n *  ```\n *\n * ### Demo\n *\n * ```\n * \\@Component({\n *   selector: 'inner',\n *   template: `\n *     <div [\\@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n *\n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 })),\n *        query('.content', animate(1000, style({ opacity: 1 })),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n *\n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n *\n * \\@experimental Animation support is experimental.\n * @param {?} selector\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `stagger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is designed to be used inside of an animation {\\@link query query()}\n * and works by issuing a timing gap between after each queried item is animated.\n *\n * ### Usage\n *\n * In the example below there is a container element that wraps a list of items stamped out\n * by an ngFor. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n *\n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [\\@listAnimation]=\"items.length\">\n *   <div *ngFor=\"let item of items\">\n *     {{ item }}\n *   </div>\n * </div>\n * ```\n *\n * The component code for this looks as such:\n *\n * ```ts\n * import {trigger, transition, style, animate, query, stagger} from '\\@angular/animations';\n * \\@Component({\n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *        //...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n *\n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n *\n *   hideItems() {\n *     this.items = [];\n *   }\n *\n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *   }\n * }\n * ```\n *\n * And now for the animation trigger code:\n *\n * ```ts\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n *\n * Now each time the items are added/removed then either the opacity\n * fade-in animation will run or each removed item will be faded out.\n * When either of these animations occur then a stagger effect will be\n * applied after each item's animation is started.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?} animation\n * @return {?}\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n */\nvar AUTO_STYLE = '*';\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger$$1(name, definitions) {\n    return trigger$1(name, definitions);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate$$1(timings, styles) {\n    return animate$1(timings, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction group$$1(steps) {\n    return group$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction sequence$$1(steps) {\n    return sequence$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} tokens\n * @return {?}\n */\nfunction style$$1(tokens) {\n    return style$1(tokens);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} styles\n * @return {?}\n */\nfunction state$$1(name, styles) {\n    return state$1(name, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes$$1(steps) {\n    return keyframes$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @return {?}\n */\nfunction transition$$1(stateChangeExpr, steps) {\n    return transition$1(stateChangeExpr, steps);\n}\n\nexports.createPlatform = createPlatform;\nexports.assertPlatform = assertPlatform;\nexports.destroyPlatform = destroyPlatform;\nexports.getPlatform = getPlatform;\nexports.PlatformRef = PlatformRef;\nexports.ApplicationRef = ApplicationRef;\nexports.enableProdMode = enableProdMode;\nexports.isDevMode = isDevMode;\nexports.createPlatformFactory = createPlatformFactory;\nexports.NgProbeToken = NgProbeToken;\nexports.APP_ID = APP_ID;\nexports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\nexports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\nexports.PLATFORM_ID = PLATFORM_ID;\nexports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\nexports.APP_INITIALIZER = APP_INITIALIZER;\nexports.ApplicationInitStatus = ApplicationInitStatus;\nexports.DebugElement = DebugElement;\nexports.DebugNode = DebugNode;\nexports.asNativeElements = asNativeElements;\nexports.getDebugNode = getDebugNode;\nexports.Testability = Testability;\nexports.TestabilityRegistry = TestabilityRegistry;\nexports.setTestabilityGetter = setTestabilityGetter;\nexports.TRANSLATIONS = TRANSLATIONS;\nexports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\nexports.LOCALE_ID = LOCALE_ID;\nexports.MissingTranslationStrategy = MissingTranslationStrategy;\nexports.ApplicationModule = ApplicationModule;\nexports.wtfCreateScope = wtfCreateScope;\nexports.wtfLeave = wtfLeave;\nexports.wtfStartTimeRange = wtfStartTimeRange;\nexports.wtfEndTimeRange = wtfEndTimeRange;\nexports.Type = Type;\nexports.EventEmitter = EventEmitter;\nexports.ErrorHandler = ErrorHandler;\nexports.Sanitizer = Sanitizer;\nexports.SecurityContext = SecurityContext;\nexports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\nexports.Attribute = Attribute;\nexports.ContentChild = ContentChild;\nexports.ContentChildren = ContentChildren;\nexports.Query = Query;\nexports.ViewChild = ViewChild;\nexports.ViewChildren = ViewChildren;\nexports.Component = Component;\nexports.Directive = Directive;\nexports.HostBinding = HostBinding;\nexports.HostListener = HostListener;\nexports.Input = Input;\nexports.Output = Output;\nexports.Pipe = Pipe;\nexports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\nexports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\nexports.NgModule = NgModule;\nexports.ViewEncapsulation = ViewEncapsulation;\nexports.Version = Version;\nexports.VERSION = VERSION;\nexports.defineInjectable = defineInjectable;\nexports.Injectable = Injectable;\nexports.forwardRef = forwardRef;\nexports.resolveForwardRef = resolveForwardRef;\nexports.inject = inject;\nexports.Injector = Injector;\nexports.ReflectiveInjector = ReflectiveInjector;\nexports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\nexports.ReflectiveKey = ReflectiveKey;\nexports.InjectionToken = InjectionToken;\nexports.APP_ROOT_SCOPE = APP_ROOT_SCOPE;\nexports.Inject = Inject;\nexports.Optional = Optional;\nexports.Self = Self;\nexports.SkipSelf = SkipSelf;\nexports.Host = Host;\nexports.NgZone = NgZone;\nexports.RenderComponentType = RenderComponentType;\nexports.Renderer = Renderer;\nexports.Renderer2 = Renderer2;\nexports.RendererFactory2 = RendererFactory2;\nexports.RendererStyleFlags2 = RendererStyleFlags2;\nexports.RootRenderer = RootRenderer;\nexports.COMPILER_OPTIONS = COMPILER_OPTIONS;\nexports.Compiler = Compiler;\nexports.CompilerFactory = CompilerFactory;\nexports.ModuleWithComponentFactories = ModuleWithComponentFactories;\nexports.ComponentFactory = ComponentFactory;\nexports.ComponentRef = ComponentRef;\nexports.ComponentFactoryResolver = ComponentFactoryResolver;\nexports.ElementRef = ElementRef;\nexports.NgModuleFactory = NgModuleFactory;\nexports.NgModuleRef = NgModuleRef;\nexports.NgModuleFactoryLoader = NgModuleFactoryLoader;\nexports.getModuleFactory = getModuleFactory;\nexports.QueryList = QueryList;\nexports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\nexports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\nexports.TemplateRef = TemplateRef;\nexports.ViewContainerRef = ViewContainerRef;\nexports.EmbeddedViewRef = EmbeddedViewRef;\nexports.ViewRef = ViewRef;\nexports.ChangeDetectionStrategy = ChangeDetectionStrategy;\nexports.ChangeDetectorRef = ChangeDetectorRef;\nexports.DefaultIterableDiffer = DefaultIterableDiffer;\nexports.IterableDiffers = IterableDiffers;\nexports.KeyValueDiffers = KeyValueDiffers;\nexports.SimpleChange = SimpleChange;\nexports.WrappedValue = WrappedValue;\nexports.platformCore = platformCore;\nexports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\nexports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\nexports.ɵdevModeEqual = devModeEqual;\nexports.ɵisListLikeIterable = isListLikeIterable;\nexports.ɵChangeDetectorStatus = ChangeDetectorStatus;\nexports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\nexports.ɵConsole = Console;\nexports.ɵsetCurrentInjector = setCurrentInjector;\nexports.ɵComponentFactory = ComponentFactory;\nexports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\nexports.ɵReflectionCapabilities = ReflectionCapabilities;\nexports.ɵRenderDebugInfo = RenderDebugInfo;\nexports.ɵ_sanitizeHtml = _sanitizeHtml;\nexports.ɵ_sanitizeStyle = _sanitizeStyle;\nexports.ɵ_sanitizeUrl = _sanitizeUrl;\nexports.ɵglobal = _global;\nexports.ɵlooseIdentical = looseIdentical;\nexports.ɵstringify = stringify;\nexports.ɵmakeDecorator = makeDecorator;\nexports.ɵisObservable = isObservable;\nexports.ɵisPromise = isPromise;\nexports.ɵclearOverrides = clearOverrides;\nexports.ɵoverrideComponentView = overrideComponentView;\nexports.ɵoverrideProvider = overrideProvider;\nexports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\nexports.ɵdefineComponent = defineComponent;\nexports.ɵdefineDirective = defineDirective;\nexports.ɵdefinePipe = definePipe;\nexports.ɵdetectChanges = detectChanges;\nexports.ɵrenderComponent = renderComponent;\nexports.ɵinject = inject$1;\nexports.ɵinjectTemplateRef = injectTemplateRef;\nexports.ɵinjectViewContainerRef = injectViewContainerRef;\nexports.ɵinjectChangeDetectorRef = injectChangeDetectorRef;\nexports.ɵinjectAttribute = injectAttribute;\nexports.ɵPublicFeature = PublicFeature;\nexports.ɵNgOnChangesFeature = NgOnChangesFeature;\nexports.ɵNC = NO_CHANGE;\nexports.ɵC = container;\nexports.ɵE = elementStart;\nexports.ɵL = listener;\nexports.ɵT = text;\nexports.ɵV = embeddedViewStart;\nexports.ɵQ = query;\nexports.ɵP = projection;\nexports.ɵb = bind;\nexports.ɵi1 = interpolation1;\nexports.ɵi2 = interpolation2;\nexports.ɵi3 = interpolation3;\nexports.ɵi4 = interpolation4;\nexports.ɵi5 = interpolation5;\nexports.ɵi6 = interpolation6;\nexports.ɵi7 = interpolation7;\nexports.ɵi8 = interpolation8;\nexports.ɵiV = interpolationV;\nexports.ɵpb1 = pipeBind1;\nexports.ɵpb2 = pipeBind2;\nexports.ɵpb3 = pipeBind3;\nexports.ɵpb4 = pipeBind4;\nexports.ɵpbV = pipeBindV;\nexports.ɵf0 = pureFunction0;\nexports.ɵf1 = pureFunction1;\nexports.ɵf2 = pureFunction2;\nexports.ɵf3 = pureFunction3;\nexports.ɵf4 = pureFunction4;\nexports.ɵf5 = pureFunction5;\nexports.ɵf6 = pureFunction6;\nexports.ɵf7 = pureFunction7;\nexports.ɵf8 = pureFunction8;\nexports.ɵfV = pureFunctionV;\nexports.ɵcR = containerRefreshStart;\nexports.ɵcr = containerRefreshEnd;\nexports.ɵqR = queryRefresh;\nexports.ɵe = elementEnd;\nexports.ɵp = elementProperty;\nexports.ɵpD = projectionDef;\nexports.ɵa = elementAttribute;\nexports.ɵk = elementClass;\nexports.ɵs = elementStyle;\nexports.ɵt = textBinding;\nexports.ɵv = embeddedViewEnd;\nexports.ɵr = directiveRefresh;\nexports.ɵst = store;\nexports.ɵld = load;\nexports.ɵPp = pipe;\nexports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\nexports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\nexports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\nexports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\nexports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\nexports.ɵsanitizeHtml = sanitizeHtml;\nexports.ɵsanitizeStyle = sanitizeStyle;\nexports.ɵsanitizeUrl = sanitizeUrl;\nexports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\nexports.ɵregisterModuleFactory = registerModuleFactory;\nexports.ɵEMPTY_ARRAY = EMPTY_ARRAY$1;\nexports.ɵEMPTY_MAP = EMPTY_MAP;\nexports.ɵand = anchorDef;\nexports.ɵccf = createComponentFactory;\nexports.ɵcmf = createNgModuleFactory;\nexports.ɵcrt = createRendererType2;\nexports.ɵdid = directiveDef;\nexports.ɵeld = elementDef;\nexports.ɵelementEventFullName = elementEventFullName;\nexports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\nexports.ɵinlineInterpolate = inlineInterpolate;\nexports.ɵinterpolate = interpolate;\nexports.ɵmod = moduleDef;\nexports.ɵmpd = moduleProvideDef;\nexports.ɵncd = ngContentDef;\nexports.ɵnov = nodeValue;\nexports.ɵpid = pipeDef;\nexports.ɵprd = providerDef;\nexports.ɵpad = pureArrayDef;\nexports.ɵpod = pureObjectDef;\nexports.ɵppd = purePipeDef;\nexports.ɵqud = queryDef;\nexports.ɵted = textDef;\nexports.ɵunv = unwrapValue;\nexports.ɵvid = viewDef;\nexports.AUTO_STYLE = AUTO_STYLE;\nexports.trigger = trigger$$1;\nexports.animate = animate$$1;\nexports.group = group$$1;\nexports.sequence = sequence$$1;\nexports.style = style$$1;\nexports.state = state$$1;\nexports.keyframes = keyframes$$1;\nexports.transition = transition$$1;\nexports.ɵbr = animate$1;\nexports.ɵbs = group$1;\nexports.ɵbw = keyframes$1;\nexports.ɵbt = sequence$1;\nexports.ɵbv = state$1;\nexports.ɵbu = style$1;\nexports.ɵbx = transition$1;\nexports.ɵbq = trigger$1;\nexports.ɵo = _iterableDiffersFactory;\nexports.ɵq = _keyValueDiffersFactory;\nexports.ɵu = _localeFactory;\nexports.ɵi = _appIdRandomProviderFactory;\nexports.ɵj = defaultIterableDiffers;\nexports.ɵl = defaultKeyValueDiffers;\nexports.ɵm = DefaultIterableDifferFactory;\nexports.ɵn = DefaultKeyValueDifferFactory;\nexports.ɵf = ReflectiveInjector_;\nexports.ɵg = ReflectiveDependency;\nexports.ɵh = resolveReflectiveProviders;\nexports.ɵw = wtfEnabled;\nexports.ɵy = createScope;\nexports.ɵx = detectWTF;\nexports.ɵbb = endTimeRange;\nexports.ɵz = leave;\nexports.ɵba = startTimeRange;\nexports.ɵbf = getOrCreateChangeDetectorRef;\nexports.ɵbh = getOrCreateContainerRef;\nexports.ɵbg = getOrCreateInjectable;\nexports.ɵbe = getOrCreateNodeInjector;\nexports.ɵbi = getOrCreateTemplateRef;\nexports.ɵbl = bindingUpdated;\nexports.ɵbn = bindingUpdated2;\nexports.ɵbo = bindingUpdated4;\nexports.ɵbm = checkAndUpdateBinding$1;\nexports.ɵbk = consumeBinding;\nexports.ɵbj = getCreationMode;\nexports.ɵc = makeParamDecorator;\nexports.ɵd = makePropDecorator;\nexports.ɵbc = _def;\nexports.ɵbd = DebugContext;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}