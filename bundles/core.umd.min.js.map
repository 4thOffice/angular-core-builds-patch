{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","source","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","fn","R3ResolvedDependencyType","__window","window","__self","WorkerGlobalScope","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","inject","flags","Default","injectInjectorOnly","injectRootLimpMode","get","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","angularCoreDiEnv","ɵgetFactoryOf","getFactoryOf","typeAny","def","Type","Function","isType","v","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","USE_VALUE","provide","String","useValue","isUseClassProvider","useClass","isUseValueProvider","isUseFactoryProvider","useFactory","isUseExistingProvider","useExisting","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","compilerMeta","typeArgumentCount","ctorDeps","userDeps","InjectionToken","_desc","__NG_ELEMENT_ID__","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","Injector","parent","StaticInjector","NULL","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","USE_VALUE$2","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","Map","set","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","text","obj","charAt","substr","context","parts","JSON","replace","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","originalError","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","enumerable","configurable","KeyRegistry","_allKeys","has","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","some","metadata","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolve","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_this","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$1","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","Set","onDestroy","_destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","destroy","assertNotDestroyed","service","ngOnDestroy","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","add","imported","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multiRecord_1","hasOnDestroy","paramLength","isExistingProvider","isFactoryProvider","classRef_1","ngModuleDetail","hasDeps","input","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","selector","data","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","ViewEncapsulation","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","componentResourceResolutionQueue","componentNeedsResolution","component","templateUrl","styleUrls","clearResolutionOfComponentResourcesQueue","unwrapResponse","response","EMPTY_OBJ","EMPTY_ARRAY$2","NodeInjectorFactory","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","HEADER_OFFSET","ACTIVE_INDEX","VIEWS","NATIVE","LCONTAINER_LENGTH","MONKEY_PATCH_KEY_NAME","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","isProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","renderStringify","loadInternal","view","readElementValue","getNativeByIndex","lView","getNativeByTNode","tNode","hostView","getTNode","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","isComponent","isComponentDef","template","isLContainer","isRootView","getRootView","readPatchedLView","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","defaultScheduler","requestAnimationFrame","setTimeout","addAllToArray","items","arr","findComponentView","rootTNode","resolveWindow","element","ownerDocument","defaultView","resolveDocument","resolveBody","body","INTERPOLATION_DELIMITER","isPropMetadataString","str","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","ngContentSelectors","hostBindings","contentQueries","contentQueriesRefresh","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","styles","_","setInput","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","setComponentScope","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","publicName","declaredName","defineBase","baseDefinition","elementDepthCount","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","throwNotFound","registerPreOrderHooks","directiveIndex","directiveDef","tView","initHooks","checkHooks","registerPostOrderHooks","firstTemplatePass","directiveStart","end","directiveEnd","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","checkNoChangesMode","executeHooks","firstPassHooks","initPhase","hooksToCall","callHooks","initHooksCount","isInitHook","directive","hook","bindingsEnabled","previousOrParentTNode","isParent","currentDirectiveDef","setCurrentDirectiveDef","enableBindings","disableBindings","getLView","restoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","getFirstTemplatePass","setFirstTemplatePass","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","enterView","newView","hostTNode","oldView","bindingStartIndex","leaveView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","previousIncludeViewProviders","previousInjectImplementation","injectorView","isFirstHostTNode","_tNode","_lView","getFactoryOf$1","getInheritedFactory","getLContext","mpValue","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootContext$1","getRootView$1","componentOrView","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","node","Node","isBrowserEvents","listener","useCapture","getListeners","lCleanup","tCleanup","cleanup","listeners","firstParam","secondParam","name_1","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","a","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","removeChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","attrName","item","removeAttribute","childNode","nodeType","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","tagName","nodeName","toLowerCase","elAttr","lower","encodeEntities","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","sanitizer","safeHtml","getTemplateContent","isTemplateElement","content","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","sanitizeHtml","getSanitizer","sanitize","HTML","document","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","sanitizeScript","unsafeScript","SCRIPT","sanitizeUrlOrResourceUrl","tag","getUrlSanitizer","defaultStyleSanitizer","isPromise","then","isObservable","subscribe","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","throwMultipleComponentError","NO_CHANGE","updateBinding","bindingIndex","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","nativeParentNode","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","head","projection","head_1","head_1_1","nativeInsertBefore","nativeRemoveChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","executeOnDestroys","removeListeners","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","cleanupFn","getRenderParent","getHighestElementOrICUContainer","getHostNative","ShadowDom","Native","insertBefore","nativeAppendOrInsertBefore","nativeAppendChild","isHostElement","childEl","childTNode","anchorNode","getNativeAnchorNode","parentTNode","getBeforeNodeForView","childEl_1","childEl_1_1","containerNative","viewTNode","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","ANIMATION_PROP_PREFIX","createEmptyStylingContext","initialStyles","initialClasses","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","hasClassInput","initializeStaticContext","attrs","attr","patchInitialStylingValue","initialStyling","existingValue","renderInitialStylingValues","initialStylingValues","isEntryClassBased","setClass","setStyle","getMatchingBindingIndex","bindingName","start","getProp","_updateSingleStylingValue","offset","isClassBased","directiveRef","getDirectiveIndexFromRegistry","singleIndex","getSinglePropIndexValue","singlePropOffsetRegistryIndex","offsets","currValue","getValue","currFlag","getPointers","currDirective","getDirectiveIndexFromEntry","hasValueChanged","allowValueChange","currentValue","newValue","currentDirectiveOwner","newDirectiveOwner","isClassBased_1","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","playerBuilderIndex","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","getStyleSanitizer","setSanitizeFlag","sanitizeYes","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setDirectiveDirty","setContextDirty","setContextPlayersDirty","store","DashCase","style","removeStyle","className","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","limitToSingleClasses","findEntryPositionByProp","startIndex","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","entryIsClassBased","initialIndex","getInitialStylingValuesIndexOf","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","getDirectiveRegistryValuesIndexOf","keyValues","dirs","dirtyYes","getInitialClassNameValue","initialClassValues","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","selectorAttrValue","readClassValueFromTNode","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","_CLEAN_PROMISE","Promise","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","setHostBindings","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","viewAttached","syncViewWithBlueprint","componentTView","checkView","createLView","rendererFactory","createNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","allocExpando","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","getRenderFlags","nextContext","level","nextContextImpl","walkUpViews","nestingLevel","renderComponentOrTemplate","templateFn","normalExecutionPath","creationModeIsActive","begin","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","createDirectivesAndLocals","currentQueries","addNode","elementContainerEnd","elementCreate","hasStyling","setUpAttributes","getElementDepthCount","increaseElementDepthCount","inputData","initializeTNodeInputs","renderInitialStylesAndClasses","overriddenRenderer","rendererToUse","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","directiveRegistry","matches","clone","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","previousExpandoLength","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","viewQueryStartIndex","pipeRegistry","isProc","namespaceURI","attrVal","setAttribute","setAttributeNS","setProperty","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","eventName","listenerFn","eventTargetResolver","listenerInternal","componentHostSyntheticListener","loadComponentRenderer","loadRendererFn","lCleanupIndex","getCleanup","listen","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","generatePropertyAliases","propsLength","subscription","idx","decreaseElementDepthCount","setInputsForProperty","elementAttribute","namespace","element_1","strValue","elementProperty","nativeOnly","elementPropertyInternal","componentHostSyntheticProperty","dataValue","markDirtyIfOnPush","childComponentLView","savePropertyDebugData","lastBindingIndex","bindingMetadata","propertyMetadataStartIndex","propertyMetadataEndIndex","tParent","initialInputs","tViews","privateName","direction","propStore","isInput","defs","propertyAliasMap","internalName","elementStyling","classBindingNames","styleBindingNames","styleSanitizer","updateContextWithBindings","onlyProcessSingleClasses","findOrPatchDirectiveIntoRegistry","directiveRefs","nextOffsetInsertionIndex","detectedIndex","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","stylesOffset","singleClassesStartIndex","multiStylesStartIndex","multiClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","i_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","totalNewEntries","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","elementHostAttrs","patchContextWithStaticAttrs","startingIndex","elementStylingApply","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","targetDirectiveIndex","isContextDirty","isDirectiveDirty","flushPlayerBuilders","multiStartIndex","onlySingleClasses","stillDirty","readInitialValue","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","updateStyleProp","elementClassProp","classIndex","onOrOffClassValue","updateClassProp","addOrRemove","elementStylingMap","classes","hackImplementationOfElementStylingMap","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","classNames","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","styleProps","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","adjustedPropIndex","newProp","initialValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","ctxIndex_1","textNative","textBinding","element_2","textContent","directiveCount","elementIndex","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInternal","detectChangesInRootView","hostTView","creationMode","executeViewQueryFn","markDirty","storeBindingMetadata","allocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","interpolationV","interpolation1","prefix","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextLView","load","directiveInject","injectAttribute","attrNameToInject","injectAttributeImpl","CLEAN_PROMISE","getCurrentView","getTViewCleanup","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","rNode","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","isComponentDef$1","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","rf","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","features_1","features_1_1","ngInherit","superPrototype","SimpleChange","previousValue","firstChange","isFirstChange","NgOnChangesFeature","NgOnChangesFeatureImpl","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","_injectorIndex","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","queries","viewRef","hostContainer","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","delete","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","createViewRef","componentIndex","hostComponentView","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","ViewContainerRef_","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","templateRef","adjustedIdx","_adjustIndex","createComponent","componentFactory","ngModuleRef","contextInjector","parentInjector","componentRef","insert","destroyed","move","shift","commentNode","nativeNextSibling","getDebugContext","getOriginalError","defaultErrorLogger","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","errorHandler","handleError","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","scope","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","pop","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","_data","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","renderNode$$1","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","ROOT_CONTEXT","SCHEDULER","ComponentFactory$$1","isBoundToModule","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","ComponentRef$$1","_rootLView","destroyCbs","ELEMENT_MARKER","marker","COMMENT_MARKER","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","pos","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","actual","expected","throwError","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","tIcuIndex","text$$1","hasBinding","update","icus","appendI18nNode","previousTNode","i18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders_1","placeholder","templateId","isCloseTemplateTag","currentTemplateId","placeholders","_idx","list","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","visitedPlaceholders","readCreateOpCodes","removeNode","currentTNode","opCode","textRNode","destinationNodeIndex","destinationTNode","commentValue","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","worstCaseSize","max","opCodes","parseNodes","currentNode","nestedIcusToCreate","element$$1","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","_r3Injector","NgModuleFactory$1","NgModuleFactory$$1","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","unwrapValue$1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","QueryList","_results","filter","reduce","init","toArray","reset","flatten$1","flat","flatItem","last","notifyOnChanges","LQueries_","shallow","deep","track","queryList","predicate","descend","read","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","getOrCreateCurrentQueries","QueryType","storeCleanupWithContext","queryRefresh","loadViewQuery","contentQuery","tViewContentQueries","loadContentQuery","templateRefExtractor","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵallocHostVars","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵcomponentHostSyntheticProperty","ɵcomponentHostSyntheticListener","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵqueryRefresh","ɵviewQuery","ɵloadViewQuery","ɵcontentQuery","ɵloadContentQuery","ɵreference","ɵelementStyling","ɵelementHostAttrs","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵresolveWindow","ɵresolveDocument","ɵresolveBody","ɵsetComponentScope","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","ɵsanitizeUrl","ɵsanitizeUrlOrResourceUrl","NgModuleFactoryLoader","assertSameOrNotExisting","incoming","getModuleFactory__POST_R3__","noModuleError","getModuleFactory","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","flatten$2","expandModuleWithProviders","emitInline","registerNgModuleType","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","mapFn","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","preserveWhitespaces","viewQueries","extractQueriesMetadata","interpolation","hasSelectorScope","compileDirective","facade","isContentQuery","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","extractExportAs","part","isQueryAnn","queriesMeta","field","ann","convertToR3QueryMetadata","convertToR3QueryPredicate","splitByComma","piece","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","trace","events","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","ErrorHandler","_console","_findOriginalError","_findContext","errorLogger","getErrorLogger","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","promise","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","isBoundToModule__POST_R3__","cf","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","ApplicationRef_Factory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","getFirstBindingIndex","metadataIndex","currentBindingIndex","metadataParts","hostProperties","collectHostPropertyBindings","hostPropIndex","eAttrs","lContext","lNode","eClasses","classList","eStyles","getPropertyValue","children","getDebugNode__POST_R3__","_queryNodeChildrenR3","elementsOnly","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","MissingTranslationStrategy","DebugNode","DebugElement","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","ViewAction","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","ApplicationModule","ApplicationModule_Factory","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵinject","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","getRootContext$2","ɵsetClassMetadata","setClassMetadata","clazz","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","ɵisBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵgetModuleFactory__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v8.0.0-beta.1+95.sha-41e68f7\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global.ng;\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'inject': inject,\n        'ɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE$2 in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE$2 in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$1 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$1 === undefined) {\n            NULL_INJECTOR$1 = new NullInjector();\n        }\n        return NULL_INJECTOR$1;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Cannot instantiate cyclic dependency! \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            else if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            else if (token instanceof Function) {\n                var paramLength = token.length;\n                if (paramLength > 0) {\n                    var args = new Array(paramLength).fill('?');\n                    throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n                }\n                return function () { return new token(); };\n            }\n            throw new Error('unreachable');\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    var ngModuleDetail = '';\n                    if (ngModuleType && providers) {\n                        var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n                        ngModuleDetail =\n                            \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n                    }\n                    throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE$2 in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return !!(component.templateUrl || component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        componentResourceResolutionQueue.clear();\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY$2 = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY_OBJ);\n        Object.freeze(EMPTY_ARRAY$2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        assertEqual(node instanceof Node, true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6; // Rename to `T_HOST`?\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var TAIL = 14;\n    var CONTAINER_INDEX = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 18;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 6;\n    // Because interfaces in TS/JS cannot be instanceof-checked this means that we\n    // need to rely on predictable characteristics of data-structures to check if they\n    // are what we expect for them to be. The `LContainer` interface code below has a\n    // fixed length and the constant value below references that. Using the length value\n    // below we can predictably gaurantee that we are dealing with an `LContainer` array.\n    // This value MUST be kept up to date with the length of the `LContainer` array\n    // interface below so that runtime type checking can work.\n    var LCONTAINER_LENGTH = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, \n        /**\n         * Set to `true` if the token is a provider, and not a directive.\n         */\n        isProvider, injectImplementation) {\n            this.factory = factory;\n            this.isProvider = isProvider;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    /**\n     * Used for stringify render output in Ivy.\n     */\n    function renderStringify(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        if (typeof value == 'object' && typeof value.type == 'function')\n            return value.type.name || value.type;\n        return '' + value;\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    /**\n     * Takes the value of a slot in `LView` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LView. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LView`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return readElementValue(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && value.length === LCONTAINER_LENGTH;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 256 /* IsRoot */) !== 0;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lView = Array.isArray(target) ? target : readPatchedLView(target);\n        while (lView && !(lView[FLAGS] & 256 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[HOST_NODE];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[HOST_NODE];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    /**\n     * Equivalent to ES6 spread, add each item to an array.\n     *\n     * @param items The items to add\n     * @param arr The array to which you want to add the items\n     */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[HOST_NODE];\n        }\n        return lView;\n    }\n    function resolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    function resolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    function resolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Determines whether or not the given string is a property metadata string.\n     * See storeBindingMetadata().\n     */\n    function isPropMetadataString(str) {\n        return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY$2,\n            _: null,\n            setInput: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function setComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY$2,\n            declarations: def.declarations || EMPTY_ARRAY$2,\n            imports: def.imports || EMPTY_ARRAY$2,\n            exports: def.exports || EMPTY_ARRAY$2,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * The TView's hooks arrays are arranged in alternating pairs of directiveIndex and hookFunction,\n     * i.e.: `[directiveIndexA, hookFunctionA, directiveIndexB, hookFunctionB, ...]`. For `OnChanges`\n     * hooks, the `directiveIndex` will be *negative*, signaling {@link callHooks} that the\n     * `hookFunction` must be passed the the appropriate {@link SimpleChanges} object.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (onChanges) {\n            (tView.initHooks || (tView.initHooks = [])).push(directiveIndex, onChanges);\n            (tView.checkHooks || (tView.checkHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(directiveIndex, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView` such that\n     * they're added in alternating pairs of directiveIndex and hookFunction,\n     * i.e.: `[directiveIndexA, hookFunctionA, directiveIndexB, hookFunctionB, ...]`\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * Has the side effect of updating the RunInit flag in `lView` to be `0`, so that\n     * this isn't run a second time.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     */\n    function executeInitHooks(currentView, tView, checkNoChangesMode) {\n        if (!checkNoChangesMode) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, checkNoChangesMode, 0 /* OnInitHooksToBeRun */);\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param lView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode, initPhase) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase ?\n            firstPassHooks :\n            checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall, initPhase);\n        }\n        // The init phase state must be always checked here as it may have been recursively updated\n        if ((currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase &&\n            initPhase !== 3 /* InitPhaseCompleted */) {\n            currentView[FLAGS] &= 511 /* IndexWithinInitPhaseReset */;\n            currentView[FLAGS] += 1 /* InitPhaseStateIncrementer */;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr, initPhase) {\n        var initHooksCount = 0;\n        for (var i = 0; i < arr.length; i += 2) {\n            var isInitHook = arr[i] < 0;\n            var directiveIndex = isInitHook ? -arr[i] : arr[i];\n            var directive = currentView[directiveIndex];\n            var hook = arr[i + 1];\n            if (isInitHook) {\n                initHooksCount++;\n                var indexWithintInitPhase = currentView[FLAGS] >> 9 /* IndexWithinInitPhaseShift */;\n                // The init phase state must be always checked here as it may have been recursively updated\n                if (indexWithintInitPhase < initHooksCount &&\n                    (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                    currentView[FLAGS] += 512 /* IndexWithinInitPhaseIncrementer */;\n                    hook.call(directive);\n                }\n            }\n            else {\n                hook.call(directive);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        // If this is the first content query on a node, any existing LQueries needs to be cloned.\n        // In subsequent template passes, the cloning occurs before directive instantiation\n        // in `createDirectivesAndLocals`.\n        if (previousOrParentTNode && previousOrParentTNode !== lView[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = lView[QUERIES] = currentQueries.clone());\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        return currentQueries || (lView[QUERIES] = new QueryType(null, null, null));\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    function getFirstTemplatePass() {\n        return firstTemplatePass;\n    }\n    function setFirstTemplatePass(value) {\n        firstTemplatePass = value;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            firstTemplatePass = tView.firstTemplatePass;\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        else {\n            try {\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode, 2 /* AfterViewInitHooksToBeRun */);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(32 /* Dirty */ | 8 /* FirstLViewPass */);\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        enterView(newView, null);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[HOST_NODE] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 3 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + renderStringify(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[HOST_NODE] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + renderStringify(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n        var tView = lView[TVIEW];\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + renderStringify(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n                var tView = lData[TVIEW];\n                if (value && factory.isProvider && value.ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(index, value.ngOnDestroy);\n                }\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf$1(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf$1(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY$2;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        while (lView[PARENT] && lView[HOST] === null) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = lView[PARENT];\n        }\n        return lView[FLAGS] & 256 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     *\n     */\n    function getRootContext$1(target) {\n        var lViewData = Array.isArray(target) ? target : loadLContext(target).lView;\n        var rootLView = getRootView$1(lViewData);\n        return rootLView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + renderStringify(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrView any component or view\n     *\n     */\n    function getRootView$1(componentOrView) {\n        var lView;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lView');\n            lView = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lView = readPatchedLView(componentOrView);\n        }\n        while (lView && !(lView[FLAGS] & 256 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = readElementValue(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return sanitizeResourceUrl;\n        }\n        return sanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     */\n    function sanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'list-style' || prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n    function validateProperty(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAttribute(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (isDifferent(oldValue, value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n        return false;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var e_1, _a;\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), tNode, beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], tNode, beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], tNode, beforeNode);\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                if (Array.isArray(head)) {\n                    try {\n                        for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                            var nativeNode = head_1_1.value;\n                            executeNodeAction(action, renderer, renderParent, nativeNode, tNode, beforeNode);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    // Must store both the TNode and the view because this projection node could be nested\n                    // deeply inside embedded views, and we need to get back down to this particular nested\n                    // view.\n                    projectionNodeStack[++projectionNodeIndex] = tNode;\n                    projectionNodeStack[++projectionNodeIndex] = currentView;\n                    if (head) {\n                        currentView = componentView[PARENT];\n                        nextTNode = currentView[TVIEW].data[head.index];\n                    }\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, tNode, beforeNode) {\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, node, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveChild(renderer, parent, node, isComponent(tNode));\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LView, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LView.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 64 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~64 /* Attached */;\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LView */\n    function getLViewChild(lView) {\n        var childIndex = lView[TVIEW].childIndex;\n        return childIndex === -1 ? null : lView[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 128 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[HOST_NODE];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        readElementValue(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // DOM listener\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else if (typeof tCleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = lCleanup[tCleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode).parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (parent == null) {\n            var hostTNode = currentView[HOST_NODE];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            ngDevMode && assertNodeType(parent, 3 /* Element */);\n            if (parent.flags & 1 /* isComponent */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parent.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parent, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /**\n     * Removes a native child node from a given native parent node.\n     */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        isProceduralRenderer(renderer) ? renderer.removeChild(parent, child, isHostElement) :\n            parent.removeChild(child);\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            var views = lContainer[VIEWS];\n            var index = views.indexOf(lView);\n            return getBeforeNodeForView(index, views, lContainer[NATIVE]);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var e_2, _a;\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                try {\n                    for (var childEl_1 = __values(childEl), childEl_1_1 = childEl_1.next(); !childEl_1_1.done; childEl_1_1 = childEl_1.next()) {\n                        var nativeNode = childEl_1_1.value;\n                        nativeAppendOrInsertBefore(renderer, renderParent, nativeNode, anchorNode);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (childEl_1_1 && !childEl_1_1.done && (_a = childEl_1.return)) _a.call(childEl_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        var parentNative = getRenderParent(childTNode, currentView);\n        // We only remove the element if it already has a render parent.\n        if (parentNative) {\n            nativeRemoveChild(currentView[RENDERER], parentNative, childEl);\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(element, sanitizer, initialStyles, initialClasses) {\n        return [\n            0,\n            [null, -1, false, sanitizer || null],\n            initialStyles || [null],\n            initialClasses || [null],\n            [0, 0],\n            element || null,\n            null,\n            null,\n            null,\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[0 /* MasterFlagPosition */] |= 32 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LView or an LContainer\n        return Array.isArray(value) && typeof value[0 /* MasterFlagPosition */] === 'number' &&\n            value.length !== LCONTAINER_LENGTH;\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[8 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[8 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n    function hasStyling(attrs) {\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (attr == 1 /* Classes */ || attr == 2 /* Styles */)\n                return true;\n        }\n        return false;\n    }\n    function hasClassInput(tNode) {\n        return tNode.flags & 8 /* hasClassInput */ ? true : false;\n    }\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `interfaces/styles.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs) {\n        var context = createEmptyStylingContext();\n        var initialClasses = context[3 /* InitialClassValuesPosition */] =\n            [null];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */] =\n            [null];\n        // The attributes array has marker values (numbers) indicating what the subsequent\n        // values represent. When we encounter a number, we set the mode to that type of attribute.\n        var mode = -1;\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode === 2 /* Styles */) {\n                initialStyles.push(attr, attrs[++i]);\n            }\n            else if (mode === 1 /* Classes */) {\n                initialClasses.push(attr, true);\n            }\n            else if (mode === 3 /* SelectOnly */) {\n                break;\n            }\n        }\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param directive the directive instance with which static data is associated with.\n     */\n    function patchContextWithStaticAttrs(context, attrs, startingIndex, directive) {\n        // If the styling context has already been patched with the given directive's bindings,\n        // then there is no point in doing it again. The reason why this may happen (the directive\n        // styling being patched twice) is because the `stylingBinding` function is called each time\n        // an element is created (both within a template function and within directive host bindings).\n        var directives = context[1 /* DirectiveRegistryPosition */];\n        if (getDirectiveRegistryValuesIndexOf(directives, directive) == -1) {\n            // this is a new directive which we have not seen yet.\n            directives.push(directive, -1, false, null);\n            var initialClasses = null;\n            var initialStyles = null;\n            var mode = -1;\n            for (var i = startingIndex; i < attrs.length; i++) {\n                var attr = attrs[i];\n                if (typeof attr == 'number') {\n                    mode = attr;\n                }\n                else if (mode == 1 /* Classes */) {\n                    initialClasses = initialClasses || context[3 /* InitialClassValuesPosition */];\n                    patchInitialStylingValue(initialClasses, attr, true);\n                }\n                else if (mode == 2 /* Styles */) {\n                    initialStyles = initialStyles || context[2 /* InitialStyleValuesPosition */];\n                    patchInitialStylingValue(initialStyles, attr, attrs[++i]);\n                }\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is not\n     * present (or if it's value is falsy) then it will be inserted/updated in the list\n     * of initial styling values.\n     */\n    function patchInitialStylingValue(initialStyling, prop, value) {\n        // Even values are keys; Odd numbers are values; Search keys only\n        for (var i = 1 /* KeyValueStartPosition */; i < initialStyling.length;) {\n            var key = initialStyling[i];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                // If there is no previous style value (when `null`) or no previous class\n                // applied (when `false`) then we update the the newly given value.\n                if (existingValue == null || existingValue == false) {\n                    initialStyling[i + 1 /* ValueOffset */] = value;\n                }\n                return;\n            }\n            i = i + 2 /* Size */;\n        }\n        // We did not find existing key, add a new one.\n        initialStyling.push(prop, value);\n    }\n    /**\n     * Runs through the initial styling data present in the context and renders\n     * them via the renderer on the element.\n     */\n    function renderInitialStylesAndClasses(element, context, renderer) {\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialClasses, true);\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialStyles, false);\n    }\n    /**\n     * This is a helper function designed to render each entry present within the\n     * provided list of initialStylingValues.\n     */\n    function renderInitialStylingValues(element, renderer, initialStylingValues, isEntryClassBased) {\n        for (var i = 1 /* KeyValueStartPosition */; i < initialStylingValues.length; i += 2 /* Size */) {\n            var value = initialStylingValues[i + 1 /* ValueOffset */];\n            if (value) {\n                if (isEntryClassBased) {\n                    setClass(element, initialStylingValues[i + 0 /* PropOffset */], true, renderer, null);\n                }\n                else {\n                    setStyle(element, initialStylingValues[i + 0 /* PropOffset */], value, renderer, null);\n                }\n            }\n        }\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param directiveRef the directive that the new bindings will reference\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveRef, classBindingNames, styleBindingNames, styleSanitizer, onlyProcessSingleClasses) {\n        if (context[0 /* MasterFlagPosition */] & 32 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var directiveIndex = findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer);\n        if (directiveIndex === -1) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[4 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 9 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `elementStyleProp`\n        // and the `elementClassProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added incase a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = initialValuesToLookup.length + 1 /* ValueOffset */;\n                initialValuesToLookup.push(propName, entryIsClassBased ? false : null);\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex) |\n            (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n        setFlag(context, 0 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer) {\n        var directiveRefs = context[1 /* DirectiveRegistryPosition */];\n        var nextOffsetInsertionIndex = context[4 /* SinglePropOffsetPositions */].length;\n        var directiveIndex;\n        var detectedIndex = getDirectiveRegistryValuesIndexOf(directiveRefs, directiveRef);\n        if (detectedIndex === -1) {\n            directiveIndex = directiveRefs.length / 4 /* Size */;\n            directiveRefs.push(directiveRef, nextOffsetInsertionIndex, false, styleSanitizer || null);\n        }\n        else {\n            var singlePropStartPosition = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            if (directiveRefs[singlePropStartPosition] >= 0) {\n                // the directive has already been patched into the context\n                return -1;\n            }\n            directiveIndex = detectedIndex / 4 /* Size */;\n            // because the directive already existed this means that it was set during elementHostAttrs or\n            // elementStart which means that the binding values were not here. Therefore, the values below\n            // need to be applied so that single class and style properties can be assigned later.\n            var singlePropPositionIndex = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            directiveRefs[singlePropPositionIndex] = nextOffsetInsertionIndex;\n            // the sanitizer is also apart of the binding process and will be used when bindings are\n            // applied.\n            var styleSanitizerIndex = detectedIndex + 3 /* StyleSanitizerOffset */;\n            directiveRefs[styleSanitizerIndex] = styleSanitizer || null;\n        }\n        return directiveIndex;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput, directiveRef) {\n        stylesInput = stylesInput || null;\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n            classesValue === context[6 /* CachedClassValueOrInitialClassString */];\n        var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* CachedStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* CachedClassValueOrInitialClassString */] = classesValue;\n        context[7 /* CachedStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARRAY$2;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARRAY$2;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARRAY$2;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // SKIP IF INITIAL CHECK\n                        // If the former `value` is `null` then it means that an initial value\n                        // could be being rendered on screen. If that is the case then there is\n                        // no point in updating the value incase it matches. In other words if the\n                        // new value is the exact same as the previously rendered value (which\n                        // happens to be the initial value) then do nothing.\n                        if (value != null || hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            // same if statement logic as above (look for SKIP IF INITIAL CHECK).\n                            if (valueToCompare != null || hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(context, newProp, isClassBased, getStyleSanitizer(context, directiveIndex));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased, newProp, newFlag, newValue, directiveIndex, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context, directiveIndex);\n        while (propIndex < propLimit) {\n            var isClassBased = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(context, prop, isClassBased, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var ctxIndex_1 = context.length;\n                context.push(flag, prop, value, 0);\n                setPlayerBuilderIndex(context, ctxIndex_1, playerBuilderIndex, directiveIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n            setDirectiveDirty(context, directiveIndex, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, offset, addOrRemove, directiveRef) {\n        _updateSingleStylingValue(context, offset, addOrRemove, true, directiveRef);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     */\n    function updateStyleProp(context, offset, input, directiveRef) {\n        _updateSingleStylingValue(context, offset, input, false, directiveRef);\n    }\n    function _updateSingleStylingValue(context, offset, input, isClassBased, directiveRef) {\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            allowValueChange(currValue, value, currDirective, directiveIndex)) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setDirectiveDirty(context, directiveIndex, true);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param directiveRef an optional directive that will be used to target which\n     *    styling values are rendered. If left empty, only the bindings that are\n     *    registered on the template will be rendered.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveRef) {\n        var totalPlayersQueued = 0;\n        var targetDirectiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        if (isContextDirty(context) && isDirectiveDirty(context, targetDirectiveIndex)) {\n            var flushPlayerBuilders = context[0 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var onlySingleClasses = limitToSingleClasses(context);\n            var stillDirty = false;\n            for (var i = 9 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var flag = getPointers(context, i);\n                    var directiveIndex = getDirectiveIndexFromEntry(context, i);\n                    if (targetDirectiveIndex !== directiveIndex) {\n                        stillDirty = true;\n                        continue;\n                    }\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex) : null;\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var readInitialValue = !isClassBased || !onlySingleClasses;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    // Note that we ignore class-based deferals because otherwise a class can never\n                    // be removed in the case that it exists as true in the initial classes list...\n                    if (!isClassBased && !valueExists(valueToApply, isClassBased) && readInitialValue) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setDirectiveDirty(context, targetDirectiveIndex, false);\n            setContextDirty(context, stillDirty);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native.style[prop] = value;\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native.style[prop] = '';\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n            // DOMTokenList will throw if we try to add or remove an empty string.\n        }\n        else if (className !== '') {\n            if (add) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    native['classList'].add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    native['classList'].remove(className);\n            }\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 63 /* BitMask */) | (staticIndex << 6 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 6 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[3 /* InitialClassValuesPosition */] :\n            context[2 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 6 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 6 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 9 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[0 /* MasterFlagPosition */]);\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[8 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[8 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[8 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 0 /* MasterFlagPosition */);\n    }\n    function limitToSingleClasses(context) {\n        return context[0 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 0 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[0 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[0 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = 0;\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, directiveIndexA);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[2 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getDirectiveIndexFromRegistry(context, directive) {\n        var index = getDirectiveRegistryValuesIndexOf(context[1 /* DirectiveRegistryPosition */], directive);\n        ngDevMode &&\n            assertNotEqual(index, -1, \"The provided directive \" + directive + \" has not been allocated to the element's style/class bindings\");\n        return index > 0 ? index / 4 /* Size */ : 0;\n        // return index / DirectiveRegistryValuesIndex.Size;\n    }\n    function getDirectiveRegistryValuesIndexOf(directives, directive) {\n        for (var i = 0; i < directives.length; i += 4 /* Size */) {\n            if (directives[i] === directive) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 1 /* KeyValueStartPosition */; i < keyValues.length; i += 2 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[1 /* DirectiveRegistryPosition */][(directiveIndex * 4 /* Size */) +\n            1 /* SinglePropValuesIndexOffset */];\n        var offsets = context[4 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 4 /* Size */ +\n            3 /* StyleSanitizerOffset */] ||\n            dirs[3 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function isDirectiveDirty(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        return dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */];\n    }\n    function setDirectiveDirty(context, directiveIndex, dirtyYes) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */] = dirtyYes;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced incase an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // ... this decides what to do if and when there is a collision.\n        if (currentValue) {\n            if (newValue) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value incase it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * This function is only designed to be called for `[class]` bindings when\n     * `[ngClass]` (or something that uses `class` as an input) is present. Once\n     * directive host bindings fully work for `[class]` and `[style]` inputs\n     * then this can be deleted.\n     */\n    function getInitialClassNameValue(context) {\n        var className = context[6 /* CachedClassValueOrInitialClassString */];\n        if (className == null) {\n            className = '';\n            var initialClassValues = context[3 /* InitialClassValuesPosition */];\n            for (var i = 1 /* KeyValueStartPosition */; i < initialClassValues.length; i += 2 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            context[6 /* CachedClassValueOrInitialClassString */] = className;\n        }\n        return className;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be perfomed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode. In \"projection\" mode, we do not need to check types, so if tag name\n     * matches selector, we declare a match. In \"directive matching\" mode, we also check whether tNode\n     * is of expected type:\n     * - whether tNode has either Element or ElementContainer type\n     * - or if we want to match \"ng-template\" tag, we check for Container type\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        return currentSelector === tNode.tagName &&\n            (isProjectionMode ||\n                (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) ||\n                (tNode.type === 0 /* Container */ && currentSelector === NG_TEMPLATE_SELECTOR));\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(3 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.stylingTemplate) {\n                    if (!isCssClassMatching(readClassValueFromTNode(tNode), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    function readClassValueFromTNode(tNode) {\n        // comparing against CSS class values is complex because the compiler doesn't place them as\n        // regular attributes when an element is created. Instead, the classes (and styles for\n        // that matter) are placed in a special styling context that is used for resolving all\n        // class/style values across static attributes, [style]/[class] and [style.prop]/[class.name]\n        // bindings. Therefore if and when the styling context exists then the class values are to be\n        // extracted by the context helper code below...\n        return tNode.stylingTemplate ? getInitialClassNameValue(tNode.stylingTemplate) : '';\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 3 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null &&\n                    isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true)) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        setFirstTemplatePass(false);\n        // Resetting the bindingIndex of the current LView as the next steps may trigger change detection.\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!isCreationMode(lView)) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executeInitHooks(lView, tView, checkNoChangesMode);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode, 1 /* AfterContentInitHooksToBeRun */);\n            setHostBindings(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        instruction(2 /* Update */, readElementValue(viewData[currentDirectiveIndex]), currentElementIndex);\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            setCurrentQueryIndex(0);\n            for (var i = 0; i < tView.contentQueries.length; i++) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function createLView(parentLView, tView, context, flags, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 64 /* Attached */ | 8 /* FirstLViewPass */;\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var parent_1 = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n            // Parents cannot cross component boundaries because components will be used in multiple places,\n            // so it's only set if the view is the same.\n            var parentInSameView = parent_1 && parent_1 !== lView[HOST_NODE];\n            var tParentNode = parentInSameView ? parent_1 : null;\n            tNode = tView.data[adjustedIndex] = createTNode(tParentNode, type, adjustedIndex, name, attrs);\n        }\n        // Now link ourselves into the tree.\n        // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n        // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[HOST_NODE] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            tView.data.push(null);\n            view.push(null);\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 16 /* CheckAlways */);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        assignTViewNodeToLView(tView, null, -1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        var oldView;\n        if (viewToRender[FLAGS] & 256 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                setFirstTemplatePass(false);\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                // creation mode pass\n                if (templateFn) {\n                    namespaceHTML();\n                    templateFn(1 /* Create */, context);\n                }\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~4 /* CreationMode */;\n            }\n            // update mode pass\n            templateFn && templateFn(2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n        }\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] =\n                isContentQueryHost(previousOrParentTNode) ? currentQueries.parent : currentQueries;\n        }\n        registerPostOrderHooks(tView, previousOrParentTNode);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the first element\n            // is created. Then the styling context is locked and can only be instantiated for each\n            // successive element that is created.\n            if (tView.firstTemplatePass && !tNode.stylingTemplate && hasStyling(attrs)) {\n                tNode.stylingTemplate = initializeStaticContext(attrs);\n            }\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n        }\n        // There is no point in rendering styles when a class directive is present since\n        // it will take that over for us (this will be removed once #FW-882 is in).\n        if (tNode.stylingTemplate && (tNode.flags & 8 /* hasClassInput */) === 0) {\n            renderInitialStylesAndClasses(native, tNode.stylingTemplate, lView[RENDERER]);\n        }\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getFirstTemplatePass()) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, findDirectiveMatches(tView, lView, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        else {\n            // During first template pass, queries are created or cloned when first requested\n            // using `getOrCreateCurrentQueries`. For subsequent template passes, we clone\n            // any current LQueries here up-front if the current node hosts a content query.\n            if (isContentQueryHost(getPreviousOrParentTNode()) && lView[QUERIES]) {\n                lView[QUERIES] = lView[QUERIES].clone();\n            }\n        }\n        instantiateAllDirectives(tView, lView, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, lView, previousOrParentTNode);\n        saveResolvedLocalsInData(lView, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice().fill(null, bindingStartIndex),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            viewQueryStartIndex: initialViewLength,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     *\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                /// attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n                    // Standard attributes\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    if (isAnimationProp(attrName)) {\n                        if (isProc) {\n                            renderer.setProperty(native, attrName, attrVal);\n                        }\n                    }\n                    else {\n                        isProc ?\n                            renderer\n                                .setAttribute(native, attrName, attrVal) :\n                            native.setAttribute(attrName, attrVal);\n                    }\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + renderStringify(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function listener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n     * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n     * in the component's renderer. Normally all host listeners are evaluated with the\n     * parent component's renderer, but, in the case of animation @triggers, they need\n     * to be evaluated with the sub component's renderer (because that's where the\n     * animation triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `listener`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function componentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : {};\n            var target = resolved.target || native;\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var useCaptureOrSubIdx = useCapture;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // The first argument of `listen` function in Procedural Renderer is:\n                // - either a target name (as a string) in case of global target (window, document, body)\n                // - or element reference (in all other cases)\n                var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                lCleanup.push(listenerFn, cleanupFn);\n                useCaptureOrSubIdx = lCleanupIndex + 1;\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                target.addEventListener(eventName, wrappedListener, useCapture);\n                lCleanup.push(wrappedListener);\n            }\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(readElementValue(_lView[tNode.index])).target; } :\n                tNode.index;\n            tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCaptureOrSubIdx);\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] =\n                isContentQueryHost(previousOrParentTNode) ? currentQueries.parent : currentQueries;\n        }\n        registerPostOrderHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        if (hasClassInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n        }\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     */\n    function elementAttribute(index, name, value, sanitizer, namespace) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && validateAttribute(name);\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element_1 = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name, namespace) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var tNode = getTNode(index, lView);\n                var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setAttribute(element_1, name, strValue, namespace);\n                }\n                else {\n                    namespace ? element_1.setAttributeNS(namespace, name, strValue) :\n                        element_1.setAttribute(name, strValue);\n                }\n            }\n        }\n    }\n    /**\n     * Update a property on an element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function elementProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function componentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n    }\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            if (ngDevMode) {\n                validateProperty(propName);\n                ngDevMode.rendererSetProperty++;\n            }\n            savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n    }\n    /**\n     * Stores debugging data for this property binding on first template pass.\n     * This enables features like DebugElement.properties.\n     */\n    function savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        // Bind/interpolation functions save binding metadata in the last binding index,\n        // but leave the property name blank. If the interpolation delimiter is at the 0\n        // index, we know that this is our first pass and the property name still needs to\n        // be set.\n        var bindingMetadata = tData[lastBindingIndex];\n        if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n            tData[lastBindingIndex] = propName + bindingMetadata;\n            // We don't want to store indices for host bindings because they are stored in a\n            // different part of LView (the expando section).\n            if (!nativeOnly) {\n                if (tNode.propertyMetadataStartIndex == -1) {\n                    tNode.propertyMetadataStartIndex = lastBindingIndex;\n                }\n                tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n            }\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            propertyMetadataStartIndex: -1,\n            propertyMetadataEndIndex: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: null,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputAliases mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    function setNgReflectProperties(lView, element, type, inputs, value) {\n        var _a;\n        for (var i = 0; i < inputs.length; i += 3) {\n            var renderer = lView[RENDERER];\n            var attrName = normalizeDebugBindingName(inputs[i + 2]);\n            var debugValue = normalizeDebugBindingValue(value);\n            if (type === 3 /* Element */) {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n            else if (value !== undefined) {\n                var value_1 = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setValue(element, value_1);\n                }\n                else {\n                    element.textContent = value_1;\n                }\n            }\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNodeFlags node flags\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note for static values (no binding)\n     * see `elementStart` and `elementHostAttrs`.\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementClassProp` refers to the class name by index in this array.\n     *        (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementStyleProp` refers to the class name by index in this array.\n     *        (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        property values that are applied to the element (during rendering).\n     *        Note that the sanitizer instance itself is tied to the `directive` (if  provided).\n     * @param directive A directive instance the styling is associated with. If not provided\n     *        current view's controller instance is assumed.\n     *\n     * @publicApi\n     */\n    function elementStyling(classBindingNames, styleBindingNames, styleSanitizer, directive) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        updateContextWithBindings(tNode.stylingTemplate, directive || null, classBindingNames, styleBindingNames, styleSanitizer, hasClassInput(tNode));\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @publicApi\n     */\n    function elementHostAttrs(directive, attrs) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = initializeStaticContext(attrs);\n        }\n        var lView = getLView();\n        var native = getNativeByTNode(tNode, lView);\n        var i = setUpAttributes(native, attrs);\n        patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, i, directive);\n    }\n    /**\n     * Apply styling binding to the element.\n     *\n     * This instruction is meant to be run after `elementStyle` and/or `elementStyleProp`.\n     * if any styling bindings have changed then the changes are flushed to the element.\n     *\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStylingApply(index, directive) {\n        var lView = getLView();\n        var isFirstRender = (lView[FLAGS] & 8 /* FirstLViewPass */) !== 0;\n        var totalPlayersQueued = renderStyling(getStylingContext(index + HEADER_OFFSET, lView), lView[RENDERER], lView, isFirstRender, null, null, directive);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Update a style bindings value on an element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling element is updated as part of `elementStylingApply`.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementStlyingBindings`.\n     * @param value New value to write (null to remove). Note that if a directive also\n     *        attempts to write to the same binding value then it will only be able to\n     *        do so if the template binding value is `null` (or doesn't exist at all).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, directive) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd, directive);\n    }\n    /**\n     * Add or remove a class via a class binding on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case and, therefore,\n     * the class itself must already be applied using `elementStyling` within\n     * the creation block.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementStlyingBindings` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementClassProp(index, classIndex, value, directive) {\n        var onOrOffClassValue = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, onOrOffClassValue, directive);\n    }\n    /**\n     * Update style and/or class bindings using object literal.\n     *\n     * This instruction is meant apply styling via the `[style]=\"exp\"` and `[class]=\"exp\"` template\n     * bindings. When styles are applied to the Element they will then be placed with respect to\n     * any styles set with `elementStyleProp`. If any styles are set to `null` then they will be\n     * removed from the element.\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n     *\n     * @publicApi\n     */\n    function elementStylingMap(index, classes, styles, directive) {\n        if (directive != undefined)\n            return hackImplementationOfElementStylingMap(index, classes, styles, directive); // supported in next PR\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = getInitialClassNameValue(stylingContext);\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n            setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n        }\n        else {\n            updateStylingMap(stylingContext, classes, styles);\n        }\n    }\n    /* START OF HACK BLOCK */\n    function hackImplementationOfElementStylingMap(index, classes, styles, directive) {\n        throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n    }\n    /* END OF HACK BLOCK */\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, renderStringify(value)) :\n                element_2.textContent = renderStringify(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive, def);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!getFirstTemplatePass() && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = getFirstTemplatePass();\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = viewData[i];\n            if (def.hostBindings) {\n                var previousExpandoLength = expando.length;\n                setCurrentDirectiveDef(def);\n                def.hostBindings(1 /* Create */, directive, tNode.index - HEADER_OFFSET);\n                setCurrentDirectiveDef(null);\n                // `hostBindings` function may or may not contain `allocHostVars` call\n                // (e.g. it may not if it only contains host listeners), so we need to check whether\n                // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n                // expando block, to make sure we execute it for DI cycle\n                if (previousExpandoLength === expando.length && firstTemplatePass) {\n                    expando.push(def.hostBindings);\n                }\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, previousOrParentTNode);\n        }\n        if (def.contentQueries) {\n            def.contentQueries(directiveDefIdx);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var tView = getLView()[TVIEW];\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n    */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), false, null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, previousOrParentTNode.index, createLView(lView, tView, null, def.onPush ? 32 /* Dirty */ : 16 /* CheckAlways */, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = lView[previousOrParentTNode.index];\n        lView[previousOrParentTNode.index] = componentView;\n        if (getFirstTemplatePass()) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            // If we hit Select-Only, Classes or Styles, we're done anyway. None of those are valid inputs.\n            if (attrName === 3 /* SelectOnly */ || attrName === 1 /* Classes */ ||\n                attrName === 2 /* Styles */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (getFirstTemplatePass()) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        var currentQueries = lView[QUERIES];\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        attachPatchData(native, lView);\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        registerPostOrderHooks(tView, tNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        getFirstTemplatePass() && (tNode.tViews = []);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(lView[adjustedIndex], lView, comment);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, index + HEADER_OFFSET, lContainer);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executeInitHooks(lView, tView, getCheckNoChangesMode());\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = getLViewChild(lView); current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lView, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[HOST_NODE];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        refreshDescendantViews(lView); // update mode pass\n        leaveView(lView[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (16 /* CheckAlways */ | 32 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 64 /* Attached */) === 64 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getLView())[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                }\n                componentChild.next = null;\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(lView);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        if (Array.isArray(nodeToProject)) {\n            appendChild(nodeToProject, tProjectionNode, lView);\n        }\n        else {\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    // This node is re-projected, so we must go up the tree to get its projected nodes.\n                    var currentComponentView = findComponentView(projectedView);\n                    var currentComponentHost = currentComponentView[HOST_NODE];\n                    var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                    if (firstProjectedNode) {\n                        if (Array.isArray(firstProjectedNode)) {\n                            appendChild(firstProjectedNode, tProjectionNode, lView);\n                        }\n                        else {\n                            projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                            projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                            nodeToProject = firstProjectedNode;\n                            projectedView = currentComponentView[PARENT];\n                            continue;\n                        }\n                    }\n                }\n                else {\n                    // This flag must be set now or we won't know that this node is projected\n                    // if the nodes are inserted into a container later.\n                    nodeToProject.flags |= 2 /* isProjected */;\n                    appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n                }\n                // If we are finished with a list of re-projected nodes, we need to get\n                // back to the root projection node that was re-projected.\n                if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                    projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                    nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n                }\n                nodeToProject = nodeToProject.next;\n            }\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param state The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, adjustedHostIndex, state) {\n        var tView = lView[TVIEW];\n        var firstTemplatePass = getFirstTemplatePass();\n        if (lView[TAIL]) {\n            lView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        lView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 32 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView && !(lView[FLAGS] & 256 /* IsRoot */)) {\n            lView[FLAGS] |= 32 /* Dirty */;\n            lView = lView[PARENT];\n        }\n        lView[FLAGS] |= 32 /* Dirty */;\n        return lView;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        if (isCreationMode(view)) {\n            checkView(view, context); // creation mode pass\n        }\n        checkView(view, context); // update mode pass\n        if (rendererFactory.end)\n            rendererFactory.end();\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChanges(component);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var creationMode = isCreationMode(hostView);\n        try {\n            namespaceHTML();\n            creationMode && executeViewQueryFn(hostView, hostTView, component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            !creationMode && executeViewQueryFn(hostView, hostTView, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function executeViewQueryFn(lView, tView, component) {\n        var viewQuery = tView.viewQuery;\n        if (viewQuery) {\n            setCurrentQueryIndex(tView.viewQueryStartIndex);\n            viewQuery(getRenderFlags(lView), component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        storeBindingMetadata(lView);\n        return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     */\n    function allocHostVars(count) {\n        if (!getFirstTemplatePass())\n            return;\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var tData = lView[TVIEW].data;\n        var bindingIndex = lView[BINDING_INDEX];\n        if (tData[bindingIndex] == null) {\n            // 2 is the index of the first static interstitial value (ie. not prefix)\n            for (var i = 2; i < values.length; i += 2) {\n                tData[bindingIndex++] = values[i];\n            }\n            bindingIndex = lView[BINDING_INDEX];\n        }\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        storeBindingMetadata(lView, values[0], values[values.length - 1]);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        storeBindingMetadata(lView, prefix, suffix);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            lView[TVIEW].data[bindingIndex] = i0;\n        }\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n            tData[bindingIndex + 6] = i6;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates binding metadata for a particular binding and stores it in\n     * TView.data. These are generated in order to support DebugElement.properties.\n     *\n     * Each binding / interpolation will have one (including attribute bindings)\n     * because at the time of binding, we don't know to which instruction the binding\n     * belongs. It is always stored in TView.data at the index of the last binding\n     * value in LView (e.g. for interpolation8, it would be stored at the index of\n     * the 8th value).\n     *\n     * @param lView The LView that contains the current binding index.\n     * @param prefix The static prefix string\n     * @param suffix The static suffix string\n     *\n     * @returns Newly created binding metadata string for this binding or null\n     */\n    function storeBindingMetadata(lView, prefix, suffix) {\n        if (prefix === void 0) { prefix = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        var tData = lView[TVIEW].data;\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n        return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(getLView(), index);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return getLView();\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lView);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    /*\n     * Publishes a collection of default debug tools onto `window._ng_`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    var _published = false;\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ngDevMode` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 32 /* Dirty */ | 256 /* IsRoot */ :\n            16 /* CheckAlways */ | 256 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            addToViewTree(rootView, HEADER_OFFSET, componentView);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~4 /* CreationMode */;\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 32 /* Dirty */ : 16 /* CheckAlways */, rendererFactory, renderer, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var rootTNode = getPreviousOrParentTNode();\n            setCurrentDirectiveDef(componentDef);\n            componentDef.hostBindings(1 /* Create */, component, rootTNode.index - HEADER_OFFSET);\n            setCurrentDirectiveDef(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            superHostBindings_1(rf, ctx, elementIndex);\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (directiveIndex) {\n                            superContentQueries_1(directiveIndex);\n                            prevContentQueries_1(directiveIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex) {\n                            superContentQueriesRefresh_1(directiveIndex);\n                            prevContentQueriesRefresh_1(directiveIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY$2) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function () {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                simpleChangesStore.previous = current;\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, true, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, true, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[HOST_NODE];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 128 /* Destroyed */) === 128 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~64 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 64 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._lView[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            result.push(getNativeByTNode(tNodeChild, lView));\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getLView()[RENDERER], hostContainer[QUERIES], hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], view[CONTAINER_INDEX]) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, true);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('8.0.0-beta.1+95.sha-41e68f7');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver$$1(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory$$1(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            // The component definition does not include the wildcard ('*') selector in its list.\n            // It is implicitly expected as the first item in the projectable nodes array.\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? __spread(['*'], componentDef.ngContentSelectors) : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 32 /* Dirty */ | 256 /* IsRoot */ :\n                16 /* CheckAlways */ | 256 /* IsRoot */;\n            var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, HEADER_OFFSET, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef$$1.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            !this.hostView.destroyed && this.hostView.destroy();\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var expandoStartIndex = tView.blueprint.length - HEADER_OFFSET;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[HOST_NODE] ?\n            parentTNode.index - HEADER_OFFSET :\n            index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        allocExpando(viewData);\n                        var icuNodeIndex = tView.blueprint.length - 1 - HEADER_OFFSET;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text$$1 = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text$$1.match(BINDING_REGEXP);\n                        // Create text nodes\n                        allocExpando(viewData);\n                        var textNodeIndex = tView.blueprint.length - 1 - HEADER_OFFSET;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text$$1, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text$$1, tView.blueprint.length - 1 - HEADER_OFFSET), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: tView.blueprint.length - HEADER_OFFSET - expandoStartIndex,\n            expandoStartIndex: expandoStartIndex,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[HOST_NODE]) {\n            tNode.parent = parentTNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                if (!matches_1[content]) {\n                    var placeholders_1 = [];\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders_1.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders_1;\n                }\n                if (!matches_1[content].length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var placeholders = matches_1[content];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n            // verify that we injected all values\n            var hasUnmatchedValues = Object.keys(matches_1).some(function (key) { return !!matches_1[key].length; });\n            if (hasUnmatchedValues) {\n                throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches_1));\n            }\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // The last placeholder that was added before `i18nEnd`\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var visitedPlaceholders = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Remove deleted placeholders\n        // The last placeholder that was added before `i18nEnd` is `previousOrParentTNode`\n        for (var i = rootIndex + 1; i <= previousOrParentTNode.index - HEADER_OFFSET; i++) {\n            if (visitedPlaceholders.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedPlaceholders = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode = createNodeAtIndex(textNodeIndex, 3 /* Element */, textRNode, null, null);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[HOST_NODE];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        destinationTNode.next = null;\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedPlaceholders.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode =\n                            createNodeAtIndex(commentNodeIndex, 5 /* IcuContainer */, commentRNode, null, null);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue, null);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedPlaceholders;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    var tIcuIndex = updateOpCodes[++j];\n                                    var tIcu = icus[tIcuIndex];\n                                    var icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            removeChild(removedPhTNode, removedPhRNode, viewData);\n        }\n        removedPhTNode.detached = true;\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                removeChild(removedPhTNode, lContainer[NATIVE], viewData);\n            }\n        }\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            expandoStartIndex: expandoStartIndex + 1, childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        var lView = getLView();\n        var worstCaseSize = Math.max.apply(Math, __spread(vars));\n        for (var i = 0; i < worstCaseSize; i++) {\n            allocExpando(lView);\n        }\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element$$1 = currentNode;\n                        var tagName = element$$1.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element$$1.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders);\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.hasOwnProperty('decorators') && clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$1(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$1(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$1(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queryList._valuesTree = [];\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(getLView(), queryList, queryList.destroy);\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree || []);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function viewQuery(\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    predicate, descend, read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n        }\n        var index = getCurrentQueryIndex();\n        var viewQuery = query(predicate, descend, read);\n        store(index - HEADER_OFFSET, viewQuery);\n        setCurrentQueryIndex(index + 1);\n        return viewQuery;\n    }\n    /**\n    * Loads current View Query and moves the pointer/index to the next View Query in LView.\n    */\n    function loadViewQuery() {\n        var index = getCurrentQueryIndex();\n        setCurrentQueryIndex(index + 1);\n        return load(index - HEADER_OFFSET);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function contentQuery(directiveIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var contentQuery = query(predicate, descend, read);\n        (lView[CONTENT_QUERIES] || (lView[CONTENT_QUERIES] = [])).push(contentQuery);\n        if (getFirstTemplatePass()) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 1] : -1;\n            if (directiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(directiveIndex);\n            }\n        }\n        return contentQuery;\n    }\n    function loadContentQuery() {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        var index = getCurrentQueryIndex();\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], index);\n        setCurrentQueryIndex(index + 1);\n        return lView[CONTENT_QUERIES][index];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf$1,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵallocHostVars': allocHostVars,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵcomponentHostSyntheticProperty': componentHostSyntheticProperty,\n        'ɵcomponentHostSyntheticListener': componentHostSyntheticListener,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵviewQuery': viewQuery,\n        'ɵloadViewQuery': loadViewQuery,\n        'ɵcontentQuery': contentQuery,\n        'ɵloadContentQuery': loadContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementHostAttrs': elementHostAttrs,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵresolveWindow': resolveWindow,\n        'ɵresolveDocument': resolveDocument,\n        'ɵresolveBody': resolveBody,\n        'ɵsetComponentScope': setComponentScope,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl,\n        'ɵsanitizeUrlOrResourceUrl': sanitizeUrlOrResourceUrl\n    };\n\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing, ngModuleType);\n        modules.set(id, ngModuleType);\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = modules.get(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$2(ngModule.bootstrap || EMPTY_ARRAY$4, resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten$2(ngModule.imports || EMPTY_ARRAY$4, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten$2(ngModule.exports || EMPTY_ARRAY$4, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        if (ngModule.id) {\n            registerNgModuleType(ngModule.id, moduleType);\n        }\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        ngModuleDef.declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(ngModuleDef.declarations.map(resolveForwardRef), flatten$2(ngModuleDef.imports.map(computeCombinedExports), resolveForwardRef));\n        ngModuleDef.exports.forEach(verifyExportsAreDeclaredOrReExported);\n        ngModuleDef.declarations.forEach(verifyDeclarationIsUnique);\n        ngModuleDef.declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten$2(ngModule.imports, unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + renderStringify(type) + \"' declared by the module '\" + renderStringify(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + renderStringify(type) + \" from \" + renderStringify(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(renderStringify).sort();\n                errors.push(\"Type \" + renderStringify(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + renderStringify(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + renderStringify(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + renderStringify(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited\n     * by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten$2(ngModuleDef.exports.map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$2(values, mapFn) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$2(value, mapFn)));\n            }\n            else {\n                out.push(mapFn ? mapFn(value) : value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + renderStringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + renderStringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var meta = __assign({}, directiveMetadata(type, metadata), { template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY$2, animations: metadata.animations, viewQueries: extractQueriesMetadata(type, getReflect().propMetadata(type), isViewQuery), directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, \"ng://\" + renderStringify(type) + \"/template.html\", meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var facade = directiveMetadata(type, directive);\n                    ngDirectiveDef = getCompilerFacade().compileDirective(angularCoreEnv, \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\", facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY$2,\n            outputs: metadata.outputs || EMPTY_ARRAY$2,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n        };\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + renderStringify(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + renderStringify(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = defineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(inject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], function () { return [{\n            type: undefined,\n            decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }]\n        }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = defineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n    /*@__PURE__*/ setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = moduleDef.declarations.reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = defineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /*@__PURE__*/ setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null);\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = Promise.resolve(0);\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = defineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(inject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /*@__PURE__*/ setClassMetadata(Testability, [{\n            type: Injectable\n        }], function () { return [{\n            type: NgZone\n        }]; }, null);\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = defineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], function () { return []; }, null);\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var isBoundToModule = isBoundToModule__POST_R3__;\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = defineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(inject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], function () { return [{\n            type: Injector\n        }]; }, null);\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = defineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(inject(NgZone), inject(Console), inject(Injector), inject(ErrorHandler), inject(ComponentFactoryResolver), inject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], function () { return [{\n            type: NgZone\n        }, {\n            type: Console\n        }, {\n            type: Injector\n        }, {\n            type: ErrorHandler\n        }, {\n            type: ComponentFactoryResolver\n        }, {\n            type: ApplicationInitStatus\n        }]; }, null);\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = defineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(inject(Compiler), inject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], function () { return [{\n            type: Compiler\n        }, {\n            type: SystemJsNgModuleLoaderConfig,\n            decorators: [{\n                    type: Optional\n                }]\n        }]; }, null);\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement && getComponent(nativeElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n                return __assign({}, properties, hostProperties);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(lNode, i)) {\n                                var className = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(lNode, i)) {\n                                var styleName = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n        if (parentNode instanceof DebugElement__POST_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__POST_R3__) {\n                    if (elementsOnly ? node.nativeElement : true) {\n                        _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n        while (bindingIndex < tNode.propertyMetadataEndIndex) {\n            var value = '';\n            var propMetadata = tData[bindingIndex];\n            while (!isPropMetadataString(propMetadata)) {\n                // This is the first value for an interpolation. We need to build up\n                // the full interpolation by combining runtime values in LView with\n                // the static interstitial values stored in TData.\n                value += renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n                propMetadata = tData[++bindingIndex];\n            }\n            value += lView[bindingIndex];\n            // Property metadata string has 3 parts: property name, prefix, and suffix\n            var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            var propertyName = metadataParts[0];\n            // Attr bindings don't have property names and should be skipped\n            if (propertyName) {\n                // Wrap value with prefix and suffix (will be '' for normal bindings)\n                properties[propertyName] = metadataParts[1] + value + metadataParts[2];\n            }\n            bindingIndex++;\n        }\n        return properties;\n    }\n    /**\n     * Retrieves the first binding index that holds values for this property\n     * binding.\n     *\n     * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n     * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n     * there can be multiple binding values, so we might have to loop backwards\n     * from the metadata index until we find the first one.\n     *\n     * @param metadataIndex The index of the first property metadata string for\n     * this node.\n     * @param tData The data array for the current TView\n     * @returns The first binding index for this binding\n     */\n    function getFirstBindingIndex(metadataIndex, tData) {\n        var currentBindingIndex = metadataIndex - 1;\n        // If the slot before the metadata holds a string, we know that this\n        // metadata applies to an interpolation with at least 2 bindings, and\n        // we need to search further to access the first binding value.\n        var currentValue = tData[currentBindingIndex];\n        // We need to iterate until we hit either a:\n        // - TNode (it is an element slot marking the end of `consts` section), OR a\n        // - metadata string (slot is attribute metadata or a previous node's property metadata)\n        while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n            currentValue = tData[--currentBindingIndex];\n        }\n        return currentBindingIndex + 1;\n    }\n    function collectHostPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        // Host binding values for a node are stored after directives on that node\n        var hostPropIndex = tNode.directiveEnd;\n        var propMetadata = tData[hostPropIndex];\n        // When we reach a value in TView.data that is not a string, we know we've\n        // hit the next node's providers and directives and should stop copying data.\n        while (typeof propMetadata === 'string') {\n            var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n            properties[propertyName] = lView[hostPropIndex];\n            propMetadata = tData[++hostPropIndex];\n        }\n        return properties;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__POST_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = defineNgModule({ type: ApplicationModule });\n        ApplicationModule.ngInjectorDef = defineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(inject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS, imports: [] });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], function () { return [{\n            type: ApplicationRef\n        }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ɵinject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf$1;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵsetComponentScope = setComponentScope;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵviewQuery = viewQuery;\n    exports.ɵloadViewQuery = loadViewQuery;\n    exports.ɵcontentQuery = contentQuery;\n    exports.ɵloadContentQuery = loadContentQuery;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵcomponentHostSyntheticProperty = componentHostSyntheticProperty;\n    exports.ɵcomponentHostSyntheticListener = componentHostSyntheticListener;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵallocHostVars = allocHostVars;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementHostAttrs = elementHostAttrs;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵresolveWindow = resolveWindow;\n    exports.ɵresolveDocument = resolveDocument;\n    exports.ɵresolveBody = resolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵdefaultStyleSanitizer = defaultStyleSanitizer;\n    exports.ɵsanitizeScript = sanitizeScript;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵsanitizeUrlOrResourceUrl = sanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}