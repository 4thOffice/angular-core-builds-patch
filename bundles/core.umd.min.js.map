{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","getOwnDefinition","NG_PROV_DEF","NG_INJECTABLE_DEF","def","getInjectorDef","NG_INJ_DEF","NG_INJECTOR_DEF","ɵprov","ɵinj","ngInjectableDef","ngInjectorDef","stringify","isArray","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","isForwardRef","fn","R3ResolvedDependencyType","R3FactoryTarget","ViewEncapsulation","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","NG_COMP_DEF","ɵcmp","NG_DIR_DEF","ɵdir","NG_PIPE_DEF","ɵpipe","NG_MOD_DEF","ɵmod","NG_LOC_ID_DEF","ɵloc","NG_FACTORY_DEF","ɵfac","NG_ELEMENT_ID","__NG_ELEMENT_ID__","InjectionToken","_desc","INJECTOR","THROW_IF_NOT_FOUND","NG_TEMP_TOKEN_PATH","NG_TOKEN_PATH","NEW_LINE","NO_NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","ɵɵinject","ɵɵinvalidFactoryDep","inject","notFoundValue","injectableDef","injectArgs","types","arg","j","NullInjector","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ChangeDetectionStrategy","ChangeDetectorStatus","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","NgModuleRef","NgModuleFactory","addAllToArray","items","arr","flatten","list","dst","item","slice","deepForEach","input","forEach","addToArray","splice","removeFromArray","pop","newArray","size","assertDefined","actual","msg","throwError","noSideEffects","ɵChangeDetectorStatus","EMPTY_OBJ","EMPTY_ARRAY","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","decls","vars","template","consts","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","data","encapsulation","Emulated","id","styles","_","setInput","schemas","tView","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","autoRegisterModuleById","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","ngModuleDef","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getFactoryDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","DECLARATION_VIEW","DECLARATION_COMPONENT_VIEW","DECLARATION_LCONTAINER","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","MOVED_VIEWS","NATIVE","VIEW_REFS","CONTAINER_HEADER_OFFSET","isLView","isLContainer","isContentQueryHost","tNode","isComponentHost","isDirectiveHost","isComponentDef","isRootView","instructionState","lFrame","createLFrame","bindingsEnabled","elementExitFn","checkNoChangesMode","setCurrentDirectiveDef","currentDirectiveDef","getBindingsEnabled","ɵɵenableBindings","ɵɵdisableBindings","getLView","lView","hasActiveElementFlag","flag","selectedIndex","setActiveHostElement","elementIndex","executeElementExitFn","setSelectedIndex","activeDirectiveId","setElementExitFn","setActiveElementFlag","getActiveDirectiveId","incrementActiveDirectiveId","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","previousOrParentTNode","setPreviousOrParentTNode","_isParent","isParent","getIsParent","setIsNotParent","getCheckNoChangesMode","setCheckNoChangesMode","mode","getBindingRoot","bindingRootIndex","bindingStartIndex","getBindingIndex","bindingIndex","setBindingIndex","nextBindingIndex","incrementBindingIndex","count","setBindingRoot","getCurrentQueryIndex","currentQueryIndex","setCurrentQueryIndex","enterDI","newView","newLFrame","allocLFrame","leaveDI","leaveView","enterView","elementDepthCount","currentNamespace","currentSanitizer","currentLFrame","childLFrame","child","parent","leaveViewProcessExit","getSelectedIndex","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","namespaceHTMLInternal","setCurrentStyleSanitizer","sanitizer","getCurrentStyleSanitizer","registerPostOrderHooks","directiveStart","end","directiveEnd","directiveDef","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeCheckHooks","hooks","nodeIndex","callHooks","executeInitAndCheckHooks","initPhase","incrementInitPhaseFlags","currentView","currentNodeIndex","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","RendererStyleFlags3","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","DOCUMENT","getDocument","document","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","setUpAttributes","native","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","isAnimationProp","setProperty","isNameOnlyAttributeMarker","marker","charCodeAt","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","element","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","maybeUnwrapFn","Function","SafeValueImpl","changingThisBreaksApplicationSecurity","SafeHtmlImpl","_super","getTypeName","SafeStyleImpl","SafeScriptImpl","SafeUrlImpl","SafeResourceUrlImpl","unwrapSafeValue","allowSanitizationBypassAndThrow","actualType","getSanitizationBypassType","NO_CHANGE","MAP_BASED_ENTRY_PROP_NAME","TEMPLATE_DIRECTIVE_INDEX","DEFAULT_BINDING_VALUE","DEFAULT_BINDING_INDEX","DEFAULT_TOTAL_SOURCES","DEFAULT_GUARD_MASK_VALUE","allocStylingMapArray","hasConfig","allowDirectStyling","isClassBased","firstUpdatePass","allow","hasOnlyMapOrPropsFlag","patchConfig","getProp","isSanitizationRequired","getPropConfig","getGuardMask","isHostBinding","getValuesCount","getTotalSources","getBindingValue","offset","getDefaultValue","setValue","getValue","getPropValuesStartPosition","startPosition","hasValueChanged","a","compareValueA","compareValueB","is","isStylingValueDefined","concatString","separator","hyphenate","v","toLowerCase","getStylingMapArray","isStylingContext","getInitialStylingValue","hasClassInput","hasStyleInput","getMapProp","MAP_DIRTY_VALUE","setMapValue","getMapValue","forceStylesAsString","hyphenateProps","str","keys","prop","propLabel","isHostStylingActive","directiveOrSourceId","stylingMapToString","attrValue","addItemToStylingMap","stylingMapArr","allowOverwrite","propAtIndex","applied","normalizeIntoStylingMap","bindingValue","newValues","normalizeProps","allValuesTrue","splitOnWhitespace","array","start","foundChar","selectClassBasedInputName","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","hostView","existingInjectorIndex","getInjectorIndex","firstCreatePass","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","view","hostTNode","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","isFactory","previousIncludeViewProviders","registerPreOrderHooks","directiveIndex","preOrderHooks","preOrderCheckHooks","injectorView","isFirstHostTNode","_tNode","_lView","injectorDef","ɵɵgetInheritedFactory","proto","getPrototypeOf","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","response","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","tagName","nodeName","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","ɵɵsanitizeUrlOrResourceUrl","tag","getUrlSanitizer","ɵɵdefaultStyleSanitizer","doSanitizeValue","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","MONKEY_PATCH_KEY_NAME","unwrapRNode","getNativeByIndex","getNativeByTNode","getNativeByTNodeOrNull","getTNode","load","getComponentLViewByIndex","slotValue","readPatchedData","readPatchedLView","isCreationMode","getConstant","resetPreOrderHookFlags","getLContainerActiveIndex","lContainer","getLContext","mpValue","component","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","throwMultipleComponentError","throwMixedMultiProviderError","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","selector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","classes","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","isSelectorInSelectorList","selectorListLoop","currentSelectorInList","_state","sourceIndex","classesBitMask","classesIndex","stylesBitMask","stylesIndex","lastDirectClassMap","lastDirectStyleMap","BIT_MASK_START_VALUE","INDEX_START_VALUE","getStylingState","VALUE_IS_EXTERNALLY_MODIFIED","STYLING_INDEX_FOR_MAP_BINDING","updateClassViaContext","forceUpdate","isMapBased","state","countIndex","updateBindingData","updateStyleViaContext","sanitizationRequired","counterIndex","hostBindingsMode","hostBindingsFlag","registerBinding","changed","renderHostBindingsAsStale","bindingsStart","valuesCount","itemsPerRow","found","valuesEnd","i_1","stylingMap","countId","totalSources","addNewSourceColumn","collisionFlag","isBindingIndexValue","entriesPerRow","allocateNewContextEntry","addBindingIntoContext","totalBindingsPerEntry","bitIndex","setGuardMask","maskValue","setDefaultValue","insertOffset","syncContextInitialStyling","updateInitialStylingOnContext","initialStyling","hasInitialStyling","applyStylingViaContext","bindingData","bitMaskValue","applyStylingFn","bitMask","normalizeBitMaskValue","stylingMapsSyncFn","applyAllValues","getStylingMapsSyncFn","_activeStylingMapApplyFn","totalBindingsToVisit","mapsMode","valueApplied","defaultValue","valueAppliedWithinMap","writeStylingValueDirectly","initialValue","valueToApply","objectToClassName","setClassName","setStyleAttr","applyStylingValue","applyFn","findAndApplyMapValue","setStyle","nativeStyle","DashCase","style","removeStyle","removeProperty","setClass","className","classList","addClass","add","removeClass","remove","renderStylingMap","stylingValues","getLViewParent","getRootContext","viewOrComponent","getRootView","componentOrLView","ɵɵadvance","delta","selectIndexInternal","ɵɵselect","ELEMENT_MARKER","COMMENT_MARKER","createProxy","handler","g","Proxy","activateStylingMapFeature","setStylingMapsSyncFn","syncStylingMap","targetProp","targetPropValueWasApplied","runTheSyncAlgorithm","loopUntilEnd","innerSyncStylingMap","currentMapIndex","mapsLimit","recurseInnerMaps","checkValuesOnly","cursor","getCurrentSyncCursor","mapIndex","MAP_CURSORS","iteratedTooFar","isTargetPropMatched","valueIsDefined","innerMode","resolveInnerMapMode","isValueAllowedToBeApplied","bindingIndexToApply","setCurrentSyncCursor","indexValue","resetSyncCursors","currentMode","doApplyValue","TStylingContextDebug","_isClassBased","buildConfig","enumerable","configurable","totalColumns","entries","templateBitMask","hostBindingsBitMask","bindingsStartPosition","sources","printSources","output","prefix","bindingsBySource","isDefaultColumn","getTypeFromColumn","binding","sort","entry","toUpperCase","repeat","tab","log","printTable","table","totalProps","Math","floor","tpl mask","generateBitString","host mask","leftPad","max","pad","times","NodeStylingDebug","_data","_sanitizer","_debugContext","overrideSanitizer","config","hasMapBindings","_convertMapBindingsToStylingMapArrays","_mapValues","set","ownKeys","getOwnPropertyDescriptor","k","limit","mockElement","mapFn","hasPropBindings","hasCollisions","hasTemplateBindings","hasHostBindings","processTNodeChildren","template_","toDebug","debug","toHtml","includeChildren","isTextNode","textContent","toDebugNodes","debugNodes","tNodeCursor","buildDebugNode","rawValue","componentLViewDebug","readLViewValue","nodes","TView","queries","expandoStartIndex","expandoInstructions","staticViewQueries","staticContentQueries","cleanup","directiveRegistry","pipeRegistry","TNode","tView_","propertyBindings","localNames","initialInputs","tViews","projectionNext","projection","type_","LViewDebug","_raw_lView","__raw__flags__","initPhaseState","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","childViews","childHead","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","result","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","_CLEAN_PROMISE","Promise","resolve","refreshContentQueries","directiveDefIdx","elementCreate","namespace","createElementNS","createLView","host","tHostNode","rendererFactory","getOrCreateTNode","adjustedIndex","createTNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","renderView","executeViewQueryFn","templateFn","executeTemplate","renderChildComponents","hostLView","renderComponent","refreshView","hooksInitPhaseCompleted","refreshDynamicEmbeddedViews","viewOrContainer","activeIndexFlag","embeddedLView","embeddedTView","refreshTransplantedViews","setHostBindings","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","refreshComponent","renderComponentOrTemplate","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","executeContentQueries","createDirectivesInstances","instantiateAllDirectives","isComponent","addComponentLogic","setInputsFromAttrs","invokeDirectivesHostBindings","viewData","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localRefExtractor","localIndex","getOrCreateTComponentView","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","locateHostElement","elementOrSelector","selectRootElement","ShadowDom","tParent","generatePropertyAliases","inputAliasMap","propStore","internalName","elementPropertyInternal","nativeOnly","loadRendererFn","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","childComponentLView","mapPropName","resolveDirectives","findDirectiveMatches","registry","matches","markAsComponentHost","exportsMap","","hasDirectives","initNodeFlags","generateExpandoInstructionBlock","preOrderHooksFound","preOrderCheckHooksFound","baseResolveDirective","saveNameToExportMap","initializeInputAndOutputAliases","defs","tNodeAttrs","inputsFromAttrs","inputsStore","outputsStore","directiveInputs","generateInitialInputs","cacheMatchingLocalNames","previousExpandoLength","directiveCount","numberOfDirectives","directiveFactory","nodeInjectorFactory","componentView","addToViewTree","elementAttributeInternal","strValue","initialInputData","privateName","inputsToStore","createLContainer","hostNative","declaredComponentLView","movedViews","movedLView","insertedComponentLView","movedTView","componentHostIdx","viewAttachedToChangeDetector","syncViewWithBlueprint","componentTView","lViewOrLContainer","markViewDirty","tickRootContext","rootContext","rootComponent","detectChangesInternal","detectChangesInRootView","viewQueryFn","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","textBindingInternal","renderInitialStyling","append","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","applyToElementOrContainer","action","lNodeToHandle","beforeNode","rNode","nativeAppendChild","nativeInsertBefore","nativeRemoveNode","destroyNode","applyContainer","renderParent","anchor","applyView","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","declarationLContainer","trackMovedView","declarationContainer","lQueries","detachMovedView","declaredViewIndex","detachView","removeIndex","viewToDetach","removedLView","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","firstView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","destroy","getRenderParent","parentTNode","Native","insertBefore","nativeAppendOrInsertBefore","getNativeAnchorNode","getBeforeNodeForView","childEl","childTNode","anchorNode","viewIndexInContainer","nextViewIndex","firstTNodeOfView","getFirstNativeNode","tNodeType","elIcuContainerChild","rNodeOrLContainer","componentHost","firstProjectedTNode","isHostElement","nativeParent","nativeRemoveChild","applyNodes","isProjection","rawSlotValue","applyProjectionRecursive","applyProjection","tProjectionNode","componentLView","nodeToProjectOrRNodes","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_cdRefInjectingView","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","lNode","lViewInAContainer","lViewFirstChildTNode","firstProjectedNode","detach","callback","storeCleanupFn","cleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationView","_declarationTContainer","elementRef","createEmbeddedView","declarationViewLQueries","viewRef","createContainerRef","ViewContainerRefToken","ViewContainerRef_","_lContainer","_hostTNode","_hostView","getParentInjectorTNode","startTNode","parentTNode_1","clear","templateRef","insert","createComponent","componentFactory","projectableNodes","ngModuleRef","contextInjector","parentInjector","ngModule","componentRef","allocateContainerIfNeeded","viewAttachedToContainer","prevIdx","prevLContainer","prevVCRef","adjustedIdx","_adjustIndex","move","newIndex","viewRefsArr","shift","setLContainerActiveIndex","commentNode","createComment","nativeNextSibling","injectChangeDetectorRef","isPipe","createViewRef","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","Invalid","USE_VALUE$1","isUseClassProvider","useClass","isUseFactoryProvider","useFactory","getInjectableMetadata","srcMeta","compilerMeta","typeArgumentCount","userDeps","isUseValueProvider","isUseExistingProvider","useExisting","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","ngFactoryDef","metadata","compileFactory","injectFn","Pipe","INJECTOR_SCOPE","NOT_YET","CIRCULAR","EMPTY_ARRAY$2","NULL_INJECTOR","getNullInjector","createInjector","defType","additionalProviders","R3Injector","records","Map","injectorDefTypes","Set","_destroyed","dedupStack","provider","processProvider","processInjectorType","makeRecord","record","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","tokens","defOrWrappedDef","parents","isDuplicate","importTypesWithProviders_1","imported","_loop_1","ngModule_1","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","isValueProvider","providerToFactory","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","has","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","isExistingProvider","isFactoryProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","INJECTOR_IMPL__POST_R3__","INJECTOR_IMPL","Injector","NULL","IDENT","EMPTY","CIRCULAR$1","MULTI_PROVIDER_FN","resolveProvider","computeDeps","providerDeps","staticError","useNew","multiProviderMixError","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","StaticInjector","_records","recursivelyProcessProviders","resolvedProvider","multiProvider","lastInjector","tryResolveToken","resolveToken","NO_NEW_LINE$1","depRecords","depRecord","childRecord","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","some","_createDependency","paramMetadata","Query","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","promises","templateUrl","styleUrls","styleOffset","styleUrl","fullyResolved","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","componentNeedsResolution","old","ɵɵallocHostVars","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","updateBinding","getBinding","bindingUpdated","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵattribute","interpolationV","isBindingUpdated","interpolation1","v0","suffix","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","ɵɵattributeInterpolate1","interpolatedValue","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","interpolated","markDirty","scheduleTick","res_1","nothingScheduled","clean","scheduler","playerHandler","flushPlayers","ɵɵcontainer","containerInternal","comment","ɵɵtemplate","attrsIndex","localRefsIndex","templateFirstCreatePass","tViewConsts","embeddedTViewNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","nextIndex","store","ɵɵreference","getContextLView","ɵɵdirectiveInject","ɵɵinjectAttribute","attrNameToInject","injectAttributeImpl","attrsLength","ɵɵinvalidFactory","ɵɵstyleSanitizer","ɵɵstyleProp","stylePropInternal","patchHostStylingFlag","isHostStyling","stylingProp","resolveStylePropValue","resolvedValue","ɵɵclassProp","updated","getClassesContext","getStylesContext","sanitizerToUse","applyStylingValueDirectly","getRenderer","stylingApply","ɵɵstyleMap","hasDirectiveInput","updateDirectiveInputValue","ɵɵclassMap","classMapInternal","valueHasChanged","applyStylingMapDirectly","bindingValueContainsInitial","hasInitial","cachedValueIndex","cachedValue","writeToAttrDirectly","checkIfExternallyModified","cssText","removeStylingValues","isStylingMapArray","initialStyles","newValue","inputName","normalizeStylingDirectiveInputValue","forceClassesAsString","flushStyling","classesContext","stylesContext","styleSanitizer","resetStylingState","resetCurrentStyleSanitizer","registerInitialStylingOnTNode","startIndex","hasAdditionalInitialStyling","attr","updateRawValueOnContext","getContext","allocTStylingContext","ɵɵelementStart","getNamespace","elementStartFirstCreatePass","elementStart","getElementDepthCount","increaseElementDepthCount","ɵɵelementEnd","decreaseElementDepthCount","elementEnd","setDirectiveStylingInput","ɵɵelement","ɵɵelementHostAttrs","hostElementIndex","lastAttrIndex","stylingInputs","ɵɵelementContainerStart","elementContainerStartFirstCreatePass","ɵɵelementContainerEnd","ɵɵelementContainer","ɵɵembeddedViewStart","viewBlockId","containerTNode","viewToRender","scanForView","startIdx","viewAtPositionId","setIsParent","getOrCreateEmbeddedTView","containerTViews","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","isTNodeDirectiveHost","processOutputs","lCleanupIndex","existingListener","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngLastListenerFn__","__ngNextListenerFn__","wrapListener","listen","addEventListener","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","level","nextContextImpl","walkUpViews","nestingLevel","matchingProjectionSlotIndex","projectionSlots","wildcardNgContentIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","slotIndex","delayProjection","setDelayProjection","ɵɵprojection","selectorIndex","ɵɵproperty","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","ɵɵtext","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵtextInterpolate2","ɵɵtextInterpolate3","ɵɵtextInterpolate4","ɵɵtextInterpolate5","ɵɵtextInterpolate6","ɵɵtextInterpolate7","ɵɵtextInterpolate8","ɵɵtextInterpolateV","ɵɵclassMapInterpolate1","ɵɵclassMapInterpolate2","ɵɵclassMapInterpolate3","ɵɵclassMapInterpolate4","ɵɵclassMapInterpolate5","ɵɵclassMapInterpolate6","ɵɵclassMapInterpolate7","ɵɵclassMapInterpolate8","ɵɵclassMapInterpolateV","ɵɵstylePropInterpolate1","valueSuffix","ɵɵstylePropInterpolate2","ɵɵstylePropInterpolate3","ɵɵstylePropInterpolate4","ɵɵstylePropInterpolate5","ɵɵstylePropInterpolate6","ɵɵstylePropInterpolate7","ɵɵstylePropInterpolate8","ɵɵstylePropInterpolateV","ɵɵhostProperty","ɵɵupdateSyntheticHostBinding","getComponent","loadLContext","getComponentAtNodeIndex","getContext$1","getViewComponent","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","lContext","listeners","firstParam","secondParam","name_1","listenerElement","useCaptureOrIndx","sortListeners","getDebugNode","debugNode","loadLContextFromNode","valueInLView","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","COMPILED","createRootComponentView","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","rootTNode","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","getSuperType","ɵɵInheritDefinitionFeature","definition","superType","superDef","writeableDef","maybeUnwrapEmpty","superHostBindings","inheritHostBindings","superViewQuery","superContentQueries","inheritViewQuery","inheritContentQueries","ngInherit","prevViewQuery","ctx","prevContentQueries","prevHostBindings","COPY_DIRECTIVE_FIELDS","COPY_COMPONENT_FIELDS","ɵɵCopyDefinitionFeature","defAny","COPY_DIRECTIVE_FIELDS_1","COPY_DIRECTIVE_FIELDS_1_1","field","COPY_COMPONENT_FIELDS_1","COPY_COMPONENT_FIELDS_1_1","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","lData","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","rootSelectorOrNode","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","nodeAtIndex","getOrCreateRenderer2","Sanitizer","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","expressionChangedAfterItHasBeenCheckedError","currValue","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","nonMinified","SCHEDULER","isBoundToModule","rootViewInjector","createChainedInjector","hostRNode","rootFlags","isIsolated","tElementNode","rootLView","nodesforSlot","ComponentRef$1","LocaleDataIndex","_rootLView","destroyCbs","u","localeEn","plural","abs","LOCALE_DATA","findLocaleData","locale","normalizedLocale","normalizeLocale","getLocaleData","parentLocale","getLocalePluralCase","ɵLocaleDataIndex","PluralCase","common","locales","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICU_PLACEHOLDERS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","parseInt","blocks","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","replaceNgsp","NGSP_UNICODE_REGEXP","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders","placeholder","templateId","isCloseTemplateTag","currentTemplateId","_type","_idx","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","markAsDetached","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","changeMask","shiftsCounter","ɵɵi18nExp","ɵɵi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","resolvedCase","getPluralCase","getLocaleId","LOCALE_ID","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","setLocaleId","localeId","assertSameOrNotExisting","incoming","registerNgModuleType","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","ngLocaleIdDef","getNgLocaleIdDef","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","ɵɵpureFunction2","ɵɵpureFunction3","ɵɵpureFunction4","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","ɵɵpipe","pipeName","getPipeDef$1","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","symbolIterator","_results","QueryList","symbol","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","setDirty","LQuery_","queryList","clone","LQueries_","tQueries","noOfInheritedQueries","viewLQueries","tQuery","getByIndex","indexInDeclarationView","dirtyQueriesWithMatches","getTQuery","TQueryMetadata_","predicate","isStatic","read","TQueries_","queriesForTemplateRef","childQueryIndex","tqueryClone","track","tquery","TQuery_","crossesNgTemplate","_appliesToNextNode","_declarationNodeIndex","isApplyingToNode","matchTNode","addMatch","matchTNodeWithReadOption","getIdxOfMatchingSelector","typePredicate","nodeMatchIdx","directiveOrProviderIdx","matchIdx","createResultForNode","matchingIdx","createResultByTNodeType","createSpecialToken","materializeViewResults","queryIndex","lQuery","tViewData","tQueryMatches","matchedNodeIdx","ɵɵqueryRefresh","collectQueryResults","lViewResults","embeddedLViews","i_2","ɵɵstaticViewQuery","descend","viewQueryInternal","ɵɵviewQuery","createTQuery","createLQuery","ɵɵcontentQuery","contentQueryInternal","ɵɵstaticContentQuery","saveContentQueryAndDirectiveIndex","tViewContentQueries","ɵɵloadQuery","loadQueryInternal","storeCleanupWithContext","ɵɵtemplateRefExtractor","ɵɵinjectPipeChangeDetectorRef","angularCoreEnv","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","allowDuplicateDeclarationsInRoot","expandModuleWithProviders","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","forceRecalc","isNgModule","scopes","exported","declared","importedType","importedScope","exportedType","exportedScope","isModuleWithProviders","compileComponent","ngComponentDef","maybeQueueResolutionOfComponentResources","addDirectiveFactoryDef","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","animations","interpolation","usesInheritance","addDirectiveDefToUndecoratedParents","hasSelectorScope","compileDirective","ngDirectiveDef","getDirectiveMetadata","sourceMapUrl","facade","Directive","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","usesLifecycleHook","splitByComma","viewQueries","objPrototype","shouldAddAbstractDirective","isQueryAnn","queriesMeta","annotations_1","ann","isInputAnnotation","convertToR3QueryMetadata","propertyName","static","piece","LIFECYCLE_HOOKS","hookName","metadataName","compilePipe","ngPipeDef","getPipeMetadata","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","SWITCH_COMPILE_PIPE","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","MissingTranslationStrategy","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","Console_Factory","LOCALE_ID$1","TRANSLATIONS","TRANSLATIONS_FORMAT","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","shouldCoalesceEventChangeDetection","hasPendingMacrotasks","hasPendingMicrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","lastRequestAnimationFrameId","nativeRequestAnimationFrame","getNativeRequestAnimationFrame","nativeCancelAnimationFrame","unpatchedRequestAnimationFrame","__symbol__","unpatchedCancelAnimationFrame","forkInnerZoneWithAngularBehavior","zone","maybeDelayChangeDetection","delayChangeDetectionForEvents","updateMicroTaskStatus","checkStable","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","_hasPendingMicrotasks","microTask","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","moduleFactory","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","part","resourceLoader","ResourceLoader","publishDefaultGlobalUtils$1","publishDefaultGlobalUtils__POST_R3__","isBoundToModule__POST_R3__","cf","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","ngZone","getNgZone","ngZoneOption","ngZoneEventCoalescing","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_d","_e","_f","attachView","ApplicationRef_Factory","NgModuleFactoryLoader","getModuleFactory__POST_R3__","getRegisteredNgModuleType","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","_config","path","loadAndCompile","exportName","System","import","checkNotEmpty","loadFactory","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","nativeNode","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","copyDomProperties","NodePrototype","descriptors","getOwnPropertyDescriptors","startsWith","isPrimitiveValue","collectPropertyBindings","bindingIndexes","metadataParts","lowercaseTNodeAttrs","eAttrs","_classesProxy","element_1","contains","toggle","children","getDebugNode__POST_R3__","_queryAllR3","invokedListeners","eventListeners","unwrappedListener","parentElement","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNativeNodeDescendants","getDebugNode$1","nodeOrContainer","_queryNodeChildrenInContainerR3","head","head_1","head_1_1","nextTNode","nextLView","childView","_nativeNodeToDebugNode","NG_DEBUG_PROPERTY","indexDebugNode","ViewAction","DebugNode","DebugElement","platformCore","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","getGlobalLocale","$localize","ApplicationModule","ApplicationModule_Factory","selectorOrNode","ns","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","createView","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","nodeLogger","refName","oldAction","oldView","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","asNativeElements","debugEls","destroyPlatform","enableProdMode","setTestabilityGetter","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵCodegenComponentFactoryResolver","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵComponentFactory","ɵConsole","ɵDEFAULT_LOCALE_ID","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵINJECTOR_IMPL__POST_R3__","ɵINJECTOR_SCOPE","ɵLifecycleHooksFeature","ɵNG_COMP_DEF","ɵNG_DIR_DEF","ɵNG_ELEMENT_ID","ɵNG_INJ_DEF","ɵNG_MOD_DEF","ɵNG_PIPE_DEF","ɵNG_PROV_DEF","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵNO_CHANGE","ɵNgModuleFactory","ɵNoopNgZone","ɵReflectionCapabilities","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵRender3NgModuleRef","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵallowSanitizationBypassAndThrow","ɵand","templateFactory","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵccf","createComponentFactory","ɵclearOverrides","ɵclearResolutionOfComponentResourcesQueue","ɵcmf","createNgModuleFactory","defFactory","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵcompileNgModuleFactory__POST_R3__","ɵcompilePipe","ɵcreateInjector","ɵcrt","createRendererType2","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdetectChanges","ɵdevModeEqual","ɵdid","outputDefs","ɵeld","namespaceAndName","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵfindLocaleData","ɵflushModuleScopingQueueAsMuchAsPossible","ɵgetComponentViewDefinitionFactory","ɵgetDebugNode__POST_R3__","ɵgetDirectives","ɵgetHostElement","ɵgetInjectableDef","ɵgetLContext","ɵgetLocalePluralCase","ɵgetModuleFactory__POST_R3__","ɵgetSanitizationBypassType","ɵglobal","ɵinitServicesIfNeeded","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵisBoundToModule__POST_R3__","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵisListLikeIterable","ɵisObservable","ɵisPromise","ɵivyEnabled","ɵlooseIdentical","ɵmakeDecorator","ɵmarkDirty","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵoverrideComponentView","ɵoverrideProvider","ɵpad","pureArrayDef","argCount","ɵpatchComponentDefWithScope","ɵpid","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵprd","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵpublishGlobalUtil","ɵqud","ɵregisterLocaleData","registerLocaleData","extraData","LocaleId","ExtraData","ɵregisterModuleFactory","registerModuleFactory","ɵregisterNgModuleType","ɵrenderComponent","renderComponent$1","ɵresetCompiledComponents","resetCompiledComponents","ɵresolveComponentResources","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵsetCurrentInjector","ɵsetDocument","setDocument","ɵsetLocaleId","ɵstore","ɵstringify","ɵted","textDef","staticText","ɵtransitiveScopesFor","ɵunregisterLocaleData","unregisterAllLocaleData","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵunwrapSafeValue","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags","ɵwhenRendered","whenRendered"],"mappings":"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","sourcesContent":["/**\n * @license Angular v9.0.0-rc.1+449.sha-6ba5fdc.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, (function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ɵprov` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            token: opts.token, providedIn: opts.providedIn || null, factory: opts.factory,\n            value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static injector def (`ɵinj`) field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has a `ɵprov` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the injectable def (`ɵprov`) for `type` in a way which is immune to accidentally reading\n     * inherited value.\n     *\n     * @param type A type which may have its own (non-inherited) `ɵprov`.\n     */\n    function getInjectableDef(type) {\n        return getOwnDefinition(type, type[NG_PROV_DEF]) ||\n            getOwnDefinition(type, type[NG_INJECTABLE_DEF]);\n    }\n    /**\n     * Return `def` only if it is defined directly on `type` and is not inherited from a base\n     * class of `type`.\n     *\n     * The function `Object.hasOwnProperty` is not sufficient to distinguish this case because in older\n     * browsers (e.g. IE10) static property inheritance is implemented by copying the properties.\n     *\n     * Instead, the definition's `token` is compared to the `type`, and if they don't match then the\n     * property was not defined directly on the type itself, and was likely inherited. The definition\n     * is only returned if the `type` matches the `def.token`.\n     */\n    function getOwnDefinition(type, def) {\n        return def && def.token === type ? def : null;\n    }\n    /**\n     * Read the injectable def (`ɵprov`) for `type` or read the `ɵprov` from one of its ancestors.\n     *\n     * @param type A type which may have `ɵprov`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ɵprov` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        var def = type && (type[NG_PROV_DEF] || type[NG_INJECTABLE_DEF]);\n        if (def) {\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + type.name + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + type.name + \"\\\" class.\"));\n            return def;\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Read the injector def type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have an injector def (`ɵinj`)\n     */\n    function getInjectorDef(type) {\n        return type && (type.hasOwnProperty(NG_INJ_DEF) || type.hasOwnProperty(NG_INJECTOR_DEF)) ?\n            type[NG_INJ_DEF] :\n            null;\n    }\n    var NG_PROV_DEF = getClosureSafeProperty({ ɵprov: getClosureSafeProperty });\n    var NG_INJ_DEF = getClosureSafeProperty({ ɵinj: getClosureSafeProperty });\n    // We need to keep these around so we can read off old defs if new defs are unavailable\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (Array.isArray(token)) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        return isForwardRef(type) ? type() : type;\n    }\n    /** Checks whether a function is wrapped by a `forwardRef`. */\n    function isForwardRef(fn) {\n        return typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Always use __globalThis if available, which is the spec-defined global variable across all\n    // environments, then fallback to __global first, because in Node tests both __global and\n    // __window may be defined and _global should be __global in that case.\n    var _global = __globalThis || __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"ChangeDetectorRef\"] = 2] = \"ChangeDetectorRef\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Invalid\"] = 3] = \"Invalid\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n    var R3FactoryTarget;\n    (function (R3FactoryTarget) {\n        R3FactoryTarget[R3FactoryTarget[\"Directive\"] = 0] = \"Directive\";\n        R3FactoryTarget[R3FactoryTarget[\"Component\"] = 1] = \"Component\";\n        R3FactoryTarget[R3FactoryTarget[\"Injectable\"] = 2] = \"Injectable\";\n        R3FactoryTarget[R3FactoryTarget[\"Pipe\"] = 3] = \"Pipe\";\n        R3FactoryTarget[R3FactoryTarget[\"NgModule\"] = 4] = \"NgModule\";\n    })(R3FactoryTarget || (R3FactoryTarget = {}));\n    var ViewEncapsulation;\n    (function (ViewEncapsulation) {\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(ViewEncapsulation || (ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMP_DEF = getClosureSafeProperty({ ɵcmp: getClosureSafeProperty });\n    var NG_DIR_DEF = getClosureSafeProperty({ ɵdir: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ɵpipe: getClosureSafeProperty });\n    var NG_MOD_DEF = getClosureSafeProperty({ ɵmod: getClosureSafeProperty });\n    var NG_LOC_ID_DEF = getClosureSafeProperty({ ɵloc: getClosureSafeProperty });\n    var NG_FACTORY_DEF = getClosureSafeProperty({ ɵfac: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var locationString = typeof location !== 'undefined' ? location.toString() : '';\n        var newCounters = {\n            namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,\n            firstCreatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n            styleMap: 0,\n            styleMapCacheMiss: 0,\n            classMap: 0,\n            classMapCacheMiss: 0,\n            styleProp: 0,\n            stylePropCacheMiss: 0,\n            classProp: 0,\n            classPropCacheMiss: 0,\n            flushStyling: 0,\n            classesApplied: 0,\n            stylesApplied: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        var allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;\n        _global['ngDevMode'] = allowNgDevModeTrue && newCounters;\n        return newCounters;\n    }\n    /**\n     * This function checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * `ɵɵdefineComponent` is guaranteed to have been called before any component template functions\n     * (and thus Ivy instructions), so a single initialization there is sufficient to ensure ngDevMode\n     * is defined for the entire instruction set.\n     *\n     * When using checking `ngDevMode` on toplevel, always init it before referencing it\n     * (e.g. `((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode())`), otherwise you can\n     *  get a `ReferenceError` like in https://github.com/angular/angular/issues/31595.\n     *\n     * Details on possible values for `ngDevMode` can be found on its docstring.\n     *\n     * NOTE:\n     * - changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    function initNgDevMode() {\n        // The below checks are to ensure that calling `initNgDevMode` multiple times does not\n        // reset the counters.\n        // If the `ngDevMode` is not an object, then it means we have not created the perf counters\n        // yet.\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (typeof ngDevMode !== 'object') {\n                ngDevModeResetPerfCounters();\n            }\n            return !!ngDevMode;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ɵprov = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ɵprov = ɵɵdefineInjectable({\n                    token: this,\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = {};\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(resolveForwardRef(token), flags);\n    }\n    /**\n     * Throws an error indicating that a factory function could not be generated by the compiler for a\n     * particular class.\n     *\n     * This instruction allows the actual error message to be optimized away when ngDevMode is turned\n     * off, saving bytes of generated code while still providing a good experience in dev mode.\n     *\n     * The name of the class is not mentioned here, but will be in the generated factory function name\n     * and thus in the stack trace.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinvalidFactoryDep(index) {\n        var msg = ngDevMode ?\n            \"This constructor is not compatible with Angular Dependency Injection because its dependency at index \" + index + \" of the parameter list is invalid.\\nThis can happen if the dependency type is a primitive like a string or if an ancestor of this class is missing an Angular decorator.\\n\\nPlease check that 1) the type for the parameter at index \" + index + \" is correct and 2) the correct Angular decorators are defined for this class and its ancestors.\" :\n            'invalid';\n        throw new Error(msg);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if (ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (Array.isArray(obj)) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n        'ɵɵinvalidFactoryDep': ɵɵinvalidFactoryDep,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = getFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array.\n     */\n    function flatten(list, dst) {\n        if (dst === undefined)\n            dst = list;\n        for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                // we need to inline it.\n                if (dst === list) {\n                    // Our assumption that the list was already flat was wrong and\n                    // we need to clone flat since we need to write to it.\n                    dst = list.slice(0, i);\n                }\n                flatten(item, dst);\n            }\n            else if (dst !== list) {\n                dst.push(item);\n            }\n        }\n        return dst;\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            return arr.pop();\n        }\n        else {\n            return arr.splice(index, 1)[0];\n        }\n    }\n    function newArray(size, value) {\n        var list = [];\n        for (var i = 0; i < size; i++) {\n            list.push(value);\n        }\n        return list;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNumber(actual, msg) {\n        if (typeof actual != 'number') {\n            throwError(msg);\n        }\n    }\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertSame(actual, expected, msg) {\n        if (actual !== expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThanOrEqual(actual, expected, msg) {\n        if (actual > expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node != null &&\n                node.constructor.name === 'WebWorkerRenderNode'), true, \"The provided value must be an instance of a DOM Node but got \" + stringify(node));\n    }\n    function assertDataInRange(arr, index) {\n        var maxLen = arr ? arr.length : 0;\n        assertLessThan(index, maxLen, \"Index expected to be less than \" + maxLen + \" but got \" + index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ɵcmp = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        // Initialize ngDevMode. This must be the first statement in ɵɵdefineComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            decls: componentDefinition.decls,\n            vars: componentDefinition.vars,\n            factory: null,\n            template: componentDefinition.template || null,\n            consts: componentDefinition.consts || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors || EMPTY_ARRAY,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n            tView: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ɵcmp;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    var autoRegisterModuleById = {};\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        if (def.id != null) {\n            noSideEffects(function () { autoRegisterModuleById[def.id] = def.type; });\n        }\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ɵdir = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ɵpipe = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            type: pipeDef.type,\n            name: pipeDef.name,\n            factory: null,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMP_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIR_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getFactoryDef(type, throwNotFound) {\n        var hasFactoryDef = type.hasOwnProperty(NG_FACTORY_DEF);\n        if (!hasFactoryDef && throwNotFound === true && ngDevMode) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have '\\u0275fac' property.\");\n        }\n        return hasFactoryDef ? type[NG_FACTORY_DEF] : null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MOD_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have '\\u0275mod' property.\");\n        }\n        return ngModuleDef;\n    }\n    function getNgLocaleIdDef(type) {\n        return type[NG_LOC_ID_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var CLEANUP = 7;\n    var CONTEXT = 8;\n    var INJECTOR$1 = 9;\n    var RENDERER_FACTORY = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var CHILD_HEAD = 13;\n    var CHILD_TAIL = 14;\n    var DECLARATION_VIEW = 15;\n    var DECLARATION_COMPONENT_VIEW = 16;\n    var DECLARATION_LCONTAINER = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 19;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT and NEXT are indices 3 and 4\n    // As we already have these constants in LView, we don't need to re-create them.\n    var MOVED_VIEWS = 5;\n    // T_HOST is index 6\n    // We already have this constants in LView, we don't need to re-create it.\n    var NATIVE = 7;\n    var VIEW_REFS = 8;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 9;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$1 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * True if `value` is `LView`.\n    * @param value wrapped value of `RNode`, `LView`, `LContainer`\n    */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 8 /* hasContentQuery */) !== 0;\n    }\n    function isComponentHost(tNode) {\n        return (tNode.flags & 2 /* isComponentHost */) === 2 /* isComponentHost */;\n    }\n    function isDirectiveHost(tNode) {\n        return (tNode.flags & 1 /* isDirectiveHost */) === 1 /* isDirectiveHost */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertTNodeForLView(tNode, lView) {\n        tNode.hasOwnProperty('tView_') && assertEqual(tNode.tView_, lView[TVIEW], 'This TNode does not belong to this LView.');\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ɵcmp\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ɵmod\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode, 'previousOrParentTNode should exist!');\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataNext(lView, index, arr) {\n        if (arr == null)\n            arr = lView;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n    function assertFirstCreatePass(tView, errMessage) {\n        assertEqual(tView.firstCreatePass, true, errMessage || 'Should only be called in first create pass.');\n    }\n    /**\n     * This is a basic sanity check that an object is probably a directive def. DirectiveDef is\n     * an interface, so we can't do a direct instanceof check.\n     */\n    function assertDirectiveDef(obj) {\n        if (obj.type === undefined || obj.selectors == undefined || obj.inputs === undefined) {\n            throwError(\"Expected a DirectiveDef/ComponentDef and this object does not seem to have the expected shape.\");\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var instructionState = {\n        lFrame: createLFrame(null),\n        bindingsEnabled: true,\n        elementExitFn: null,\n        checkNoChangesMode: false,\n    };\n    function getElementDepthCount() {\n        return instructionState.lFrame.elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        instructionState.lFrame.elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        instructionState.lFrame.elementDepthCount--;\n    }\n    function getCurrentDirectiveDef() {\n        return instructionState.lFrame.currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        instructionState.lFrame.currentDirectiveDef = def;\n    }\n    function getBindingsEnabled() {\n        return instructionState.bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        instructionState.bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        instructionState.bindingsEnabled = false;\n    }\n    /**\n     * Return the current LView.\n     *\n     * The return value can be `null` if the method is called outside of template. This can happen if\n     * directive is instantiated by module injector (rather than by node injector.)\n     */\n    function getLView() {\n        // TODO(misko): the return value should be `LView|null` but doing so breaks a lot of code.\n        var lFrame = instructionState.lFrame;\n        return lFrame === null ? null : lFrame.lView;\n    }\n    /**\n     * Determines whether or not a flag is currently set for the active element.\n     */\n    function hasActiveElementFlag(flag) {\n        return (instructionState.lFrame.selectedIndex & flag) === flag;\n    }\n    /**\n     * Sets a flag is for the active element.\n     */\n    function setActiveElementFlag(flag) {\n        instructionState.lFrame.selectedIndex |= flag;\n    }\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        setSelectedIndex(elementIndex === null ? -1 : elementIndex);\n        instructionState.lFrame.activeDirectiveId = 0;\n    }\n    function executeElementExitFn() {\n        instructionState.elementExitFn();\n        instructionState.lFrame.selectedIndex &= ~1 /* RunExitFn */;\n    }\n    /**\n     * Queues a function to be run once the element is \"exited\" in CD.\n     *\n     * Change detection will focus on an element either when the `advance()`\n     * instruction is called or when the template or host bindings instruction\n     * code is invoked. The element is then \"exited\" when the next element is\n     * selected or when change detection for the template or host bindings is\n     * complete. When this occurs (the element change operation) then an exit\n     * function will be invoked if it has been set. This function can be used\n     * to assign that exit function.\n     *\n     * @param fn\n     */\n    function setElementExitFn(fn) {\n        setActiveElementFlag(1 /* RunExitFn */);\n        if (instructionState.elementExitFn === null) {\n            instructionState.elementExitFn = fn;\n        }\n        ngDevMode &&\n            assertEqual(instructionState.elementExitFn, fn, 'Expecting to always get the same function');\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return instructionState.lFrame.activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        // Each directive gets a uniqueId value that is the same for both\n        // create and update calls when the hostBindings function is called. The\n        // directive uniqueId is not set anywhere--it is just incremented between\n        // each hostBindings call and is useful for helping instruction code\n        // uniquely determine which directive is currently active when executed.\n        instructionState.lFrame.activeDirectiveId += 1;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        instructionState.lFrame.contextLView = viewToRestore;\n    }\n    function getPreviousOrParentTNode() {\n        return instructionState.lFrame.previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode, _isParent) {\n        instructionState.lFrame.previousOrParentTNode = tNode;\n        instructionState.lFrame.isParent = _isParent;\n    }\n    function getIsParent() {\n        return instructionState.lFrame.isParent;\n    }\n    function setIsNotParent() {\n        instructionState.lFrame.isParent = false;\n    }\n    function setIsParent() {\n        instructionState.lFrame.isParent = true;\n    }\n    function getContextLView() {\n        return instructionState.lFrame.contextLView;\n    }\n    function getCheckNoChangesMode() {\n        return instructionState.checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        instructionState.checkNoChangesMode = mode;\n    }\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        var lFrame = instructionState.lFrame;\n        var index = lFrame.bindingRootIndex;\n        if (index === -1) {\n            var lView = lFrame.lView;\n            index = lFrame.bindingRootIndex = lView[TVIEW].bindingStartIndex;\n        }\n        return index;\n    }\n    function getBindingIndex() {\n        return instructionState.lFrame.bindingIndex;\n    }\n    function setBindingIndex(value) {\n        return instructionState.lFrame.bindingIndex = value;\n    }\n    function nextBindingIndex() {\n        return instructionState.lFrame.bindingIndex++;\n    }\n    function incrementBindingIndex(count) {\n        var lFrame = instructionState.lFrame;\n        var index = lFrame.bindingIndex;\n        lFrame.bindingIndex = lFrame.bindingIndex + count;\n        return index;\n    }\n    /**\n     * Set a new binding root index so that host template functions can execute.\n     *\n     * Bindings inside the host template are 0 index. But because we don't know ahead of time\n     * how many host bindings we have we can't pre-compute them. For this reason they are all\n     * 0 index and we just shift the root so that they match next available location in the LView.\n     * @param value\n     */\n    function setBindingRoot(value) {\n        instructionState.lFrame.bindingRootIndex = value;\n    }\n    function getCurrentQueryIndex() {\n        return instructionState.lFrame.currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        instructionState.lFrame.currentQueryIndex = value;\n    }\n    /**\n     * This is a light weight version of the `enterView` which is needed by the DI system.\n     * @param newView\n     * @param tNode\n     */\n    function enterDI(newView, tNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var newLFrame = allocLFrame();\n        instructionState.lFrame = newLFrame;\n        newLFrame.previousOrParentTNode = tNode;\n        newLFrame.lView = newView;\n        if (ngDevMode) {\n            // resetting for safety in dev mode only.\n            newLFrame.isParent = DEV_MODE_VALUE;\n            newLFrame.selectedIndex = DEV_MODE_VALUE;\n            newLFrame.contextLView = DEV_MODE_VALUE;\n            newLFrame.elementDepthCount = DEV_MODE_VALUE;\n            newLFrame.currentNamespace = DEV_MODE_VALUE;\n            newLFrame.currentSanitizer = DEV_MODE_VALUE;\n            newLFrame.currentDirectiveDef = DEV_MODE_VALUE;\n            newLFrame.activeDirectiveId = DEV_MODE_VALUE;\n            newLFrame.bindingRootIndex = DEV_MODE_VALUE;\n            newLFrame.currentQueryIndex = DEV_MODE_VALUE;\n        }\n    }\n    var DEV_MODE_VALUE = 'Value indicating that DI is trying to read value which it should not need to know about.';\n    /**\n     * This is a light weight version of the `leaveView` which is needed by the DI system.\n     *\n     * Because the implementation is same it is only an alias\n     */\n    var leaveDI = leaveView;\n    /**\n     * Swap the current lView with a new lView.\n     *\n     * For performance reasons we store the lView in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the lView for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New lView to become active\n     * @param tNode Element to which the View is a child of\n     * @returns the previously active lView;\n     */\n    function enterView(newView, tNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var newLFrame = allocLFrame();\n        instructionState.lFrame = newLFrame;\n        newLFrame.previousOrParentTNode = tNode;\n        newLFrame.isParent = true;\n        newLFrame.lView = newView;\n        newLFrame.selectedIndex = 0;\n        newLFrame.contextLView = newView;\n        newLFrame.elementDepthCount = 0;\n        newLFrame.currentNamespace = null;\n        newLFrame.currentSanitizer = null;\n        newLFrame.currentDirectiveDef = null;\n        newLFrame.activeDirectiveId = 0;\n        newLFrame.bindingRootIndex = -1;\n        newLFrame.bindingIndex = newView === null ? -1 : newView[TVIEW].bindingStartIndex;\n        newLFrame.currentQueryIndex = 0;\n    }\n    /**\n     * Allocates next free LFrame. This function tries to reuse the `LFrame`s to lower memory pressure.\n     */\n    function allocLFrame() {\n        var currentLFrame = instructionState.lFrame;\n        var childLFrame = currentLFrame === null ? null : currentLFrame.child;\n        var newLFrame = childLFrame === null ? createLFrame(currentLFrame) : childLFrame;\n        return newLFrame;\n    }\n    function createLFrame(parent) {\n        var lFrame = {\n            previousOrParentTNode: null,\n            isParent: true,\n            lView: null,\n            selectedIndex: 0,\n            contextLView: null,\n            elementDepthCount: 0,\n            currentNamespace: null,\n            currentSanitizer: null,\n            currentDirectiveDef: null,\n            activeDirectiveId: 0,\n            bindingRootIndex: -1,\n            bindingIndex: -1,\n            currentQueryIndex: 0,\n            parent: parent,\n            child: null,\n        };\n        parent !== null && (parent.child = lFrame); // link the new LFrame for reuse.\n        return lFrame;\n    }\n    function leaveViewProcessExit() {\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        leaveView();\n    }\n    function leaveView() {\n        instructionState.lFrame = instructionState.lFrame.parent;\n    }\n    function nextContextImpl(level) {\n        var contextLView = instructionState.lFrame.contextLView =\n            walkUpViews(level, instructionState.lFrame.contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return instructionState.lFrame.selectedIndex >> 1 /* Size */;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     *\n     * (Note that if an \"exit function\" was set earlier (via `setElementExitFn()`) then that will be\n     * run if and when the provided `index` value is different from the current selected index value.)\n     */\n    function setSelectedIndex(index) {\n        instructionState.lFrame.selectedIndex = index << 1 /* Size */;\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        instructionState.lFrame.currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        instructionState.lFrame.currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        namespaceHTMLInternal();\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     */\n    function namespaceHTMLInternal() {\n        instructionState.lFrame.currentNamespace = null;\n    }\n    function getNamespace() {\n        return instructionState.lFrame.currentNamespace;\n    }\n    function setCurrentStyleSanitizer(sanitizer) {\n        instructionState.lFrame.currentSanitizer = sanitizer;\n    }\n    function resetCurrentStyleSanitizer() {\n        setCurrentStyleSanitizer(null);\n    }\n    function getCurrentStyleSanitizer() {\n        // TODO(misko): This should throw when there is no LView, but it turns out we can get here from\n        // `NodeStyleDebug` hence we return `null`. This should be fixed\n        var lFrame = instructionState.lFrame;\n        return lFrame === null ? null : lFrame.currentSanitizer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView) {\n        ngDevMode && assertFirstCreatePass(tView);\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n            var directiveDef = tView.data[i];\n            if (directiveDef.afterContentInit) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n            }\n            if (directiveDef.afterContentChecked) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n            }\n            if (directiveDef.afterViewInit) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n            }\n            if (directiveDef.afterViewChecked) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n            }\n            if (directiveDef.onDestroy != null) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes pre-order check hooks ( OnChanges, DoChanges) given a view where all the init hooks were\n     * executed once. This is a light version of executeInitAndCheckPreOrderHooks where we can skip read\n     * / write of the init-hooks related flags.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeCheckHooks(lView, hooks, nodeIndex) {\n        callHooks(lView, hooks, 3 /* InitPhaseCompleted */, nodeIndex);\n    }\n    /**\n     * Executes post-order init and check hooks (one of AfterContentInit, AfterContentChecked,\n     * AfterViewInit, AfterViewChecked) given a view where there are pending init hooks to be executed.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param initPhase A phase for which hooks should be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeInitAndCheckHooks(lView, hooks, initPhase, nodeIndex) {\n        ngDevMode && assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init pre-order hooks should not be called more than once');\n        if ((lView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n            callHooks(lView, hooks, initPhase, nodeIndex);\n        }\n    }\n    function incrementInitPhaseFlags(lView, initPhase) {\n        ngDevMode &&\n            assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init hooks phase should not be incremented after all init hooks have been run.');\n        var flags = lView[FLAGS];\n        if ((flags & 3 /* InitPhaseStateMask */) === initPhase) {\n            flags &= 1023 /* IndexWithinInitPhaseReset */;\n            flags += 1 /* InitPhaseStateIncrementer */;\n            lView[FLAGS] = flags;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        ngDevMode && assertEqual(getCheckNoChangesMode(), false, 'Hooks should never be run in the check no changes mode.');\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        return obj instanceof NodeInjectorFactory;\n    }\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$2 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 5 /* IcuContainer */)\n            return 'IcuContainer';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Most of the use of `document` in Angular is from within the DI system so it is possible to simply\n     * inject the `DOCUMENT` token and are done.\n     *\n     * Ivy is special because it does not rely upon the DI and must get hold of the document some other\n     * way.\n     *\n     * The solution is to define `getDocument()` and `setDocument()` top-level functions for ivy.\n     * Wherever ivy needs the global document, it calls `getDocument()` instead.\n     *\n     * When running ivy outside of a browser environment, it is necessary to call `setDocument()` to\n     * tell ivy what the global `document` is.\n     *\n     * Angular does this for us in each of the standard platforms (`Browser`, `Server`, and `WebWorker`)\n     * by calling `setDocument()` when providing the `DOCUMENT` token.\n     */\n    var DOCUMENT = undefined;\n    /**\n     * Tell ivy what the `document` is for this platform.\n     *\n     * It is only necessary to call this if the current platform is not a browser.\n     *\n     * @param document The object representing the global `document` in this environment.\n     */\n    function setDocument(document) {\n        DOCUMENT = document;\n    }\n    /**\n     * Access the object that represents the `document` for this platform.\n     *\n     * Ivy calls this whenever it needs to access the `document` object.\n     * For example to create the renderer or to do sanitization.\n     */\n    function getDocument() {\n        if (DOCUMENT !== undefined) {\n            return DOCUMENT;\n        }\n        else if (typeof document !== 'undefined') {\n            return document;\n        }\n        // No \"document\" can be found. This should only happen if we are running ivy outside Angular and\n        // the current platform is not a browser. Since this is not a supported scenario at the moment\n        // this should not happen in Angular apps.\n        // Once we support running ivy outside of Angular we will need to publish `setDocument()` as a\n        // public API. Meanwhile we just return `undefined` and let the application fail.\n        return undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return getDocument(); }\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$3 = 1;\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     * @param renderer The renderer to be used\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(renderer, native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer.setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */ ||\n            marker === 6 /* I18n */;\n    }\n    function isAnimationProp(name) {\n        // Perf note: accessing charCodeAt to check for the first character of a string is faster as\n        // compared to accessing a character at index 0 (ex. name[0]). The main reason for this is that\n        // charCodeAt doesn't allocate memory to return a substring.\n        return name.charCodeAt(0) === 64; // @\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'function')\n            return value.name || value.toString();\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type.toString();\n        }\n        return renderStringify(value);\n    }\n    var defaultScheduler = (function () {\n        return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n            setTimeout // everything else\n        ).bind(_global);\n    })();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SafeValueImpl = /** @class */ (function () {\n        function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n            this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n        }\n        SafeValueImpl.prototype.toString = function () {\n            return \"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity +\n                \" (see http://g.co/ng/security#xss)\";\n        };\n        return SafeValueImpl;\n    }());\n    var SafeHtmlImpl = /** @class */ (function (_super) {\n        __extends(SafeHtmlImpl, _super);\n        function SafeHtmlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeHtmlImpl.prototype.getTypeName = function () { return \"HTML\" /* Html */; };\n        return SafeHtmlImpl;\n    }(SafeValueImpl));\n    var SafeStyleImpl = /** @class */ (function (_super) {\n        __extends(SafeStyleImpl, _super);\n        function SafeStyleImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeStyleImpl.prototype.getTypeName = function () { return \"Style\" /* Style */; };\n        return SafeStyleImpl;\n    }(SafeValueImpl));\n    var SafeScriptImpl = /** @class */ (function (_super) {\n        __extends(SafeScriptImpl, _super);\n        function SafeScriptImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeScriptImpl.prototype.getTypeName = function () { return \"Script\" /* Script */; };\n        return SafeScriptImpl;\n    }(SafeValueImpl));\n    var SafeUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeUrlImpl, _super);\n        function SafeUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeUrlImpl.prototype.getTypeName = function () { return \"URL\" /* Url */; };\n        return SafeUrlImpl;\n    }(SafeValueImpl));\n    var SafeResourceUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeResourceUrlImpl, _super);\n        function SafeResourceUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeResourceUrlImpl.prototype.getTypeName = function () { return \"ResourceURL\" /* ResourceUrl */; };\n        return SafeResourceUrlImpl;\n    }(SafeValueImpl));\n    function unwrapSafeValue(value) {\n        return value instanceof SafeValueImpl ? value.changingThisBreaksApplicationSecurity :\n            value;\n    }\n    function allowSanitizationBypassAndThrow(value, type) {\n        var actualType = getSanitizationBypassType(value);\n        if (actualType != null && actualType !== type) {\n            // Allow ResourceURLs in URL contexts, they are strictly more trusted.\n            if (actualType === \"ResourceURL\" /* ResourceUrl */ && type === \"URL\" /* Url */)\n                return true;\n            throw new Error(\"Required a safe \" + type + \", got a \" + actualType + \" (see http://g.co/ng/security#xss)\");\n        }\n        return actualType === type;\n    }\n    function getSanitizationBypassType(value) {\n        return value instanceof SafeValueImpl && value.getTypeName() || null;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return new SafeHtmlImpl(trustedHtml);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` hich has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return new SafeStyleImpl(trustedStyle);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return new SafeScriptImpl(trustedScript);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url`  which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return new SafeUrlImpl(trustedUrl);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return new SafeResourceUrlImpl(trustedResourceUrl);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    var MAP_BASED_ENTRY_PROP_NAME = '[MAP]';\n    var TEMPLATE_DIRECTIVE_INDEX = 0;\n    /**\n     * Default fallback value for a styling binding.\n     *\n     * A value of `null` is used here which signals to the styling algorithm that\n     * the styling value is not present. This way if there are no other values\n     * detected then it will be removed once the style/class property is dirty and\n     * diffed within the styling algorithm present in `flushStyling`.\n     */\n    var DEFAULT_BINDING_VALUE = null;\n    var DEFAULT_BINDING_INDEX = 0;\n    var DEFAULT_TOTAL_SOURCES = 1;\n    // The first bit value reflects a map-based binding value's bit.\n    // The reason why it's always activated for every entry in the map\n    // is so that if any map-binding values update then all other prop\n    // based bindings will pass the guard check automatically without\n    // any extra code or flags.\n    var DEFAULT_GUARD_MASK_VALUE = 1;\n    /**\n     * Creates a new instance of the `TStylingContext`.\n     *\n     * The `TStylingContext` is used as a manifest of all style or all class bindings on\n     * an element. Because it is a T-level data-structure, it is only created once per\n     * tNode for styles and for classes. This function allocates a new instance of a\n     * `TStylingContext` with the initial values (see `interfaces.ts` for more info).\n     */\n    function allocTStylingContext(initialStyling, hasDirectives) {\n        initialStyling = initialStyling || allocStylingMapArray(null);\n        return [\n            DEFAULT_TOTAL_SOURCES,\n            initialStyling,\n        ];\n    }\n    function allocStylingMapArray(value) {\n        return [value];\n    }\n    function hasConfig(tNode, flag) {\n        return (tNode.flags & flag) !== 0;\n    }\n    /**\n     * Determines whether or not to apply styles/classes directly or via context resolution.\n     *\n     * There are three cases that are matched here:\n     * 1. there are no directives present AND `ngDevMode` is falsy\n     * 2. the `firstUpdatePass` has not already run (which means that\n     *    there are more bindings to register and, therefore, direct\n     *    style/class application is not yet possible)\n     * 3. There are no collisions (i.e. properties with more than one binding) across multiple\n     *    sources (i.e. template + directive, directive + directive, directive + component)\n     */\n    function allowDirectStyling(tNode, isClassBased, firstUpdatePass) {\n        var allow = false;\n        // if no directives are present then we do not need populate a context at all. This\n        // is because duplicate prop bindings cannot be registered through the template. If\n        // and when this happens we can safely apply the value directly without context\n        // resolution...\n        var hasDirectives = hasConfig(tNode, 128 /* hasHostBindings */);\n        if (!hasDirectives) {\n            // `ngDevMode` is required to be checked here because tests/debugging rely on the context being\n            // populated. If things are in production mode then there is no need to build a context\n            // therefore the direct apply can be allowed (even on the first update).\n            allow = ngDevMode ? !firstUpdatePass : true;\n        }\n        else if (!firstUpdatePass) {\n            var duplicateStylingFlag = isClassBased ? 8192 /* hasDuplicateClassBindings */ : 262144 /* hasDuplicateStyleBindings */;\n            var hasDuplicates = hasConfig(tNode, duplicateStylingFlag);\n            var hasOnlyMapOrPropsFlag = isClassBased ? 1536 /* hasClassPropAndMapBindings */ :\n                49152 /* hasStylePropAndMapBindings */;\n            var hasOnlyMapsOrOnlyProps = (tNode.flags & hasOnlyMapOrPropsFlag) !== hasOnlyMapOrPropsFlag;\n            allow = !hasDuplicates && hasOnlyMapsOrOnlyProps;\n        }\n        return allow;\n    }\n    function patchConfig(tNode, flag) {\n        tNode.flags |= flag;\n    }\n    function getProp(context, index) {\n        return context[index + 3 /* PropOffset */];\n    }\n    function getPropConfig(context, index) {\n        return context[index + 0 /* ConfigOffset */] &\n            1 /* Mask */;\n    }\n    function isSanitizationRequired(context, index) {\n        return (getPropConfig(context, index) & 1 /* SanitizationRequired */) !==\n            0;\n    }\n    function getGuardMask(context, index, isHostBinding) {\n        var position = index + (isHostBinding ? 2 /* HostBindingsBitGuardOffset */ :\n            1 /* TemplateBitGuardOffset */);\n        return context[position];\n    }\n    function setGuardMask(context, index, maskValue, isHostBinding) {\n        var position = index + (isHostBinding ? 2 /* HostBindingsBitGuardOffset */ :\n            1 /* TemplateBitGuardOffset */);\n        context[position] = maskValue;\n    }\n    function getValuesCount(context) {\n        return getTotalSources(context) + 1;\n    }\n    function getTotalSources(context) {\n        return context[0 /* TotalSourcesPosition */];\n    }\n    function getBindingValue(context, index, offset) {\n        return context[index + 4 /* BindingsStartOffset */ + offset];\n    }\n    function getDefaultValue(context, index) {\n        return context[index + 4 /* BindingsStartOffset */ + getTotalSources(context)];\n    }\n    function setDefaultValue(context, index, value) {\n        return context[index + 4 /* BindingsStartOffset */ + getTotalSources(context)] =\n            value;\n    }\n    function setValue(data, bindingIndex, value) {\n        data[bindingIndex] = value;\n    }\n    function getValue(data, bindingIndex) {\n        return bindingIndex !== 0 ? data[bindingIndex] : null;\n    }\n    function getPropValuesStartPosition(context, tNode, isClassBased) {\n        var startPosition = 2 /* ValuesStartPosition */;\n        var flag = isClassBased ? 512 /* hasClassMapBindings */ : 16384 /* hasStyleMapBindings */;\n        if (hasConfig(tNode, flag)) {\n            startPosition += 4 /* BindingsStartOffset */ + getValuesCount(context);\n        }\n        return startPosition;\n    }\n    function hasValueChangedUnwrapSafeValue(a, b) {\n        return hasValueChanged(unwrapSafeValue(a), unwrapSafeValue(b));\n    }\n    function hasValueChanged(a, b) {\n        if (b === NO_CHANGE)\n            return false;\n        var compareValueA = Array.isArray(a) ? a[0 /* RawValuePosition */] : a;\n        var compareValueB = Array.isArray(b) ? b[0 /* RawValuePosition */] : b;\n        return !Object.is(compareValueA, compareValueB);\n    }\n    /**\n     * Determines whether the provided styling value is truthy or falsy.\n     */\n    function isStylingValueDefined(value) {\n        // the reason why null is compared against is because\n        // a CSS class value that is set to `false` must be\n        // respected (otherwise it would be treated as falsy).\n        // Empty string values are because developers usually\n        // set a value to an empty string to remove it.\n        return value != null && value !== '';\n    }\n    function concatString(a, b, separator) {\n        if (separator === void 0) { separator = ' '; }\n        return a + ((b.length && a.length) ? separator : '') + b;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (v) { return v.charAt(0) + '-' + v.charAt(1); }).toLowerCase();\n    }\n    /**\n     * Returns an instance of `StylingMapArray`.\n     *\n     * This function is designed to find an instance of `StylingMapArray` in case it is stored\n     * inside of an instance of `TStylingContext`. When a styling context is created it\n     * will copy over an initial styling values from the tNode (which are stored as a\n     * `StylingMapArray` on the `tNode.classes` or `tNode.styles` values).\n     */\n    function getStylingMapArray(value) {\n        return isStylingContext(value) ?\n            value[1 /* InitialStylingValuePosition */] :\n            value;\n    }\n    function isStylingContext(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) && value.length >= 2 /* ValuesStartPosition */ &&\n            typeof value[1] !== 'string';\n    }\n    function isStylingMapArray(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) &&\n            (typeof value[1 /* ValuesStartPosition */] === 'string');\n    }\n    function getInitialStylingValue(context) {\n        var map = getStylingMapArray(context);\n        return map && map[0 /* RawValuePosition */] || '';\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 16 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 32 /* hasStyleInput */) !== 0;\n    }\n    function getMapProp(map, index) {\n        return map[index + 0 /* PropOffset */];\n    }\n    var MAP_DIRTY_VALUE = typeof ngDevMode !== 'undefined' && ngDevMode ? {} : { MAP_DIRTY_VALUE: true };\n    function setMapAsDirty(map) {\n        map[0 /* RawValuePosition */] = MAP_DIRTY_VALUE;\n    }\n    function setMapValue(map, index, value) {\n        map[index + 1 /* ValueOffset */] = value;\n    }\n    function getMapValue(map, index) {\n        return map[index + 1 /* ValueOffset */];\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles, hyphenateProps) {\n        if (typeof styles == 'string')\n            return styles;\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var propLabel = hyphenateProps ? hyphenate(prop) : prop;\n                var value = styles[prop];\n                if (value !== null) {\n                    str = concatString(str, propLabel + \":\" + value, ';');\n                }\n            }\n        }\n        return str;\n    }\n    function isHostStylingActive(directiveOrSourceId) {\n        return directiveOrSourceId !== TEMPLATE_DIRECTIVE_INDEX;\n    }\n    /**\n     * Converts the provided styling map array into a string.\n     *\n     * Classes => `one two three`\n     * Styles => `prop:value; prop2:value2`\n     */\n    function stylingMapToString(map, isClassBased) {\n        var str = '';\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var prop = getMapProp(map, i);\n            var value = getMapValue(map, i);\n            var attrValue = concatString(prop, isClassBased ? '' : value, ':');\n            str = concatString(str, attrValue, isClassBased ? ' ' : '; ');\n        }\n        return str;\n    }\n    /**\n     * Converts the provided styling map array into a key value map.\n     */\n    function stylingMapToStringMap(map) {\n        var stringMap = {};\n        if (map) {\n            for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(map, i);\n                var value = getMapValue(map, i);\n                stringMap[prop] = value;\n            }\n        }\n        return stringMap;\n    }\n    /**\n     * Inserts the provided item into the provided styling array at the right spot.\n     *\n     * The `StylingMapArray` type is a sorted key/value array of entries. This means\n     * that when a new entry is inserted it must be placed at the right spot in the\n     * array. This function figures out exactly where to place it.\n     */\n    function addItemToStylingMap(stylingMapArr, prop, value, allowOverwrite) {\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            var propAtIndex = getMapProp(stylingMapArr, j);\n            if (prop <= propAtIndex) {\n                var applied = false;\n                if (propAtIndex === prop) {\n                    var valueAtIndex = stylingMapArr[j];\n                    if (allowOverwrite || !isStylingValueDefined(valueAtIndex)) {\n                        applied = true;\n                        setMapValue(stylingMapArr, j, value);\n                    }\n                }\n                else {\n                    applied = true;\n                    stylingMapArr.splice(j, 0, prop, value);\n                }\n                return applied;\n            }\n        }\n        stylingMapArr.push(prop, value);\n        return true;\n    }\n    /**\n     * Used to convert a {key:value} map into a `StylingMapArray` array.\n     *\n     * This function will either generate a new `StylingMapArray` instance\n     * or it will patch the provided `newValues` map value into an\n     * existing `StylingMapArray` value (this only happens if `bindingValue`\n     * is an instance of `StylingMapArray`).\n     *\n     * If a new key/value map is provided with an old `StylingMapArray`\n     * value then all properties will be overwritten with their new\n     * values or with `null`. This means that the array will never\n     * shrink in size (but it will also not be created and thrown\n     * away whenever the `{key:value}` map entries change).\n     */\n    function normalizeIntoStylingMap(bindingValue, newValues, normalizeProps) {\n        var stylingMapArr = Array.isArray(bindingValue) ? bindingValue : allocStylingMapArray(null);\n        stylingMapArr[0 /* RawValuePosition */] = newValues;\n        // because the new values may not include all the properties\n        // that the old ones had, all values are set to `null` before\n        // the new values are applied. This way, when flushed, the\n        // styling algorithm knows exactly what style/class values\n        // to remove from the element (since they are `null`).\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            setMapValue(stylingMapArr, j, null);\n        }\n        var props = null;\n        var map;\n        var allValuesTrue = false;\n        if (typeof newValues === 'string') { // [class] bindings allow string values\n            props = splitOnWhitespace(newValues);\n            allValuesTrue = props !== null;\n        }\n        else {\n            props = newValues ? Object.keys(newValues) : null;\n            map = newValues;\n        }\n        if (props) {\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var newProp = normalizeProps ? hyphenate(prop) : prop;\n                var value = allValuesTrue ? true : map[prop];\n                addItemToStylingMap(stylingMapArr, newProp, value, true);\n            }\n        }\n        return stylingMapArr;\n    }\n    function splitOnWhitespace(text) {\n        var array = null;\n        var length = text.length;\n        var start = 0;\n        var foundChar = false;\n        for (var i = 0; i < length; i++) {\n            var char = text.charCodeAt(i);\n            if (char <= 32 /*' '*/) {\n                if (foundChar) {\n                    if (array === null)\n                        array = [];\n                    array.push(text.substring(start, i));\n                    foundChar = false;\n                }\n                start = i + 1;\n            }\n            else {\n                foundChar = true;\n            }\n        }\n        if (foundChar) {\n            if (array === null)\n                array = [];\n            array.push(text.substring(start, length));\n            foundChar = false;\n        }\n        return array;\n    }\n    // TODO (matsko|AndrewKushnir): refactor this once we figure out how to generate separate\n    // `input('class') + classMap()` instructions.\n    function selectClassBasedInputName(inputs) {\n        return inputs.hasOwnProperty('class') ? 'class' : 'className';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstCreatePass, true, 'expected firstCreatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstCreatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentIndex = getParentInjectorIndex(parentLoc);\n            var parentLView = getParentInjectorView(parentLoc, hostView);\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, tView, token) {\n        bloomAdd(injectorIndex, tView, token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ɵcmp = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        if (attrNameToInject === 'class') {\n            return getInitialStylingValue(tNode.classes);\n        }\n        if (attrNameToInject === 'style') {\n            return getInitialStylingValue(tNode.styles);\n        }\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    while (i < attrsLength && typeof attrs[i] === 'string') {\n                        i++;\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode !== null) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                enterDI(lView, tNode);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    leaveDI();\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? lView[DECLARATION_COMPONENT_VIEW][T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponentHost(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(lView, currentTView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param tView The tView we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `LView` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(lView, tView, index, tNode) {\n        var value = lView[index];\n        var tData = tView.data;\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            enterDI(lView, tNode);\n            try {\n                value = lView[index] = factory.factory(undefined, tData, lView, tNode);\n                // This code path is hit for both directives and providers.\n                // For perf reasons, we want to avoid searching for hooks on providers.\n                // It does no harm to try (the hooks just won't exist), but the extra\n                // checks are unnecessary and this is a hot path. So we check to see\n                // if the index of the dependency is in the directive range for this\n                // tNode. If it's not, we know it's a provider and skip hook registration.\n                if (tView.firstCreatePass && index >= tNode.directiveStart) {\n                    ngDevMode && assertDirectiveDef(tData[index]);\n                    registerPreOrderHooks(index, tData[index], tView);\n                }\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                leaveDI();\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = ɵɵgetFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var factory = getFactoryDef(typeAny);\n        if (factory === null) {\n            var injectorDef = getInjectorDef(typeAny);\n            factory = injectorDef && injectorDef.factory;\n        }\n        return factory || null;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = proto[NG_FACTORY_DEF] || ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_TYPE = 'ngType';\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getType(error) {\n        return error[ERROR_TYPE];\n    }\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /* A pattern that matches safe srcset values */\n    var SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:attr|calc|var)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeHtml, \"HTML\" /* Html */)) {\n            return unwrapSafeValue(unsafeHtml);\n        }\n        return _sanitizeHtml(getDocument(), renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeStyle, \"Style\" /* Style */)) {\n            return unwrapSafeValue(unsafeStyle);\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeUrl, \"URL\" /* Url */)) {\n            return unwrapSafeValue(unsafeUrl);\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeResourceUrl, \"ResourceURL\" /* ResourceUrl */)) {\n            return unwrapSafeValue(unsafeResourceUrl);\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeScript, \"Script\" /* Script */)) {\n            return unwrapSafeValue(unsafeScript);\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value, mode) {\n        mode = mode || 3 /* ValidateAndSanitize */;\n        var doSanitizeValue = true;\n        if (mode & 1 /* ValidateProperty */) {\n            doSanitizeValue = prop === 'background-image' || prop === 'background' ||\n                prop === 'border-image' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image' || prop === 'clip-path';\n        }\n        if (mode & 2 /* SanitizeOnly */) {\n            return doSanitizeValue ? ɵɵsanitizeStyle(value) : unwrapSafeValue(value);\n        }\n        else {\n            return doSanitizeValue;\n        }\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!\n     */\n    /**\n     * Creates an `Array` construction with a given name. This is useful when\n     * looking for memory consumption to see what time of array it is.\n     *\n     *\n     * @param name Name to give to the constructor\n     * @returns A subclass of `Array` if possible. This can only be done in\n     *          environments which support `class` construct.\n     */\n    function createNamedArrayType(name) {\n        // This should never be called in prod mode, so let's verify that is the case.\n        if (ngDevMode) {\n            try {\n                // We need to do it this way so that TypeScript does not down-level the below code.\n                var FunctionConstructor = createNamedArrayType.constructor;\n                return (new FunctionConstructor('Array', \"return class \" + name + \" extends Array{}\"))(Array);\n            }\n            catch (e) {\n                // If it does not work just give up and fall back to regular Array.\n                return Array;\n            }\n        }\n        else {\n            throw new Error('Looks like we are in \\'prod mode\\', but we are creating a named Array type, which is wrong! Check your code');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)\n     * in same location in `LView`. This is because we don't want to pre-allocate space for it\n     * because the storage is sparse. This file contains utilities for dealing with such data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Returns `LView` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLView(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLView()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (typeof value[TYPE] === 'object')\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Returns `LContainer` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLContainer(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLContainer()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (value[TYPE] === true)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    /**\n     * Retrieve an `RNode` for a given `TNode` and `LView`.\n     *\n     * This function guarantees in dev mode to retrieve a non-null `RNode`.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNode(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        ngDevMode && assertDataInRange(lView, tNode.index);\n        var node = unwrapRNode(lView[tNode.index]);\n        ngDevMode && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);\n        return node;\n    }\n    /**\n     * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.\n     *\n     * Some `TNode`s don't have associated `RNode`s. For example `Projection`\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNodeOrNull(tNode, lView) {\n        var index = tNode.index;\n        if (index !== -1) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            var node = unwrapRNode(lView[index]);\n            ngDevMode && node !== null && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);\n            return node;\n        }\n        return null;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function load(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentLViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        ngDevMode && assertDataInRange(hostView, nodeIndex);\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME] || null;\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /** Returns a constant from `TConstants` instance. */\n    function getConstant(consts, index) {\n        return consts === null || index == null ? null : consts[index];\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n    function getLContainerActiveIndex(lContainer) {\n        return lContainer[ACTIVE_INDEX] >> 1 /* SHIFT */;\n    }\n    function setLContainerActiveIndex(lContainer, index) {\n        lContainer[ACTIVE_INDEX] = index << 1 /* SHIFT */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentLViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentLViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ɵcmp;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ɵdir;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNodeOrNull(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentLViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentLViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 2 /* isComponentHost */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 2 /* isComponentHost */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$4 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$5 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd = unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5;\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        // we lowercase the class attribute value to be able to match\n        // selectors without case-sensitivity\n        // (selectors are already in lowercase when generated)\n        var matchIndex = nodeClassAttrVal.toLowerCase().indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.classes) {\n                    if (!isCssClassMatching(getInitialStylingValue(tNode.classes), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        // we lowercase the attribute value to be able to match\n                        // selectors without case-sensitivity\n                        // (selectors are already in lowercase when generated)\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1].toLowerCase();\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * ===========================================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n     * Attributes\n     * ===========================================================================================================\n     * Inline + Projection     | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES                 | NO\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n     * ===========================================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */ || maybeAttrName === 6 /* I18n */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */ || maybeAttrName === 2 /* Styles */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    // these values will get filled in the very first time this is accessed...\n    var _state = {\n        element: null,\n        directiveIndex: -1,\n        sourceIndex: -1,\n        classesBitMask: -1,\n        classesIndex: -1,\n        stylesBitMask: -1,\n        stylesIndex: -1,\n        lastDirectClassMap: null,\n        lastDirectStyleMap: null,\n    };\n    var BIT_MASK_START_VALUE = 0;\n    // the `0` start value is reserved for [map]-based entries\n    var INDEX_START_VALUE = 1;\n    /**\n     * Returns (or instantiates) the styling state for the given element.\n     *\n     * Styling state is accessed and processed each time a style or class binding\n     * is evaluated.\n     *\n     * If and when the provided `element` doesn't match the current element in the\n     * state then this means that styling was recently cleared or the element has\n     * changed in change detection. In both cases the styling state is fully reset.\n     *\n     * If and when the provided `directiveIndex` doesn't match the current directive\n     * index in the state then this means that a new source has introduced itself into\n     * the styling code (or, in other words, another directive or component has started\n     * to apply its styling host bindings to the element).\n     */\n    function getStylingState(element, directiveIndex) {\n        if (_state.element !== element) {\n            _state.element = element;\n            _state.directiveIndex = directiveIndex;\n            _state.sourceIndex = directiveIndex === TEMPLATE_DIRECTIVE_INDEX ? 0 : 1;\n            _state.classesBitMask = BIT_MASK_START_VALUE;\n            _state.classesIndex = INDEX_START_VALUE;\n            _state.stylesBitMask = BIT_MASK_START_VALUE;\n            _state.stylesIndex = INDEX_START_VALUE;\n            _state.lastDirectClassMap = null;\n            _state.lastDirectStyleMap = null;\n        }\n        else if (_state.directiveIndex !== directiveIndex) {\n            _state.directiveIndex = directiveIndex;\n            _state.sourceIndex++;\n        }\n        return _state;\n    }\n    /**\n     * Clears the styling state so that it can be used by another element's styling code.\n     */\n    function resetStylingState() {\n        _state.element = null;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    var VALUE_IS_EXTERNALLY_MODIFIED = {};\n    /**\n     * --------\n     *\n     * This file contains the core logic for styling in Angular.\n     *\n     * All styling bindings (i.e. `[style]`, `[style.prop]`, `[class]` and `[class.name]`)\n     * will have their values be applied through the logic in this file.\n     *\n     * When a binding is encountered (e.g. `<div [style.width]=\"w\">`) then\n     * the binding data will be populated into a `TStylingContext` data-structure.\n     * There is only one `TStylingContext` per `TStylingNode` and each element instance\n     * will update its style/class binding values in concert with the styling\n     * context.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * The guard/update mask bit index location for map-based bindings.\n     *\n     * All map-based bindings (i.e. `[style]` and `[class]` )\n     */\n    var STYLING_INDEX_FOR_MAP_BINDING = 0;\n    /**\n     * Visits a class-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a class-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateClassViaContext(context, tNode, data, element, directiveIndex, prop, bindingIndex, value, forceUpdate, firstUpdatePass) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, directiveIndex);\n        var countIndex = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.classesIndex++;\n        // even if the initial value is a `NO_CHANGE` value (e.g. interpolation or [ngClass])\n        // then we still need to register the binding within the context so that the context\n        // is aware of the binding even if things change after the first update pass.\n        if (firstUpdatePass || value !== NO_CHANGE) {\n            var updated = updateBindingData(context, tNode, data, countIndex, state.sourceIndex, prop, bindingIndex, value, forceUpdate, false, firstUpdatePass, true);\n            if (updated || forceUpdate) {\n                // We flip the bit in the bitMask to reflect that the binding\n                // at the `index` slot has changed. This identifies to the flushing\n                // phase that the bindings for this particular CSS class need to be\n                // applied again because on or more of the bindings for the CSS\n                // class have changed.\n                state.classesBitMask |= 1 << countIndex;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Visits a style-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a style-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateStyleViaContext(context, tNode, data, element, directiveIndex, prop, bindingIndex, value, sanitizer, forceUpdate, firstUpdatePass) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, directiveIndex);\n        var countIndex = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.stylesIndex++;\n        // even if the initial value is a `NO_CHANGE` value (e.g. interpolation or [ngStyle])\n        // then we still need to register the binding within the context so that the context\n        // is aware of the binding even if things change after the first update pass.\n        if (firstUpdatePass || value !== NO_CHANGE) {\n            var sanitizationRequired = isMapBased ?\n                true :\n                (sanitizer ? sanitizer(prop, null, 1 /* ValidateProperty */) : false);\n            var updated = updateBindingData(context, tNode, data, countIndex, state.sourceIndex, prop, bindingIndex, value, forceUpdate, sanitizationRequired, firstUpdatePass, false);\n            if (updated || forceUpdate) {\n                // We flip the bit in the bitMask to reflect that the binding\n                // at the `index` slot has changed. This identifies to the flushing\n                // phase that the bindings for this particular property need to be\n                // applied again because on or more of the bindings for the CSS\n                // property have changed.\n                state.stylesBitMask |= 1 << countIndex;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Called each time a binding value has changed within the provided `TStylingContext`.\n     *\n     * This function is designed to be called from `updateStyleBinding` and `updateClassBinding`.\n     * If called during the first update pass, the binding will be registered in the context.\n     *\n     * This function will also update binding slot in the provided `LStylingData` with the\n     * new binding entry (if it has changed).\n     *\n     * @returns whether or not the binding value was updated in the `LStylingData`.\n     */\n    function updateBindingData(context, tNode, data, counterIndex, sourceIndex, prop, bindingIndex, value, forceUpdate, sanitizationRequired, firstUpdatePass, isClassBased) {\n        var hostBindingsMode = isHostStylingActive(sourceIndex);\n        var hostBindingsFlag = isClassBased ? 4096 /* hasHostClassBindings */ : 131072 /* hasHostStyleBindings */;\n        if (firstUpdatePass) {\n            // this will only happen during the first update pass of the\n            // context. The reason why we can't use `tView.firstCreatePass`\n            // here is because its not guaranteed to be true when the first\n            // update pass is executed (remember that all styling instructions\n            // are run in the update phase, and, as a result, are no more\n            // styling instructions that are run in the creation phase).\n            registerBinding(context, tNode, counterIndex, sourceIndex, prop, bindingIndex, sanitizationRequired, isClassBased);\n        }\n        var changed = forceUpdate || hasValueChanged(data[bindingIndex], value);\n        if (changed) {\n            setValue(data, bindingIndex, value);\n            var doSetValuesAsStale = hasConfig(tNode, hostBindingsFlag) && !hostBindingsMode && (prop ? !value : true);\n            if (doSetValuesAsStale) {\n                renderHostBindingsAsStale(context, tNode, data, prop, isClassBased);\n            }\n        }\n        return changed;\n    }\n    /**\n     * Iterates over all host-binding values for the given `prop` value in the context and sets their\n     * corresponding binding values to `null`.\n     *\n     * Whenever a template binding changes its value to `null`, all host-binding values should be\n     * re-applied\n     * to the element when the host bindings are evaluated. This may not always happen in the event\n     * that none of the bindings changed within the host bindings code. For this reason this function\n     * is expected to be called each time a template binding becomes falsy or when a map-based template\n     * binding changes.\n     */\n    function renderHostBindingsAsStale(context, tNode, data, prop, isClassBased) {\n        var valuesCount = getValuesCount(context);\n        var hostBindingsFlag = isClassBased ? 4096 /* hasHostClassBindings */ : 131072 /* hasHostStyleBindings */;\n        if (prop !== null && hasConfig(tNode, hostBindingsFlag)) {\n            var itemsPerRow = 4 /* BindingsStartOffset */ + valuesCount;\n            var i = 2 /* ValuesStartPosition */;\n            var found = false;\n            while (i < context.length) {\n                if (getProp(context, i) === prop) {\n                    found = true;\n                    break;\n                }\n                i += itemsPerRow;\n            }\n            if (found) {\n                var bindingsStart = i + 4 /* BindingsStartOffset */;\n                var valuesStart = bindingsStart + 1; // the first column is template bindings\n                var valuesEnd = bindingsStart + valuesCount - 1;\n                for (var i_1 = valuesStart; i_1 < valuesEnd; i_1++) {\n                    var bindingIndex = context[i_1];\n                    if (bindingIndex !== 0) {\n                        setValue(data, bindingIndex, null);\n                    }\n                }\n            }\n        }\n        var mapBindingsFlag = isClassBased ? 512 /* hasClassMapBindings */ : 16384 /* hasStyleMapBindings */;\n        if (hasConfig(tNode, mapBindingsFlag)) {\n            var bindingsStart = 2 /* ValuesStartPosition */ + 4 /* BindingsStartOffset */;\n            var valuesStart = bindingsStart + 1; // the first column is template bindings\n            var valuesEnd = bindingsStart + valuesCount - 1;\n            for (var i = valuesStart; i < valuesEnd; i++) {\n                var stylingMap = getValue(data, context[i]);\n                if (stylingMap) {\n                    setMapAsDirty(stylingMap);\n                }\n            }\n        }\n    }\n    /**\n     * Registers the provided binding (prop + bindingIndex) into the context.\n     *\n     * It is needed because it will either update or insert a styling property\n     * into the context at the correct spot.\n     *\n     * When called, one of two things will happen:\n     *\n     * 1) If the property already exists in the context then it will just add\n     *    the provided `bindingValue` to the end of the binding sources region\n     *    for that particular property.\n     *\n     *    - If the binding value is a number then it will be added as a new\n     *      binding index source next to the other binding sources for the property.\n     *\n     *    - Otherwise, if the binding value is a string/boolean/null type then it will\n     *      replace the default value for the property if the default value is `null`.\n     *\n     * 2) If the property does not exist then it will be inserted into the context.\n     *    The styling context relies on all properties being stored in alphabetical\n     *    order, so it knows exactly where to store it.\n     *\n     *    When inserted, a default `null` value is created for the property which exists\n     *    as the default value for the binding. If the bindingValue property is inserted\n     *    and it is either a string, number or null value then that will replace the default\n     *    value.\n     *\n     * Note that this function is also used for map-based styling bindings. They are treated\n     * much the same as prop-based bindings, but, their property name value is set as `[MAP]`.\n     */\n    function registerBinding(context, tNode, countId, sourceIndex, prop, bindingValue, sanitizationRequired, isClassBased) {\n        var found = false;\n        prop = prop || MAP_BASED_ENTRY_PROP_NAME;\n        var totalSources = getTotalSources(context);\n        // if a new source is detected then a new column needs to be allocated into\n        // the styling context. The column is basically a new allocation of binding\n        // sources that will be available to each property.\n        while (totalSources <= sourceIndex) {\n            addNewSourceColumn(context);\n            totalSources++;\n        }\n        var collisionFlag = isClassBased ? 8192 /* hasDuplicateClassBindings */ : 262144 /* hasDuplicateStyleBindings */;\n        var isBindingIndexValue = typeof bindingValue === 'number';\n        var entriesPerRow = 4 /* BindingsStartOffset */ + getValuesCount(context);\n        var i = 2 /* ValuesStartPosition */;\n        // all style/class bindings are sorted by property name\n        while (i < context.length) {\n            var p = getProp(context, i);\n            if (prop <= p) {\n                if (prop < p) {\n                    allocateNewContextEntry(context, i, prop, sanitizationRequired);\n                }\n                else if (isBindingIndexValue) {\n                    patchConfig(tNode, collisionFlag);\n                }\n                addBindingIntoContext(context, i, bindingValue, countId, sourceIndex);\n                found = true;\n                break;\n            }\n            i += entriesPerRow;\n        }\n        if (!found) {\n            allocateNewContextEntry(context, context.length, prop, sanitizationRequired);\n            addBindingIntoContext(context, i, bindingValue, countId, sourceIndex);\n        }\n    }\n    /**\n     * Inserts a new row into the provided `TStylingContext` and assigns the provided `prop` value as\n     * the property entry.\n     */\n    function allocateNewContextEntry(context, index, prop, sanitizationRequired) {\n        var config = sanitizationRequired ? 1 /* SanitizationRequired */ :\n            0 /* Default */;\n        context.splice(index, 0, config, // 1) config value\n        DEFAULT_GUARD_MASK_VALUE, // 2) template bit mask\n        DEFAULT_GUARD_MASK_VALUE, // 3) host bindings bit mask\n        prop);\n        index += 4; // the 4 values above\n        // 5...) default binding index for the template value\n        // depending on how many sources already exist in the context,\n        // multiple default index entries may need to be inserted for\n        // the new value in the context.\n        var totalBindingsPerEntry = getTotalSources(context);\n        for (var i = 0; i < totalBindingsPerEntry; i++) {\n            context.splice(index, 0, DEFAULT_BINDING_INDEX);\n            index++;\n        }\n        // 6) default binding value for the new entry\n        context.splice(index, 0, DEFAULT_BINDING_VALUE);\n    }\n    /**\n     * Inserts a new binding value into a styling property tuple in the `TStylingContext`.\n     *\n     * A bindingValue is inserted into a context during the first update pass\n     * of a template or host bindings function. When this occurs, two things\n     * happen:\n     *\n     * - If the bindingValue value is a number then it is treated as a bindingIndex\n     *   value (a index in the `LView`) and it will be inserted next to the other\n     *   binding index entries.\n     *\n     * - Otherwise the binding value will update the default value for the property\n     *   and this will only happen if the default value is `null`.\n     */\n    function addBindingIntoContext(context, index, bindingValue, bitIndex, sourceIndex) {\n        if (typeof bindingValue === 'number') {\n            var hostBindingsMode = isHostStylingActive(sourceIndex);\n            var cellIndex = index + 4 /* BindingsStartOffset */ + sourceIndex;\n            context[cellIndex] = bindingValue;\n            var updatedBitMask = getGuardMask(context, index, hostBindingsMode) | (1 << bitIndex);\n            setGuardMask(context, index, updatedBitMask, hostBindingsMode);\n        }\n        else if (bindingValue !== null && getDefaultValue(context, index) === null) {\n            setDefaultValue(context, index, bindingValue);\n        }\n    }\n    /**\n     * Registers a new column into the provided `TStylingContext`.\n     *\n     * If and when a new source is detected then a new column needs to\n     * be allocated into the styling context. The column is basically\n     * a new allocation of binding sources that will be available to each\n     * property.\n     *\n     * Each column that exists in the styling context resembles a styling\n     * source. A styling source an either be the template or one or more\n     * components or directives all containing styling host bindings.\n     */\n    function addNewSourceColumn(context) {\n        // we use -1 here because we want to insert right before the last value (the default value)\n        var insertOffset = 4 /* BindingsStartOffset */ + getValuesCount(context) - 1;\n        var index = 2 /* ValuesStartPosition */;\n        while (index < context.length) {\n            index += insertOffset;\n            context.splice(index++, 0, DEFAULT_BINDING_INDEX);\n            // the value was inserted just before the default value, but the\n            // next entry in the context starts just after it. Therefore++.\n            index++;\n        }\n        context[0 /* TotalSourcesPosition */]++;\n    }\n    /**\n     * Applies all pending style and class bindings to the provided element.\n     *\n     * This function will attempt to flush styling via the provided `classesContext`\n     * and `stylesContext` context values. This function is designed to be run from\n     * the internal `stylingApply` function (which is scheduled to run at the very\n     * end of change detection for an element if one or more style/class bindings\n     * were processed) and will rely on any state values that are set from when\n     * any of the styling bindings executed.\n     *\n     * This function is designed to be called twice: one when change detection has\n     * processed an element within the template bindings (i.e. just as `advance()`\n     * is called) and when host bindings have been processed. In both cases the\n     * styles and classes in both contexts will be applied to the element, but the\n     * algorithm will selectively decide which bindings to run depending on the\n     * columns in the context. The provided `directiveIndex` value will help the\n     * algorithm determine which bindings to apply: either the template bindings or\n     * the host bindings (see `applyStylingToElement` for more information).\n     *\n     * Note that once this function is called all temporary styling state data\n     * (i.e. the `bitMask` and `counter` values for styles and classes will be cleared).\n     */\n    function flushStyling(renderer, data, tNode, classesContext, stylesContext, element, directiveIndex, styleSanitizer, firstUpdatePass) {\n        ngDevMode && ngDevMode.flushStyling++;\n        var state = getStylingState(element, directiveIndex);\n        var hostBindingsMode = isHostStylingActive(state.sourceIndex);\n        if (stylesContext) {\n            firstUpdatePass && syncContextInitialStyling(stylesContext, tNode, false);\n            if (state.stylesBitMask !== 0) {\n                applyStylingViaContext(stylesContext, tNode, renderer, element, data, state.stylesBitMask, setStyle, styleSanitizer, hostBindingsMode, false);\n            }\n        }\n        if (classesContext) {\n            firstUpdatePass && syncContextInitialStyling(classesContext, tNode, true);\n            if (state.classesBitMask !== 0) {\n                applyStylingViaContext(classesContext, tNode, renderer, element, data, state.classesBitMask, setClass, null, hostBindingsMode, true);\n            }\n        }\n        resetStylingState();\n    }\n    /**\n     * Registers all static styling values into the context as default values.\n     *\n     * Static styles are stored on the `tNode.styles` and `tNode.classes`\n     * properties as instances of `StylingMapArray`. When an instance of\n     * `TStylingContext` is assigned to `tNode.styles` and `tNode.classes`\n     * then the existing initial styling values are copied into the the\n     * `InitialStylingValuePosition` slot.\n     *\n     * Because all static styles/classes are collected and registered on\n     * the initial styling array each time a directive is instantiated,\n     * the context may not yet know about the static values. When this\n     * function is called it will copy over all the static style/class\n     * values from the initial styling array into the context as default\n     * values for each of the matching entries in the context.\n     *\n     * Let's imagine the following example:\n     *\n     * ```html\n     * <div style=\"color:red\"\n     *     [style.color]=\"myColor\"\n     *     dir-that-has-static-height>\n     *   ...\n     * </div>\n     * ```\n     *\n     * When the code above is processed, the underlying element/styling\n     * instructions will create an instance of `TStylingContext` for\n     * the `tNode.styles` property. Here's what that looks like:\n     *\n     * ```typescript\n     * tNode.styles = [\n     *   // ...\n     *   // initial styles\n     *   ['color:red; height:200px', 'color', 'red', 'height', '200px'],\n     *\n     *   0, 0b1, 0b0, 'color', 20, null, // [style.color] binding\n     * ]\n     * ```\n     *\n     * After this function is called it will balance out the context with\n     * the static `color` and `height` values and set them as defaults within\n     * the context:\n     *\n     * ```typescript\n     * tNode.styles = [\n     *   // ...\n     *   // initial styles\n     *   ['color:red; height:200px', 'color', 'red', 'height', '200px'],\n     *\n     *   0, 0b1, 0b0, 'color', 20, 'red',\n     *   0, 0b0, 0b0, 'height', 0, '200px',\n     * ]\n     * ```\n     */\n    function syncContextInitialStyling(context, tNode, isClassBased) {\n        // the TStylingContext always has initial style/class values which are\n        // stored in styling array format.\n        updateInitialStylingOnContext(context, tNode, getStylingMapArray(context), isClassBased);\n    }\n    /**\n     * Registers all initial styling entries into the provided context.\n     *\n     * This function will iterate over all entries in the provided `initialStyling` ar}ray and register\n     * them as default (initial) values in the provided context. Initial styling values in a context are\n     * the default values that are to be applied unless overwritten by a binding.\n     *\n     * The reason why this function exists and isn't a part of the context construction is because\n     * host binding is evaluated at a later stage after the element is created. This means that\n     * if a directive or component contains any initial styling code (i.e. `<div class=\"foo\">`)\n     * then that initial styling data can only be applied once the styling for that element\n     * is first applied (at the end of the update phase). Once that happens then the context will\n     * update itself with the complete initial styling for the element.\n     */\n    function updateInitialStylingOnContext(context, tNode, initialStyling, isClassBased) {\n        // `-1` is used here because all initial styling data is not a apart\n        // of a binding (since it's static)\n        var COUNT_ID_FOR_STYLING = -1;\n        var hasInitialStyling = false;\n        for (var i = 1 /* ValuesStartPosition */; i < initialStyling.length; i += 2 /* TupleSize */) {\n            var value = getMapValue(initialStyling, i);\n            if (value) {\n                var prop = getMapProp(initialStyling, i);\n                registerBinding(context, tNode, COUNT_ID_FOR_STYLING, 0, prop, value, false, isClassBased);\n                hasInitialStyling = true;\n            }\n        }\n        if (hasInitialStyling) {\n            patchConfig(tNode, 256 /* hasInitialStyling */);\n        }\n    }\n    /**\n     * Runs through the provided styling context and applies each value to\n     * the provided element (via the renderer) if one or more values are present.\n     *\n     * This function will iterate over all entries present in the provided\n     * `TStylingContext` array (both prop-based and map-based bindings).-\n     *\n     * Each entry, within the `TStylingContext` array, is stored alphabetically\n     * and this means that each prop/value entry will be applied in order\n     * (so long as it is marked dirty in the provided `bitMask` value).\n     *\n     * If there are any map-based entries present (which are applied to the\n     * element via the `[style]` and `[class]` bindings) then those entries\n     * will be applied as well. However, the code for that is not a part of\n     * this function. Instead, each time a property is visited, then the\n     * code below will call an external function called `stylingMapsSyncFn`\n     * and, if present, it will keep the application of styling values in\n     * map-based bindings up to sync with the application of prop-based\n     * bindings.\n     *\n     * Visit `styling/map_based_bindings.ts` to learn more about how the\n     * algorithm works for map-based styling bindings.\n     *\n     * Note that this function is not designed to be called in isolation (use\n     * the `flushStyling` function so that it can call this function for both\n     * the styles and classes contexts).\n     */\n    function applyStylingViaContext(context, tNode, renderer, element, bindingData, bitMaskValue, applyStylingFn, sanitizer, hostBindingsMode, isClassBased) {\n        var bitMask = normalizeBitMaskValue(bitMaskValue);\n        var stylingMapsSyncFn = null;\n        var applyAllValues = false;\n        var mapBindingsFlag = isClassBased ? 512 /* hasClassMapBindings */ : 16384 /* hasStyleMapBindings */;\n        if (hasConfig(tNode, mapBindingsFlag)) {\n            stylingMapsSyncFn = getStylingMapsSyncFn();\n            var mapsGuardMask = getGuardMask(context, 2 /* ValuesStartPosition */, hostBindingsMode);\n            applyAllValues = (bitMask & mapsGuardMask) !== 0;\n        }\n        var valuesCount = getValuesCount(context);\n        var totalBindingsToVisit = 1;\n        var mapsMode = applyAllValues ? 1 /* ApplyAllValues */ : 0 /* TraverseValues */;\n        if (hostBindingsMode) {\n            mapsMode |= 8 /* RecurseInnerMaps */;\n            totalBindingsToVisit = valuesCount - 1;\n        }\n        var i = getPropValuesStartPosition(context, tNode, isClassBased);\n        while (i < context.length) {\n            var guardMask = getGuardMask(context, i, hostBindingsMode);\n            if (bitMask & guardMask) {\n                var valueApplied = false;\n                var prop = getProp(context, i);\n                var defaultValue = getDefaultValue(context, i);\n                // Part 1: Visit the `[styling.prop]` value\n                for (var j = 0; j < totalBindingsToVisit; j++) {\n                    var bindingIndex = getBindingValue(context, i, j);\n                    if (!valueApplied && bindingIndex !== 0) {\n                        var value = getValue(bindingData, bindingIndex);\n                        if (isStylingValueDefined(value)) {\n                            var checkValueOnly = hostBindingsMode && j === 0;\n                            if (!checkValueOnly) {\n                                var finalValue = sanitizer && isSanitizationRequired(context, i) ?\n                                    sanitizer(prop, value, 2 /* SanitizeOnly */) :\n                                    unwrapSafeValue(value);\n                                applyStylingFn(renderer, element, prop, finalValue, bindingIndex);\n                            }\n                            valueApplied = true;\n                        }\n                    }\n                    // Part 2: Visit the `[style]` or `[class]` map-based value\n                    if (stylingMapsSyncFn) {\n                        // determine whether or not to apply the target property or to skip it\n                        var mode = mapsMode | (valueApplied ? 4 /* SkipTargetProp */ :\n                            2 /* ApplyTargetProp */);\n                        // the first column in the context (when `j == 0`) is special-cased for\n                        // template bindings. If and when host bindings are being processed then\n                        // the first column will still be iterated over, but the values will only\n                        // be checked against (not applied). If and when this happens we need to\n                        // notify the map-based syncing code to know not to apply the values it\n                        // comes across in the very first map-based binding (which is also located\n                        // in column zero).\n                        if (hostBindingsMode && j === 0) {\n                            mode |= 16 /* CheckValuesOnly */;\n                        }\n                        var valueAppliedWithinMap = stylingMapsSyncFn(context, renderer, element, bindingData, j, applyStylingFn, sanitizer, mode, prop, defaultValue);\n                        valueApplied = valueApplied || valueAppliedWithinMap;\n                    }\n                }\n                // Part 3: apply the default value (e.g. `<div style=\"width:200\">` => `200px` gets applied)\n                // if the value has not yet been applied then a truthy value does not exist in the\n                // prop-based or map-based bindings code. If and when this happens, just apply the\n                // default value (even if the default value is `null`).\n                if (!valueApplied) {\n                    applyStylingFn(renderer, element, prop, defaultValue);\n                }\n            }\n            i += 4 /* BindingsStartOffset */ + valuesCount;\n        }\n        // the map-based styling entries may have not applied all their\n        // values. For this reason, one more call to the sync function\n        // needs to be issued at the end.\n        if (stylingMapsSyncFn) {\n            if (hostBindingsMode) {\n                mapsMode |= 16 /* CheckValuesOnly */;\n            }\n            stylingMapsSyncFn(context, renderer, element, bindingData, 0, applyStylingFn, sanitizer, mapsMode);\n        }\n    }\n    /**\n     * Applies the provided styling map to the element directly (without context resolution).\n     *\n     * This function is designed to be run from the styling instructions and will be called\n     * automatically. This function is intended to be used for performance reasons in the\n     * event that there is no need to apply styling via context resolution.\n     *\n     * This function has three different cases that can occur (for each item in the map):\n     *\n     * - Case 1: Attempt to apply the current value in the map to the element (if it's `non null`).\n     *\n     * - Case 2: If a map value fails to be applied then the algorithm will find a matching entry in\n     *           the initial values present in the context and attempt to apply that.\n     *\n     * - Default Case: If the initial value cannot be applied then a default value of `null` will be\n     *                 applied (which will remove the style/class value from the element).\n     *\n     * See `allowDirectStylingApply` to learn the logic used to determine whether any style/class\n     * bindings can be directly applied.\n     *\n     * @returns whether or not the styling map was applied to the element.\n     */\n    function applyStylingMapDirectly(renderer, context, tNode, element, data, bindingIndex, value, isClassBased, sanitizer, forceUpdate, bindingValueContainsInitial) {\n        var oldValue = getValue(data, bindingIndex);\n        if (forceUpdate || hasValueChanged(oldValue, value)) {\n            var hasInitial = hasConfig(tNode, 256 /* hasInitialStyling */);\n            var initialValue = hasInitial && !bindingValueContainsInitial ? getInitialStylingValue(context) : null;\n            setValue(data, bindingIndex, value);\n            // the cached value is the last snapshot of the style or class\n            // attribute value and is used in the if statement below to\n            // keep track of internal/external changes.\n            var cachedValueIndex = bindingIndex + 1;\n            var cachedValue = getValue(data, cachedValueIndex);\n            if (cachedValue === NO_CHANGE) {\n                cachedValue = initialValue;\n            }\n            cachedValue = typeof cachedValue !== 'string' ? '' : cachedValue;\n            // If a class/style value was modified externally then the styling\n            // fast pass cannot guarantee that the external values are retained.\n            // When this happens, the algorithm will bail out and not write to\n            // the style or className attribute directly.\n            var propBindingsFlag = isClassBased ? 1024 /* hasClassPropBindings */ : 32768 /* hasStylePropBindings */;\n            var writeToAttrDirectly = !hasConfig(tNode, propBindingsFlag);\n            if (writeToAttrDirectly &&\n                checkIfExternallyModified(element, cachedValue, isClassBased)) {\n                writeToAttrDirectly = false;\n                if (oldValue !== VALUE_IS_EXTERNALLY_MODIFIED) {\n                    // direct styling will reset the attribute entirely each time,\n                    // and, for this reason, if the algorithm decides it cannot\n                    // write to the class/style attributes directly then it must\n                    // reset all the previous style/class values before it starts\n                    // to apply values in the non-direct way.\n                    removeStylingValues(renderer, element, oldValue, isClassBased);\n                    // this will instruct the algorithm not to apply class or style\n                    // values directly anymore.\n                    setValue(data, cachedValueIndex, VALUE_IS_EXTERNALLY_MODIFIED);\n                }\n            }\n            if (writeToAttrDirectly) {\n                var initialValue_1 = hasInitial && !bindingValueContainsInitial ? getInitialStylingValue(context) : null;\n                var valueToApply = writeStylingValueDirectly(renderer, element, value, isClassBased, initialValue_1);\n                setValue(data, cachedValueIndex, valueToApply || null);\n            }\n            else {\n                var applyFn = isClassBased ? setClass : setStyle;\n                var map = normalizeIntoStylingMap(oldValue, value, !isClassBased);\n                var initialStyles = hasInitial ? getStylingMapArray(context) : null;\n                for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                    var prop = getMapProp(map, i);\n                    var value_1 = getMapValue(map, i);\n                    // case 1: apply the map value (if it exists)\n                    var applied = applyStylingValue(renderer, element, prop, value_1, applyFn, bindingIndex, sanitizer);\n                    // case 2: apply the initial value (if it exists)\n                    if (!applied && initialStyles) {\n                        applied = findAndApplyMapValue(renderer, element, applyFn, initialStyles, prop, bindingIndex, sanitizer);\n                    }\n                    // default case: apply `null` to remove the value\n                    if (!applied) {\n                        applyFn(renderer, element, prop, null, bindingIndex);\n                    }\n                }\n                var state = getStylingState(element, TEMPLATE_DIRECTIVE_INDEX);\n                if (isClassBased) {\n                    state.lastDirectClassMap = map;\n                }\n                else {\n                    state.lastDirectStyleMap = map;\n                }\n            }\n        }\n    }\n    function writeStylingValueDirectly(renderer, element, value, isClassBased, initialValue) {\n        var valueToApply;\n        if (isClassBased) {\n            valueToApply = typeof value === 'string' ? value : objectToClassName(value);\n            if (initialValue !== null) {\n                valueToApply = concatString(initialValue, valueToApply, ' ');\n            }\n            setClassName(renderer, element, valueToApply);\n        }\n        else {\n            valueToApply = forceStylesAsString(value, true);\n            if (initialValue !== null) {\n                valueToApply = initialValue + ';' + valueToApply;\n            }\n            setStyleAttr(renderer, element, valueToApply);\n        }\n        return valueToApply;\n    }\n    /**\n     * Applies the provided styling prop/value to the element directly (without context resolution).\n     *\n     * This function is designed to be run from the styling instructions and will be called\n     * automatically. This function is intended to be used for performance reasons in the\n     * event that there is no need to apply styling via context resolution.\n     *\n     * This function has four different cases that can occur:\n     *\n     * - Case 1: Apply the provided prop/value (style or class) entry to the element\n     *           (if it is `non null`).\n     *\n     * - Case 2: If value does not get applied (because its `null` or `undefined`) then the algorithm\n     *           will check to see if a styling map value was applied to the element as well just\n     *           before this (via `styleMap` or `classMap`). If and when a map is present then the\n      *          algorithm will find the matching property in the map and apply its value.\n      *\n     * - Case 3: If a map value fails to be applied then the algorithm will check to see if there\n     *           are any initial values present and attempt to apply a matching value based on\n     *           the target prop.\n     *\n     * - Default Case: If a matching initial value cannot be applied then a default value\n     *                 of `null` will be applied (which will remove the style/class value\n     *                 from the element).\n     *\n     * See `allowDirectStylingApply` to learn the logic used to determine whether any style/class\n     * bindings can be directly applied.\n     *\n     * @returns whether or not the prop/value styling was applied to the element.\n     */\n    function applyStylingValueDirectly(renderer, context, tNode, element, data, bindingIndex, prop, value, isClassBased, sanitizer) {\n        var applied = false;\n        if (hasValueChanged(data[bindingIndex], value)) {\n            setValue(data, bindingIndex, value);\n            var applyFn = isClassBased ? setClass : setStyle;\n            // case 1: apply the provided value (if it exists)\n            applied = applyStylingValue(renderer, element, prop, value, applyFn, bindingIndex, sanitizer);\n            // case 2: find the matching property in a styling map and apply the detected value\n            var mapBindingsFlag = isClassBased ? 512 /* hasClassMapBindings */ : 16384 /* hasStyleMapBindings */;\n            if (!applied && hasConfig(tNode, mapBindingsFlag)) {\n                var state = getStylingState(element, TEMPLATE_DIRECTIVE_INDEX);\n                var map = isClassBased ? state.lastDirectClassMap : state.lastDirectStyleMap;\n                applied = map ?\n                    findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex, sanitizer) :\n                    false;\n            }\n            // case 3: apply the initial value (if it exists)\n            if (!applied && hasConfig(tNode, 256 /* hasInitialStyling */)) {\n                var map = getStylingMapArray(context);\n                applied =\n                    map ? findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex) : false;\n            }\n            // default case: apply `null` to remove the value\n            if (!applied) {\n                applyFn(renderer, element, prop, null, bindingIndex);\n            }\n        }\n        return applied;\n    }\n    function applyStylingValue(renderer, element, prop, value, applyFn, bindingIndex, sanitizer) {\n        var valueToApply = unwrapSafeValue(value);\n        if (isStylingValueDefined(valueToApply)) {\n            valueToApply =\n                sanitizer ? sanitizer(prop, value, 3 /* ValidateAndSanitize */) : valueToApply;\n            applyFn(renderer, element, prop, valueToApply, bindingIndex);\n            return true;\n        }\n        return false;\n    }\n    function findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex, sanitizer) {\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var p = getMapProp(map, i);\n            if (p === prop) {\n                var valueToApply = getMapValue(map, i);\n                valueToApply = sanitizer ?\n                    sanitizer(prop, valueToApply, 3 /* ValidateAndSanitize */) :\n                    valueToApply;\n                applyFn(renderer, element, prop, valueToApply, bindingIndex);\n                return true;\n            }\n            if (p > prop) {\n                break;\n            }\n        }\n        return false;\n    }\n    function normalizeBitMaskValue(value) {\n        // if pass => apply all values (-1 implies that all bits are flipped to true)\n        if (value === true)\n            return -1;\n        // if pass => skip all values\n        if (value === false)\n            return 0;\n        // return the bit mask value as is\n        return value;\n    }\n    var _activeStylingMapApplyFn = null;\n    function getStylingMapsSyncFn() {\n        return _activeStylingMapApplyFn;\n    }\n    function setStylingMapsSyncFn(fn) {\n        _activeStylingMapApplyFn = fn;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     */\n    var setStyle = function (renderer, native, prop, value) {\n        if (renderer !== null) {\n            // Use `isStylingValueDefined` to account for falsy values that should be bound like 0.\n            if (isStylingValueDefined(value)) {\n                // opacity, z-index and flexbox all have number values\n                // and these need to be converted into strings so that\n                // they can be assigned properly.\n                value = value.toString();\n                ngDevMode && ngDevMode.rendererSetStyle++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase);\n                }\n                else {\n                    // The reason why native style may be `null` is either because\n                    // it's a container element or it's a part of a test\n                    // environment that doesn't have styling. In either\n                    // case it's safe not to apply styling to the element.\n                    var nativeStyle = native.style;\n                    if (nativeStyle != null) {\n                        nativeStyle.setProperty(prop, value);\n                    }\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveStyle++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase);\n                }\n                else {\n                    var nativeStyle = native.style;\n                    if (nativeStyle != null) {\n                        nativeStyle.removeProperty(prop);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Adds/removes the provided className value to the provided element.\n     */\n    var setClass = function (renderer, native, className, value) {\n        if (renderer !== null && className !== '') {\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.addClass(native, className);\n                }\n                else {\n                    // the reason why classList may be `null` is either because\n                    // it's a container element or it's a part of a test\n                    // environment that doesn't have styling. In either\n                    // case it's safe not to apply styling to the element.\n                    var classList = native.classList;\n                    if (classList != null) {\n                        classList.add(className);\n                    }\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.removeClass(native, className);\n                }\n                else {\n                    var classList = native.classList;\n                    if (classList != null) {\n                        classList.remove(className);\n                    }\n                }\n            }\n        }\n    };\n    var setClassName = function (renderer, native, className) {\n        if (renderer !== null) {\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(native, 'class', className);\n            }\n            else {\n                native.className = className;\n            }\n        }\n    };\n    var setStyleAttr = function (renderer, native, value) {\n        if (renderer !== null) {\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(native, 'style', value);\n            }\n            else {\n                native.setAttribute('style', value);\n            }\n        }\n    };\n    /**\n     * Iterates over all provided styling entries and renders them on the element.\n     *\n     * This function is used alongside a `StylingMapArray` entry. This entry is not\n     * the same as the `TStylingContext` and is only really used when an element contains\n     * initial styling values (e.g. `<div style=\"width:200px\">`), but no style/class bindings\n     * are present. If and when that happens then this function will be called to render all\n     * initial styling values on an element.\n     */\n    function renderStylingMap(renderer, element, stylingValues, isClassBased) {\n        var stylingMapArr = getStylingMapArray(stylingValues);\n        if (stylingMapArr) {\n            for (var i = 1 /* ValuesStartPosition */; i < stylingMapArr.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(stylingMapArr, i);\n                var value = getMapValue(stylingMapArr, i);\n                if (isClassBased) {\n                    setClass(renderer, element, prop, value, null);\n                }\n                else {\n                    setStyle(renderer, element, prop, value, null);\n                }\n            }\n        }\n    }\n    function objectToClassName(obj) {\n        var str = '';\n        if (obj) {\n            for (var key in obj) {\n                var value = obj[key];\n                if (value) {\n                    str += (str.length ? ' ' : '') + key;\n                }\n            }\n        }\n        return str;\n    }\n    /**\n     * Determines whether or not an element style/className value has changed since the last update.\n     *\n     * This function helps Angular determine if a style or class attribute value was\n     * modified by an external plugin or API outside of the style binding code. This\n     * means any JS code that adds/removes class/style values on an element outside\n     * of Angular's styling binding algorithm.\n     *\n     * @returns true when the value was modified externally.\n     */\n    function checkIfExternallyModified(element, cachedValue, isClassBased) {\n        // this means it was checked before and there is no reason\n        // to compare the style/class values again. Either that or\n        // web workers are being used.\n        if (_global.Node === 'undefined' || cachedValue === VALUE_IS_EXTERNALLY_MODIFIED)\n            return true;\n        // comparing the DOM value against the cached value is the best way to\n        // see if something has changed.\n        var currentValue = (isClassBased ? element.className : (element.style && element.style.cssText)) || '';\n        return currentValue !== (cachedValue || '');\n    }\n    /**\n     * Removes provided styling values from the element\n     */\n    function removeStylingValues(renderer, element, values, isClassBased) {\n        var arr;\n        if (isStylingMapArray(values)) {\n            arr = values;\n        }\n        else {\n            arr = normalizeIntoStylingMap(null, values, !isClassBased);\n        }\n        var applyFn = isClassBased ? setClass : setStyle;\n        for (var i = 1 /* ValuesStartPosition */; i < arr.length; i += 2 /* TupleSize */) {\n            var value = getMapValue(arr, i);\n            if (value) {\n                var prop = getMapProp(arr, i);\n                applyFn(renderer, element, prop, null);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Advances to an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n      *   if (rf & 1) {\n      *     text(0, 'Hello');\n      *     text(1, 'Goodbye')\n      *     element(2, 'div');\n      *   }\n      *   if (rf & 2) {\n      *     advance(2); // Advance twice to the <div>.\n      *     property('title', 'test');\n      *   }\n      *  }\n      * ```\n      * @param delta Number of elements to advance forwards by.\n      *\n      * @codeGenApi\n      */\n    function ɵɵadvance(delta) {\n        ngDevMode && assertGreaterThan(delta, 0, 'Can only advance forward');\n        selectIndexInternal(getLView(), getSelectedIndex() + delta, getCheckNoChangesMode());\n    }\n    /**\n     * Selects an element for later binding instructions.\n     * @deprecated No longer being generated, but still used in unit tests.\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        selectIndexInternal(getLView(), index, getCheckNoChangesMode());\n    }\n    function selectIndexInternal(lView, index, checkNoChangesMode) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n        if (!checkNoChangesMode) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = lView[TVIEW].preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, index);\n                }\n            }\n            else {\n                var preOrderHooks = lView[TVIEW].preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, index);\n                }\n            }\n        }\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵadvance` instruction.\n        setSelectedIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$6 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an instance of a `Proxy` and creates with an empty target object and binds it to the\n     * provided handler.\n     *\n     * The reason why this function exists is because IE doesn't support\n     * the `Proxy` class. For this reason an error must be thrown.\n     */\n    function createProxy(handler) {\n        var g = _global;\n        if (!g.Proxy) {\n            throw new Error('Proxy is not supported in this browser');\n        }\n        return new g.Proxy({}, handler);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * This file contains the algorithm logic for applying map-based bindings\n     * such as `[style]` and `[class]`.\n     *\n     * --------\n     */\n    /**\n     * Enables support for map-based styling bindings (e.g. `[style]` and `[class]` bindings).\n     */\n    function activateStylingMapFeature() {\n        setStylingMapsSyncFn(syncStylingMap);\n    }\n    /**\n     * Used to apply styling values presently within any map-based bindings on an element.\n     *\n     * Angular supports map-based styling bindings which can be applied via the\n     * `[style]` and `[class]` bindings which can be placed on any HTML element.\n     * These bindings can work independently, together or alongside prop-based\n     * styling bindings (e.g. `<div [style]=\"x\" [style.width]=\"w\">`).\n     *\n     * If a map-based styling binding is detected by the compiler, the following\n     * AOT code is produced:\n     *\n     * ```typescript\n     * styleMap(ctx.styles); // styles = {key:value}\n     * classMap(ctx.classes); // classes = {key:value}|string\n     * ```\n     *\n     * If and when either of the instructions above are evaluated, then the code\n     * present in this file is included into the bundle. The mechanism used, to\n     * activate support for map-based bindings at runtime is possible via the\n     * `activeStylingMapFeature` function (which is also present in this file).\n     *\n     * # The Algorithm\n     * Whenever a map-based binding updates (which is when the identity of the\n     * map-value changes) then the map is iterated over and a `StylingMapArray` array\n     * is produced. The `StylingMapArray` instance is stored in the binding location\n     * where the `BINDING_INDEX` is situated when the `styleMap()` or `classMap()`\n     * instruction were called. Once the binding changes, then the internal `bitMask`\n     * value is marked as dirty.\n     *\n     * Styling values are applied once CD exits the element (which happens when\n     * the `advance(n)` instruction is called or the template function exits). When\n     * this occurs, all prop-based bindings are applied. If a map-based binding is\n     * present then a special flushing function (called a sync function) is made\n     * available and it will be called each time a styling property is flushed.\n     *\n     * The flushing algorithm is designed to apply styling for a property (which is\n     * a CSS property or a className value) one by one. If map-based bindings\n     * are present, then the flushing algorithm will keep calling the maps styling\n     * sync function each time a property is visited. This way, the flushing\n     * behavior of map-based bindings will always be at the same property level\n     * as the current prop-based property being iterated over (because everything\n     * is alphabetically sorted).\n     *\n     * Let's imagine we have the following HTML template code:\n     *\n     * ```html\n     * <div [style]=\"{width:'100px', height:'200px', 'z-index':'10'}\"\n     *      [style.width.px]=\"200\">...</div>\n     * ```\n     *\n     * When CD occurs, both the `[style]` and `[style.width]` bindings\n     * are evaluated. Then when the styles are flushed on screen, the\n     * following operations happen:\n     *\n     * 1. `[style.width]` is attempted to be written to the element.\n     *\n     * 2.  Once that happens, the algorithm instructs the map-based\n     *     entries (`[style]` in this case) to \"catch up\" and apply\n     *     all values up to the `width` value. When this happens the\n     *     `height` value is applied to the element (since it is\n     *     alphabetically situated before the `width` property).\n     *\n     * 3. Since there are no more prop-based entries anymore, the\n     *    loop exits and then, just before the flushing ends, it\n     *    instructs all map-based bindings to \"finish up\" applying\n     *    their values.\n     *\n     * 4. The only remaining value within the map-based entries is\n     *    the `z-index` value (`width` got skipped because it was\n     *    successfully applied via the prop-based `[style.width]`\n     *    binding). Since all map-based entries are told to \"finish up\",\n     *    the `z-index` value is iterated over and it is then applied\n     *    to the element.\n     *\n     * The most important thing to take note of here is that prop-based\n     * bindings are evaluated in order alongside map-based bindings.\n     * This allows all styling across an element to be applied in O(n)\n     * time (a similar algorithm is that of the array merge algorithm\n     * in merge sort).\n     */\n    var syncStylingMap = function (context, renderer, element, data, sourceIndex, applyStylingFn, sanitizer, mode, targetProp, defaultValue) {\n        var targetPropValueWasApplied = false;\n        // once the map-based styling code is activate it is never deactivated. For this reason a\n        // check to see if the current styling context has any map based bindings is required.\n        var totalMaps = getValuesCount(context);\n        if (totalMaps) {\n            var runTheSyncAlgorithm = true;\n            var loopUntilEnd = !targetProp;\n            // If the code is told to finish up (run until the end), but the mode\n            // hasn't been flagged to apply values (it only traverses values) then\n            // there is no point in iterating over the array because nothing will\n            // be applied to the element.\n            if (loopUntilEnd && (mode & 1 /* ApplyAllValues */) === 0) {\n                runTheSyncAlgorithm = false;\n                targetPropValueWasApplied = true;\n            }\n            if (runTheSyncAlgorithm) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp || null, sourceIndex, defaultValue || null);\n            }\n            if (loopUntilEnd) {\n                resetSyncCursors();\n            }\n        }\n        return targetPropValueWasApplied;\n    };\n    /**\n     * Recursive function designed to apply map-based styling to an element one map at a time.\n     *\n     * This function is designed to be called from the `syncStylingMap` function and will\n     * apply map-based styling data one map at a time to the provided `element`.\n     *\n     * This function is recursive and it will call itself if a follow-up map value is to be\n     * processed. To learn more about how the algorithm works, see `syncStylingMap`.\n     */\n    function innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex, defaultValue) {\n        var totalMaps = getValuesCount(context) - 1; // maps have no default value\n        var mapsLimit = totalMaps - 1;\n        var recurseInnerMaps = currentMapIndex < mapsLimit && (mode & 8 /* RecurseInnerMaps */) !== 0;\n        var checkValuesOnly = (mode & 16 /* CheckValuesOnly */) !== 0;\n        if (checkValuesOnly) {\n            // inner modes do not check values ever (that can only happen\n            // when sourceIndex === 0)\n            mode &= ~16 /* CheckValuesOnly */;\n        }\n        var targetPropValueWasApplied = false;\n        if (currentMapIndex <= mapsLimit) {\n            var cursor = getCurrentSyncCursor(currentMapIndex);\n            var bindingIndex = getBindingValue(context, 2 /* ValuesStartPosition */, currentMapIndex);\n            var stylingMapArr = getValue(data, bindingIndex);\n            if (stylingMapArr) {\n                while (cursor < stylingMapArr.length) {\n                    var prop = getMapProp(stylingMapArr, cursor);\n                    var iteratedTooFar = targetProp && prop > targetProp;\n                    var isTargetPropMatched = !iteratedTooFar && prop === targetProp;\n                    var value = getMapValue(stylingMapArr, cursor);\n                    var valueIsDefined = isStylingValueDefined(value);\n                    // the recursive code is designed to keep applying until\n                    // it reaches or goes past the target prop. If and when\n                    // this happens then it will stop processing values, but\n                    // all other map values must also catch up to the same\n                    // point. This is why a recursive call is still issued\n                    // even if the code has iterated too far.\n                    var innerMode = iteratedTooFar ? mode : resolveInnerMapMode(mode, valueIsDefined, isTargetPropMatched);\n                    var innerProp = iteratedTooFar ? targetProp : prop;\n                    var valueApplied = recurseInnerMaps ?\n                        innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, innerMode, innerProp, currentMapIndex + 1, defaultValue) :\n                        false;\n                    if (iteratedTooFar) {\n                        if (!targetPropValueWasApplied) {\n                            targetPropValueWasApplied = valueApplied;\n                        }\n                        break;\n                    }\n                    if (!valueApplied && isValueAllowedToBeApplied(mode, isTargetPropMatched)) {\n                        valueApplied = true;\n                        if (!checkValuesOnly) {\n                            var useDefault = isTargetPropMatched && !valueIsDefined;\n                            var bindingIndexToApply = isTargetPropMatched ? bindingIndex : null;\n                            var finalValue = void 0;\n                            if (useDefault) {\n                                finalValue = defaultValue;\n                            }\n                            else {\n                                finalValue = sanitizer ?\n                                    sanitizer(prop, value, 3 /* ValidateAndSanitize */) :\n                                    (value ? unwrapSafeValue(value) : null);\n                            }\n                            applyStylingFn(renderer, element, prop, finalValue, bindingIndexToApply);\n                        }\n                    }\n                    targetPropValueWasApplied = valueApplied && isTargetPropMatched;\n                    cursor += 2 /* TupleSize */;\n                }\n                setCurrentSyncCursor(currentMapIndex, cursor);\n                // this is a fallback case in the event that the styling map is `null` for this\n                // binding but there are other map-based bindings that need to be evaluated\n                // afterwards. If the `prop` value is falsy then the intention is to cycle\n                // through all of the properties in the remaining maps as well. If the current\n                // styling map is too short then there are no values to iterate over. In either\n                // case the follow-up maps need to be iterated over.\n                if (recurseInnerMaps &&\n                    (stylingMapArr.length === 1 /* ValuesStartPosition */ || !targetProp)) {\n                    targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n                }\n            }\n            else if (recurseInnerMaps) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n            }\n        }\n        return targetPropValueWasApplied;\n    }\n    /**\n     * Used to determine the mode for the inner recursive call.\n     *\n     * If an inner map is iterated on then this is done so for one\n     * of two reasons:\n     *\n     * - value is being applied:\n     *   if the value is being applied from this current styling\n     *   map then there is no need to apply it in a deeper map\n     *   (i.e. the `SkipTargetProp` flag is set)\n     *\n     * - value is being not applied:\n     *   apply the value if it is found in a deeper map.\n     *   (i.e. the `SkipTargetProp` flag is unset)\n     *\n     * When these reasons are encountered the flags will for the\n     * inner map mode will be configured.\n     */\n    function resolveInnerMapMode(currentMode, valueIsDefined, isTargetPropMatched) {\n        var innerMode = currentMode;\n        // the statements below figures out whether or not an inner styling map\n        // is allowed to apply its value or not. The main thing to keep note\n        // of is that if the target prop isn't matched then its expected that\n        // all values before it are allowed to be applied so long as \"apply all values\"\n        // is set to true.\n        var applyAllValues = currentMode & 1 /* ApplyAllValues */;\n        var applyTargetProp = currentMode & 2 /* ApplyTargetProp */;\n        var allowInnerApply = !valueIsDefined && (isTargetPropMatched ? applyTargetProp : applyAllValues);\n        if (allowInnerApply) {\n            // case 1: set the mode to apply the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 2 /* ApplyTargetProp */;\n            innerMode &= ~4 /* SkipTargetProp */;\n        }\n        else {\n            // case 2: set the mode to skip the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 4 /* SkipTargetProp */;\n            innerMode &= ~2 /* ApplyTargetProp */;\n        }\n        return innerMode;\n    }\n    /**\n     * Decides whether or not a prop/value entry will be applied to an element.\n     *\n     * To determine whether or not a value is to be applied,\n     * the following procedure is evaluated:\n     *\n     * First check to see the current `mode` status:\n     *  1. If the mode value permits all props to be applied then allow.\n     *    - But do not allow if the current prop is set to be skipped.\n     *  2. Otherwise if the current prop is permitted then allow.\n     */\n    function isValueAllowedToBeApplied(mode, isTargetPropMatched) {\n        var doApplyValue = (mode & 1 /* ApplyAllValues */) !== 0;\n        if (!doApplyValue) {\n            if (mode & 2 /* ApplyTargetProp */) {\n                doApplyValue = isTargetPropMatched;\n            }\n        }\n        else if ((mode & 4 /* SkipTargetProp */) && isTargetPropMatched) {\n            doApplyValue = false;\n        }\n        return doApplyValue;\n    }\n    /**\n     * Used to keep track of concurrent cursor values for multiple map-based styling bindings present on\n     * an element.\n     */\n    var MAP_CURSORS = [];\n    /**\n     * Used to reset the state of each cursor value being used to iterate over map-based styling\n     * bindings.\n     */\n    function resetSyncCursors() {\n        for (var i = 0; i < MAP_CURSORS.length; i++) {\n            MAP_CURSORS[i] = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Returns an active cursor value at a given mapIndex location.\n     */\n    function getCurrentSyncCursor(mapIndex) {\n        if (mapIndex >= MAP_CURSORS.length) {\n            MAP_CURSORS.push(1 /* ValuesStartPosition */);\n        }\n        return MAP_CURSORS[mapIndex];\n    }\n    /**\n     * Sets a cursor value at a given mapIndex location.\n     */\n    function setCurrentSyncCursor(mapIndex, indexValue) {\n        MAP_CURSORS[mapIndex] = indexValue;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * Instantiates and attaches an instance of `TStylingContextDebug` to the provided context\n     */\n    function attachStylingDebugObject(context, tNode, isClassBased) {\n        var debug = new TStylingContextDebug(context, tNode, isClassBased);\n        attachDebugObject(context, debug);\n        return debug;\n    }\n    /**\n     * A human-readable debug summary of the styling data present within `TStylingContext`.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var TStylingContextDebug = /** @class */ (function () {\n        function TStylingContextDebug(context, _tNode, _isClassBased) {\n            this.context = context;\n            this._tNode = _tNode;\n            this._isClassBased = _isClassBased;\n        }\n        Object.defineProperty(TStylingContextDebug.prototype, \"config\", {\n            get: function () { return buildConfig(this._tNode, this._isClassBased); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TStylingContextDebug.prototype, \"entries\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context.\n             *\n             * See `DebugStylingContextEntry`.\n             */\n            get: function () {\n                var context = this.context;\n                var totalColumns = getValuesCount(context);\n                var entries = {};\n                var start = getPropValuesStartPosition(context, this._tNode, this._isClassBased);\n                var i = start;\n                while (i < context.length) {\n                    var prop = getProp(context, i);\n                    var templateBitMask = getGuardMask(context, i, false);\n                    var hostBindingsBitMask = getGuardMask(context, i, true);\n                    var defaultValue = getDefaultValue(context, i);\n                    var sanitizationRequired = isSanitizationRequired(context, i);\n                    var bindingsStartPosition = i + 4 /* BindingsStartOffset */;\n                    var sources = [];\n                    for (var j = 0; j < totalColumns; j++) {\n                        var bindingIndex = context[bindingsStartPosition + j];\n                        if (bindingIndex !== 0) {\n                            sources.push(bindingIndex);\n                        }\n                    }\n                    entries[prop] = {\n                        prop: prop,\n                        templateBitMask: templateBitMask,\n                        hostBindingsBitMask: hostBindingsBitMask,\n                        sanitizationRequired: sanitizationRequired,\n                        valuesCount: sources.length, defaultValue: defaultValue, sources: sources,\n                    };\n                    i += 4 /* BindingsStartOffset */ + totalColumns;\n                }\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Prints a detailed summary of each styling source grouped together with each binding index in\n         * the context.\n         */\n        TStylingContextDebug.prototype.printSources = function () {\n            var output = '\\n';\n            var context = this.context;\n            var prefix = this._isClassBased ? 'class' : 'style';\n            var bindingsBySource = [];\n            var totalColumns = getValuesCount(context);\n            var itemsPerRow = 4 /* BindingsStartOffset */ + totalColumns;\n            for (var i = 0; i < totalColumns; i++) {\n                var isDefaultColumn = i === totalColumns - 1;\n                var hostBindingsMode = i !== TEMPLATE_DIRECTIVE_INDEX;\n                var type = getTypeFromColumn(i, totalColumns);\n                var entries = [];\n                var j = 2 /* ValuesStartPosition */;\n                while (j < context.length) {\n                    var value = getBindingValue(context, j, i);\n                    if (isDefaultColumn || value > 0) {\n                        var bitMask = getGuardMask(context, j, hostBindingsMode);\n                        var bindingIndex = isDefaultColumn ? -1 : value;\n                        var prop = getProp(context, j);\n                        var isMapBased = prop === MAP_BASED_ENTRY_PROP_NAME;\n                        var binding = \"\" + prefix + (isMapBased ? '' : '.' + prop);\n                        entries.push({ binding: binding, value: value, bindingIndex: bindingIndex, bitMask: bitMask });\n                    }\n                    j += itemsPerRow;\n                }\n                bindingsBySource.push({ type: type, entries: entries.sort(function (a, b) { return a.bindingIndex - b.bindingIndex; }) });\n            }\n            bindingsBySource.forEach(function (entry) {\n                output += \"[\" + entry.type.toUpperCase() + \"]\\n\";\n                output += repeat('-', entry.type.length + 2) + '\\n';\n                var tab = '  ';\n                entry.entries.forEach(function (entry) {\n                    var isDefault = typeof entry.value !== 'number';\n                    var value = entry.value;\n                    if (!isDefault || value !== null) {\n                        output += tab + \"[\" + entry.binding + \"] = `\" + value + \"`\";\n                        output += '\\n';\n                    }\n                });\n                output += '\\n';\n            });\n            /* tslint:disable */\n            console.log(output);\n        };\n        /**\n         * Prints a detailed table of the entire styling context.\n         */\n        TStylingContextDebug.prototype.printTable = function () {\n            // IE (not Edge) is the only browser that doesn't support this feature. Because\n            // these debugging tools are not apart of the core of Angular (they are just\n            // extra tools) we can skip-out on older browsers.\n            if (!console.table) {\n                throw new Error('This feature is not supported in your browser');\n            }\n            var context = this.context;\n            var table = [];\n            var totalColumns = getValuesCount(context);\n            var itemsPerRow = 4 /* BindingsStartOffset */ + totalColumns;\n            var totalProps = Math.floor(context.length / itemsPerRow);\n            var i = 2 /* ValuesStartPosition */;\n            while (i < context.length) {\n                var prop = getProp(context, i);\n                var isMapBased = prop === MAP_BASED_ENTRY_PROP_NAME;\n                var entry = {\n                    prop: prop,\n                    'tpl mask': generateBitString(getGuardMask(context, i, false), isMapBased, totalProps),\n                    'host mask': generateBitString(getGuardMask(context, i, true), isMapBased, totalProps),\n                };\n                for (var j = 0; j < totalColumns; j++) {\n                    var key = getTypeFromColumn(j, totalColumns);\n                    var value = getBindingValue(context, i, j);\n                    entry[key] = value;\n                }\n                i += itemsPerRow;\n                table.push(entry);\n            }\n            /* tslint:disable */\n            console.table(table);\n        };\n        return TStylingContextDebug;\n    }());\n    function generateBitString(value, isMapBased, totalProps) {\n        if (isMapBased || value > 1) {\n            return \"0b\" + leftPad(value.toString(2), totalProps, '0');\n        }\n        return null;\n    }\n    function leftPad(value, max, pad) {\n        return repeat(pad, max - value.length) + value;\n    }\n    function getTypeFromColumn(index, totalColumns) {\n        if (index === TEMPLATE_DIRECTIVE_INDEX) {\n            return 'template';\n        }\n        else if (index === totalColumns - 1) {\n            return 'defaults';\n        }\n        else {\n            return \"dir #\" + index;\n        }\n    }\n    function repeat(c, times) {\n        var s = '';\n        for (var i = 0; i < times; i++) {\n            s += c;\n        }\n        return s;\n    }\n    /**\n     * A human-readable debug summary of the styling data present for a `DebugNode` instance.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var NodeStylingDebug = /** @class */ (function () {\n        function NodeStylingDebug(context, _tNode, _data, _isClassBased) {\n            this._tNode = _tNode;\n            this._data = _data;\n            this._isClassBased = _isClassBased;\n            this._sanitizer = null;\n            this._debugContext = isStylingContext(context) ?\n                new TStylingContextDebug(context, _tNode, _isClassBased) :\n                context;\n        }\n        Object.defineProperty(NodeStylingDebug.prototype, \"context\", {\n            get: function () { return this._debugContext; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Overrides the sanitizer used to process styles.\n         */\n        NodeStylingDebug.prototype.overrideSanitizer = function (sanitizer) { this._sanitizer = sanitizer; };\n        Object.defineProperty(NodeStylingDebug.prototype, \"summary\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context and\n             * what their runtime representation is.\n             *\n             * See `LStylingSummary`.\n             */\n            get: function () {\n                var entries = {};\n                var config = this.config;\n                var isClassBased = this._isClassBased;\n                var data = this._data;\n                // the direct pass code doesn't convert [style] or [class] values\n                // into StylingMapArray instances. For this reason, the values\n                // need to be converted ahead of time since the styling debug\n                // relies on context resolution to figure out what styling\n                // values have been added/removed on the element.\n                if (config.allowDirectStyling && config.hasMapBindings) {\n                    data = data.concat([]); // make a copy\n                    this._convertMapBindingsToStylingMapArrays(data);\n                }\n                this._mapValues(data, function (prop, value, bindingIndex) {\n                    entries[prop] = { prop: prop, value: value, bindingIndex: bindingIndex };\n                });\n                // because the styling algorithm runs into two different\n                // modes: direct and context-resolution, the output of the entries\n                // object is different because the removed values are not\n                // saved between updates. For this reason a proxy is created\n                // so that the behavior is the same when examining values\n                // that are no longer active on the element.\n                return createProxy({\n                    get: function (target, prop) {\n                        var value = entries[prop];\n                        if (!value) {\n                            value = {\n                                prop: prop,\n                                value: isClassBased ? false : null,\n                                bindingIndex: null,\n                            };\n                        }\n                        return value;\n                    },\n                    set: function (target, prop, value) { return false; },\n                    ownKeys: function () { return Object.keys(entries); },\n                    getOwnPropertyDescriptor: function (k) {\n                        // we use a special property descriptor here so that enumeration operations\n                        // such as `Object.keys` will work on this proxy.\n                        return {\n                            enumerable: true,\n                            configurable: true,\n                        };\n                    },\n                });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"config\", {\n            get: function () { return buildConfig(this._tNode, this._isClassBased); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"values\", {\n            /**\n             * Returns a key/value map of all the styles/classes that were last applied to the element.\n             */\n            get: function () {\n                var entries = {};\n                var config = this.config;\n                var data = this._data;\n                // the direct pass code doesn't convert [style] or [class] values\n                // into StylingMapArray instances. For this reason, the values\n                // need to be converted ahead of time since the styling debug\n                // relies on context resolution to figure out what styling\n                // values have been added/removed on the element.\n                if (config.allowDirectStyling && config.hasMapBindings) {\n                    data = data.concat([]); // make a copy\n                    this._convertMapBindingsToStylingMapArrays(data);\n                }\n                this._mapValues(data, function (prop, value) { entries[prop] = value; });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NodeStylingDebug.prototype._convertMapBindingsToStylingMapArrays = function (data) {\n            var context = this.context.context;\n            var limit = getPropValuesStartPosition(context, this._tNode, this._isClassBased);\n            for (var i = 2 /* ValuesStartPosition */ + 4 /* BindingsStartOffset */; i < limit; i++) {\n                var bindingIndex = context[i];\n                var bindingValue = bindingIndex !== 0 ? getValue(data, bindingIndex) : null;\n                if (bindingValue && !Array.isArray(bindingValue)) {\n                    var stylingMapArray = normalizeIntoStylingMap(null, bindingValue, !this._isClassBased);\n                    setValue(data, bindingIndex, stylingMapArray);\n                }\n            }\n        };\n        NodeStylingDebug.prototype._mapValues = function (data, fn) {\n            // there is no need to store/track an element instance. The\n            // element is only used when the styling algorithm attempts to\n            // style the value (and we mock out the stylingApplyFn anyway).\n            var mockElement = {};\n            var mapBindingsFlag = this._isClassBased ? 512 /* hasClassMapBindings */ : 16384 /* hasStyleMapBindings */;\n            var hasMaps = hasConfig(this._tNode, mapBindingsFlag);\n            if (hasMaps) {\n                activateStylingMapFeature();\n            }\n            var mapFn = function (renderer, element, prop, value, bindingIndex) { return fn(prop, value, bindingIndex || null); };\n            var sanitizer = this._isClassBased ? null : (this._sanitizer || getCurrentStyleSanitizer());\n            // run the template bindings\n            applyStylingViaContext(this.context.context, this._tNode, null, mockElement, data, true, mapFn, sanitizer, false, this._isClassBased);\n            // and also the host bindings\n            applyStylingViaContext(this.context.context, this._tNode, null, mockElement, data, true, mapFn, sanitizer, true, this._isClassBased);\n        };\n        return NodeStylingDebug;\n    }());\n    function buildConfig(tNode, isClassBased) {\n        var hasMapBindings = hasConfig(tNode, isClassBased ? 512 /* hasClassMapBindings */ : 16384 /* hasStyleMapBindings */);\n        var hasPropBindings = hasConfig(tNode, isClassBased ? 1024 /* hasClassPropBindings */ : 32768 /* hasStylePropBindings */);\n        var hasCollisions = hasConfig(tNode, isClassBased ? 8192 /* hasDuplicateClassBindings */ : 262144 /* hasDuplicateStyleBindings */);\n        var hasTemplateBindings = hasConfig(tNode, isClassBased ? 2048 /* hasTemplateClassBindings */ : 65536 /* hasTemplateStyleBindings */);\n        var hasHostBindings = hasConfig(tNode, isClassBased ? 4096 /* hasHostClassBindings */ : 131072 /* hasHostStyleBindings */);\n        // `firstTemplatePass` here is false because the context has already been constructed\n        // directly within the behavior of the debugging tools (outside of style/class debugging,\n        // the context is constructed during the first template pass).\n        var allowDirectStyling$1 = allowDirectStyling(tNode, isClassBased, false);\n        return {\n            hasMapBindings: hasMapBindings,\n            hasPropBindings: hasPropBindings,\n            hasCollisions: hasCollisions,\n            hasTemplateBindings: hasTemplateBindings,\n            hasHostBindings: hasHostBindings,\n            allowDirectStyling: allowDirectStyling$1,\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_DEV_MODE = ((typeof ngDevMode === 'undefined' || !!ngDevMode) && initNgDevMode());\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    var LVIEW_COMPONENT_CACHE;\n    var LVIEW_EMBEDDED_CACHE;\n    var LVIEW_ROOT;\n    /**\n     * This function clones a blueprint and creates LView.\n     *\n     * Simple slice will keep the same type, and we need it to be LView\n     */\n    function cloneToLViewFromTViewBlueprint(tView) {\n        var debugTView = tView;\n        var lView = getLViewToClone(debugTView.type, tView.template && tView.template.name);\n        return lView.concat(tView.blueprint);\n    }\n    function getLViewToClone(type, name) {\n        switch (type) {\n            case 0 /* Root */:\n                if (LVIEW_ROOT === undefined)\n                    LVIEW_ROOT = new (createNamedArrayType('LRootView'))();\n                return LVIEW_ROOT;\n            case 1 /* Component */:\n                if (LVIEW_COMPONENT_CACHE === undefined)\n                    LVIEW_COMPONENT_CACHE = new Map();\n                var componentArray = LVIEW_COMPONENT_CACHE.get(name);\n                if (componentArray === undefined) {\n                    componentArray = new (createNamedArrayType('LComponentView' + nameSuffix(name)))();\n                    LVIEW_COMPONENT_CACHE.set(name, componentArray);\n                }\n                return componentArray;\n            case 2 /* Embedded */:\n                if (LVIEW_EMBEDDED_CACHE === undefined)\n                    LVIEW_EMBEDDED_CACHE = new Map();\n                var embeddedArray = LVIEW_EMBEDDED_CACHE.get(name);\n                if (embeddedArray === undefined) {\n                    embeddedArray = new (createNamedArrayType('LEmbeddedView' + nameSuffix(name)))();\n                    LVIEW_EMBEDDED_CACHE.set(name, embeddedArray);\n                }\n                return embeddedArray;\n        }\n        throw new Error('unreachable code');\n    }\n    function nameSuffix(text) {\n        if (text == null)\n            return '';\n        var index = text.lastIndexOf('_Template');\n        return '_' + (index === -1 ? text : text.substr(0, index));\n    }\n    /**\n     * This class is a debug version of Object literal so that we can have constructor name show up\n     * in\n     * debug tools in ngDevMode.\n     */\n    var TViewConstructor = /** @class */ (function () {\n        function TView(type, //\n        id, //\n        blueprint, //\n        template, //\n        queries, //\n        viewQuery, //\n        node, //\n        data, //\n        bindingStartIndex, //\n        expandoStartIndex, //\n        expandoInstructions, //\n        firstCreatePass, //\n        firstUpdatePass, //\n        staticViewQueries, //\n        staticContentQueries, //\n        preOrderHooks, //\n        preOrderCheckHooks, //\n        contentHooks, //\n        contentCheckHooks, //\n        viewHooks, //\n        viewCheckHooks, //\n        destroyHooks, //\n        cleanup, //\n        contentQueries, //\n        components, //\n        directiveRegistry, //\n        pipeRegistry, //\n        firstChild, //\n        schemas, //\n        consts) {\n            this.type = type;\n            this.id = id;\n            this.blueprint = blueprint;\n            this.template = template;\n            this.queries = queries;\n            this.viewQuery = viewQuery;\n            this.node = node;\n            this.data = data;\n            this.bindingStartIndex = bindingStartIndex;\n            this.expandoStartIndex = expandoStartIndex;\n            this.expandoInstructions = expandoInstructions;\n            this.firstCreatePass = firstCreatePass;\n            this.firstUpdatePass = firstUpdatePass;\n            this.staticViewQueries = staticViewQueries;\n            this.staticContentQueries = staticContentQueries;\n            this.preOrderHooks = preOrderHooks;\n            this.preOrderCheckHooks = preOrderCheckHooks;\n            this.contentHooks = contentHooks;\n            this.contentCheckHooks = contentCheckHooks;\n            this.viewHooks = viewHooks;\n            this.viewCheckHooks = viewCheckHooks;\n            this.destroyHooks = destroyHooks;\n            this.cleanup = cleanup;\n            this.contentQueries = contentQueries;\n            this.components = components;\n            this.directiveRegistry = directiveRegistry;\n            this.pipeRegistry = pipeRegistry;\n            this.firstChild = firstChild;\n            this.schemas = schemas;\n            this.consts = consts;\n        }\n        Object.defineProperty(TView.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                processTNodeChildren(this.firstChild, buf);\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TView;\n    }());\n    var TNodeConstructor = /** @class */ (function () {\n        function TNode(tView_, //\n        type, //\n        index, //\n        injectorIndex, //\n        directiveStart, //\n        directiveEnd, //\n        propertyBindings, //\n        flags, //\n        providerIndexes, //\n        tagName, //\n        attrs, //\n        localNames, //\n        initialInputs, //\n        inputs, //\n        outputs, //\n        tViews, //\n        next, //\n        projectionNext, //\n        child, //\n        parent, //\n        projection, //\n        styles, //\n        classes) {\n            this.tView_ = tView_;\n            this.type = type;\n            this.index = index;\n            this.injectorIndex = injectorIndex;\n            this.directiveStart = directiveStart;\n            this.directiveEnd = directiveEnd;\n            this.propertyBindings = propertyBindings;\n            this.flags = flags;\n            this.providerIndexes = providerIndexes;\n            this.tagName = tagName;\n            this.attrs = attrs;\n            this.localNames = localNames;\n            this.initialInputs = initialInputs;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.tViews = tViews;\n            this.next = next;\n            this.projectionNext = projectionNext;\n            this.child = child;\n            this.parent = parent;\n            this.projection = projection;\n            this.styles = styles;\n            this.classes = classes;\n        }\n        Object.defineProperty(TNode.prototype, \"type_\", {\n            get: function () {\n                switch (this.type) {\n                    case 0 /* Container */:\n                        return 'TNodeType.Container';\n                    case 3 /* Element */:\n                        return 'TNodeType.Element';\n                    case 4 /* ElementContainer */:\n                        return 'TNodeType.ElementContainer';\n                    case 5 /* IcuContainer */:\n                        return 'TNodeType.IcuContainer';\n                    case 1 /* Projection */:\n                        return 'TNodeType.Projection';\n                    case 2 /* View */:\n                        return 'TNodeType.View';\n                    default:\n                        return 'TNodeType.???';\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"flags_\", {\n            get: function () {\n                var flags = [];\n                if (this.flags & 16 /* hasClassInput */)\n                    flags.push('TNodeFlags.hasClassInput');\n                if (this.flags & 8 /* hasContentQuery */)\n                    flags.push('TNodeFlags.hasContentQuery');\n                if (this.flags & 32 /* hasStyleInput */)\n                    flags.push('TNodeFlags.hasStyleInput');\n                if (this.flags & 256 /* hasInitialStyling */)\n                    flags.push('TNodeFlags.hasInitialStyling');\n                if (this.flags & 128 /* hasHostBindings */)\n                    flags.push('TNodeFlags.hasHostBindings');\n                if (this.flags & 2 /* isComponentHost */)\n                    flags.push('TNodeFlags.isComponentHost');\n                if (this.flags & 1 /* isDirectiveHost */)\n                    flags.push('TNodeFlags.isDirectiveHost');\n                if (this.flags & 64 /* isDetached */)\n                    flags.push('TNodeFlags.isDetached');\n                if (this.flags & 4 /* isProjected */)\n                    flags.push('TNodeFlags.isProjected');\n                return flags.join('|');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                buf.push('<', this.tagName || this.type_);\n                if (this.attrs) {\n                    for (var i = 0; i < this.attrs.length;) {\n                        var attrName = this.attrs[i++];\n                        if (typeof attrName == 'number') {\n                            break;\n                        }\n                        var attrValue = this.attrs[i++];\n                        buf.push(' ', attrName, '=\"', attrValue, '\"');\n                    }\n                }\n                buf.push('>');\n                processTNodeChildren(this.child, buf);\n                buf.push('</', this.tagName || this.type_, '>');\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TNode;\n    }());\n    function processTNodeChildren(tNode, buf) {\n        while (tNode) {\n            buf.push(tNode.template_);\n            tNode = tNode.next;\n        }\n    }\n    var TViewData = NG_DEV_MODE && createNamedArrayType('TViewData') || null;\n    var TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates TData.\n     *\n     * Simple slice will keep the same type, and we need it to be TData\n     */\n    function cloneToTViewData(list) {\n        if (TVIEWDATA_EMPTY === undefined)\n            TVIEWDATA_EMPTY = new TViewData();\n        return TVIEWDATA_EMPTY.concat(list);\n    }\n    var LViewBlueprint = NG_DEV_MODE && createNamedArrayType('LViewBlueprint') || null;\n    var MatchesArray = NG_DEV_MODE && createNamedArrayType('MatchesArray') || null;\n    var TViewComponents = NG_DEV_MODE && createNamedArrayType('TViewComponents') || null;\n    var TNodeLocalNames = NG_DEV_MODE && createNamedArrayType('TNodeLocalNames') || null;\n    var TNodeInitialInputs = NG_DEV_MODE && createNamedArrayType('TNodeInitialInputs') || null;\n    var TNodeInitialData = NG_DEV_MODE && createNamedArrayType('TNodeInitialData') || null;\n    var LCleanup = NG_DEV_MODE && createNamedArrayType('LCleanup') || null;\n    var TCleanup = NG_DEV_MODE && createNamedArrayType('TCleanup') || null;\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements\n     * (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element\n     * itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = '>' + node.innerHTML + '<';\n                return (outerHTML.split(innerHTML)[0]) + '>';\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"html\", {\n            get: function () { return (this.nodes || []).map(function (node) { return toHtml(node.native, true); }).join(''); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into\n             * a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tView\", {\n            get: function () { return this._raw_lView[TVIEW]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"cleanup\", {\n            get: function () { return this._raw_lView[CLEANUP]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"injector\", {\n            get: function () { return this._raw_lView[INJECTOR$1]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"rendererFactory\", {\n            get: function () { return this._raw_lView[RENDERER_FACTORY]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"renderer\", {\n            get: function () { return this._raw_lView[RENDERER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"sanitizer\", {\n            get: function () { return this._raw_lView[SANITIZER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childHead\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_HEAD]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lView[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childTail\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_TAIL]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"declarationView\", {\n            get: function () { return toDebug(this._raw_lView[DECLARATION_VIEW]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lView[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tHost\", {\n            get: function () { return this._raw_lView[T_HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                debugNodes.push(buildDebugNode(tNodeCursor, lView, tNodeCursor.index));\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    function buildDebugNode(tNode, lView, nodeIndex) {\n        var rawValue = lView[nodeIndex];\n        var native = unwrapRNode(rawValue);\n        var componentLViewDebug = toDebug(readLViewValue(rawValue));\n        var styles = isStylingContext(tNode.styles) ?\n            new NodeStylingDebug(tNode.styles, tNode, lView, false) :\n            null;\n        var classes = isStylingContext(tNode.classes) ?\n            new NodeStylingDebug(tNode.classes, tNode, lView, true) :\n            null;\n        return {\n            html: toHtml(native),\n            native: native, styles: styles, classes: classes,\n            nodes: toDebugNodes(tNode.child, lView),\n            component: componentLViewDebug,\n        };\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return getLContainerActiveIndex(this._raw_lContainer); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"hasTransplantedViews\", {\n            get: function () {\n                return (this._raw_lContainer[ACTIVE_INDEX] & 1 /* HAS_TRANSPLANTED_VIEWS */) ===\n                    1 /* HAS_TRANSPLANTED_VIEWS */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"movedViews\", {\n            get: function () { return this._raw_lContainer[MOVED_VIEWS]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lContainer[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (function () { return Promise.resolve(null); })();\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, lView) {\n        var selectedIndex = getSelectedIndex();\n        try {\n            var expandoInstructions = tView.expandoInstructions;\n            if (expandoInstructions !== null) {\n                var bindingRootIndex = setBindingIndex(tView.expandoStartIndex);\n                setBindingRoot(bindingRootIndex);\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                for (var i = 0; i < expandoInstructions.length; i++) {\n                    var instruction = expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            currentElementIndex = -instruction;\n                            setActiveHostElement(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                        setBindingRoot(bindingRootIndex);\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            // Each directive gets a uniqueId value that is the same for both\n                            // create and update calls when the hostBindings function is called. The\n                            // directive uniqueId is not set anywhere--it is just incremented between\n                            // each hostBindings call and is useful for helping instruction code\n                            // uniquely determine which directive is currently active when executed.\n                            // It is important that this be called first before the actual instructions\n                            // are run because this way the first directive ID value is not zero.\n                            incrementActiveDirectiveId();\n                            setBindingIndex(bindingRootIndex);\n                            var hostCtx = unwrapRNode(lView[currentDirectiveIndex]);\n                            instruction(2 /* Update */, hostCtx, currentElementIndex);\n                        }\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    /** Refreshes all content queries declared by directives in a given view */\n    function refreshContentQueries(tView, lView) {\n        var contentQueries = tView.contentQueries;\n        if (contentQueries !== null) {\n            for (var i = 0; i < contentQueries.length; i += 2) {\n                var queryStartIdx = contentQueries[i];\n                var directiveDefIdx = contentQueries[i + 1];\n                if (directiveDefIdx !== -1) {\n                    var directiveDef = tView.data[directiveDefIdx];\n                    ngDevMode &&\n                        assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                    setCurrentQueryIndex(queryStartIdx);\n                    directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n                }\n            }\n        }\n    }\n    /** Refreshes child components in the current view (update mode). */\n    function refreshChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            refreshComponent(hostLView, components[i]);\n        }\n    }\n    /** Renders child components in the current view (creation mode). */\n    function renderChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            renderComponent(hostLView, components[i]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param renderer A renderer to use\n     * @returns the element created\n     */\n    function elementCreate(name, renderer, namespace) {\n        if (isProceduralRenderer(renderer)) {\n            return renderer.createElement(name, namespace);\n        }\n        else {\n            return namespace === null ? renderer.createElement(name) :\n                renderer.createElementNS(namespace, name);\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = ngDevMode ? cloneToLViewFromTViewBlueprint(tView) : tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && assertEqual(tView.type == 2 /* Embedded */ ? parentLView !== null : true, true, 'Embedded views must have parentLView');\n        lView[DECLARATION_COMPONENT_VIEW] =\n            tView.type == 2 /* Embedded */ ? parentLView[DECLARATION_COMPONENT_VIEW] : lView;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n        // Keep this function short, so that the VM will inline it.\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.data[adjustedIndex] ||\n            createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs);\n        setPreviousOrParentTNode(tNode, true);\n        return tNode;\n    }\n    function createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && parent !== tHostNode;\n        var tParentNode = parentInSameView ? parent : null;\n        var tNode = tView.data[adjustedIndex] =\n            createTNode(tView, tParentNode, type, adjustedIndex, name, attrs);\n        // Assign a pointer to the first child node of a given view. The first node is not always the one\n        // at index 0, in case of i18n, index 0 can be the instruction `i18nStart` and the first node has\n        // the index 1 or more, so we can't just check node index.\n        if (tView.firstChild === null) {\n            tView.firstChild = tNode;\n        }\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tView, tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     *\n     * @param view The LView containing the blueprint to adjust\n     * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        ngDevMode && assertGreaterThan(numSlotsToAlloc, 0, 'The number of slots to alloc should be greater than 0');\n        if (numSlotsToAlloc > 0) {\n            var tView = view[TVIEW];\n            if (tView.firstCreatePass) {\n                for (var i = 0; i < numSlotsToAlloc; i++) {\n                    tView.blueprint.push(null);\n                    tView.data.push(null);\n                    view.push(null);\n                }\n                // We should only increment the expando start index if there aren't already directives\n                // and injectors saved in the \"expando\" section\n                if (!tView.expandoInstructions) {\n                    tView.expandoStartIndex += numSlotsToAlloc;\n                }\n                else {\n                    // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                    // bindings know that they should skip x slots\n                    tView.expandoInstructions.push(numSlotsToAlloc);\n                }\n            }\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Processes a view in the creation mode. This includes a number of steps in a specific order:\n     * - creating view query functions (if any);\n     * - executing a template function in the creation mode;\n     * - updating static queries (if any);\n     * - creating child components defined in a given view.\n     */\n    function renderView(lView, tView, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), true, 'Should be run in creation mode');\n        enterView(lView, lView[T_HOST]);\n        try {\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(1 /* Create */, viewQuery, context);\n            }\n            // Execute a template associated with this view, if it exists. A template function might not be\n            // defined for the root component views.\n            var templateFn = tView.template;\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 1 /* Create */, context);\n            }\n            // This needs to be set before children are processed to support recursive components.\n            // This must be set to false immediately after the first creation run because in an\n            // ngFor loop, all the views will be created together before update mode runs and turns\n            // off firstCreatePass. If we don't set it here, instances will perform directive\n            // matching, etc again and again.\n            if (tView.firstCreatePass) {\n                tView.firstCreatePass = false;\n            }\n            // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n            // content queries are resolved during change detection (i.e. update mode), after embedded\n            // views are refreshed (see block above).\n            if (tView.staticContentQueries) {\n                refreshContentQueries(tView, lView);\n            }\n            // We must materialize query results before child components are processed\n            // in case a child component has projected a container. The LContainer needs\n            // to exist so the embedded views are properly attached by the container.\n            if (tView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, tView.viewQuery, context);\n            }\n            // Render child component views.\n            var components = tView.components;\n            if (components !== null) {\n                renderChildComponents(lView, components);\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n            leaveView();\n        }\n    }\n    /**\n     * Processes a view in update mode. This includes a number of steps in a specific order:\n     * - executing a template function in update mode;\n     * - executing hooks;\n     * - refreshing queries;\n     * - setting host bindings;\n     * - refreshing child (embedded and component) views.\n     */\n    function refreshView(lView, tView, templateFn, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), false, 'Should be run in update mode');\n        var flags = lView[FLAGS];\n        if ((flags & 256 /* Destroyed */) === 256 /* Destroyed */)\n            return;\n        enterView(lView, lView[T_HOST]);\n        try {\n            resetPreOrderHookFlags(lView);\n            setBindingIndex(tView.bindingStartIndex);\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 2 /* Update */, context);\n            }\n            var checkNoChangesMode = getCheckNoChangesMode();\n            var hooksInitPhaseCompleted = (flags & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            // execute pre-order hooks (OnInit, OnChanges, DoChanges)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var preOrderCheckHooks = tView.preOrderCheckHooks;\n                    if (preOrderCheckHooks !== null) {\n                        executeCheckHooks(lView, preOrderCheckHooks, null);\n                    }\n                }\n                else {\n                    var preOrderHooks = tView.preOrderHooks;\n                    if (preOrderHooks !== null) {\n                        executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                    }\n                    incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n                }\n            }\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            if (tView.contentQueries !== null) {\n                refreshContentQueries(tView, lView);\n            }\n            // execute content hooks (AfterContentInit, AfterContentChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var contentCheckHooks = tView.contentCheckHooks;\n                    if (contentCheckHooks !== null) {\n                        executeCheckHooks(lView, contentCheckHooks);\n                    }\n                }\n                else {\n                    var contentHooks = tView.contentHooks;\n                    if (contentHooks !== null) {\n                        executeInitAndCheckHooks(lView, contentHooks, 1 /* AfterContentInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 1 /* AfterContentInitHooksToBeRun */);\n                }\n            }\n            setHostBindings(tView, lView);\n            // Refresh child component views.\n            var components = tView.components;\n            if (components !== null) {\n                refreshChildComponents(lView, components);\n            }\n            // View queries must execute after refreshing child components because a template in this view\n            // could be inserted in a child component. If the view query executes before child component\n            // refresh, the template might not yet be inserted.\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(2 /* Update */, viewQuery, context);\n            }\n            // execute view hooks (AfterViewInit, AfterViewChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var viewCheckHooks = tView.viewCheckHooks;\n                    if (viewCheckHooks !== null) {\n                        executeCheckHooks(lView, viewCheckHooks);\n                    }\n                }\n                else {\n                    var viewHooks = tView.viewHooks;\n                    if (viewHooks !== null) {\n                        executeInitAndCheckHooks(lView, viewHooks, 2 /* AfterViewInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 2 /* AfterViewInitHooksToBeRun */);\n                }\n            }\n        }\n        finally {\n            if (tView.firstUpdatePass === true) {\n                tView.firstUpdatePass = false;\n            }\n            lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n            leaveViewProcessExit();\n        }\n    }\n    function renderComponentOrTemplate(hostView, templateFn, context) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            var tView = hostView[TVIEW];\n            if (creationModeIsActive) {\n                renderView(hostView, tView, context);\n            }\n            refreshView(hostView, tView, templateFn, context);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n        }\n    }\n    function executeTemplate(lView, templateFn, rf, context) {\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(null);\n            if (rf & 2 /* Update */ && lView.length > HEADER_OFFSET) {\n                // When we're updating, inherently select 0 so we don't\n                // have to generate that instruction for most update blocks.\n                selectIndexInternal(lView, 0, getCheckNoChangesMode());\n            }\n            templateFn(rf, context);\n        }\n        finally {\n            if (hasActiveElementFlag(1 /* RunExitFn */)) {\n                executeElementExitFn();\n            }\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances.\n     */\n    function createDirectivesInstances(tView, lView, tNode) {\n        if (!getBindingsEnabled())\n            return;\n        instantiateAllDirectives(tView, lView, tNode, getNativeByTNode(tNode, lView));\n        if ((tNode.flags & 128 /* hasHostBindings */) === 128 /* hasHostBindings */) {\n            invokeDirectivesHostBindings(tView, lView, tNode);\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param def ComponentDef\n     * @returns TView\n     */\n    function getOrCreateTComponentView(def) {\n        return def.tView ||\n            (def.tView = createTView(1 /* Component */, -1, def.template, def.decls, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas, def.consts));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param decls The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     * @param consts Constants for this view\n     */\n    function createTView(type, viewIndex, templateFn, decls, vars, directives, pipes, viewQuery, schemas, consts) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + decls;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = ngDevMode ?\n            new TViewConstructor(type, viewIndex, // id: number,\n            blueprint, // blueprint: LView,\n            templateFn, // template: ComponentTemplate<{}>|null,\n            null, // queries: TQueries|null\n            viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,\n            null, // node: TViewNode|TElementNode|null,\n            cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,\n            bindingStartIndex, // bindingStartIndex: number,\n            initialViewLength, // expandoStartIndex: number,\n            null, // expandoInstructions: ExpandoInstructions|null,\n            true, // firstCreatePass: boolean,\n            true, // firstUpdatePass: boolean,\n            false, // staticViewQueries: boolean,\n            false, // staticContentQueries: boolean,\n            null, // preOrderHooks: HookData|null,\n            null, // preOrderCheckHooks: HookData|null,\n            null, // contentHooks: HookData|null,\n            null, // contentCheckHooks: HookData|null,\n            null, // viewHooks: HookData|null,\n            null, // viewCheckHooks: HookData|null,\n            null, // destroyHooks: HookData|null,\n            null, // cleanup: any[]|null,\n            null, // contentQueries: number[]|null,\n            null, // components: number[]|null,\n            typeof directives === 'function' ?\n                directives() :\n                directives, // directiveRegistry: DirectiveDefList|null,\n            typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,\n            null, // firstChild: TNode|null,\n            schemas, // schemas: SchemaMetadata[]|null,\n            consts) : // consts: TConstants|null\n            {\n                type: type,\n                id: viewIndex,\n                blueprint: blueprint,\n                template: templateFn,\n                queries: null,\n                viewQuery: viewQuery,\n                node: null,\n                data: blueprint.slice().fill(null, bindingStartIndex),\n                bindingStartIndex: bindingStartIndex,\n                expandoStartIndex: initialViewLength,\n                expandoInstructions: null,\n                firstCreatePass: true,\n                firstUpdatePass: true,\n                staticViewQueries: false,\n                staticContentQueries: false,\n                preOrderHooks: null,\n                preOrderCheckHooks: null,\n                contentHooks: null,\n                contentCheckHooks: null,\n                viewHooks: null,\n                viewCheckHooks: null,\n                destroyHooks: null,\n                cleanup: null,\n                contentQueries: null,\n                components: null,\n                directiveRegistry: typeof directives === 'function' ? directives() : directives,\n                pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n                firstChild: null,\n                schemas: schemas,\n                consts: consts,\n            };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = ngDevMode ? new LViewBlueprint() : [];\n        for (var i = 0; i < initialViewLength; i++) {\n            blueprint.push(i < bindingStartIndex ? null : NO_CHANGE);\n        }\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    function assertHostNodeExists(rElement, elementOrSelector) {\n        if (!rElement) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param rendererFactory Factory function to create renderer instance.\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     * @param encapsulation View Encapsulation defined for component that requests host element.\n     */\n    function locateHostElement(rendererFactory, elementOrSelector, encapsulation) {\n        var renderer = rendererFactory.createRenderer(null, null);\n        if (isProceduralRenderer(renderer)) {\n            // When using native Shadow DOM, do not clear host element to allow native slot projection\n            var preserveContent = encapsulation === exports.ViewEncapsulation.ShadowDom;\n            return renderer.selectRootElement(elementOrSelector, preserveContent);\n        }\n        var rElement = typeof elementOrSelector === 'string' ?\n            renderer.querySelector(elementOrSelector) :\n            elementOrSelector;\n        ngDevMode && assertHostNodeExists(rElement, elementOrSelector);\n        // Always clear host element's content when Renderer3 is in use. For procedural renderer case we\n        // make it depend on whether ShadowDom encapsulation is used (in which case the content should be\n        // preserved to allow native slot projection). ShadowDom encapsulation requires procedural\n        // renderer, and procedural renderer case is handled above.\n        rElement.textContent = '';\n        return rElement;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstCreatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstCreatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tView, tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        var injectorIndex = tParent ? tParent.injectorIndex : -1;\n        return ngDevMode ? new TNodeConstructor(tView, // tView_: TView\n        type, // type: TNodeType\n        adjustedIndex, // index: number\n        injectorIndex, // injectorIndex: number\n        -1, // directiveStart: number\n        -1, // directiveEnd: number\n        null, // propertyBindings: number[]|null\n        0, // flags: TNodeFlags\n        0, // providerIndexes: TNodeProviderIndexes\n        tagName, // tagName: string|null\n        attrs, // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null\n        null, // localNames: (string|number)[]|null\n        undefined, // initialInputs: (string[]|null)[]|null|undefined\n        null, // inputs: PropertyAliases|null\n        null, // outputs: PropertyAliases|null\n        null, // tViews: ITView|ITView[]|null\n        null, // next: ITNode|null\n        null, // projectionNext: ITNode|null\n        null, // child: ITNode|null\n        tParent, // parent: TElementNode|TContainerNode|null\n        null, // projection: number|(ITNode|RNode[])[]|null\n        null, // styles: TStylingContext|null\n        null) :\n            {\n                type: type,\n                index: adjustedIndex,\n                injectorIndex: injectorIndex,\n                directiveStart: -1,\n                directiveEnd: -1,\n                propertyBindings: null,\n                flags: 0,\n                providerIndexes: 0,\n                tagName: tagName,\n                attrs: attrs,\n                localNames: null,\n                initialInputs: undefined,\n                inputs: null,\n                outputs: null,\n                tViews: null,\n                next: null,\n                projectionNext: null,\n                child: null,\n                parent: tParent,\n                projection: null,\n                styles: null,\n                classes: null,\n            };\n    }\n    function generatePropertyAliases(inputAliasMap, directiveDefIdx, propStore) {\n        for (var publicName in inputAliasMap) {\n            if (inputAliasMap.hasOwnProperty(publicName)) {\n                propStore = propStore === null ? {} : propStore;\n                var internalName = inputAliasMap[publicName];\n                if (propStore.hasOwnProperty(publicName)) {\n                    propStore[publicName].push(directiveDefIdx, internalName);\n                }\n                else {\n                    (propStore[publicName] = [directiveDefIdx, internalName]);\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Initializes data structures required to work with directive outputs and outputs.\n     * Initialization is done for all directives matched on a given TNode.\n     */\n    function initializeInputAndOutputAliases(tView, tNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var defs = tView.data;\n        var tNodeAttrs = tNode.attrs;\n        var inputsFromAttrs = ngDevMode ? new TNodeInitialInputs() : [];\n        var inputsStore = null;\n        var outputsStore = null;\n        for (var i = start; i < end; i++) {\n            var directiveDef = defs[i];\n            var directiveInputs = directiveDef.inputs;\n            inputsFromAttrs.push(tNodeAttrs !== null ? generateInitialInputs(directiveInputs, tNodeAttrs) : null);\n            inputsStore = generatePropertyAliases(directiveInputs, i, inputsStore);\n            outputsStore = generatePropertyAliases(directiveDef.outputs, i, outputsStore);\n        }\n        if (inputsStore !== null) {\n            if (inputsStore.hasOwnProperty('class') || inputsStore.hasOwnProperty('className')) {\n                tNode.flags |= 16 /* hasClassInput */;\n            }\n            if (inputsStore.hasOwnProperty('style')) {\n                tNode.flags |= 32 /* hasStyleInput */;\n            }\n        }\n        tNode.initialInputs = inputsFromAttrs;\n        tNode.inputs = inputsStore;\n        tNode.outputs = outputsStore;\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     *\n     * Performance note: this function is written as a series of if checks (instead of, say, a property\n     * object lookup) for performance reasons - the series of `if` checks seems to be the fastest way of\n     * mapping property names. Do NOT change without benchmarking.\n     *\n     * Note: this mapping has to be kept in sync with the equally named mapping in the template\n     * type-checking machinery of ngtsc.\n     */\n    function mapPropName(name) {\n        if (name === 'class')\n            return 'className';\n        if (name === 'for')\n            return 'htmlFor';\n        if (name === 'formaction')\n            return 'formAction';\n        if (name === 'innerHtml')\n            return 'innerHTML';\n        if (name === 'readonly')\n            return 'readOnly';\n        if (name === 'tabindex')\n            return 'tabIndex';\n        return name;\n    }\n    function elementPropertyInternal(lView, index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData = tNode.inputs;\n        var dataValue;\n        if (!nativeOnly && inputData != null && (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, propName, value);\n            if (isComponentHost(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = mapPropName(propName);\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                if (!validateProperty(lView, element, propName, tNode)) {\n                    // Return here since we only log warnings for unknown properties.\n                    warnAboutUnknownProperty(propName, tNode);\n                    return;\n                }\n                ngDevMode.rendererSetProperty++;\n            }\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the\n            // property is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                warnAboutUnknownProperty(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentLViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function setNgReflectProperties(lView, element, type, dataValue, value) {\n        if (type === 3 /* Element */ || type === 0 /* Container */) {\n            /**\n             * dataValue is an array containing runtime input or output names for the directives:\n             * i+0: directive instance index\n             * i+1: privateName\n             *\n             * e.g. [0, 'change', 'change-minified']\n             * we want to set the reflected property with the privateName: dataValue[i+1]\n             */\n            for (var i = 0; i < dataValue.length; i += 2) {\n                setNgReflectProperty(lView, element, type, dataValue[i + 1], value);\n            }\n        }\n    }\n    function validateProperty(hostView, element, propName, tNode) {\n        // The property is considered valid if the element matches the schema, it exists on the element\n        // or it is synthetic, and we are in a browser context (web worker nodes should be skipped).\n        return matchingSchemas(hostView, tNode.tagName) || propName in element ||\n            isAnimationProp(propName) || typeof Node !== 'function' || !(element instanceof Node);\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Logs a warning that a property is not supported on an element.\n     * @param propName Name of the invalid property.\n     * @param tNode Node on which we encountered the property.\n     */\n    function warnAboutUnknownProperty(propName, tNode) {\n        console.warn(\"Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, lView, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstCreatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, lView, def);\n        }\n        var directive = getNodeInjectable(lView, tView, lView.length - 1, rootTNode);\n        attachPatchData(directive, lView);\n        var native = getNativeByTNode(rootTNode, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, lView, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n        // tsickle.\n        ngDevMode && assertFirstCreatePass(tView);\n        if (!getBindingsEnabled())\n            return false;\n        var directives = findDirectiveMatches(tView, lView, tNode);\n        var exportsMap = localRefs === null ? null : { '': -1 };\n        var hasDirectives = false;\n        if (directives !== null) {\n            hasDirectives = true;\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var preOrderHooksFound = false;\n            var preOrderCheckHooksFound = false;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                baseResolveDirective(tView, lView, def);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                if (def.contentQueries !== null)\n                    tNode.flags |= 8 /* hasContentQuery */;\n                if (def.hostBindings !== null)\n                    tNode.flags |= 128 /* hasHostBindings */;\n                // Only push a node index into the preOrderHooks array if this is the first\n                // pre-order hook found on this node.\n                if (!preOrderHooksFound && (def.onChanges || def.onInit || def.doCheck)) {\n                    // We will push the actual hook function into this array later during dir instantiation.\n                    // We cannot do it now because we must ensure hooks are registered in the same\n                    // order that directives are created (i.e. injection order).\n                    (tView.preOrderHooks || (tView.preOrderHooks = [])).push(tNode.index - HEADER_OFFSET);\n                    preOrderHooksFound = true;\n                }\n                if (!preOrderCheckHooksFound && (def.onChanges || def.doCheck)) {\n                    (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(tNode.index - HEADER_OFFSET);\n                    preOrderCheckHooksFound = true;\n                }\n            }\n            initializeInputAndOutputAliases(tView, tNode);\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n        return hasDirectives;\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode, native) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstCreatePass) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        attachPatchData(native, lView);\n        var initialInputs = tNode.initialInputs;\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var isComponent = isComponentDef(def);\n            if (isComponent) {\n                ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */);\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(lView, tView, i, tNode);\n            attachPatchData(directive, lView);\n            if (initialInputs !== null) {\n                setInputsFromAttrs(lView, i - start, directive, def, tNode, initialInputs);\n            }\n            if (isComponent) {\n                var componentView = getComponentLViewByIndex(tNode.index, lView);\n                componentView[CONTEXT] = directive;\n            }\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstCreatePass = tView.firstCreatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        try {\n            setActiveHostElement(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = viewData[i];\n                if (def.hostBindings) {\n                    // It is important that this be called first before the actual instructions\n                    // are run because this way the first directive ID value is not zero.\n                    incrementActiveDirectiveId();\n                    invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstCreatePass);\n                }\n                else if (firstCreatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(null);\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstCreatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstCreatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstCreatePass, true, 'Expando block should only be generated on first create pass.');\n        // Important: In JS `-x` and `0-x` is not the same! If `x===0` then `-x` will produce `-0` which\n        // requires non standard math arithmetic and it can prevent VM optimizations.\n        // `0-0` will always produce `0` and will not cause a potential deoptimization in VM.\n        var elementIndex = HEADER_OFFSET - tNode.index;\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 4 /* ElementContainer */, 0 /* Container */);\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = ngDevMode ? new MatchesArray() : []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 2 /* isComponentHost */)\n                            throwMultipleComponentError(tNode);\n                        markAsComponentHost(tView, tNode);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /**\n     * Marks a given TNode as a component's host. This consists of:\n     * - setting appropriate TNode flags;\n     * - storing index of component's host element so it will be queued for view refresh during CD.\n    */\n    function markAsComponentHost(tView, hostTNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        hostTNode.flags |= 2 /* isComponentHost */;\n        (tView.components || (tView.components = ngDevMode ? new TViewComponents() : [])).push(hostTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames =\n                ngDevMode ? new TNodeLocalNames() : [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (isComponentDef(def))\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        tNode.flags |= 1 /* isDirectiveHost */;\n        // When the first directive is created on a node, save the index\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def) {\n        tView.data.push(def);\n        var directiveFactory = def.factory || (def.factory = getFactoryDef(def.type, true));\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, hostTNode, def) {\n        var native = getNativeByTNode(hostTNode, lView);\n        var tView = getOrCreateTComponentView(def);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, native, hostTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[hostTNode.index] = componentView;\n    }\n    function elementAttributeInternal(index, name, value, lView, sanitizer, namespace) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && validateAgainstEventAttributes(name);\n        var element = getNativeByIndex(index, lView);\n        var renderer = lView[RENDERER];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                element.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var tNode = getTNode(index, lView);\n            var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(element, name, strValue, namespace);\n            }\n            else {\n                namespace ? element.setAttributeNS(namespace, name, strValue) :\n                    element.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param lView Current LView that is being processed.\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(lView, directiveIndex, instance, def, tNode, initialInputData) {\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs !== null) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput !== null) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param inputs The list of inputs from the directive def\n     * @param attrs The static attrs on this node\n     */\n    function generateInitialInputs(inputs, attrs) {\n        var inputsToStore = null;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            if (inputs.hasOwnProperty(attrName)) {\n                if (inputsToStore === null)\n                    inputsToStore = [];\n                inputsToStore.push(attrName, inputs[attrName], attrs[i + 1]);\n            }\n            i += 2;\n        }\n        return inputsToStore;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    // Not sure why I need to do `any` here but TS complains later.\n    var LContainerArray = ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) &&\n        createNamedArrayType('LContainer');\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode) {\n        ngDevMode && assertLView(currentView);\n        ngDevMode && !isProceduralRenderer(currentView[RENDERER]) && assertDomNode(native);\n        // https://jsperf.com/array-literal-vs-new-array-really\n        var lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native\n        true, // Boolean `true` in this position signifies that this is an `LContainer`\n        -1 /* DYNAMIC_EMBEDDED_VIEWS_ONLY */ << 1 /* SHIFT */, // active index\n        currentView, // parent\n        null, // next\n        null, // queries\n        tNode, // t_host\n        native, // native,\n        null);\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes\n     * them by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        var viewOrContainer = lView[CHILD_HEAD];\n        while (viewOrContainer !== null) {\n            // Note: viewOrContainer can be an LView or an LContainer instance, but here we are only\n            // interested in LContainer\n            var activeIndexFlag = void 0;\n            if (isLContainer(viewOrContainer) &&\n                (activeIndexFlag = viewOrContainer[ACTIVE_INDEX]) >> 1 /* SHIFT */ ===\n                    -1 /* DYNAMIC_EMBEDDED_VIEWS_ONLY */) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < viewOrContainer.length; i++) {\n                    var embeddedLView = viewOrContainer[i];\n                    var embeddedTView = embeddedLView[TVIEW];\n                    ngDevMode && assertDefined(embeddedTView, 'TView must be allocated');\n                    refreshView(embeddedLView, embeddedTView, embeddedTView.template, embeddedLView[CONTEXT]);\n                }\n                if ((activeIndexFlag & 1 /* HAS_TRANSPLANTED_VIEWS */) !== 0) {\n                    // We should only CD moved views if the component where they were inserted does not match\n                    // the component where they were declared and insertion is on-push. Moved views also\n                    // contains intra component moves, or check-always which need to be skipped.\n                    refreshTransplantedViews(viewOrContainer, lView[DECLARATION_COMPONENT_VIEW]);\n                }\n            }\n            viewOrContainer = viewOrContainer[NEXT];\n        }\n    }\n    /**\n     * Refresh transplanted LViews.\n     *\n     * See: `ActiveIndexFlag.HAS_TRANSPLANTED_VIEWS` and `LView[DECLARATION_COMPONENT_VIEW]` for\n     * explanation of transplanted views.\n     *\n     * @param lContainer The `LContainer` which has transplanted views.\n     * @param declaredComponentLView The `lContainer` parent component `LView`.\n     */\n    function refreshTransplantedViews(lContainer, declaredComponentLView) {\n        var movedViews = lContainer[MOVED_VIEWS];\n        ngDevMode && assertDefined(movedViews, 'Transplanted View flags set but missing MOVED_VIEWS');\n        for (var i = 0; i < movedViews.length; i++) {\n            var movedLView = movedViews[i];\n            var insertionLContainer = movedLView[PARENT];\n            ngDevMode && assertLContainer(insertionLContainer);\n            var insertedComponentLView = insertionLContainer[PARENT][DECLARATION_COMPONENT_VIEW];\n            ngDevMode && assertDefined(insertedComponentLView, 'Missing LView');\n            // Check if we have a transplanted view by compering declaration and insertion location.\n            if (insertedComponentLView !== declaredComponentLView) {\n                // Yes the `LView` is transplanted.\n                // Here we would like to know if the component is `OnPush`. We don't have\n                // explicit `OnPush` flag instead we set `CheckAlways` to false (which is `OnPush`)\n                // Not to be confused with `ManualOnPush` which is used with wether a DOM event\n                // should automatically mark a view as dirty.\n                var insertionComponentIsOnPush = (insertedComponentLView[FLAGS] & 16 /* CheckAlways */) === 0;\n                if (insertionComponentIsOnPush) {\n                    // Here we know that the template has been transplanted across components and is\n                    // on-push (not just moved within a component). If the insertion is marked dirty, then\n                    // there is no need to CD here as we will do it again later when we get to insertion\n                    // point.\n                    var movedTView = movedLView[TVIEW];\n                    ngDevMode && assertDefined(movedTView, 'TView must be allocated');\n                    refreshView(movedLView, movedTView, movedTView.template, movedLView[CONTEXT]);\n                }\n            }\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param componentHostIdx  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function refreshComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), false, 'Should be run in update mode');\n        var componentView = getComponentLViewByIndex(componentHostIdx, hostLView);\n        // Only attached components that are CheckAlways or OnPush and dirty should be refreshed\n        if (viewAttachedToChangeDetector(componentView) &&\n            componentView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            var tView = componentView[TVIEW];\n            refreshView(componentView, tView, tView.template, componentView[CONTEXT]);\n        }\n    }\n    function renderComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), true, 'Should be run in creation mode');\n        var componentView = getComponentLViewByIndex(componentHostIdx, hostLView);\n        syncViewWithBlueprint(componentView);\n        renderView(componentView, componentView[TVIEW], componentView[CONTEXT]);\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView.push(componentTView.blueprint[i]);\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n        // to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n        // of\n        // order, the change detection will run out of order, as the act of retrieving the the\n        // LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_1 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_1) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_1;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var lView = readPatchedLView(rootComponent);\n            var tView = lView[TVIEW];\n            renderComponentOrTemplate(lView, tView.template, rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            var tView = view[TVIEW];\n            refreshView(view, tView, tView.template, context);\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    function executeViewQueryFn(flags, viewQueryFn, component) {\n        ngDevMode && assertDefined(viewQueryFn, 'View queries function to execute must be defined.');\n        setCurrentQueryIndex(0);\n        viewQueryFn(flags, component);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Stores meta-data for a property binding to be used by TestBed's `DebugElement.properties`.\n     *\n     * In order to support TestBed's `DebugElement.properties` we need to save, for each binding:\n     * - a bound property name;\n     * - a static parts of interpolated strings;\n     *\n     * A given property metadata is saved at the binding's index in the `TView.data` (in other words, a\n     * property binding metadata will be stored in `TView.data` at the same index as a bound value in\n     * `LView`). Metadata are represented as `INTERPOLATION_DELIMITER`-delimited string with the\n     * following format:\n     * - `propertyName` for bound properties;\n     * - `propertyName�prefix�interpolation_static_part1�..interpolation_static_partN�suffix` for\n     * interpolated properties.\n     *\n     * @param tData `TData` where meta-data will be saved;\n     * @param nodeIndex index of a `TNode` that is a target of the binding;\n     * @param propertyName bound property name;\n     * @param bindingIndex binding index in `LView`\n     * @param interpolationParts static interpolation parts (for property interpolations)\n     */\n    function storePropertyBindingMetadata(tData, nodeIndex, propertyName, bindingIndex) {\n        var interpolationParts = [];\n        for (var _i = 4; _i < arguments.length; _i++) {\n            interpolationParts[_i - 4] = arguments[_i];\n        }\n        // Binding meta-data are stored only the first time a given property instruction is processed.\n        // Since we don't have a concept of the \"first update pass\" we need to check for presence of the\n        // binding meta-data to decide if one should be stored (or if was stored already).\n        if (tData[bindingIndex] === null) {\n            var tNode = tData[nodeIndex + HEADER_OFFSET];\n            if (tNode.inputs == null || !tNode.inputs[propertyName]) {\n                var propBindingIdxs = tNode.propertyBindings || (tNode.propertyBindings = []);\n                propBindingIdxs.push(bindingIndex);\n                var bindingMetadata = propertyName;\n                if (interpolationParts.length > 0) {\n                    bindingMetadata +=\n                        INTERPOLATION_DELIMITER + interpolationParts.join(INTERPOLATION_DELIMITER);\n                }\n                tData[bindingIndex] = bindingMetadata;\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = ngDevMode ? new TCleanup() : []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, publicName, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            if (def.setInput !== null) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    /**\n     * Updates a text binding at a given index in a given LView.\n     */\n    function textBindingInternal(lView, index, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'value should not be NO_CHANGE');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var element = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(element, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        var renderer = lView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.setValue(element, value) : element.textContent = value;\n    }\n    /**\n     * Renders all initial styling (class and style values) on to the element from the tNode.\n     *\n     * All initial styling data (i.e. any values extracted from the `style` or `class` attributes\n     * on an element) are collected into the `tNode.styles` and `tNode.classes` data structures.\n     * These values are populated during the creation phase of an element and are then later\n     * applied once the element is instantiated. This function applies each of the static\n     * style and class entries to the element.\n     */\n    function renderInitialStyling(renderer, native, tNode, append) {\n        if (tNode.classes !== null) {\n            if (append) {\n                renderStylingMap(renderer, native, tNode.classes, true);\n            }\n            else {\n                var classes = getInitialStylingValue(tNode.classes);\n                writeStylingValueDirectly(renderer, native, classes, true, null);\n            }\n        }\n        if (tNode.styles !== null) {\n            if (append) {\n                renderStylingMap(renderer, native, tNode.styles, false);\n            }\n            else {\n                var styles = getInitialStylingValue(tNode.styles);\n                writeStylingValueDirectly(renderer, native, styles, false, null);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$1 = unusedValueExportToPlacateAjd$1 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5 + unusedValueExportToPlacateAjd$3 + unusedValueExportToPlacateAjd;\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function applyToElementOrContainer(action, renderer, parent, lNodeToHandle, beforeNode) {\n        // If this slot was allocated for a text node dynamically created by i18n, the text node itself\n        // won't be created until i18nApply() in the update block, so this node should be skipped.\n        // For more info, see \"ICU expressions should work inside an ngTemplateOutlet inside an ngFor\"\n        // in `i18n_spec.ts`.\n        if (lNodeToHandle != null) {\n            var lContainer = void 0;\n            var isComponent = false;\n            // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is\n            // wrapped in an array which needs to be unwrapped. We need to know if it is a component and if\n            // it has LContainer so that we can process all of those cases appropriately.\n            if (isLContainer(lNodeToHandle)) {\n                lContainer = lNodeToHandle;\n            }\n            else if (isLView(lNodeToHandle)) {\n                isComponent = true;\n                ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');\n                lNodeToHandle = lNodeToHandle[HOST];\n            }\n            var rNode = unwrapRNode(lNodeToHandle);\n            ngDevMode && !isProceduralRenderer(renderer) && assertDomNode(rNode);\n            if (action === 0 /* Create */ && parent !== null) {\n                if (beforeNode == null) {\n                    nativeAppendChild(renderer, parent, rNode);\n                }\n                else {\n                    nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n                }\n            }\n            else if (action === 1 /* Insert */ && parent !== null) {\n                nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n            }\n            else if (action === 2 /* Detach */) {\n                nativeRemoveNode(renderer, rNode, isComponent);\n            }\n            else if (action === 3 /* Destroy */) {\n                ngDevMode && ngDevMode.rendererDestroyNode++;\n                renderer.destroyNode(rNode);\n            }\n            if (lContainer != null) {\n                applyContainer(renderer, action, lContainer, parent, beforeNode);\n            }\n        }\n    }\n    function createTextNode(value, renderer) {\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        ngDevMode && ngDevMode.rendererSetText++;\n        return isProceduralRenderer(renderer) ? renderer.createText(value) :\n            renderer.createTextNode(value);\n    }\n    function addRemoveViewFromContainer(lView, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(lView[TVIEW].node, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = lView[RENDERER];\n            var action = insertMode ? 1 /* Insert */ : 2 /* Detach */;\n            applyView(renderer, action, lView, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        applyView(lView[RENDERER], 2 /* Detach */, lView, null, null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            addToArray(lContainer, CONTAINER_HEADER_OFFSET + index, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // track views where declaration and insertion points are different\n        var declarationLContainer = lView[DECLARATION_LCONTAINER];\n        if (declarationLContainer !== null && lContainer !== declarationLContainer) {\n            trackMovedView(declarationLContainer, lView);\n        }\n        // notify query that a new view has been added\n        var lQueries = lView[QUERIES];\n        if (lQueries !== null) {\n            lQueries.insertView(lView[TVIEW]);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Track views created from the declaration container (TemplateRef) and inserted into a\n     * different LContainer.\n     */\n    function trackMovedView(declarationContainer, lView) {\n        ngDevMode && assertDefined(lView, 'LView required');\n        ngDevMode && assertLContainer(declarationContainer);\n        var movedViews = declarationContainer[MOVED_VIEWS];\n        var insertedLContainer = lView[PARENT];\n        ngDevMode && assertLContainer(insertedLContainer);\n        var insertedComponentLView = insertedLContainer[PARENT][DECLARATION_COMPONENT_VIEW];\n        ngDevMode && assertDefined(insertedComponentLView, 'Missing insertedComponentLView');\n        var insertedComponentIsOnPush = (insertedComponentLView[FLAGS] & 16 /* CheckAlways */) !== 16 /* CheckAlways */;\n        if (insertedComponentIsOnPush) {\n            var declaredComponentLView = lView[DECLARATION_COMPONENT_VIEW];\n            ngDevMode && assertDefined(declaredComponentLView, 'Missing declaredComponentLView');\n            if (declaredComponentLView !== insertedComponentLView) {\n                // At this point the declaration-component is not same as insertion-component and we are in\n                // on-push mode, this means that this is a transplanted view. Mark the declared lView as\n                // having\n                // transplanted views so that those views can participate in CD.\n                declarationContainer[ACTIVE_INDEX] |= 1 /* HAS_TRANSPLANTED_VIEWS */;\n            }\n        }\n        if (movedViews === null) {\n            declarationContainer[MOVED_VIEWS] = [lView];\n        }\n        else {\n            movedViews.push(lView);\n        }\n    }\n    function detachMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        ngDevMode && assertDefined(declarationContainer[MOVED_VIEWS], 'A projected view should belong to a non-empty projected views collection');\n        var movedViews = declarationContainer[MOVED_VIEWS];\n        var declaredViewIndex = movedViews.indexOf(lView);\n        movedViews.splice(declaredViewIndex, 1);\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method removes the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            var declarationLContainer = viewToDetach[DECLARATION_LCONTAINER];\n            if (declarationLContainer !== null && declarationLContainer !== lContainer) {\n                detachMovedView(declarationLContainer, viewToDetach);\n            }\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            var removedLView = removeFromArray(lContainer, CONTAINER_HEADER_OFFSET + removeIndex);\n            addRemoveViewFromContainer(viewToDetach, false, null);\n            // notify query that a view has been removed\n            var lQueries = removedLView[QUERIES];\n            if (lQueries !== null) {\n                lQueries.detachView(removedLView[TVIEW]);\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param lView The view to be destroyed.\n     */\n    function destroyLView(lView) {\n        if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = lView[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                applyView(renderer, 3 /* Destroy */, lView, null, null);\n            }\n            destroyViewTree(lView);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            var declarationContainer = view[DECLARATION_LCONTAINER];\n            // we are dealing with an embedded view that is still inserted into a container\n            if (declarationContainer !== null && isLContainer(view[PARENT])) {\n                // and this is a projected view\n                if (declarationContainer !== view[PARENT]) {\n                    detachMovedView(declarationContainer, view);\n                }\n                // For embedded views still attached to a container: remove query result from this view.\n                var lQueries = view[QUERIES];\n                if (lQueries !== null) {\n                    lQueries.detachView(view[TVIEW]);\n                }\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup !== null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parentTNode = tNode.parent;\n        while (parentTNode != null && (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */)) {\n            tNode = parentTNode;\n            parentTNode = tNode.parent;\n        }\n        // If the parent tNode is null, then we are inserting across views: either into an embedded view\n        // or a component view.\n        if (parentTNode == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                ngDevMode && assertNodeOfPossibleTypes(hostTNode, 3 /* Element */);\n                return currentView[HOST];\n            }\n        }\n        else {\n            var isIcuCase = tNode && tNode.type === 5 /* IcuContainer */;\n            // If the parent of this node is an ICU container, then it is represented by comment node and we\n            // need to use it as an anchor. If it is projected then it's direct parent node is the renderer.\n            if (isIcuCase && tNode.flags & 4 /* isProjected */) {\n                return getNativeByTNode(tNode, currentView).parentNode;\n            }\n            ngDevMode && assertNodeType(parentTNode, 3 /* Element */);\n            if (parentTNode.flags & 2 /* isComponentHost */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parentTNode.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        ngDevMode && assertDefined(parent, 'parent node must be defined');\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode !== null) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            if (lContainer === null)\n                return null;\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                for (var i = 0; i < childEl.length; i++) {\n                    nativeAppendOrInsertBefore(renderer, renderParent, childEl[i], anchorNode);\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Returns the first native node for a given LView, starting from the provided TNode.\n     *\n     * Native nodes are returned in the order in which those appear in the native tree (DOM).\n     */\n    function getFirstNativeNode(lView, tNode) {\n        if (tNode !== null) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */, 5 /* IcuContainer */, 1 /* Projection */);\n            var tNodeType = tNode.type;\n            if (tNodeType === 3 /* Element */) {\n                return getNativeByTNode(tNode, lView);\n            }\n            else if (tNodeType === 0 /* Container */) {\n                return getBeforeNodeForView(-1, lView[tNode.index]);\n            }\n            else if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                var elIcuContainerChild = tNode.child;\n                if (elIcuContainerChild !== null) {\n                    return getFirstNativeNode(lView, elIcuContainerChild);\n                }\n                else {\n                    var rNodeOrLContainer = lView[tNode.index];\n                    if (isLContainer(rNodeOrLContainer)) {\n                        return getBeforeNodeForView(-1, rNodeOrLContainer);\n                    }\n                    else {\n                        return unwrapRNode(rNodeOrLContainer);\n                    }\n                }\n            }\n            else {\n                var componentView = lView[DECLARATION_COMPONENT_VIEW];\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var firstProjectedTNode = componentHost.projection[tNode.projection];\n                if (firstProjectedTNode != null) {\n                    return getFirstNativeNode(parentView, firstProjectedTNode);\n                }\n                else {\n                    return getFirstNativeNode(lView, tNode.next);\n                }\n            }\n        }\n        return null;\n    }\n    function getBeforeNodeForView(viewIndexInContainer, lContainer) {\n        var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n        if (nextViewIndex < lContainer.length) {\n            var lView = lContainer[nextViewIndex];\n            var firstTNodeOfView = lView[TVIEW].firstChild;\n            if (firstTNodeOfView !== null) {\n                return getFirstNativeNode(lView, firstTNodeOfView);\n            }\n        }\n        return lContainer[NATIVE];\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Performs the operation of `action` on the node. Typically this involves inserting or removing\n     * nodes on the LView or projection boundary.\n     */\n    function applyNodes(renderer, action, tNode, lView, renderParent, beforeNode, isProjection) {\n        while (tNode != null) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */, 1 /* Projection */, 1 /* Projection */, 5 /* IcuContainer */);\n            var rawSlotValue = lView[tNode.index];\n            var tNodeType = tNode.type;\n            if (isProjection) {\n                if (action === 0 /* Create */) {\n                    rawSlotValue && attachPatchData(unwrapRNode(rawSlotValue), lView);\n                    tNode.flags |= 4 /* isProjected */;\n                }\n            }\n            if ((tNode.flags & 64 /* isDetached */) !== 64 /* isDetached */) {\n                if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                    applyNodes(renderer, action, tNode.child, lView, renderParent, beforeNode, false);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n                else if (tNodeType === 1 /* Projection */) {\n                    applyProjectionRecursive(renderer, action, lView, tNode, renderParent, beforeNode);\n                }\n                else {\n                    ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n            }\n            tNode = isProjection ? tNode.projectionNext : tNode.next;\n        }\n    }\n    /**\n     * `applyView` performs operation on the view as specified in `action` (insert, detach, destroy)\n     *\n     * Inserting a view without projection or containers at top level is simple. Just iterate over the\n     * root nodes of the View, and for each node perform the `action`.\n     *\n     * Things get more complicated with containers and projections. That is because coming across:\n     * - Container: implies that we have to insert/remove/destroy the views of that container as well\n     *              which in turn can have their own Containers at the View roots.\n     * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The\n     *               complication is that the nodes we are projecting can themselves have Containers\n     *               or other Projections.\n     *\n     * As you can see this is a very recursive problem. Yes recursion is not most efficient but the\n     * code is complicated enough that trying to implemented with recursion becomes unmaintainable.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyView(renderer, action, lView, renderParent, beforeNode) {\n        var tView = lView[TVIEW];\n        ngDevMode && assertNodeType(tView.node, 2 /* View */);\n        var viewRootTNode = tView.node.child;\n        applyNodes(renderer, action, viewRootTNode, lView, renderParent, beforeNode, false);\n    }\n    /**\n     * `applyProjection` performs operation on the projection.\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     */\n    function applyProjection(lView, tProjectionNode) {\n        var renderer = lView[RENDERER];\n        var renderParent = getRenderParent(tProjectionNode, lView);\n        var parentTNode = tProjectionNode.parent || lView[T_HOST];\n        var beforeNode = getNativeAnchorNode(parentTNode, lView);\n        applyProjectionRecursive(renderer, 0 /* Create */, lView, tProjectionNode, renderParent, beforeNode);\n    }\n    /**\n     * `applyProjectionRecursive` performs operation on the projection specified by `action` (insert,\n     * detach, destroy)\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param renderer Render to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyProjectionRecursive(renderer, action, lView, tProjectionNode, renderParent, beforeNode) {\n        var componentLView = lView[DECLARATION_COMPONENT_VIEW];\n        var componentNode = componentLView[T_HOST];\n        ngDevMode &&\n            assertEqual(typeof tProjectionNode.projection, 'number', 'expecting projection index');\n        var nodeToProjectOrRNodes = componentNode.projection[tProjectionNode.projection];\n        if (Array.isArray(nodeToProjectOrRNodes)) {\n            // This should not exist, it is a bit of a hack. When we bootstrap a top level node and we\n            // need to support passing projectable nodes, so we cheat and put them in the TNode\n            // of the Host TView. (Yes we put instance info at the T Level). We can get away with it\n            // because we know that that TView is not shared and therefore it will not be a problem.\n            // This should be refactored and cleaned up.\n            for (var i = 0; i < nodeToProjectOrRNodes.length; i++) {\n                var rNode = nodeToProjectOrRNodes[i];\n                applyToElementOrContainer(action, renderer, renderParent, rNode, beforeNode);\n            }\n        }\n        else {\n            var nodeToProject = nodeToProjectOrRNodes;\n            var projectedComponentLView = componentLView[PARENT];\n            applyNodes(renderer, action, nodeToProject, projectedComponentLView, renderParent, beforeNode, true);\n        }\n    }\n    /**\n     * `applyContainer` performs an operation on the container and its views as specified by\n     * `action` (insert, detach, destroy)\n     *\n     * Inserting a Container is complicated by the fact that the container may have Views which\n     * themselves have containers or projections.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lContainer The LContainer which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyContainer(renderer, action, lContainer, renderParent, beforeNode) {\n        ngDevMode && assertLContainer(lContainer);\n        var anchor = lContainer[NATIVE]; // LContainer has its own before node.\n        var native = unwrapRNode(lContainer);\n        // An LContainer can be created dynamically on any node by injecting ViewContainerRef.\n        // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor node\n        // (comment in the DOM) that will be different from the LContainer's host node. In this particular\n        // case we need to execute action on 2 nodes:\n        // - container's host node (this is done in the executeActionOnElementOrContainer)\n        // - container's host node (this is done here)\n        if (anchor !== native) {\n            // This is very strange to me (Misko). I would expect that the native is same as anchor. I don't\n            // see a reason why they should be different, but they are.\n            //\n            // If they are we need to process the second anchor as well.\n            applyToElementOrContainer(action, renderer, renderParent, anchor, beforeNode);\n        }\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var lView = lContainer[i];\n            applyView(renderer, action, lView, renderParent, anchor);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(\n        /**\n         * This represents `LView` associated with the component when ViewRef is a ChangeDetectorRef.\n         *\n         * When ViewRef is created for a dynamic component, this also represents the `LView` for the\n         * component.\n         *\n         * For a \"regular\" ViewRef created for an embedded view, this is the `LView` for the embedded\n         * view.\n         *\n         * @internal\n         */\n        _lView, \n        /**\n         * This represents the `LView` associated with the point where `ChangeDetectorRef` was\n         * requested.\n         *\n         * This may be different from `_lView` if the `_cdRefInjectingView` is an embedded view.\n         */\n        _cdRefInjectingView) {\n            this._lView = _lView;\n            this._cdRefInjectingView = _cdRefInjectingView;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView.child, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._cdRefInjectingView || this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, tNode, result, isProjection) {\n        if (isProjection === void 0) { isProjection = false; }\n        while (tNode !== null) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 1 /* Projection */, 4 /* ElementContainer */, 5 /* IcuContainer */);\n            var lNode = lView[tNode.index];\n            if (lNode !== null) {\n                result.push(unwrapRNode(lNode));\n            }\n            // A given lNode can represent either a native node or a LContainer (when it is a host of a\n            // ViewContainerRef). When we find a LContainer we need to descend into it to collect root nodes\n            // from the views in this container.\n            if (isLContainer(lNode)) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < lNode.length; i++) {\n                    var lViewInAContainer = lNode[i];\n                    var lViewFirstChildTNode = lViewInAContainer[TVIEW].firstChild;\n                    if (lViewFirstChildTNode !== null) {\n                        collectNativeNodes(lViewInAContainer, lViewFirstChildTNode, result);\n                    }\n                }\n            }\n            var tNodeType = tNode.type;\n            if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                collectNativeNodes(lView, tNode.child, result);\n            }\n            else if (tNodeType === 1 /* Projection */) {\n                var componentView = lView[DECLARATION_COMPONENT_VIEW];\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var firstProjectedNode = componentHost.projection[tNode.projection];\n                if (firstProjectedNode !== null && parentView !== null) {\n                    collectNativeNodes(parentView, firstProjectedNode, result, true);\n                }\n            }\n            tNode = isProjection ? tNode.projectionNext : tNode.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node on which a TemplateRef is requested\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationView, _declarationTContainer, elementRef) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationView = _declarationView;\n                    _this._declarationTContainer = _declarationTContainer;\n                    _this.elementRef = elementRef;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context) {\n                    var embeddedTView = this._declarationTContainer.tViews;\n                    var lView = createLView(this._declarationView, embeddedTView, context, 16 /* CheckAlways */, null, embeddedTView.node);\n                    var declarationLContainer = this._declarationView[this._declarationTContainer.index];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    lView[DECLARATION_LCONTAINER] = declarationLContainer;\n                    var declarationViewLQueries = this._declarationView[QUERIES];\n                    if (declarationViewLQueries !== null) {\n                        lView[QUERIES] = declarationViewLQueries.createEmbeddedView(embeddedTView);\n                    }\n                    renderView(lView, embeddedTView, context);\n                    var viewRef = new ViewRef(lView);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, hostTNode, createElementRef(ElementRefToken, hostTNode, hostView));\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this.length > 0) {\n                        this.remove(this.length - 1);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) {\n                    return this._lContainer[VIEW_REFS] !== null && this._lContainer[VIEW_REFS][index] || null;\n                };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer.length - CONTAINER_HEADER_OFFSET; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var viewRef = templateRef.createEmbeddedView(context || {});\n                    this.insert(viewRef, index);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        // DO NOT REFACTOR. The code here used to have a `value || undefined` expression\n                        // which seems to cause internal google apps to fail. This is documented in the\n                        // following internal bug issue: go/b/142967802\n                        var result = contextInjector.get(NgModuleRef, null);\n                        if (result) {\n                            ngModuleRef = result;\n                        }\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    var lView = viewRef._lView;\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    this.allocateContainerIfNeeded();\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, detach it first so we clean up references appropriately.\n                        var prevIdx = this.indexOf(viewRef);\n                        // A view might be attached either to this or a different container. The `prevIdx` for\n                        // those cases will be:\n                        // equal to -1 for views attached to this ViewContainerRef\n                        // >= 0 for views attached to a different ViewContainerRef\n                        if (prevIdx !== -1) {\n                            this.detach(prevIdx);\n                        }\n                        else {\n                            var prevLContainer = lView[PARENT];\n                            ngDevMode && assertEqual(isLContainer(prevLContainer), true, 'An attached view should have its PARENT point to a container.');\n                            // We need to re-create a R3ViewContainerRef instance since those are not stored on\n                            // LView (nor anywhere else).\n                            var prevVCRef = new R3ViewContainerRef(prevLContainer, prevLContainer[T_HOST], prevLContainer[PARENT]);\n                            prevVCRef.detach(prevVCRef.indexOf(viewRef));\n                        }\n                    }\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    addToArray(this._lContainer[VIEW_REFS], adjustedIdx, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    return this.insert(viewRef, newIndex);\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) {\n                    var viewRefsArr = this._lContainer[VIEW_REFS];\n                    return viewRefsArr !== null ? viewRefsArr.indexOf(viewRef) : -1;\n                };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx) != null;\n                    return wasDetached ? new ViewRef(view) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, \"ViewRef index must be positive, got \" + index);\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                ViewContainerRef_.prototype.allocateContainerIfNeeded = function () {\n                    if (this._lContainer[VIEW_REFS] === null) {\n                        this._lContainer[VIEW_REFS] = [];\n                    }\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            setLContainerActiveIndex(lContainer, -1 /* DYNAMIC_EMBEDDED_VIEWS_ONLY */);\n        }\n        else {\n            var commentNode = void 0;\n            // If the host is an element container, the native host element is guaranteed to be a\n            // comment and we can reuse that comment as anchor element for the new LContainer.\n            // The comment node in question is already part of the DOM structure so we don't need to append\n            // it again.\n            if (hostTNode.type === 4 /* ElementContainer */) {\n                commentNode = unwrapRNode(slotValue);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererCreateComment++;\n                commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n                // A `ViewContainerRef` can be injected by the root (topmost / bootstrapped) component. In\n                // this case we can't use TView / TNode data structures to insert container's marker node\n                // (both a parent of a comment node and the comment node itself are not part of any view). In\n                // this specific case we use low-level DOM manipulation to insert container's marker (comment)\n                // node.\n                if (isRootView(hostView)) {\n                    var renderer = hostView[RENDERER];\n                    var hostNative = getNativeByTNode(hostTNode, hostView);\n                    var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                    nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n                }\n                else {\n                    appendChild(commentNode, hostTNode, hostView);\n                }\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef(isPipe) {\n        if (isPipe === void 0) { isPipe = false; }\n        return createViewRef(getPreviousOrParentTNode(), getLView(), isPipe);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param tNode The node that is requesting a ChangeDetectorRef\n     * @param lView The view to which the node belongs\n     * @param isPipe Whether the view is being injected into a pipe.\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(tNode, lView, isPipe) {\n        // `isComponentView` will be true for Component and Directives (but not for Pipes).\n        // See https://github.com/angular/angular/pull/33072 for proper fix\n        var isComponentView = !isPipe && isComponentHost(tNode);\n        if (isComponentView) {\n            // The LView represents the location where the component is declared.\n            // Instead we want the LView for the component View and so we need to look it up.\n            var componentView = getComponentLViewByIndex(tNode.index, lView); // look down\n            return new ViewRef(componentView, componentView);\n        }\n        else if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */ ||\n            tNode.type === 4 /* ElementContainer */ || tNode.type === 5 /* IcuContainer */) {\n            // The LView represents the location where the injection is requested from.\n            // We need to locate the containing LView (in case where the `lView` is an embedded view)\n            var hostComponentView = lView[DECLARATION_COMPONENT_VIEW]; // look up\n            return new ViewRef(hostComponentView, lView);\n        }\n        return null;\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Injects a Renderer2 for the current component. */\n    function injectRenderer2() {\n        // We need the Renderer to be based on the component that it's being injected into, however since\n        // DI happens before we've entered its view, `getLView` will return the parent view instead.\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var nodeAtIndex = getComponentLViewByIndex(tNode.index, lView);\n        return getOrCreateRenderer2(isLView(nodeAtIndex) ? nodeAtIndex : lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = newArray(paramAnnotations.length);\n            }\n            else {\n                result = newArray(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] && paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return newArray(type.length);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep) && dep.length > 0) {\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else if (param === ChangeDetectorRef) {\n                    meta.token = param;\n                    meta.resolved = compiler.R3ResolvedDependencyType.ChangeDetectorRef;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else if (dep === undefined || (Array.isArray(dep) && dep.length === 0)) {\n            meta.token = undefined;\n            meta.resolved = R3ResolvedDependencyType.Invalid;\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * injectable def (`ɵprov`) onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var ngInjectableDef = null;\n        var ngFactoryDef = null;\n        // if NG_PROV_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_PROV_DEF)) {\n            Object.defineProperty(type, NG_PROV_DEF, {\n                get: function () {\n                    if (ngInjectableDef === null) {\n                        ngInjectableDef = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/\\u0275prov.js\", getInjectableMetadata(type, srcMeta));\n                    }\n                    return ngInjectableDef;\n                },\n            });\n        }\n        // if NG_FACTORY_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_FACTORY_DEF)) {\n            Object.defineProperty(type, NG_FACTORY_DEF, {\n                get: function () {\n                    if (ngFactoryDef === null) {\n                        var metadata = getInjectableMetadata(type, srcMeta);\n                        var compiler = getCompilerFacade();\n                        ngFactoryDef = compiler.compileFactory(angularCoreDiEnv, \"ng:///\" + type.name + \"/\\u0275fac.js\", {\n                            name: metadata.name,\n                            type: metadata.type,\n                            typeArgumentCount: metadata.typeArgumentCount,\n                            deps: reflectDependencies(type),\n                            injectFn: 'inject',\n                            target: compiler.R3FactoryTarget.Pipe\n                        });\n                    }\n                    return ngFactoryDef;\n                },\n                // Leave this configurable so that the factories from directives or pipes can take precedence.\n                configurable: true\n            });\n        }\n    }\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n    function getInjectableMetadata(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var compilerMeta = {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            providedIn: meta.providedIn,\n            userDeps: undefined,\n        };\n        if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n            compilerMeta.userDeps = convertDependencies(meta.deps);\n        }\n        if (isUseClassProvider(meta)) {\n            // The user explicitly specified useClass, and may or may not have provided deps.\n            compilerMeta.useClass = resolveForwardRef(meta.useClass);\n        }\n        else if (isUseValueProvider(meta)) {\n            // The user explicitly specified useValue.\n            compilerMeta.useValue = resolveForwardRef(meta.useValue);\n        }\n        else if (isUseFactoryProvider(meta)) {\n            // The user explicitly specified useFactory.\n            compilerMeta.useFactory = meta.useFactory;\n        }\n        else if (isUseExistingProvider(meta)) {\n            // The user explicitly specified useExisting.\n            compilerMeta.useExisting = resolveForwardRef(meta.useExisting);\n        }\n        return compilerMeta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var EMPTY_ARRAY$1 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return ɵɵinject(resolveForwardRef(existingProvider_1.useExisting)); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$1))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = (resolveForwardRef(classProvider_1.useClass))).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ɵprov = ɵɵdefineInjectable({\n                token: injectableType,\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var INJECTOR_SCOPE = new InjectionToken('Set Injector scope.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             * - `null` value implies that we don't have the record. Used by tree-shakable injectors\n             * to prevent further searches.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            var dedupStack = [];\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in additional providers then do the same for `def`. This order is\n            // important because `def` may include providers that override ones in additionalProviders.\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            var record = this.records.get(INJECTOR_SCOPE);\n            this.scope = record != null ? record.value : null;\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an injectable\n                        // def with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an injectable def and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                        }\n                        else {\n                            record = null;\n                        }\n                        this.records.set(token, record);\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record != null /* NOT null || undefined */) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                // Set the notFoundValue based on the Optional flag - if optional is set and notFoundValue\n                // is undefined, the value is null, otherwise it's the notFoundValue.\n                notFoundValue = (flags & exports.InjectFlags.Optional) && notFoundValue === THROW_IF_NOT_FOUND ?\n                    null :\n                    notFoundValue;\n                return nextInjector.get(token, notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         *\n         * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n         * the function will return \"true\" to indicate that the providers of the type definition need\n         * to be processed. This allows us to process providers of injector types after all imports of\n         * an injector definition are processed. (following View Engine semantics: see FW-1349)\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return false;\n            // Either the defOrWrappedDef is an InjectorType (with injector def) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the injector def (`ɵinj`).\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return false;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                var importTypesWithProviders_1;\n                try {\n                    deepForEach(def.imports, function (imported) {\n                        if (_this.processInjectorType(imported, parents, dedupStack)) {\n                            if (importTypesWithProviders_1 === undefined)\n                                importTypesWithProviders_1 = [];\n                            // If the processed import is an injector type with providers, we store it in the\n                            // list of import types with providers, so that we can process those afterwards.\n                            importTypesWithProviders_1.push(imported);\n                        }\n                    });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n                // Imports which are declared with providers (TypeWithProviders) need to be processed\n                // after all imported modules are processed. This is similar to how View Engine\n                // processes/merges module imports in the metadata resolver. See: FW-1349.\n                if (importTypesWithProviders_1 !== undefined) {\n                    var _loop_1 = function (i) {\n                        var _a = importTypesWithProviders_1[i], ngModule_1 = _a.ngModule, providers = _a.providers;\n                        deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModule_1, providers || EMPTY_ARRAY$2); });\n                    };\n                    for (var i = 0; i < importTypesWithProviders_1.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            return (ngModule !== undefined &&\n                defOrWrappedDef.providers !== undefined);\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === this.scope);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an injectable def directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        var factory = injectableDef !== null ? injectableDef.factory : getFactoryDef(token);\n        if (factory !== null) {\n            return factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its injector def\n        // (`ɵinj`)\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an injectable def (ɵprov) and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing a \\u0275prov definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = newArray(paramLength, '?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an injectable\n        // def from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return function () { return inheritedInjectableDef.factory(token); };\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            var factory = providerToFactory(provider, ngModuleType, providers);\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    function INJECTOR_IMPL__PRE_R3__(providers, parent, name) {\n        return new StaticInjector(providers, parent, name);\n    }\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__POST_R3__;\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ɵprov = ɵɵdefineInjectable({\n            token: Injector,\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR$1 = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var NO_NEW_LINE$1 = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = Injector.NULL; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            this.scope = recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var records = this._records;\n            var record = records.get(token);\n            if (record === undefined) {\n                // This means we have never seen this record, see if it is tree shakable provider.\n                var injectableDef = getInjectableDef(token);\n                if (injectableDef) {\n                    var providedIn = injectableDef && injectableDef.providedIn;\n                    if (providedIn === 'any' || providedIn != null && providedIn === this.scope) {\n                        records.set(token, record = resolveProvider({ provide: token, useFactory: injectableDef.factory, deps: EMPTY }));\n                    }\n                }\n                if (record === undefined) {\n                    // Set record to null to make sure that we don't go through expensive lookup above again.\n                    records.set(token, null);\n                }\n            }\n            var lastInjector = setCurrentInjector(this);\n            try {\n                return tryResolveToken(token, record, records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n            finally {\n                setCurrentInjector(lastInjector);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) {\n            // Just use IDENT\n        }\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        var scope = null;\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (Array.isArray(provider)) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    scope = recursivelyProcessProviders(records, provider[i]) || scope;\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                if (token === INJECTOR_SCOPE) {\n                    scope = resolvedProvider.value;\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n        return scope;\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR$1) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR$1) {\n                throw Error(NO_NEW_LINE$1 + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR$1;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? Injector.NULL : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        else if (!(flags & exports.InjectFlags.Optional)) {\n            value = Injector.NULL.get(token, notFoundValue);\n        }\n        else {\n            value = Injector.NULL.get(token, typeof notFoundValue !== 'undefined' ? notFoundValue : null);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (Array.isArray(token)) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (Array.isArray(b)) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = {};\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = [];\n            this.objs = [];\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = [];\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = [];\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     * @deprecated Since 9.0.0. With Ivy, this property is no longer necessary.\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ɵcmp for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function isComponentDefPendingResolution(type) {\n        return componentDefPendingResolution.has(type);\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function restoreComponentResolutionQueue(queue) {\n        componentDefPendingResolution.clear();\n        queue.forEach(function (_, type) { return componentDefPendingResolution.add(type); });\n        componentResourceResolutionQueue = queue;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ɵɵallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstCreatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstCreatePass, true, 'Should only be called in first create pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstCreatePass, true, 'Should only be called in first create pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (Object.is(oldValue, value)) {\n            return false;\n        }\n        else {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Updates the value of or removes a bound attribute on an Element.\n     *\n     * Used in the case of `[attr.title]=\"value\"`\n     *\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵattribute(name, value, sanitizer, namespace) {\n        var lView = getLView();\n        if (bindingUpdated(lView, nextBindingIndex(), value)) {\n            elementAttributeInternal(getSelectedIndex(), name, value, lView, sanitizer, namespace);\n        }\n        return ɵɵattribute;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(lView, values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var isBindingUpdated = false;\n        var bindingIndex = getBindingIndex();\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n        }\n        setBindingIndex(bindingIndex);\n        if (!isBindingUpdated) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(lView, prefix, v0, suffix) {\n        var different = bindingUpdated(lView, nextBindingIndex(), v0);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     */\n    function interpolation2(lView, prefix, v0, i0, v1, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        incrementBindingIndex(2);\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     */\n    function interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        incrementBindingIndex(3);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     */\n    function interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        incrementBindingIndex(4);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     */\n    function interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        incrementBindingIndex(5);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     */\n    function interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        incrementBindingIndex(6);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     */\n    function interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        incrementBindingIndex(7);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     */\n    function interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        incrementBindingIndex(8);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     *\n     * Update an interpolated attribute on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate8;\n    }\n    /**\n     * Update an interpolated attribute on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param attrName The name of the attribute to update.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolated, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    /**\n     * Used to perform change detection on the whole application.\n     *\n     * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n     * executes lifecycle hooks and conditionally checks components based on their\n     * `ChangeDetectionStrategy` and dirtiness.\n     *\n     * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n     * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n     * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n     * be changed when calling `renderComponent` and providing the `scheduler` option.\n     */\n    function tick(component) {\n        var rootView = getRootView(component);\n        var rootContext = rootView[CONTEXT];\n        tickRootContext(rootContext);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var lView = getLView();\n        var tNode = containerInternal(lView, index, null, null);\n        if (lView[TVIEW].firstCreatePass) {\n            tNode.tViews = [];\n        }\n        setIsNotParent();\n    }\n    function templateFirstCreatePass(index, tView, lView, templateFn, decls, vars, tagName, attrsIndex, localRefsIndex) {\n        ngDevMode && assertFirstCreatePass(tView);\n        ngDevMode && ngDevMode.firstCreatePass++;\n        var tViewConsts = tView.consts;\n        // TODO(pk): refactor getOrCreateTNode to have the \"create\" only version\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 0 /* Container */, tagName || null, getConstant(tViewConsts, attrsIndex));\n        resolveDirectives(tView, lView, tNode, getConstant(tViewConsts, localRefsIndex));\n        registerPostOrderHooks(tView, tNode);\n        var embeddedTView = tNode.tViews = createTView(2 /* Embedded */, -1, templateFn, decls, vars, tView.directiveRegistry, tView.pipeRegistry, null, tView.schemas, tViewConsts);\n        var embeddedTViewNode = createTNode(tView, null, 2 /* View */, -1, null, null);\n        embeddedTViewNode.injectorIndex = tNode.injectorIndex;\n        embeddedTView.node = embeddedTViewNode;\n        if (tView.queries !== null) {\n            tView.queries.template(tView, tNode);\n            embeddedTView.queries = tView.queries.embeddedTView(tNode);\n        }\n        return tNode;\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param decls The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrsIndex Index of template attributes in the `consts` array.\n     * @param localRefs Index of the local references in the `consts` array.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, decls, vars, tagName, attrsIndex, localRefsIndex, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.firstCreatePass ?\n            templateFirstCreatePass(index, tView, lView, templateFn, decls, vars, tagName, attrsIndex, localRefsIndex) :\n            tView.data[adjustedIndex];\n        setPreviousOrParentTNode(tNode, false);\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        appendChild(comment, tNode, lView);\n        attachPatchData(comment, lView);\n        addToViewTree(lView, lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode));\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n        }\n        if (localRefsIndex != null) {\n            saveResolvedLocalsInData(lView, tNode, localRefExtractor);\n        }\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = load(tView.data, index);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setPreviousOrParentTNode(previousOrParentTNode, true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        if (!getCheckNoChangesMode()) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = tView.preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, null);\n                }\n            }\n            else {\n                var preOrderHooks = tView.preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                }\n                incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n            }\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = getLContainerActiveIndex(lContainer);\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    function containerInternal(lView, nodeIndex, tagName, attrs) {\n        ngDevMode && assertEqual(getBindingIndex(), lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = nodeIndex + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, nodeIndex + HEADER_OFFSET);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 0 /* Container */, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        attachPatchData(comment, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return load(contextLView, index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        var tNode = getPreviousOrParentTNode();\n        return getOrCreateInjectable(tNode, lView, resolveForwardRef(token), flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Throws an error indicating that a factory function could not be generated by the compiler for a\n     * particular class.\n     *\n     * This instruction allows the actual error message to be optimized away when ngDevMode is turned\n     * off, saving bytes of generated code while still providing a good experience in dev mode.\n     *\n     * The name of the class is not mentioned here, but will be in the generated factory function name\n     * and thus in the stack trace.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinvalidFactory() {\n        var msg = ngDevMode ? \"This constructor was not compatible with Dependency Injection.\" : 'invalid';\n        throw new Error(msg);\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for how styling instructions are processed in Angular.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * Sets the current style sanitizer function which will then be used\n     * within all follow-up prop and map-based style binding instructions\n     * for the given element.\n     *\n     * Note that once styling has been applied to the element (i.e. once\n     * `advance(n)` is executed or the hostBindings/template function exits)\n     * then the active `sanitizerFn` will be set to `null`. This means that\n     * once styling is applied to another element then a another call to\n     * `styleSanitizer` will need to be made.\n     *\n     * @param sanitizerFn The sanitization function that will be used to\n     *       process style prop/value entries.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleSanitizer(sanitizer) {\n        setCurrentStyleSanitizer(sanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param prop A valid CSS property.\n     * @param value New value to write (`null` or an empty string to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(prop, value, suffix) {\n        stylePropInternal(getSelectedIndex(), prop, value, suffix);\n        return ɵɵstyleProp;\n    }\n    /**\n     * Internal function for applying a single style to an element.\n     *\n     * The reason why this function has been separated from `ɵɵstyleProp` is because\n     * it is also called from `ɵɵstylePropInterpolate`.\n     */\n    function stylePropInternal(elementIndex, prop, value, suffix) {\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = nextBindingIndex();\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var firstUpdatePass = lView[TVIEW].firstUpdatePass;\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (firstUpdatePass) {\n            patchConfig(tNode, 32768 /* hasStylePropBindings */);\n            patchHostStylingFlag(tNode, isHostStyling(), false);\n        }\n        var updated = stylingProp(tNode, firstUpdatePass, lView, bindingIndex, prop, resolveStylePropValue(value, suffix), false);\n        if (ngDevMode) {\n            ngDevMode.styleProp++;\n            if (updated) {\n                ngDevMode.stylePropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param prop A valid CSS class (only one).\n     * @param value A true/false value which will turn the class on or off.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(className, value) {\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = nextBindingIndex();\n        var lView = getLView();\n        var elementIndex = getSelectedIndex();\n        var tNode = getTNode(elementIndex, lView);\n        var firstUpdatePass = lView[TVIEW].firstUpdatePass;\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (firstUpdatePass) {\n            patchConfig(tNode, 1024 /* hasClassPropBindings */);\n            patchHostStylingFlag(tNode, isHostStyling(), true);\n        }\n        var updated = stylingProp(tNode, firstUpdatePass, lView, bindingIndex, className, value, true);\n        if (ngDevMode) {\n            ngDevMode.classProp++;\n            if (updated) {\n                ngDevMode.classPropCacheMiss++;\n            }\n        }\n        return ɵɵclassProp;\n    }\n    /**\n     * Shared function used to update a prop-based styling binding for an element.\n     *\n     * Depending on the state of the `tNode.styles` styles context, the style/prop\n     * value may be applied directly to the element instead of being processed\n     * through the context. The reason why this occurs is for performance and fully\n     * depends on the state of the context (i.e. whether or not there are duplicate\n     * bindings or whether or not there are map-based bindings and property bindings\n     * present together).\n     */\n    function stylingProp(tNode, firstUpdatePass, lView, bindingIndex, prop, value, isClassBased) {\n        var updated = false;\n        var native = getNativeByTNode(tNode, lView);\n        var context = isClassBased ? getClassesContext(tNode) : getStylesContext(tNode);\n        var sanitizer = isClassBased ? null : getCurrentStyleSanitizer();\n        // [style.prop] and [class.name] bindings do not use `bind()` and will\n        // therefore manage accessing and updating the new value in the lView directly.\n        // For this reason, the checkNoChanges situation must also be handled here\n        // as well.\n        if (ngDevMode && getCheckNoChangesMode()) {\n            var oldValue = getValue(lView, bindingIndex);\n            if (hasValueChangedUnwrapSafeValue(oldValue, value)) {\n                throwErrorIfNoChangesMode(false, oldValue, value);\n            }\n        }\n        // Direct Apply Case: bypass context resolution and apply the\n        // style/class value directly to the element\n        if (allowDirectStyling(tNode, isClassBased, firstUpdatePass)) {\n            var sanitizerToUse = isClassBased ? null : sanitizer;\n            var renderer = getRenderer(tNode, lView);\n            updated = applyStylingValueDirectly(renderer, context, tNode, native, lView, bindingIndex, prop, value, isClassBased, sanitizerToUse);\n            if (sanitizerToUse) {\n                // it's important we remove the current style sanitizer once the\n                // element exits, otherwise it will be used by the next styling\n                // instructions for the next element.\n                setElementExitFn(stylingApply);\n            }\n        }\n        else {\n            // Context Resolution (or first update) Case: save the value\n            // and defer to the context to flush and apply the style/class binding\n            // value to the element.\n            var directiveIndex = getActiveDirectiveId();\n            if (isClassBased) {\n                updated = updateClassViaContext(context, tNode, lView, native, directiveIndex, prop, bindingIndex, value, false, firstUpdatePass);\n            }\n            else {\n                updated = updateStyleViaContext(context, tNode, lView, native, directiveIndex, prop, bindingIndex, value, sanitizer, false, firstUpdatePass);\n            }\n            setElementExitFn(stylingApply);\n        }\n        return updated;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var firstUpdatePass = lView[TVIEW].firstUpdatePass;\n        var context = getStylesContext(tNode);\n        var hasDirectiveInput = hasStyleInput(tNode);\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = incrementBindingIndex(2);\n        var hostBindingsMode = isHostStyling();\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!hostBindingsMode && hasDirectiveInput && styles !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, styles, false, firstUpdatePass);\n            styles = NO_CHANGE;\n        }\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (firstUpdatePass) {\n            patchConfig(tNode, 16384 /* hasStyleMapBindings */);\n            patchHostStylingFlag(tNode, isHostStyling(), false);\n        }\n        stylingMap(context, tNode, firstUpdatePass, lView, bindingIndex, styles, false, hasDirectiveInput);\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        classMapInternal(getSelectedIndex(), classes);\n    }\n    /**\n     * Internal function for applying a class string or key/value map of classes to an element.\n     *\n     * The reason why this function has been separated from `ɵɵclassMap` is because\n     * it is also called from `ɵɵclassMapInterpolate`.\n     */\n    function classMapInternal(elementIndex, classes) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var firstUpdatePass = lView[TVIEW].firstUpdatePass;\n        var context = getClassesContext(tNode);\n        var hasDirectiveInput = hasClassInput(tNode);\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = incrementBindingIndex(2);\n        var hostBindingsMode = isHostStyling();\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!hostBindingsMode && hasDirectiveInput && classes !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, classes, true, firstUpdatePass);\n            classes = NO_CHANGE;\n        }\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (firstUpdatePass) {\n            patchConfig(tNode, 512 /* hasClassMapBindings */);\n            patchHostStylingFlag(tNode, isHostStyling(), true);\n        }\n        stylingMap(context, tNode, firstUpdatePass, lView, bindingIndex, classes, true, hasDirectiveInput);\n    }\n    /**\n     * Shared function used to update a map-based styling binding for an element.\n     *\n     * When this function is called it will activate support for `[style]` and\n     * `[class]` bindings in Angular.\n     */\n    function stylingMap(context, tNode, firstUpdatePass, lView, bindingIndex, value, isClassBased, hasDirectiveInput) {\n        var directiveIndex = getActiveDirectiveId();\n        var native = getNativeByTNode(tNode, lView);\n        var oldValue = getValue(lView, bindingIndex);\n        var sanitizer = getCurrentStyleSanitizer();\n        var valueHasChanged = hasValueChanged(oldValue, value);\n        // [style] and [class] bindings do not use `bind()` and will therefore\n        // manage accessing and updating the new value in the lView directly.\n        // For this reason, the checkNoChanges situation must also be handled here\n        // as well.\n        if (ngDevMode && valueHasChanged && getCheckNoChangesMode()) {\n            throwErrorIfNoChangesMode(false, oldValue, value);\n        }\n        // Direct Apply Case: bypass context resolution and apply the\n        // style/class map values directly to the element\n        if (allowDirectStyling(tNode, isClassBased, firstUpdatePass)) {\n            var sanitizerToUse = isClassBased ? null : sanitizer;\n            var renderer = getRenderer(tNode, lView);\n            applyStylingMapDirectly(renderer, context, tNode, native, lView, bindingIndex, value, isClassBased, sanitizerToUse, valueHasChanged, hasDirectiveInput);\n            if (sanitizerToUse) {\n                // it's important we remove the current style sanitizer once the\n                // element exits, otherwise it will be used by the next styling\n                // instructions for the next element.\n                setElementExitFn(stylingApply);\n            }\n        }\n        else {\n            var stylingMapArr = value === NO_CHANGE ? NO_CHANGE : normalizeIntoStylingMap(oldValue, value, !isClassBased);\n            activateStylingMapFeature();\n            // Context Resolution (or first update) Case: save the map value\n            // and defer to the context to flush and apply the style/class binding\n            // value to the element.\n            if (isClassBased) {\n                updateClassViaContext(context, tNode, lView, native, directiveIndex, null, bindingIndex, stylingMapArr, valueHasChanged, firstUpdatePass);\n            }\n            else {\n                updateStyleViaContext(context, tNode, lView, native, directiveIndex, null, bindingIndex, stylingMapArr, sanitizer, valueHasChanged, firstUpdatePass);\n            }\n            setElementExitFn(stylingApply);\n        }\n        if (ngDevMode) {\n            isClassBased ? ngDevMode.classMap : ngDevMode.styleMap++;\n            if (valueHasChanged) {\n                isClassBased ? ngDevMode.classMapCacheMiss : ngDevMode.styleMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Writes a value to a directive's `style` or `class` input binding (if it has changed).\n     *\n     * If a directive has a `@Input` binding that is set on `style` or `class` then that value\n     * will take priority over the underlying style/class styling bindings. This value will\n     * be updated for the binding each time during change detection.\n     *\n     * When this occurs this function will attempt to write the value to the input binding\n     * depending on the following situations:\n     *\n     * - If `oldValue !== newValue`\n     * - If `newValue` is `null` (but this is skipped if it is during the first update pass)\n     */\n    function updateDirectiveInputValue(context, lView, tNode, bindingIndex, newValue, isClassBased, firstUpdatePass) {\n        var oldValue = getValue(lView, bindingIndex);\n        if (hasValueChanged(oldValue, newValue)) {\n            // even if the value has changed we may not want to emit it to the\n            // directive input(s) in the event that it is falsy during the\n            // first update pass.\n            if (isStylingValueDefined(newValue) || !firstUpdatePass) {\n                var inputName = isClassBased ? selectClassBasedInputName(tNode.inputs) : 'style';\n                var inputs = tNode.inputs[inputName];\n                var initialValue = getInitialStylingValue(context);\n                var value = normalizeStylingDirectiveInputValue(initialValue, newValue, isClassBased);\n                setInputsForProperty(lView, inputs, inputName, value);\n                setElementExitFn(stylingApply);\n            }\n            setValue(lView, bindingIndex, newValue);\n        }\n    }\n    /**\n     * Returns the appropriate directive input value for `style` or `class`.\n     *\n     * Earlier versions of Angular expect a binding value to be passed into directive code\n     * exactly as it is unless there is a static value present (in which case both values\n     * will be stringified and concatenated).\n     */\n    function normalizeStylingDirectiveInputValue(initialValue, bindingValue, isClassBased) {\n        var value = bindingValue;\n        // we only concat values if there is an initial value, otherwise we return the value as is.\n        // Note that this is to satisfy backwards-compatibility in Angular.\n        if (initialValue.length) {\n            if (isClassBased) {\n                value = concatString(initialValue, forceClassesAsString(bindingValue));\n            }\n            else {\n                value = concatString(initialValue, forceStylesAsString(bindingValue, true), ';');\n            }\n        }\n        return value;\n    }\n    /**\n     * Flushes all styling code to the element.\n     *\n     * This function is designed to be scheduled from any of the four styling instructions\n     * in this file. When called it will flush all style and class bindings to the element\n     * via the context resolution algorithm.\n     */\n    function stylingApply() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var elementIndex = getSelectedIndex();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var directiveIndex = getActiveDirectiveId();\n        var renderer = getRenderer(tNode, lView);\n        var sanitizer = getCurrentStyleSanitizer();\n        var classesContext = isStylingContext(tNode.classes) ? tNode.classes : null;\n        var stylesContext = isStylingContext(tNode.styles) ? tNode.styles : null;\n        flushStyling(renderer, lView, tNode, classesContext, stylesContext, native, directiveIndex, sanitizer, tView.firstUpdatePass);\n        resetCurrentStyleSanitizer();\n    }\n    function getRenderer(tNode, lView) {\n        return tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n    }\n    /**\n     * Searches and assigns provided all static style/class entries (found in the `attrs` value)\n     * and registers them in their respective styling contexts.\n     */\n    function registerInitialStylingOnTNode(tNode, attrs, startIndex) {\n        var hasAdditionalInitialStyling = false;\n        var styles = getStylingMapArray(tNode.styles);\n        var classes = getStylingMapArray(tNode.classes);\n        var mode = -1;\n        for (var i = startIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                classes = classes || allocStylingMapArray(null);\n                addItemToStylingMap(classes, attr, true);\n                hasAdditionalInitialStyling = true;\n            }\n            else if (mode == 2 /* Styles */) {\n                var value = attrs[++i];\n                styles = styles || allocStylingMapArray(null);\n                addItemToStylingMap(styles, attr, value);\n                hasAdditionalInitialStyling = true;\n            }\n        }\n        if (classes && classes.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.classes) {\n                tNode.classes = classes;\n            }\n            updateRawValueOnContext(tNode.classes, stylingMapToString(classes, true));\n        }\n        if (styles && styles.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.styles) {\n                tNode.styles = styles;\n            }\n            updateRawValueOnContext(tNode.styles, stylingMapToString(styles, false));\n        }\n        if (hasAdditionalInitialStyling) {\n            tNode.flags |= 256 /* hasInitialStyling */;\n        }\n        return hasAdditionalInitialStyling;\n    }\n    function updateRawValueOnContext(context, value) {\n        var stylingMapArr = getStylingMapArray(context);\n        stylingMapArr[0 /* RawValuePosition */] = value;\n    }\n    function getStylesContext(tNode) {\n        return getContext(tNode, false);\n    }\n    function getClassesContext(tNode) {\n        return getContext(tNode, true);\n    }\n    /**\n     * Returns/instantiates a styling context from/to a `tNode` instance.\n     */\n    function getContext(tNode, isClassBased) {\n        var context = isClassBased ? tNode.classes : tNode.styles;\n        if (!isStylingContext(context)) {\n            var hasDirectives = isDirectiveHost(tNode);\n            context = allocTStylingContext(context, hasDirectives);\n            if (ngDevMode) {\n                attachStylingDebugObject(context, tNode, isClassBased);\n            }\n            if (isClassBased) {\n                tNode.classes = context;\n            }\n            else {\n                tNode.styles = context;\n            }\n        }\n        return context;\n    }\n    function resolveStylePropValue(value, suffix) {\n        if (value === NO_CHANGE)\n            return value;\n        var resolvedValue = null;\n        if (isStylingValueDefined(value)) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                resolvedValue = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a string value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                resolvedValue = value;\n            }\n        }\n        return resolvedValue;\n    }\n    /**\n     * Whether or not the style/class binding being applied was executed within a host bindings\n     * function.\n     */\n    function isHostStyling() {\n        return isHostStylingActive(getActiveDirectiveId());\n    }\n    function patchHostStylingFlag(tNode, hostBindingsMode, isClassBased) {\n        var flag = hostBindingsMode ?\n            isClassBased ? 4096 /* hasHostClassBindings */ : 131072 /* hasHostStyleBindings */ :\n            isClassBased ? 2048 /* hasTemplateClassBindings */ : 65536 /* hasTemplateStyleBindings */;\n        patchConfig(tNode, flag);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function elementStartFirstCreatePass(index, tView, lView, native, name, attrsIndex, localRefsIndex) {\n        ngDevMode && ngDevMode.firstCreatePass++;\n        var tViewConsts = tView.consts;\n        var attrs = getConstant(tViewConsts, attrsIndex);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, attrs);\n        if (attrs !== null) {\n            registerInitialStylingOnTNode(tNode, attrs, 0);\n        }\n        var hasDirectives = resolveDirectives(tView, lView, tNode, getConstant(tViewConsts, localRefsIndex));\n        ngDevMode && validateElement(lView, native, tNode, hasDirectives);\n        if (tView.queries !== null) {\n            tView.queries.elementStart(tView, tNode);\n        }\n        return tNode;\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrsIndex Index of the element's attributes in the `consts` array.\n     * @param localRefsIndex Index of the element's local references in the `consts` array.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, attrsIndex, localRefsIndex) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = HEADER_OFFSET + index;\n        ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'elements should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        ngDevMode && assertDataInRange(lView, adjustedIndex);\n        var renderer = lView[RENDERER];\n        var native = lView[adjustedIndex] = elementCreate(name, renderer, getNamespace());\n        var tNode = tView.firstCreatePass ?\n            elementStartFirstCreatePass(index, tView, lView, native, name, attrsIndex, localRefsIndex) :\n            tView.data[adjustedIndex];\n        setPreviousOrParentTNode(tNode, true);\n        var attrs = tNode.attrs;\n        if (attrs != null) {\n            setUpAttributes(renderer, native, attrs);\n        }\n        if ((tNode.flags & 256 /* hasInitialStyling */) === 256 /* hasInitialStyling */) {\n            renderInitialStyling(renderer, native, tNode, false);\n        }\n        appendChild(native, tNode, lView);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefsIndex != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeType(tNode, 3 /* Element */);\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        decreaseElementDepthCount();\n        if (tView.firstCreatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n        if (hasClassInput(tNode)) {\n            var inputName = selectClassBasedInputName(tNode.inputs);\n            setDirectiveStylingInput(tNode.classes, lView, tNode.inputs[inputName], inputName);\n        }\n        if (hasStyleInput(tNode)) {\n            setDirectiveStylingInput(tNode.styles, lView, tNode.inputs['style'], 'style');\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrsIndex Index of the element's attributes in the `consts` array.\n     * @param localRefsIndex Index of the element's local references in the `consts` array.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, attrsIndex, localRefsIndex) {\n        ɵɵelementStart(index, name, attrsIndex, localRefsIndex);\n        ɵɵelementEnd();\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(lView[RENDERER], native, attrs);\n            if (tView.firstCreatePass) {\n                var stylingNeedsToBeRendered = registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n                // this is only called during the first template pass in the\n                // event that this current directive assigned initial style/class\n                // host attribute values to the element. Because initial styling\n                // values are applied before directives are first rendered (within\n                // `createElement`) this means that initial styling for any directives\n                // still needs to be applied. Note that this will only happen during\n                // the first template pass and not each time a directive applies its\n                // attribute values to the element.\n                if (stylingNeedsToBeRendered) {\n                    var renderer = lView[RENDERER];\n                    renderInitialStyling(renderer, native, tNode, true);\n                }\n            }\n        }\n    }\n    function setDirectiveStylingInput(context, lView, stylingInputs, propName) {\n        // older versions of Angular treat the input as `null` in the\n        // event that the value does not exist at all. For this reason\n        // we can't have a styling value be an empty string.\n        var value = (context && getInitialStylingValue(context)) || null;\n        // Ivy does an extra `[class]` write with a falsy value since the value\n        // is applied during creation mode. This is a deviation from VE and should\n        // be (Jira Issue = FW-1467).\n        setInputsForProperty(lView, stylingInputs, propName, value);\n    }\n    function validateElement(hostView, element, tNode, hasDirectives) {\n        var schemas = hostView[TVIEW].schemas;\n        // If `schemas` is set to `null`, that's an indication that this Component was compiled in AOT\n        // mode where this check happens at compile time. In JIT mode, `schemas` is always present and\n        // defined as an array (as an empty array in case `schemas` field is not defined) and we should\n        // execute the check below.\n        if (schemas === null)\n            return;\n        var tagName = tNode.tagName;\n        // If the element matches any directive, it's considered as valid.\n        if (!hasDirectives && tagName !== null) {\n            // The element is unknown if it's an instance of HTMLUnknownElement or it isn't registered\n            // as a custom element. Note that unknown elements with a dash in their name won't be instances\n            // of HTMLUnknownElement in browsers that support web components.\n            var isUnknown = (typeof HTMLUnknownElement === 'function' && element instanceof HTMLUnknownElement) ||\n                (typeof customElements !== 'undefined' && tagName.indexOf('-') > -1 &&\n                    !customElements.get(tagName));\n            if (isUnknown && !matchingSchemas(hostView, tagName)) {\n                var errorMessage = \"'\" + tagName + \"' is not a known element:\\n\";\n                errorMessage +=\n                    \"1. If '\" + tagName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n                if (tagName && tagName.indexOf('-') > -1) {\n                    errorMessage +=\n                        \"2. If '\" + tagName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n                }\n                else {\n                    errorMessage +=\n                        \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                throw new Error(errorMessage);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function elementContainerStartFirstCreatePass(index, tView, lView, attrsIndex, localRefsIndex) {\n        ngDevMode && ngDevMode.firstCreatePass++;\n        var tViewConsts = tView.consts;\n        var attrs = getConstant(tViewConsts, attrsIndex);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, 'ng-container', attrs);\n        // While ng-container doesn't necessarily support styling, we use the style context to identify\n        // and execute directives on the ng-container.\n        if (attrs !== null) {\n            registerInitialStylingOnTNode(tNode, attrs, 0);\n        }\n        var localRefs = getConstant(tViewConsts, localRefsIndex);\n        resolveDirectives(tView, lView, tNode, localRefs);\n        if (tView.queries !== null) {\n            tView.queries.elementStart(tView, tNode);\n        }\n        return tNode;\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrsIndex Index of the container attributes in the `consts` array.\n     * @param localRefsIndex Index of the container's local references in the `consts` array.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, attrsIndex, localRefsIndex) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, adjustedIndex);\n        ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'element containers should be created before any bindings');\n        var tNode = tView.firstCreatePass ?\n            elementContainerStartFirstCreatePass(index, tView, lView, attrsIndex, localRefsIndex) :\n            tView.data[adjustedIndex];\n        setPreviousOrParentTNode(tNode, true);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'ng-container' : '');\n        appendChild(native, tNode, lView);\n        attachPatchData(native, lView);\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefsIndex != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        if (tView.firstCreatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Creates an empty logical container using {@link elementContainerStart}\n     * and {@link elementContainerEnd}\n     *\n     * @param index Index of the element in the LView array\n     * @param attrsIndex Index of the container attributes in the `consts` array.\n     * @param localRefsIndex Index of the container's local references in the `consts` array.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainer(index, attrsIndex, localRefsIndex) {\n        ɵɵelementContainerStart(index, attrsIndex, localRefsIndex);\n        ɵɵelementContainerEnd();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, decls, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, getLContainerActiveIndex(lContainer), viewBlockId);\n        if (viewToRender) {\n            setIsParent();\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, decls, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, getLContainerActiveIndex(lContainer));\n            }\n            lContainer[ACTIVE_INDEX] += 2 /* INCREMENT */;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param decls The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, decls, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(2 /* Embedded */, viewIndex, null, decls, vars, tView.directiveRegistry, tView.pipeRegistry, null, null, tView.consts);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var viewHost = lView[T_HOST];\n        var context = lView[CONTEXT];\n        if (isCreationMode(lView)) {\n            renderView(lView, tView, context); // creation mode pass\n        }\n        refreshView(lView, tView, tView.template, context); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        leaveViewProcessExit();\n        setPreviousOrParentTNode(viewHost, false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        listenerInternal(lView, lView[RENDERER], tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n        return ɵɵlistener;\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var renderer = loadComponentRenderer(tNode, lView);\n        listenerInternal(lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n        return ɵɵcomponentHostSyntheticListener;\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var tView = lView[TVIEW];\n        var isTNodeDirectiveHost = isDirectiveHost(tNode);\n        var firstCreatePass = tView.firstCreatePass;\n        var tCleanup = firstCreatePass && (tView.cleanup || (tView.cleanup = []));\n        // When the ɵɵlistener instruction was generated and is executed we know that there is either a\n        // native listener or a directive output on this element. As such we we know that we will have to\n        // register a listener and store its cleanup function on LView.\n        var lCleanup = getCleanup(lView);\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n            var target = resolved.target || native;\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && isTNodeDirectiveHost) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener to coalesced listeners list, maintaining the order in which\n                    // listeners are registered. For performance reasons, we keep a reference to the last\n                    // listener in that list (in `__ngLastListenerFn__` field), so we can avoid going through\n                    // the entire set each time we need to add a new listener.\n                    var lastListenerFn = existingListener.__ngLastListenerFn__ || existingListener;\n                    lastListenerFn.__ngNextListenerFn__ = listenerFn;\n                    existingListener.__ngLastListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs !== null && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                for (var i = 0; i < propsLength; i += 2) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 1];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // Ivy uses `Function` as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`.\n            if (e === Function) {\n                return listenerFn;\n            }\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 2 /* isComponentHost */ ?\n                getComponentLViewByIndex(tNode.index, lView) :\n                lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Checks a given node against matching projection slots and returns the\n     * determined slot index. Returns \"null\" if no slot matched the given node.\n     *\n     * This function takes into account the parsed ngProjectAs selector from the\n     * node's attributes. If present, it will check whether the ngProjectAs selector\n     * matches any of the projection slot selectors.\n     */\n    function matchingProjectionSlotIndex(tNode, projectionSlots) {\n        var wildcardNgContentIndex = null;\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < projectionSlots.length; i++) {\n            var slotValue = projectionSlots[i];\n            // The last wildcard projection slot should match all nodes which aren't matching\n            // any selector. This is necessary to be backwards compatible with view engine.\n            if (slotValue === '*') {\n                wildcardNgContentIndex = i;\n                continue;\n            }\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n                return i; // first matching selector \"captures\" a given node\n            }\n        }\n        return wildcardNgContentIndex;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param projectionSlots? A collection of projection slots. A projection slot can be based\n     *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n     *        all nodes which do not match any selector. If not specified, a single wildcard\n     *        selector projection slot will be defined.\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(projectionSlots) {\n        var componentNode = getLView()[DECLARATION_COMPONENT_VIEW][T_HOST];\n        if (!componentNode.projection) {\n            // If no explicit projection slots are defined, fall back to a single\n            // projection slot with the wildcard selector.\n            var numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n            var projectionHeads = componentNode.projection =\n                newArray(numProjectionSlots, null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n                if (slotIndex !== null) {\n                    if (tails[slotIndex]) {\n                        tails[slotIndex].projectionNext = componentChild;\n                    }\n                    else {\n                        projectionHeads[slotIndex] = componentChild;\n                    }\n                    tails[slotIndex] = componentChild;\n                }\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    var delayProjection = false;\n    function setDelayProjection(value) {\n        delayProjection = value;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsNotParent();\n        // We might need to delay the projection of nodes if they are in the middle of an i18n block\n        if (!delayProjection) {\n            // re-distribution of projectable nodes is stored on a component's view level\n            applyProjection(lView, tProjectionNode);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵproperty;\n    }\n\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(lView, getSelectedIndex(), propName, interpolatedValue, sanitizer);\n            ngDevMode &&\n                storePropertyBindingMetadata(lView[TVIEW].data, getSelectedIndex(), propName, getBindingIndex() - 1, prefix, suffix);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode &&\n                storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 2, prefix, i0, suffix);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode &&\n                storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 3, prefix, i0, i1, suffix);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 4, prefix, i0, i1, i2, suffix);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 5, prefix, i0, i1, i2, i3, suffix);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 6, prefix, i0, i1, i2, i3, i4, suffix);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 7, prefix, i0, i1, i2, i3, i4, i5, suffix);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 8, prefix, i0, i1, i2, i3, i4, i5, i6, suffix);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The a collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            if (ngDevMode) {\n                var interpolationInBetween = [values[0]]; // prefix\n                for (var i = 2; i < values.length; i += 2) {\n                    interpolationInBetween.push(values[i]);\n                }\n                storePropertyBindingMetadata.apply(void 0, __spread([lView[TVIEW].data, nodeIndex, propName,\n                    getBindingIndex() - interpolationInBetween.length + 1], interpolationInBetween));\n            }\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Static string value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        if (value === void 0) { value = ''; }\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && assertDataInRange(lView, adjustedIndex);\n        var tNode = tView.firstCreatePass ?\n            getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, null, null) :\n            tView.data[adjustedIndex];\n        var textNative = lView[adjustedIndex] = createTextNode(value, lView[RENDERER]);\n        appendChild(textNative, tNode, lView);\n        // Text nodes are self closing.\n        setPreviousOrParentTNode(tNode, false);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update text content with a lone bound value\n     *\n     * Used when a text node has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div>{{v0}}</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate(v0);\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate(v0) {\n        ɵɵtextInterpolate1('', v0, '');\n        return ɵɵtextInterpolate;\n    }\n    /**\n     *\n     * Update text content with single bound value surrounded by other text.\n     *\n     * Used when a text node has 1 interpolated value in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate1('prefix', v0, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation1(lView, prefix, v0, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate1;\n    }\n    /**\n     *\n     * Update text content with 2 bound values surrounded by other text.\n     *\n     * Used when a text node has 2 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate2;\n    }\n    /**\n     *\n     * Update text content with 3 bound values surrounded by other text.\n     *\n     * Used when a text node has 3 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate3;\n    }\n    /**\n     *\n     * Update text content with 4 bound values surrounded by other text.\n     *\n     * Used when a text node has 4 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see ɵɵtextInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate4;\n    }\n    /**\n     *\n     * Update text content with 5 bound values surrounded by other text.\n     *\n     * Used when a text node has 5 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate5;\n    }\n    /**\n     *\n     * Update text content with 6 bound values surrounded by other text.\n     *\n     * Used when a text node has 6 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change. @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate6;\n    }\n    /**\n     *\n     * Update text content with 7 bound values surrounded by other text.\n     *\n     * Used when a text node has 7 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate7;\n    }\n    /**\n     *\n     * Update text content with 8 bound values surrounded by other text.\n     *\n     * Used when a text node has 8 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate8;\n    }\n    /**\n     * Update text content with 9 or more bound values other surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     *\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolateV(values) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated class on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     * Update an interpolated class on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolateV(values) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated style property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate1(prop, prefix, v0, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate2(prop, prefix, v0, i0, v1, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate3(prop, prefix, v0, i0, v1, i1, v2, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate4(prop, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate5(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate6(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate7(\n     *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate7(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,\n     * '-', v7, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate8(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate8;\n    }\n    /**\n     * Update an interpolated style property on an element with 8 or more bound values surrounded by\n     * text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\">\n     * </div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolateV(\n     *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`..\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolateV(prop, values, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a host element. Only applies to native node properties, not inputs.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵhostProperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer, true);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵhostProperty;\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     *\n     * @codeGenApi\n     */\n    function ɵɵupdateSyntheticHostBinding(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer, true, loadComponentRenderer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵupdateSyntheticHostBinding;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext$1(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return Injector.NULL;\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return {};\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    /**\n     * Retrieves the rendered text for a given component.\n     *\n     * This function retrieves the host element of a component and\n     * and then returns the `textContent` for that element. This implies\n     * that the text returned will include re-projected content of\n     * the component as well.\n     *\n     * @param component The component to return the content text for.\n     */\n    function getRenderedText(component) {\n        var hostElement = getHostElement(component);\n        return hostElement.textContent || '';\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var lContext = loadLContext(element, false);\n        if (lContext === null)\n            return [];\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n    /**\n     * Returns the attached `DebugNode` instance for an element in the DOM.\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * @publicApi\n     */\n    function getDebugNode(element) {\n        var debugNode = null;\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var nodeIndex = lContext.nodeIndex;\n        if (nodeIndex !== -1) {\n            var valueInLView = lView[nodeIndex];\n            // this means that value in the lView is a component with its own\n            // data. In this situation the TNode is not accessed at the same spot.\n            var tNode = isLView(valueInLView) ? valueInLView[T_HOST] :\n                getTNode(nodeIndex - HEADER_OFFSET, lView);\n            debugNode = buildDebugNode(tNode, lView, nodeIndex);\n        }\n        return debugNode;\n    }\n    /**\n     * Retrieve the component `LView` from component/element.\n     *\n     * NOTE: `LView` is a private and should not be leaked outside.\n     *       Don't export this method to `ng.*` on window.\n     *\n     * @param target Component or Element instance.\n     */\n    function getComponentLView(target) {\n        var lContext = loadLContext(target);\n        var nodeIndx = lContext.nodeIndex;\n        var lView = lContext.lView;\n        var componentLView = lView[nodeIndx];\n        ngDevMode && assertLView(componentLView);\n        return componentLView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --config=ivy\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext$1);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getDebugNode', getDebugNode);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        if (typeof COMPILED === 'undefined' || !COMPILED) {\n            // Note: we can't export `ng` when using closure enhanced optimization as:\n            // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n            // - we can't declare a closure extern as the namespace `ng` is already used within Google\n            //   for typings for AngularJS (via `goog.provide('ng....')`).\n            var w = _global;\n            ngDevMode && assertDefined(fn, 'function not defined');\n            if (w) {\n                var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n                if (!container) {\n                    container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n                }\n                container[name] = fn;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: A hack to not pull in the NullInjector from @angular/core.\n    var NULL_INJECTOR$1 = {\n        get: function (token, notFoundValue) {\n            throw new Error('NullInjector: Not found: ' + stringifyForError(token));\n        }\n    };\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent$1(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag, componentDef.encapsulation);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootTView = createTView(0 /* Root */, -1, null, 1, 0, null, null, null, null, null);\n        var rootView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            // create mode pass\n            renderView(rootView, rootTView, null);\n            // update mode pass\n            refreshView(rootView, rootTView, null, null);\n        }\n        finally {\n            leaveView();\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        var tView = rootView[TVIEW];\n        ngDevMode && assertDataInRange(rootView, 0 + HEADER_OFFSET);\n        rootView[0 + HEADER_OFFSET] = rNode;\n        var tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n        var componentView = createLView(rootView, getOrCreateTComponentView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstCreatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);\n            markAsComponentHost(tView, tNode);\n            initNodeFlags(tNode, rootView.length, 1);\n        }\n        addToViewTree(rootView, componentView);\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstCreatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            incrementActiveDirectiveId();\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstCreatePass);\n            setActiveHostElement(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {hostFeatures: [LifecycleHooksFeature]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ɵcmp || superType.ɵdir;\n            }\n            else {\n                if (superType.ɵcmp) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ɵdir;\n            }\n            if (superDef) {\n                // Some fields in the definition may be empty, if there were no values to put in them that\n                // would've justified object creation. Unwrap them if necessary.\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n                // Merge hostBindings\n                var superHostBindings = superDef.hostBindings;\n                superHostBindings && inheritHostBindings(definition, superHostBindings);\n                // Merge queries\n                var superViewQuery = superDef.viewQuery;\n                var superContentQueries = superDef.contentQueries;\n                superViewQuery && inheritViewQuery(definition, superViewQuery);\n                superContentQueries && inheritContentQueries(definition, superContentQueries);\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    for (var i = 0; i < features.length; i++) {\n                        var feature = features[i];\n                        if (feature && feature.ngInherit) {\n                            feature(definition);\n                        }\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        // If the subclass does not have a host bindings function, we set the subclass host binding\n        // function to be the superclass's (in this feature). We should check if they're the same here\n        // to ensure we don't inherit it twice.\n        if (superHostBindings !== prevHostBindings) {\n            if (prevHostBindings) {\n                definition.hostBindings = function (rf, ctx, elementIndex) {\n                    superHostBindings(rf, ctx, elementIndex);\n                    prevHostBindings(rf, ctx, elementIndex);\n                };\n            }\n            else {\n                definition.hostBindings = superHostBindings;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Fields which exist on either directive or component definitions, and need to be copied from\n     * parent to child classes by the `ɵɵCopyDefinitionFeature`.\n     */\n    var COPY_DIRECTIVE_FIELDS = [\n        // The child class should use the providers of its parent.\n        'providersResolver',\n    ];\n    /**\n     * Fields which exist only on component definitions, and need to be copied from parent to child\n     * classes by the `ɵɵCopyDefinitionFeature`.\n     *\n     * The type here allows any field of `ComponentDef` which is not also a property of `DirectiveDef`,\n     * since those should go in `COPY_DIRECTIVE_FIELDS` above.\n     */\n    var COPY_COMPONENT_FIELDS = [\n        // The child class should use the template function of its parent, including all template\n        // semantics.\n        'template',\n        'decls',\n        'consts',\n        'vars',\n        'onPush',\n        'ngContentSelectors',\n        // The child class should use the CSS styles of its parent, including all styling semantics.\n        'styles',\n        'encapsulation',\n        // The child class should be checked by the runtime in the same way as its parent.\n        'schemas',\n    ];\n    /**\n     * Copies the fields not handled by the `ɵɵInheritDefinitionFeature` from the supertype of a\n     * definition.\n     *\n     * This exists primarily to support ngcc migration of an existing View Engine pattern, where an\n     * entire decorator is inherited from a parent to a child class. When ngcc detects this case, it\n     * generates a skeleton definition on the child class, and applies this feature.\n     *\n     * The `ɵɵCopyDefinitionFeature` then copies any needed fields from the parent class' definition,\n     * including things like the component template function.\n     *\n     * @param definition The definition of a child class which inherits from a parent class with its\n     * own definition.\n     *\n     * @codeGenApi\n     */\n    function ɵɵCopyDefinitionFeature(definition) {\n        var e_1, _a, e_2, _b;\n        var superType = getSuperType(definition.type);\n        var superDef = undefined;\n        if (isComponentDef(definition)) {\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ɵcmp;\n        }\n        else {\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ɵdir;\n        }\n        // Needed because `definition` fields are readonly.\n        var defAny = definition;\n        try {\n            // Copy over any fields that apply to either directives or components.\n            for (var COPY_DIRECTIVE_FIELDS_1 = __values(COPY_DIRECTIVE_FIELDS), COPY_DIRECTIVE_FIELDS_1_1 = COPY_DIRECTIVE_FIELDS_1.next(); !COPY_DIRECTIVE_FIELDS_1_1.done; COPY_DIRECTIVE_FIELDS_1_1 = COPY_DIRECTIVE_FIELDS_1.next()) {\n                var field = COPY_DIRECTIVE_FIELDS_1_1.value;\n                defAny[field] = superDef[field];\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (COPY_DIRECTIVE_FIELDS_1_1 && !COPY_DIRECTIVE_FIELDS_1_1.done && (_a = COPY_DIRECTIVE_FIELDS_1.return)) _a.call(COPY_DIRECTIVE_FIELDS_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (isComponentDef(superDef)) {\n            try {\n                // Copy over any component-specific fields.\n                for (var COPY_COMPONENT_FIELDS_1 = __values(COPY_COMPONENT_FIELDS), COPY_COMPONENT_FIELDS_1_1 = COPY_COMPONENT_FIELDS_1.next(); !COPY_COMPONENT_FIELDS_1_1.done; COPY_COMPONENT_FIELDS_1_1 = COPY_COMPONENT_FIELDS_1.next()) {\n                    var field = COPY_COMPONENT_FIELDS_1_1.value;\n                    defAny[field] = superDef[field];\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (COPY_COMPONENT_FIELDS_1_1 && !COPY_COMPONENT_FIELDS_1_1.done && (_b = COPY_COMPONENT_FIELDS_1.return)) _b.call(COPY_COMPONENT_FIELDS_1);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ɵcmp = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstCreatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lView, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(lView, lView[TVIEW], this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * ```ts\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ɵcmp = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    decls: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        ɵɵtext(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        ɵɵtextInterpolate(ctx.greeter.greet());\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     * ```\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * Base class for a factory that can create a component dynamically.\n     * Instantiate a factory for a given type of component with `resolveComponentFactory()`.\n     * Use the resulting `ComponentFactory.create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     *\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    function getComponent$1(error) {\n        return error[ERROR_COMPONENT];\n    }\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * A simple registry that maps `Components` to generated `ComponentFactory` classes\n     * that can be used to create instances of components.\n     * Use to obtain the factory for a given component type,\n     * then use the factory's `create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        /** @nocollapse */\n        Sanitizer.ɵprov = ɵɵdefineInjectable({\n            token: Sanitizer,\n            providedIn: 'root',\n            factory: function () { return null; },\n        });\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('9.0.0-rc.1+449.sha-6ba5fdc.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ɵprov = ɵɵdefineInjectable({\n            token: IterableDiffers,\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ɵprov = ɵɵdefineInjectable({\n            token: KeyValueDiffers,\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Node instance data.\n     *\n     * We have a separate type per NodeType to save memory\n     * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n     *\n     * To keep our code monomorphic,\n     * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n     * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n     * purposes.\n     */\n    var NodeData = /** @class */ (function () {\n        function NodeData() {\n        }\n        return NodeData;\n    }());\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = {};\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var scope = null;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === INJECTOR_SCOPE) {\n                scope = provider.value;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            scope: scope,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = newArray(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        var providedIn = def.providedIn;\n        return providedIn != null && (providedIn === 'any' || providedIn === ngModule._def.scope ||\n            moduleTransitivelyPresent(ngModule, providedIn));\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = {};\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            // default to 'div' in case this component has an attribute selector\n            _this.selector = componentDef.selectors[0][0] || 'div';\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = rootSelectorOrNode ?\n                locateHostElement(rendererFactory, rootSelectorOrNode, this.componentDef.encapsulation) :\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef), null);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootTView = createTView(0 /* Root */, -1, null, 1, 0, null, null, null, null, null);\n            var rootLView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            // TODO(misko): it looks like we are entering view here but we don't really need to as\n            // `renderView` does that. However as the code is written it is needed because\n            // `createRootComponentView` and `createRootComponent` both read global state. Fixing those\n            // issues would allow us to drop this.\n            enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                renderView(rootLView, rootTView, null);\n            }\n            finally {\n                leaveView();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (!rootSelectorOrNode || isIsolated) {\n                // The host element of the internal or isolated root view is attached to the component's host\n                // view node.\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the\n     * ComponentFactoryResolver\n     * already exists, retrieves the existing ComponentFactoryResolver.\n     *\n     * @returns The ComponentFactoryResolver instance to use\n     */\n    function injectComponentFactoryResolver() {\n        return componentFactoryResolver;\n    }\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            if (this.destroyCbs) {\n                this.destroyCbs.forEach(function (fn) { return fn(); });\n                this.destroyCbs = null;\n                !this.hostView.destroyed && this.hostView.destroy();\n            }\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            if (this.destroyCbs) {\n                this.destroyCbs.push(callback);\n            }\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // NOTE: we need to have it in IIFE so that the tree-shaker is happy.\n        (function () {\n            // tslint:disable-next-line:no-toplevel-property-access\n            _global['ngI18nClosureMode'] =\n                // TODO(FW-1250): validate that this actually, you know, works.\n                // tslint:disable-next-line:no-toplevel-property-access\n                typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n        })();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // THIS CODE IS GENERATED - DO NOT MODIFY\n    // See angular/tools/gulp-tasks/cldr/extract.js\n    var u = undefined;\n    function plural(n) {\n        var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n        if (i === 1 && v === 0)\n            return 1;\n        return 5;\n    }\n    var localeEn = [\n        'en',\n        [['a', 'p'], ['AM', 'PM'], u],\n        [['AM', 'PM'], u, u],\n        [\n            ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n        ],\n        u,\n        [\n            ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n            ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            [\n                'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n            ]\n        ],\n        u,\n        [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']],\n        0,\n        [6, 0],\n        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'],\n        ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n        ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n        ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'],\n        '$',\n        'US Dollar',\n        {},\n        'ltr',\n        plural\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This const is used to store the locale data registered with `registerLocaleData`\n     */\n    var LOCALE_DATA = {};\n    /**\n     * Register locale data to be used internally by Angular. See the\n     * [\"I18n guide\"](guide/i18n#i18n-pipes) to know how to import additional locale data.\n     *\n     * The signature `registerLocaleData(data: any, extraData?: any)` is deprecated since v5.1\n     */\n    function registerLocaleData(data, localeId, extraData) {\n        if (typeof localeId !== 'string') {\n            extraData = localeId;\n            localeId = data[exports.ɵLocaleDataIndex.LocaleId];\n        }\n        localeId = localeId.toLowerCase().replace(/_/g, '-');\n        LOCALE_DATA[localeId] = data;\n        if (extraData) {\n            LOCALE_DATA[localeId][exports.ɵLocaleDataIndex.ExtraData] = extraData;\n        }\n    }\n    /**\n     * Finds the locale data for a given locale.\n     *\n     * @param locale The locale code.\n     * @returns The locale data.\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function findLocaleData(locale) {\n        var normalizedLocale = normalizeLocale(locale);\n        var match = getLocaleData(normalizedLocale);\n        if (match) {\n            return match;\n        }\n        // let's try to find a parent locale\n        var parentLocale = normalizedLocale.split('-')[0];\n        match = getLocaleData(parentLocale);\n        if (match) {\n            return match;\n        }\n        if (parentLocale === 'en') {\n            return localeEn;\n        }\n        throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n    }\n    /**\n     * Retrieves the plural function used by ICU expressions to determine the plural case to use\n     * for a given locale.\n     * @param locale A locale code for the locale format rules to use.\n     * @returns The plural function for the locale.\n     * @see `NgPlural`\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function getLocalePluralCase(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.PluralCase];\n    }\n    /**\n     * Helper function to get the given `normalizedLocale` from `LOCALE_DATA`\n     * or from the global `ng.common.locale`.\n     */\n    function getLocaleData(normalizedLocale) {\n        if (!(normalizedLocale in LOCALE_DATA)) {\n            LOCALE_DATA[normalizedLocale] = _global.ng && _global.ng.common && _global.ng.common.locales &&\n                _global.ng.common.locales[normalizedLocale];\n        }\n        return LOCALE_DATA[normalizedLocale];\n    }\n    /**\n     * Helper function to remove all the locale data from `LOCALE_DATA`.\n     */\n    function unregisterAllLocaleData() {\n        LOCALE_DATA = {};\n    }\n    (function (LocaleDataIndex) {\n        LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n        LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n        LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n        LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 15] = \"CurrencySymbol\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 16] = \"CurrencyName\";\n        LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 17] = \"Currencies\";\n        LocaleDataIndex[LocaleDataIndex[\"Directionality\"] = 18] = \"Directionality\";\n        LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 19] = \"PluralCase\";\n        LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 20] = \"ExtraData\";\n    })(exports.ɵLocaleDataIndex || (exports.ɵLocaleDataIndex = {}));\n    /**\n     * Returns the canonical form of a locale name - lowercase with `_` replaced with `-`.\n     */\n    function normalizeLocale(locale) {\n        return locale.toLowerCase().replace(/_/g, '-');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the plural case based on the locale\n     */\n    function getPluralCase(value, locale) {\n        var plural = getLocalePluralCase(locale)(value);\n        switch (plural) {\n            case 0:\n                return 'zero';\n            case 1:\n                return 'one';\n            case 2:\n                return 'two';\n            case 3:\n                return 'few';\n            case 4:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * The locale id that the application is using by default (for translations and ICU expressions).\n     */\n    var DEFAULT_LOCALE_ID = 'en-US';\n\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*!]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else {\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        results.push(substring);\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (cases.length > values.length) {\n                values.push(blocks);\n            }\n        }\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�!{index}(:{block})�`/`�/!{index}(:{block})�`: *Projection Placeholder*:  Marks the\n     *   beginning and end of <ng-content> that was embedded in the original translation block.\n     *   The placeholder `index` points to the element index in the template instructions set.\n     *   An optional `block` that matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        // We need to delay projections until `i18nEnd`\n        setDelayProjection(true);\n        if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(lView, tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(lView, tView, index, message, subTemplateIndex) {\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== lView[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = replaceNgsp(templateTranslation).split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === \"#\" /* ELEMENT */) {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === \"#\" /* ELEMENT */) {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        if (i18nVarsCount > 0) {\n            allocExpando(lView, i18nVarsCount);\n        }\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, lView);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode, lView) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== lView[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        // If the placeholder to append is a projection, we need to move the projected nodes instead\n        if (tNode.type === 1 /* Projection */) {\n            applyProjection(lView, tNode);\n            return tNode;\n        }\n        appendChild(getNativeByTNode(tNode, lView), tNode, lView);\n        var slotValue = lView[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, lView);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n     * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                var placeholders = matches_1[content] || [];\n                if (!placeholders.length) {\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders;\n                }\n                if (!placeholders.length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n         */\n        result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, function (match, key) {\n            return replacements.hasOwnProperty(key) ? replacements[key] : match;\n        });\n        /**\n         * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(lView, tView);\n        // Stop delaying projections\n        setDelayProjection(false);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(lView, tView) {\n        ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, lView);\n        // Remove deleted nodes\n        var index = rootIndex + 1;\n        while (index <= lastCreatedNode.index - HEADER_OFFSET) {\n            if (visitedNodes.indexOf(index) === -1) {\n                removeNode(index, lView, /* markAsDetached */ true);\n            }\n            // Check if an element has any local refs and skip them\n            var tNode = getTNode(index, lView);\n            if (tNode && (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) &&\n                tNode.localNames !== null) {\n                // Divide by 2 to get the number of local refs,\n                // since they are stored as an array that also includes directive indexes,\n                // i.e. [\"localRef\", directiveIndex, ...]\n                index += tNode.localNames.length >> 1;\n            }\n            index++;\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(lView, index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        lView[index + HEADER_OFFSET] = native;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, type, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode && previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, lView) {\n        var renderer = lView[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createDynamicNodeAtIndex(lView, textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsNotParent();\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = lView[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, lView);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode, lView);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, lView);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode, currentTNode.type === 3 /* Element */);\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, lView);\n                        setPreviousOrParentTNode(currentTNode, false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        // This code is used for ICU expressions only, since we don't support\n                        // directives/components in ICUs, we don't need to worry about inputs here\n                        elementAttributeInternal(elementNodeIndex, attrName, attrValue, lView);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(lView, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, lView);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsNotParent();\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(lView, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsNotParent();\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var propName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementPropertyInternal(viewData, nodeIndex, propName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBindingInternal(viewData, nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    // Remove DOM element, but do *not* mark TNode as detached, since we are\n                                                    // just switching ICU cases (while keeping the same TNode), so a DOM element\n                                                    // representing a new ICU case will be re-created.\n                                                    removeNode(nodeIndex_1, viewData, /* markAsDetached */ false);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    if (caseIndex > -1) {\n                                        // Add the nodes for the new case\n                                        readCreateOpCodes(-1, tIcu.create[caseIndex], viewData);\n                                        caseCreated = true;\n                                    }\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    }\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData, markAsDetached) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(viewData, index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        if (markAsDetached) {\n            // Define this node as detached to avoid projecting it later\n            removedPhTNode.flags |= 64 /* isDetached */;\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nAttributesFirstPass(lView, tView, index, values);\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(lView, tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // TODO(ocombe): support ICU expressions in attributes\n                    throw new Error('ICU expressions are not yet supported in attributes');\n                }\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                        }\n                    }\n                    else {\n                        var tNode = getTNode(previousElementIndex, lView);\n                        // Set attributes for Elements only, for other types (like ElementContainer),\n                        // only set inputs below\n                        if (tNode.type === 3 /* Element */) {\n                            elementAttributeInternal(previousElementIndex, attrName, value, lView);\n                        }\n                        // Check if that attribute is a directive input\n                        var dataValue = tNode.inputs !== null && tNode.inputs[attrName];\n                        if (dataValue) {\n                            setInputsForProperty(lView, dataValue, attrName, value);\n                            if (ngDevMode) {\n                                var element = getNativeByIndex(previousElementIndex, lView);\n                                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n            tView.data[index + HEADER_OFFSET] = updateOpCodes;\n        }\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param value The binding's value\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `i18nExp(ctx.name)(ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(value) {\n        var lView = getLView();\n        if (bindingUpdated(lView, nextBindingIndex(), value)) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n        return ɵɵi18nExp;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = getBindingIndex() - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    var resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(getDocument());\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    /**\n     * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n     * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n     * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n     * and later on replaced by a space. We are re-implementing the same idea here, since translations\n     * might contain this special character.\n     */\n    var NGSP_UNICODE_REGEXP = /\\uE500/g;\n    function replaceNgsp(value) {\n        return value.replace(NGSP_UNICODE_REGEXP, ' ');\n    }\n    /**\n     * The locale id that the application is currently using (for translations and ICU expressions).\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    var LOCALE_ID = DEFAULT_LOCALE_ID;\n    /**\n     * Sets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     *\n     * @param localeId\n     */\n    function setLocaleId(localeId) {\n        assertDefined(localeId, \"Expected localeId to be defined\");\n        if (typeof localeId === 'string') {\n            LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n        }\n    }\n    /**\n     * Gets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    function getLocaleId() {\n        return LOCALE_ID;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(ngModuleType) {\n        if (ngModuleType.ɵmod.id !== null) {\n            var id = ngModuleType.ɵmod.id;\n            var existing = modules.get(id);\n            assertSameOrNotExisting(id, existing, ngModuleType);\n            modules.set(id, ngModuleType);\n        }\n        var imports = ngModuleType.ɵmod.imports;\n        if (imports instanceof Function) {\n            imports = imports();\n        }\n        if (imports) {\n            imports.forEach(function (i) { return registerNgModuleType(i); });\n        }\n    }\n    function clearModulesForTest() {\n        modules.clear();\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id) || autoRegisterModuleById[id];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n            if (ngLocaleIdDef) {\n                setLocaleId(ngLocaleIdDef);\n            }\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            var ngModuleDef = getNgModuleDef(moduleType);\n            if (ngModuleDef !== null) {\n                // Register the NgModule with Angular's module registry. The location (and hence timing) of\n                // this call is critical to ensure this works correctly (modules get registered when expected)\n                // without bloating bundles (modules are registered when otherwise not referenced).\n                //\n                // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has\n                // several practical consequences:\n                //\n                // - If an .ngfactory file is not imported from, the module won't be registered (and can be\n                //   tree shaken).\n                // - If an .ngfactory file is imported from, the module will be registered even if an instance\n                //   is not actually created (via `create` below).\n                // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's\n                //   imports,\n                //\n                // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are\n                // not a required API to use - there are other ways to obtain an NgModuleFactory for a given\n                // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,\n                // the side effect of registration is added here, in the constructor of NgModuleFactory,\n                // ensuring no matter how a factory is created, the module is registered correctly.\n                //\n                // An alternative would be to include the registration side effect inline following the actual\n                // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules\n                // will be registered and retained even if they're otherwise never referenced.\n                registerNgModuleType(moduleType);\n            }\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign(__assign({}, clazz.propDecorators), propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |-------decls------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return lView[bindingIndex] === NO_CHANGE ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstCreatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeFactory = pipeDef.factory || (pipeDef.factory = getFactoryDef(pipeDef.type, true));\n        var pipeInstance = pipeFactory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(lView, index) {\n        return lView[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(lView, newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = getBindingIndex();\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in components with the `@Output` directive to emit custom events\n     * synchronously or asynchronously, and register handlers for those events\n     * by subscribing to an instance.\n     *\n     * @usageNotes\n     *\n     * Extends\n     * [RxJS `Subject`](https://rxjs.dev/api/index/class/Subject)\n     * for Angular by adding the `emit()` method.\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```html\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```html\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * @see [Observables in Angular](guide/observables-in-angular)\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function symbolIterator() {\n        return this._results[getSymbolIterator()]();\n    }\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n            // This function should be declared on the prototype, but doing so there will cause the class\n            // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n            // the constructor.\n            // [getSymbolIterator()](): Iterator<T> { ... }\n            var symbol = getSymbolIterator();\n            var proto = QueryList.prototype;\n            if (!proto[symbol])\n                proto[symbol] = symbolIterator;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The query results to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$7 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$8 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$2 = unusedValueExportToPlacateAjd$7 + unusedValueExportToPlacateAjd$2 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$8;\n    var LQuery_ = /** @class */ (function () {\n        function LQuery_(queryList) {\n            this.queryList = queryList;\n            this.matches = null;\n        }\n        LQuery_.prototype.clone = function () { return new LQuery_(this.queryList); };\n        LQuery_.prototype.setDirty = function () { this.queryList.setDirty(); };\n        return LQuery_;\n    }());\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        LQueries_.prototype.createEmbeddedView = function (tView) {\n            var tQueries = tView.queries;\n            if (tQueries !== null) {\n                var noOfInheritedQueries = tView.contentQueries !== null ? tView.contentQueries[0] : tQueries.length;\n                var viewLQueries = [];\n                // An embedded view has queries propagated from a declaration view at the beginning of the\n                // TQueries collection and up until a first content query declared in the embedded view. Only\n                // propagated LQueries are created at this point (LQuery corresponding to declared content\n                // queries will be instantiated from the content query instructions for each directive).\n                for (var i = 0; i < noOfInheritedQueries; i++) {\n                    var tQuery = tQueries.getByIndex(i);\n                    var parentLQuery = this.queries[tQuery.indexInDeclarationView];\n                    viewLQueries.push(parentLQuery.clone());\n                }\n                return new LQueries_(viewLQueries);\n            }\n            return null;\n        };\n        LQueries_.prototype.insertView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.detachView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.dirtyQueriesWithMatches = function (tView) {\n            for (var i = 0; i < this.queries.length; i++) {\n                if (getTQuery(tView, i).matches !== null) {\n                    this.queries[i].setDirty();\n                }\n            }\n        };\n        return LQueries_;\n    }());\n    var TQueryMetadata_ = /** @class */ (function () {\n        function TQueryMetadata_(predicate, descendants, isStatic, read) {\n            if (read === void 0) { read = null; }\n            this.predicate = predicate;\n            this.descendants = descendants;\n            this.isStatic = isStatic;\n            this.read = read;\n        }\n        return TQueryMetadata_;\n    }());\n    var TQueries_ = /** @class */ (function () {\n        function TQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        TQueries_.prototype.elementStart = function (tView, tNode) {\n            ngDevMode && assertFirstCreatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementStart(tView, tNode);\n            }\n        };\n        TQueries_.prototype.elementEnd = function (tNode) {\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementEnd(tNode);\n            }\n        };\n        TQueries_.prototype.embeddedTView = function (tNode) {\n            var queriesForTemplateRef = null;\n            for (var i = 0; i < this.length; i++) {\n                var childQueryIndex = queriesForTemplateRef !== null ? queriesForTemplateRef.length : 0;\n                var tqueryClone = this.getByIndex(i).embeddedTView(tNode, childQueryIndex);\n                if (tqueryClone) {\n                    tqueryClone.indexInDeclarationView = i;\n                    if (queriesForTemplateRef !== null) {\n                        queriesForTemplateRef.push(tqueryClone);\n                    }\n                    else {\n                        queriesForTemplateRef = [tqueryClone];\n                    }\n                }\n            }\n            return queriesForTemplateRef !== null ? new TQueries_(queriesForTemplateRef) : null;\n        };\n        TQueries_.prototype.template = function (tView, tNode) {\n            ngDevMode && assertFirstCreatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].template(tView, tNode);\n            }\n        };\n        TQueries_.prototype.getByIndex = function (index) {\n            ngDevMode && assertDataInRange(this.queries, index);\n            return this.queries[index];\n        };\n        Object.defineProperty(TQueries_.prototype, \"length\", {\n            get: function () { return this.queries.length; },\n            enumerable: true,\n            configurable: true\n        });\n        TQueries_.prototype.track = function (tquery) { this.queries.push(tquery); };\n        return TQueries_;\n    }());\n    var TQuery_ = /** @class */ (function () {\n        function TQuery_(metadata, nodeIndex) {\n            if (nodeIndex === void 0) { nodeIndex = -1; }\n            this.metadata = metadata;\n            this.matches = null;\n            this.indexInDeclarationView = -1;\n            this.crossesNgTemplate = false;\n            /**\n             * A flag indicating if a given query still applies to nodes it is crossing. We use this flag\n             * (alongside with _declarationNodeIndex) to know when to stop applying content queries to\n             * elements in a template.\n             */\n            this._appliesToNextNode = true;\n            this._declarationNodeIndex = nodeIndex;\n        }\n        TQuery_.prototype.elementStart = function (tView, tNode) {\n            if (this.isApplyingToNode(tNode)) {\n                this.matchTNode(tView, tNode);\n            }\n        };\n        TQuery_.prototype.elementEnd = function (tNode) {\n            if (this._declarationNodeIndex === tNode.index) {\n                this._appliesToNextNode = false;\n            }\n        };\n        TQuery_.prototype.template = function (tView, tNode) { this.elementStart(tView, tNode); };\n        TQuery_.prototype.embeddedTView = function (tNode, childQueryIndex) {\n            if (this.isApplyingToNode(tNode)) {\n                this.crossesNgTemplate = true;\n                // A marker indicating a `<ng-template>` element (a placeholder for query results from\n                // embedded views created based on this `<ng-template>`).\n                this.addMatch(-tNode.index, childQueryIndex);\n                return new TQuery_(this.metadata);\n            }\n            return null;\n        };\n        TQuery_.prototype.isApplyingToNode = function (tNode) {\n            if (this._appliesToNextNode && this.metadata.descendants === false) {\n                return this._declarationNodeIndex === (tNode.parent ? tNode.parent.index : -1);\n            }\n            return this._appliesToNextNode;\n        };\n        TQuery_.prototype.matchTNode = function (tView, tNode) {\n            if (Array.isArray(this.metadata.predicate)) {\n                var localNames = this.metadata.predicate;\n                for (var i = 0; i < localNames.length; i++) {\n                    this.matchTNodeWithReadOption(tView, tNode, getIdxOfMatchingSelector(tNode, localNames[i]));\n                }\n            }\n            else {\n                var typePredicate = this.metadata.predicate;\n                if (typePredicate === TemplateRef) {\n                    if (tNode.type === 0 /* Container */) {\n                        this.matchTNodeWithReadOption(tView, tNode, -1);\n                    }\n                }\n                else {\n                    this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, typePredicate, false, false));\n                }\n            }\n        };\n        TQuery_.prototype.matchTNodeWithReadOption = function (tView, tNode, nodeMatchIdx) {\n            if (nodeMatchIdx !== null) {\n                var read = this.metadata.read;\n                if (read !== null) {\n                    if (read === ElementRef || read === ViewContainerRef ||\n                        read === TemplateRef && tNode.type === 0 /* Container */) {\n                        this.addMatch(tNode.index, -2);\n                    }\n                    else {\n                        var directiveOrProviderIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);\n                        if (directiveOrProviderIdx !== null) {\n                            this.addMatch(tNode.index, directiveOrProviderIdx);\n                        }\n                    }\n                }\n                else {\n                    this.addMatch(tNode.index, nodeMatchIdx);\n                }\n            }\n        };\n        TQuery_.prototype.addMatch = function (tNodeIdx, matchIdx) {\n            if (this.matches === null) {\n                this.matches = [tNodeIdx, matchIdx];\n            }\n            else {\n                this.matches.push(tNodeIdx, matchIdx);\n            }\n        };\n        return TQuery_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    function createResultByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        else if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function createResultForNode(lView, tNode, matchingIdx, read) {\n        if (matchingIdx === -1) {\n            // if read token and / or strategy is not specified, detect it using appropriate tNode type\n            return createResultByTNodeType(tNode, lView);\n        }\n        else if (matchingIdx === -2) {\n            // read a special token from a node injector\n            return createSpecialToken(lView, tNode, read);\n        }\n        else {\n            // read a token\n            return getNodeInjectable(lView, lView[TVIEW], matchingIdx, tNode);\n        }\n    }\n    function createSpecialToken(lView, tNode, read) {\n        if (read === ElementRef) {\n            return createElementRef(ElementRef, tNode, lView);\n        }\n        else if (read === TemplateRef) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, lView);\n        }\n        else if (read === ViewContainerRef) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n            return createContainerRef(ViewContainerRef, ElementRef, tNode, lView);\n        }\n        else {\n            ngDevMode &&\n                throwError(\"Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got \" + stringify(read) + \".\");\n        }\n    }\n    /**\n     * A helper function that creates query results for a given view. This function is meant to do the\n     * processing once and only once for a given view instance (a set of results for a given view\n     * doesn't change).\n     */\n    function materializeViewResults(lView, tQuery, queryIndex) {\n        var lQuery = lView[QUERIES].queries[queryIndex];\n        if (lQuery.matches === null) {\n            var tViewData = lView[TVIEW].data;\n            var tQueryMatches = tQuery.matches;\n            var result = [];\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var matchedNodeIdx = tQueryMatches[i];\n                if (matchedNodeIdx < 0) {\n                    // we at the <ng-template> marker which might have results in views created based on this\n                    // <ng-template> - those results will be in separate views though, so here we just leave\n                    // null as a placeholder\n                    result.push(null);\n                }\n                else {\n                    ngDevMode && assertDataInRange(tViewData, matchedNodeIdx);\n                    var tNode = tViewData[matchedNodeIdx];\n                    result.push(createResultForNode(lView, tNode, tQueryMatches[i + 1], tQuery.metadata.read));\n                }\n            }\n            lQuery.matches = result;\n        }\n        return lQuery.matches;\n    }\n    /**\n     * A helper function that collects (already materialized) query results from a tree of views,\n     * starting with a provided LView.\n     */\n    function collectQueryResults(lView, queryIndex, result) {\n        var tQuery = lView[TVIEW].queries.getByIndex(queryIndex);\n        var tQueryMatches = tQuery.matches;\n        if (tQueryMatches !== null) {\n            var lViewResults = materializeViewResults(lView, tQuery, queryIndex);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var tNodeIdx = tQueryMatches[i];\n                if (tNodeIdx > 0) {\n                    var viewResult = lViewResults[i / 2];\n                    ngDevMode && assertDefined(viewResult, 'materialized query result should be defined');\n                    result.push(viewResult);\n                }\n                else {\n                    var childQueryIndex = tQueryMatches[i + 1];\n                    var declarationLContainer = lView[-tNodeIdx];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    // collect matches for views inserted in this container\n                    for (var i_1 = CONTAINER_HEADER_OFFSET; i_1 < declarationLContainer.length; i_1++) {\n                        var embeddedLView = declarationLContainer[i_1];\n                        if (embeddedLView[DECLARATION_LCONTAINER] === embeddedLView[PARENT]) {\n                            collectQueryResults(embeddedLView, childQueryIndex, result);\n                        }\n                    }\n                    // collect matches for views created from this declaration container and inserted into\n                    // different containers\n                    if (declarationLContainer[MOVED_VIEWS] !== null) {\n                        var embeddedLViews = declarationLContainer[MOVED_VIEWS];\n                        for (var i_2 = 0; i_2 < embeddedLViews.length; i_2++) {\n                            collectQueryResults(embeddedLViews[i_2], childQueryIndex, result);\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var lView = getLView();\n        var queryIndex = getCurrentQueryIndex();\n        setCurrentQueryIndex(queryIndex + 1);\n        var tQuery = getTQuery(lView[TVIEW], queryIndex);\n        if (queryList.dirty && (isCreationMode(lView) === tQuery.metadata.isStatic)) {\n            if (tQuery.matches === null) {\n                queryList.reset([]);\n            }\n            else {\n                var result = tQuery.crossesNgTemplate ? collectQueryResults(lView, queryIndex, []) :\n                    materializeViewResults(lView, tQuery, queryIndex);\n                queryList.reset(result);\n                queryList.notifyOnChanges();\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, true);\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, false);\n    }\n    function viewQueryInternal(lView, predicate, descend, read, isStatic) {\n        var tView = lView[TVIEW];\n        if (tView.firstCreatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), -1);\n            if (isStatic) {\n                tView.staticViewQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, false, getPreviousOrParentTNode(), directiveIndex);\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, true, getPreviousOrParentTNode(), directiveIndex);\n    }\n    function contentQueryInternal(lView, predicate, descend, read, isStatic, tNode, directiveIndex) {\n        var tView = lView[TVIEW];\n        if (tView.firstCreatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), tNode.index);\n            saveContentQueryAndDirectiveIndex(tView, directiveIndex);\n            if (isStatic) {\n                tView.staticContentQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Loads a QueryList corresponding to the current view or content query.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadQuery() {\n        return loadQueryInternal(getLView(), getCurrentQueryIndex());\n    }\n    function loadQueryInternal(lView, queryIndex) {\n        ngDevMode &&\n            assertDefined(lView[QUERIES], 'LQueries should be defined when trying to load a query');\n        ngDevMode && assertDataInRange(lView[QUERIES].queries, queryIndex);\n        return lView[QUERIES].queries[queryIndex].queryList;\n    }\n    function createLQuery(lView) {\n        var queryList = new QueryList();\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        if (lView[QUERIES] === null)\n            lView[QUERIES] = new LQueries_();\n        lView[QUERIES].queries.push(new LQuery_(queryList));\n    }\n    function createTQuery(tView, metadata, nodeIndex) {\n        if (tView.queries === null)\n            tView.queries = new TQueries_();\n        tView.queries.track(new TQuery_(metadata, nodeIndex));\n    }\n    function saveContentQueryAndDirectiveIndex(tView, directiveIndex) {\n        var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        var lastSavedDirectiveIndex = tView.contentQueries.length ? tViewContentQueries[tViewContentQueries.length - 1] : -1;\n        if (directiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(tView.queries.length - 1, directiveIndex);\n        }\n    }\n    function getTQuery(tView, index) {\n        ngDevMode && assertDefined(tView.queries, 'TQueries must be defined to retrieve a TQuery');\n        return tView.queries.getByIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n    /**\n     * Returns the appropriate `ChangeDetectorRef` for a pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectPipeChangeDetectorRef(flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var value = injectChangeDetectorRef(true);\n        if (value == null && !(flags & exports.InjectFlags.Optional)) {\n            throw new Error(\"No provider for ChangeDetectorRef!\");\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (function () { return ({\n        'ɵɵattribute': ɵɵattribute,\n        'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n        'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n        'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n        'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n        'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n        'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n        'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n        'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n        'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵinvalidFactory': ɵɵinvalidFactory,\n        'ɵɵinvalidFactoryDep': ɵɵinvalidFactoryDep,\n        'ɵɵinjectPipeChangeDetectorRef': ɵɵinjectPipeChangeDetectorRef,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵCopyDefinitionFeature': ɵɵCopyDefinitionFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵallocHostVars': ɵɵallocHostVars,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵelementContainer': ɵɵelementContainer,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵupdateSyntheticHostBinding': ɵɵupdateSyntheticHostBinding,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵhostProperty': ɵɵhostProperty,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadQuery': ɵɵloadQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵelementHostAttrs': ɵɵelementHostAttrs,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵclassMapInterpolate1': ɵɵclassMapInterpolate1,\n        'ɵɵclassMapInterpolate2': ɵɵclassMapInterpolate2,\n        'ɵɵclassMapInterpolate3': ɵɵclassMapInterpolate3,\n        'ɵɵclassMapInterpolate4': ɵɵclassMapInterpolate4,\n        'ɵɵclassMapInterpolate5': ɵɵclassMapInterpolate5,\n        'ɵɵclassMapInterpolate6': ɵɵclassMapInterpolate6,\n        'ɵɵclassMapInterpolate7': ɵɵclassMapInterpolate7,\n        'ɵɵclassMapInterpolate8': ɵɵclassMapInterpolate8,\n        'ɵɵclassMapInterpolateV': ɵɵclassMapInterpolateV,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstylePropInterpolate1': ɵɵstylePropInterpolate1,\n        'ɵɵstylePropInterpolate2': ɵɵstylePropInterpolate2,\n        'ɵɵstylePropInterpolate3': ɵɵstylePropInterpolate3,\n        'ɵɵstylePropInterpolate4': ɵɵstylePropInterpolate4,\n        'ɵɵstylePropInterpolate5': ɵɵstylePropInterpolate5,\n        'ɵɵstylePropInterpolate6': ɵɵstylePropInterpolate6,\n        'ɵɵstylePropInterpolate7': ɵɵstylePropInterpolate7,\n        'ɵɵstylePropInterpolate8': ɵɵstylePropInterpolate8,\n        'ɵɵstylePropInterpolateV': ɵɵstylePropInterpolateV,\n        'ɵɵstyleSanitizer': ɵɵstyleSanitizer,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵadvance': ɵɵadvance,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextInterpolate': ɵɵtextInterpolate,\n        'ɵɵtextInterpolate1': ɵɵtextInterpolate1,\n        'ɵɵtextInterpolate2': ɵɵtextInterpolate2,\n        'ɵɵtextInterpolate3': ɵɵtextInterpolate3,\n        'ɵɵtextInterpolate4': ɵɵtextInterpolate4,\n        'ɵɵtextInterpolate5': ɵɵtextInterpolate5,\n        'ɵɵtextInterpolate6': ɵɵtextInterpolate6,\n        'ɵɵtextInterpolate7': ɵɵtextInterpolate7,\n        'ɵɵtextInterpolate8': ɵɵtextInterpolate8,\n        'ɵɵtextInterpolateV': ɵɵtextInterpolateV,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n    }); })();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ɵmod` and `ɵinj` properties to the module class.\n     *\n     * It's possible to compile a module via this API which will allow duplicate declarations in its\n     * root.\n     */\n    function compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot) {\n        if (allowDuplicateDeclarationsInRoot === void 0) { allowDuplicateDeclarationsInRoot = false; }\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MOD_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {\n                        // We need to assert this immediately, because allowing it to continue will cause it to\n                        // go into an infinite loop before we've reached the point where we throw all the errors.\n                        throw new Error(\"'\" + stringifyForError(moduleType) + \"' module can't import itself\");\n                    }\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/\\u0275mod.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                    // Set `schemas` on ngModuleDef to an empty array in JIT mode to indicate that runtime\n                    // should verify that there are no unknown elements in a template. In AOT mode, that check\n                    // happens at compile time and `schemas` information is not present on Component and Module\n                    // defs after compilation (so the check doesn't happen the second time at runtime).\n                    if (!ngModuleDef.schemas) {\n                        ngModuleDef.schemas = [];\n                    }\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJ_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/\\u0275inj.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot, importingModule) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef;\n        if (importingModule) {\n            ngModuleDef = getNgModuleDef(moduleType);\n            if (!ngModuleDef) {\n                throw new Error(\"Unexpected value '\" + moduleType.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n        else {\n            ngModuleDef = getNgModuleDef(moduleType, true);\n        }\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n            verifySemanticsOfNgModuleImport(mod, moduleType);\n            verifySemanticsOfNgModuleDef(mod, false, moduleType);\n        });\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        declarations.forEach(verifyDirectivesHaveSelector);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(function (decl) { return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot); });\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n                    verifySemanticsOfNgModuleImport(mod, moduleType);\n                    verifySemanticsOfNgModuleDef(mod, false, moduleType);\n                });\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents &&\n                deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyDirectivesHaveSelector(type) {\n            type = resolveForwardRef(type);\n            var def = getDirectiveDef(type);\n            if (!getComponentDef(type) && def && def.selectors.length == 0) {\n                errors.push(\"Directive \" + stringifyForError(type) + \" has no selector, please add it!\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type, suppressErrors) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                if (!suppressErrors) {\n                    var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                    errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                        (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                        (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n                }\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n        function verifySemanticsOfNgModuleImport(type, importingModule) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type) || getDirectiveDef(type)) {\n                throw new Error(\"Unexpected directive '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n            if (getPipeDef(type)) {\n                throw new Error(\"Unexpected pipe '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type, false);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ɵcmp set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMP_DEF)) {\n                // A `ɵcmp` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIR_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) {\n                return dir.hasOwnProperty(NG_COMP_DEF) ? getComponentDef(dir) : getDirectiveDef(dir);\n            })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.tView = null;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * By default this operation is memoized and the result is cached on the module's definition. You\n     * can avoid memoization and previously stored results (if available) by providing the second\n     * argument with the `true` value (forcing transitive scopes recalculation).\n     *\n     * This function can be called on modules with components that have not fully compiled yet, but the\n     * result should not be used until they have.\n     *\n     * @param moduleType module that transitive scope should be calculated for.\n     * @param forceRecalc flag that indicates whether previously calculated and memoized values should\n     * be ignored and transitive scope to be fully recalculated.\n     */\n    function transitiveScopesFor(moduleType, forceRecalc) {\n        if (forceRecalc === void 0) { forceRecalc = false; }\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have a module def (\\u0275mod property)\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (!forceRecalc && def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has a ɵcmp or ɵdir, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have a \\u0275mod property\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, forceRecalc);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have a\n            // ɵcmp as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, forceRecalc);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        if (!forceRecalc) {\n            def.transitiveCompileScopes = scopes;\n        }\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * component def (ɵcmp) onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ɵcmp`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        // Initialize ngDevMode. This must be the first statement in compileComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        // Note that we're using the same function as `Directive`, because that's only subset of metadata\n        // that we need to create the ngFactoryDef. We're avoiding using the component metadata\n        // because we'd have to resolve the asynchronous templates.\n        addDirectiveFactoryDef(type, metadata);\n        Object.defineProperty(type, NG_COMP_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    var compiler = getCompilerFacade();\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + type.name + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + metadata.templateUrl);\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n                    var meta = __assign(__assign({}, directiveMetadata(type, metadata)), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    if (meta.usesInheritance) {\n                        addDirectiveDefToUndecoratedParents(type);\n                    }\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * directive def onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        addDirectiveFactoryDef(type, directive || {});\n        Object.defineProperty(type, NG_DIR_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    // `directive` can be null in the case of abstract directives as a base class\n                    // that use `@Directive()` with no selector. In that case, pass empty object to the\n                    // `directiveMetadata` function instead of null.\n                    var meta = getDirectiveMetadata(type, directive || {});\n                    ngDirectiveDef =\n                        getCompilerFacade().compileDirective(angularCoreEnv, meta.sourceMapUrl, meta.metadata);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getDirectiveMetadata(type, metadata) {\n        var name = type && type.name;\n        var sourceMapUrl = \"ng:///\" + name + \"/\\u0275dir.js\";\n        var compiler = getCompilerFacade();\n        var facade = directiveMetadata(type, metadata);\n        facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name, sourceMapUrl);\n        if (facade.usesInheritance) {\n            addDirectiveDefToUndecoratedParents(type);\n        }\n        return { metadata: facade, sourceMapUrl: sourceMapUrl };\n    }\n    function addDirectiveFactoryDef(type, metadata) {\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var meta = getDirectiveMetadata(type, metadata);\n                    var compiler = getCompilerFacade();\n                    ngFactoryDef = compiler.compileFactory(angularCoreEnv, \"ng:///\" + type.name + \"/\\u0275fac.js\", __assign(__assign({}, meta.metadata), { injectFn: 'directiveInject', target: compiler.R3FactoryTarget.Directive }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector !== undefined ? metadata.selector : null,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: usesLifecycleHook(type, 'ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery)\n        };\n    }\n    /**\n     * Adds a directive definition to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addDirectiveDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type);\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the def if there are no annotations and the def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) &&\n                shouldAddAbstractDirective(parent)) {\n                compileDirective(parent, null);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnnotation)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        return exportAs === undefined ? null : splitByComma(exportAs);\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnnotation(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n    function usesLifecycleHook(type, name) {\n        var prototype = type.prototype;\n        return prototype && prototype.hasOwnProperty(name);\n    }\n    var LIFECYCLE_HOOKS = [\n        'ngOnChanges', 'ngOnInit', 'ngOnDestroy', 'ngDoCheck', 'ngAfterViewInit', 'ngAfterViewChecked',\n        'ngAfterContentInit', 'ngAfterContentChecked'\n    ];\n    function shouldAddAbstractDirective(type) {\n        if (LIFECYCLE_HOOKS.some(function (hookName) { return usesLifecycleHook(type, hookName); })) {\n            return true;\n        }\n        var propMetadata = getReflect().ownPropMetadata(type);\n        for (var field in propMetadata) {\n            var annotations = propMetadata[field];\n            for (var i = 0; i < annotations.length; i++) {\n                var current = annotations[i];\n                var metadataName = current.ngMetadataName;\n                if (isInputAnnotation(current) || isContentQuery(current) || isViewQuery(current) ||\n                    metadataName === 'Output' || metadataName === 'HostBinding' ||\n                    metadataName === 'HostListener') {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    var compiler = getCompilerFacade();\n                    ngFactoryDef = compiler.compileFactory(angularCoreEnv, \"ng:///\" + metadata.name + \"/\\u0275fac.js\", __assign(__assign({}, metadata), { injectFn: 'directiveInject', target: compiler.R3FactoryTarget.Pipe }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + metadata.name + \"/\\u0275pipe.js\", metadata);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getPipeMetadata(type, meta) {\n        return {\n            type: type,\n            typeArgumentCount: 0,\n            name: type.name,\n            deps: reflectDependencies(type),\n            pipeName: meta.name,\n            pure: meta.pure !== undefined ? meta.pure : true\n        };\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Decorator that binds a DOM event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     *\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```ts\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     *\n     * ```\n     *\n     * The following example registers another DOM event handler that listens for key-press events.\n     * ``` ts\n     * import { HostListener, Component } from \"@angular/core\";\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: `<h1>Hello, you have pressed keys {{counter}} number of times!</h1> Press any key to\n     * increment the counter.\n     *   <button (click)=\"resetCounter()\">Reset Counter</button>`\n     * })\n     * class AppComponent {\n     *   counter = 0;\n     *   @HostListener('window:keydown', ['$event'])\n     *   handleKeyDown(event: KeyboardEvent) {\n     *     this.counter++;\n     *   }\n     *   resetCounter() {\n     *     this.counter = 0;\n     *   }\n     * }\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ɵinj = ɵɵdefineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The existence of this constant (in this particular file) informs the Angular compiler that the\n     * current program is actually @angular/core, which needs to be compiled specially.\n     */\n    var ITS_JUST_ANGULAR = true;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ɵfac = function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(ɵɵinject(APP_INITIALIZER, 8)); };\n        ApplicationInitStatus.ɵprov = ɵɵdefineInjectable({ token: ApplicationInitStatus, factory: ApplicationInitStatus.ɵfac });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ (function () { setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }] }]; }, null); })();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ɵfac = function Console_Factory(t) { return new (t || Console)(); };\n        Console.ɵprov = ɵɵdefineInjectable({ token: Console, factory: Console.ɵfac });\n        return Console;\n    }());\n    /*@__PURE__*/ (function () { setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null); })();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID$1 = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ɵfac = function Compiler_Factory(t) { return new (t || Compiler)(); };\n        Compiler.ɵprov = ɵɵdefineInjectable({ token: Compiler, factory: Compiler.ɵfac });\n        return Compiler;\n    }());\n    /*@__PURE__*/ (function () { setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null); })();\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getNativeRequestAnimationFrame() {\n        var nativeRequestAnimationFrame = _global['requestAnimationFrame'];\n        var nativeCancelAnimationFrame = _global['cancelAnimationFrame'];\n        if (typeof Zone !== 'undefined' && nativeRequestAnimationFrame && nativeCancelAnimationFrame) {\n            // use unpatched version of requestAnimationFrame(native delegate) if possible\n            // to avoid another Change detection\n            var unpatchedRequestAnimationFrame = nativeRequestAnimationFrame[Zone.__symbol__('OriginalDelegate')];\n            if (unpatchedRequestAnimationFrame) {\n                nativeRequestAnimationFrame = unpatchedRequestAnimationFrame;\n            }\n            var unpatchedCancelAnimationFrame = nativeCancelAnimationFrame[Zone.__symbol__('OriginalDelegate')];\n            if (unpatchedCancelAnimationFrame) {\n                nativeCancelAnimationFrame = unpatchedCancelAnimationFrame;\n            }\n        }\n        return { nativeRequestAnimationFrame: nativeRequestAnimationFrame, nativeCancelAnimationFrame: nativeCancelAnimationFrame };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b, _c = _a.shouldCoalesceEventChangeDetection, shouldCoalesceEventChangeDetection = _c === void 0 ? false : _c;\n            this.hasPendingMacrotasks = false;\n            this.hasPendingMicrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            self.shouldCoalesceEventChangeDetection = shouldCoalesceEventChangeDetection;\n            self.lastRequestAnimationFrameId = -1;\n            self.nativeRequestAnimationFrame = getNativeRequestAnimationFrame().nativeRequestAnimationFrame;\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function delayChangeDetectionForEvents(zone) {\n        if (zone.lastRequestAnimationFrameId !== -1) {\n            return;\n        }\n        zone.lastRequestAnimationFrameId = zone.nativeRequestAnimationFrame.call(_global, function () {\n            zone.lastRequestAnimationFrameId = -1;\n            updateMicroTaskStatus(zone);\n            checkStable(zone);\n        });\n        updateMicroTaskStatus(zone);\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        var delayChangeDetectionForEventsDelegate = function () { delayChangeDetectionForEvents(zone); };\n        var maybeDelayChangeDetection = !!zone.shouldCoalesceEventChangeDetection &&\n            zone.nativeRequestAnimationFrame && delayChangeDetectionForEventsDelegate;\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true, 'maybeDelayChangeDetection': maybeDelayChangeDetection },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    if (maybeDelayChangeDetection && task.type === 'eventTask') {\n                        maybeDelayChangeDetection();\n                    }\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone._hasPendingMicrotasks = hasTaskState.microTask;\n                        updateMicroTaskStatus(zone);\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function updateMicroTaskStatus(zone) {\n        if (zone._hasPendingMicrotasks ||\n            (zone.shouldCoalesceEventChangeDetection && zone.lastRequestAnimationFrameId !== -1)) {\n            zone.hasPendingMicrotasks = true;\n        }\n        else {\n            zone.hasPendingMicrotasks = false;\n        }\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        NoopNgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ɵfac = function Testability_Factory(t) { return new (t || Testability)(ɵɵinject(NgZone)); };\n        Testability.ɵprov = ɵɵdefineInjectable({ token: Testability, factory: Testability.ɵfac });\n        return Testability;\n    }());\n    /*@__PURE__*/ (function () { setClassMetadata(Testability, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }]; }, null); })();\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ɵfac = function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); };\n        TestabilityRegistry.ɵprov = ɵɵdefineInjectable({ token: TestabilityRegistry, factory: TestabilityRegistry.ɵfac });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ (function () { setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], function () { return []; }, null); })();\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    // the `window.ng` global utilities are only available in non-VE versions of\n    // Angular. The function switch below will make sure that the code is not\n    // included into Angular when PRE mode is active.\n    function publishDefaultGlobalUtils__PRE_R3__() { }\n    function publishDefaultGlobalUtils__POST_R3__() {\n        ngDevMode && publishDefaultGlobalUtils();\n    }\n    var publishDefaultGlobalUtils$1 = publishDefaultGlobalUtils__POST_R3__;\n    var isBoundToModule = isBoundToModule__POST_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        publishDefaultGlobalUtils$1();\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true }, {\n                        provide: INJECTOR_SCOPE,\n                        useValue: 'platform'\n                    });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZoneEventCoalescing = (options && options.ngZoneEventCoalescing) || false;\n            var ngZone = getNgZone(ngZoneOption, ngZoneEventCoalescing);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                // If the `LOCALE_ID` provider is defined at bootstrap we set the value for runtime i18n (ivy)\n                if (ivyEnabled) {\n                    var localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);\n                    setLocaleId(localeId || DEFAULT_LOCALE_ID);\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ɵfac = function PlatformRef_Factory(t) { return new (t || PlatformRef)(ɵɵinject(Injector)); };\n        PlatformRef.ɵprov = ɵɵdefineInjectable({ token: PlatformRef, factory: PlatformRef.ɵfac });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ (function () { setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], function () { return [{ type: Injector }]; }, null); })();\n    function getNgZone(ngZoneOption, ngZoneEventCoalescing) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) || new NgZone({\n                enableLongStackTrace: isDevMode(),\n                shouldCoalesceEventChangeDetection: ngZoneEventCoalescing\n            });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign(__assign({}, dst), objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            /** @internal */\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? undefined : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var e_1, _a, e_2, _b;\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ApplicationRef.ɵfac = function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(ɵɵinject(NgZone), ɵɵinject(Console), ɵɵinject(Injector), ɵɵinject(ErrorHandler), ɵɵinject(ComponentFactoryResolver), ɵɵinject(ApplicationInitStatus)); };\n        ApplicationRef.ɵprov = ɵɵdefineInjectable({ token: ApplicationRef, factory: ApplicationRef.ɵfac });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ (function () { setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }, { type: Console }, { type: Injector }, { type: ErrorHandler }, { type: ComponentFactoryResolver }, { type: ApplicationInitStatus }]; }, null); })();\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = getRegisteredNgModuleType(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ɵfac = function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(ɵɵinject(Compiler), ɵɵinject(SystemJsNgModuleLoaderConfig, 8)); };\n        SystemJsNgModuleLoader.ɵprov = ɵɵdefineInjectable({ token: SystemJsNgModuleLoader, factory: SystemJsNgModuleLoader.ɵfac });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ (function () { setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], function () { return [{ type: Compiler }, { type: SystemJsNgModuleLoaderConfig, decorators: [{\n                    type: Optional\n                }] }]; }, null); })();\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _a;\n            var _this = this;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                return getComponent(this.nativeNode) || getContext$1(this.nativeNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () {\n                try {\n                    var context = loadLContext(this.nativeNode);\n                    var lView = context.lView;\n                    var tData = lView[TVIEW].data;\n                    var tNode = tData[context.nodeIndex];\n                    return tNode.tagName;\n                }\n                catch (e) {\n                    return this.nativeNode.nodeName;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = {};\n                // Collect properties from the DOM.\n                copyDomProperties(this.nativeElement, properties);\n                // Collect properties from the bindings. This is needed for animation renderer which has\n                // synthetic properties which don't get reflected into the DOM.\n                collectPropertyBindings(properties, tNode, lView, tData);\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (!element) {\n                    return attributes;\n                }\n                var context = loadLContext(element, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;\n                var lowercaseTNodeAttrs = [];\n                // For debug nodes we take the element's attribute directly from the DOM since it allows us\n                // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n                // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n                // however since we have the attributes already on the TNode, we can preserve the case by going\n                // through them once, adding them to the `attributes` map and putting their lower-cased name\n                // into an array. Afterwards when we're going through the native DOM attributes, we can check\n                // whether we haven't run into an attribute already through the TNode.\n                if (tNodeAttrs) {\n                    var i = 0;\n                    while (i < tNodeAttrs.length) {\n                        var attrName = tNodeAttrs[i];\n                        // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n                        // else will be handled below when we read the final attributes off the DOM.\n                        if (typeof attrName !== 'string')\n                            break;\n                        var attrValue = tNodeAttrs[i + 1];\n                        attributes[attrName] = attrValue;\n                        lowercaseTNodeAttrs.push(attrName.toLowerCase());\n                        i += 2;\n                    }\n                }\n                var eAttrs = element.attributes;\n                for (var i = 0; i < eAttrs.length; i++) {\n                    var attr = eAttrs[i];\n                    // Make sure that we don't assign the same attribute both in its\n                    // case-sensitive form and the lower-cased one from the browser.\n                    if (lowercaseTNodeAttrs.indexOf(attr.name) === -1) {\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                if (this.nativeElement && this.nativeElement.style) {\n                    return this.nativeElement.style;\n                }\n                return {};\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                if (!this._classesProxy) {\n                    var element_1 = this.nativeElement;\n                    // we use a proxy here because VE code expects `.classes` to keep\n                    // track of which classes have been added and removed. Because we\n                    // do not make use of a debug renderer anymore, the return value\n                    // must always be `false` in the event that a class does not exist\n                    // on the element (even if it wasn't added and removed beforehand).\n                    this._classesProxy = createProxy({\n                        get: function (target, prop) {\n                            return element_1 ? element_1.classList.contains(prop) : false;\n                        },\n                        set: function (target, prop, value) {\n                            return element_1 ? element_1.classList.toggle(prop, !!value) : false;\n                        },\n                        ownKeys: function () { return element_1 ? Array.from(element_1.classList).sort() : []; },\n                        getOwnPropertyDescriptor: function (k) {\n                            // we use a special property descriptor here so that enumeration operations\n                            // such as `Object.keys` will work on this proxy.\n                            return {\n                                enumerable: true,\n                                configurable: true,\n                            };\n                        },\n                    });\n                }\n                return this._classesProxy;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            var node = this.nativeNode;\n            var invokedListeners = [];\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    var callback = listener.callback;\n                    callback(eventObj);\n                    invokedListeners.push(callback);\n                }\n            });\n            // We need to check whether `eventListeners` exists, because it's something\n            // that Zone.js only adds to `EventTarget` in browser environments.\n            if (typeof node.eventListeners === 'function') {\n                // Note that in Ivy we wrap event listeners with a call to `event.preventDefault` in some\n                // cases. We use `Function` as a special token that gives us access to the actual event\n                // listener.\n                node.eventListeners(eventName).forEach(function (listener) {\n                    var unwrappedListener = listener(Function);\n                    return invokedListeners.indexOf(unwrappedListener) === -1 && unwrappedListener(eventObj);\n                });\n            }\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function copyDomProperties(element, properties) {\n        if (element) {\n            // Skip own properties (as those are patched)\n            var obj = Object.getPrototypeOf(element);\n            var NodePrototype = Node.prototype;\n            while (obj !== null && obj !== NodePrototype) {\n                var descriptors = Object.getOwnPropertyDescriptors(obj);\n                for (var key in descriptors) {\n                    if (!key.startsWith('__') && !key.startsWith('on')) {\n                        // don't include properties starting with `__` and `on`.\n                        // `__` are patched values which should not be included.\n                        // `on` are listeners which also should not be included.\n                        var value = element[key];\n                        if (isPrimitiveValue(value)) {\n                            properties[key] = value;\n                        }\n                    }\n                }\n                obj = Object.getPrototypeOf(obj);\n            }\n        }\n    }\n    function isPrimitiveValue(value) {\n        return typeof value === 'string' || typeof value === 'boolean' || typeof value === 'number' ||\n            value === null;\n    }\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        var nativeNode = getNativeByTNodeOrNull(tNode, lView);\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponentHost(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentLViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild) {\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n            else {\n                if (tNode.child) {\n                    // Otherwise, its children have to be processed.\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n                // We also have to query the DOM directly in order to catch elements inserted through\n                // Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple\n                // times. ViewEngine could do it more efficiently, because all the insertions go through\n                // Renderer2, however that's not the case in Ivy. This approach is being used because:\n                // 1. Matching the ViewEngine behavior would mean potentially introducing a depedency\n                //    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.\n                // 2. We would have to make `Renderer3` \"know\" about debug nodes.\n                // 3. It allows us to capture nodes that were inserted directly via the DOM.\n                nativeNode && _queryNativeNodeDescendants(nativeNode, predicate, matches, elementsOnly);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = lView[DECLARATION_COMPONENT_VIEW];\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode_1 = head_1_1.value;\n                        _addQueryMatchR3(nativeNode_1, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else if (head) {\n                var nextLView = componentView[PARENT];\n                var nextTNode = nextLView[TVIEW].data[head.index];\n                _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.child) {\n            // Case 4: the TNode is a view.\n            _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        // We don't want to go to the next sibling of the root node.\n        if (rootNativeNode !== nativeNode) {\n            // To determine the next node to be processed, we need to use the next or the projectionNext\n            // link, depending on whether the current node has been projected.\n            var nextTNode = (tNode.flags & 4 /* isProjected */) ? tNode.projectionNext : tNode.next;\n            if (nextTNode) {\n                _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode$1(nativeNode);\n            if (!debugNode) {\n                return;\n            }\n            // Type of the \"predicate and \"matches\" array are set based on the value of\n            // the \"elementsOnly\" parameter. TypeScript is not able to properly infer these\n            // types with generics, so we manually cast the parameters accordingly.\n            if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n            else if (!elementsOnly && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Match all the descendants of a DOM node against a predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryNativeNodeDescendants(parentNode, predicate, matches, elementsOnly) {\n        var nodes = parentNode.childNodes;\n        var length = nodes.length;\n        for (var i = 0; i < length; i++) {\n            var node = nodes[i];\n            var debugNode = getDebugNode$1(node);\n            if (debugNode) {\n                if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                else if (!elementsOnly && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                _queryNativeNodeDescendants(node, predicate, matches, elementsOnly);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(properties, tNode, lView, tData) {\n        var bindingIndexes = tNode.propertyBindings;\n        if (bindingIndexes !== null) {\n            for (var i = 0; i < bindingIndexes.length; i++) {\n                var bindingIndex = bindingIndexes[i];\n                var propMetadata = tData[bindingIndex];\n                var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n                var propertyName = metadataParts[0];\n                if (metadataParts.length > 1) {\n                    var value = metadataParts[1];\n                    for (var j = 1; j < metadataParts.length - 1; j++) {\n                        value += renderStringify(lView[bindingIndex + j - 1]) + metadataParts[j + 1];\n                    }\n                    properties[propertyName] = value;\n                }\n                else {\n                    properties[propertyName] = lView[bindingIndex];\n                }\n            }\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    var NG_DEBUG_PROPERTY = '__ng_debug__';\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n                nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n                    new DebugElement__POST_R3__(nativeNode) :\n                    new DebugNode__POST_R3__(nativeNode);\n            }\n            return nativeNode[NG_DEBUG_PROPERTY];\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode$1 = getDebugNode__POST_R3__;\n    function getAllDebugNodes() {\n        return Array.from(_nativeNodeToDebugNode.values());\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__POST_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        locale = locale || getGlobalLocale();\n        if (ivyEnabled) {\n            setLocaleId(locale);\n        }\n        return locale;\n    }\n    /**\n     * Work out the locale from the potential global properties.\n     *\n     * * Closure Compiler: use `goog.LOCALE`.\n     * * Ivy enabled: use `$localize.locale`\n     */\n    function getGlobalLocale() {\n        if (typeof ngI18nClosureMode !== 'undefined' && ngI18nClosureMode &&\n            typeof goog !== 'undefined' && goog.LOCALE !== 'en') {\n            // * The default `goog.LOCALE` value is `en`, while Angular used `en-US`.\n            // * In order to preserve backwards compatibility, we use Angular default value over\n            //   Closure Compiler's one.\n            return goog.LOCALE;\n        }\n        else {\n            // KEEP `typeof $localize !== 'undefined' && $localize.locale` IN SYNC WITH THE LOCALIZE\n            // COMPILE-TIME INLINER.\n            //\n            // * During compile time inlining of translations the expression will be replaced\n            //   with a string literal that is the current locale. Other forms of this expression are not\n            //   guaranteed to be replaced.\n            //\n            // * During runtime translation evaluation, the developer is required to set `$localize.locale`\n            //   if required, or just to provide their own `LOCALE_ID` provider.\n            return (ivyEnabled && typeof $localize !== 'undefined' && $localize.locale) ||\n                DEFAULT_LOCALE_ID;\n        }\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID$1,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ɵmod = ɵɵdefineNgModule({ type: ApplicationModule });\n        ApplicationModule.ɵinj = ɵɵdefineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(ɵɵinject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ (function () { setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], function () { return [{ type: ApplicationRef }]; }, null); })();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = [];\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = [];\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, newArray(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, newArray(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = [];\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames.push(key);\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = [];\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings.push({\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = [];\n                    if (bindLen > 0)\n                        value.push(v0);\n                    if (bindLen > 1)\n                        value.push(v1);\n                    if (bindLen > 2)\n                        value.push(v2);\n                    if (bindLen > 3)\n                        value.push(v3);\n                    if (bindLen > 4)\n                        value.push(v4);\n                    if (bindLen > 5)\n                        value.push(v5);\n                    if (bindLen > 6)\n                        value.push(v6);\n                    if (bindLen > 7)\n                        value.push(v7);\n                    if (bindLen > 8)\n                        value.push(v8);\n                    if (bindLen > 9)\n                        value.push(v9);\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = [];\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            var debugNode = getDebugNode$1(node);\n            removeDebugNodeFromIndex(debugNode);\n            if (debugNode instanceof DebugNode__PRE_R3__) {\n                debugNode.listeners.length = 0;\n            }\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            var debugRefEl = getDebugNode$1(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode$1(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            scope: def.scope, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    if (ngDevMode) {\n        // This helper is to give a reasonable error message to people upgrading to v9 that have not yet\n        // installed `@angular/localize` in their app.\n        // tslint:disable-next-line: no-toplevel-property-access\n        _global.$localize = _global.$localize || function () {\n            throw new Error('It looks like your application or one of its dependencies is using i18n.\\n' +\n                'Angular 9 introduced a global `$localize()` function that needs to be loaded.\\n' +\n                'Please run `ng add @angular/localize` from the Angular CLI.\\n' +\n                '(For non-CLI projects, add `import \\'@angular/localize/init\\';` to your `polyfills.ts` file.\\n' +\n                'For server-side rendering applications add the import to your `main.server.ts` file.)');\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_ID = APP_ID;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.ApplicationModule = ApplicationModule;\n    exports.ApplicationRef = ApplicationRef;\n    exports.Attribute = Attribute;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.Component = Component;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ComponentRef = ComponentRef;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.Directive = Directive;\n    exports.ElementRef = ElementRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ErrorHandler = ErrorHandler;\n    exports.EventEmitter = EventEmitter;\n    exports.Host = Host;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.INJECTOR = INJECTOR;\n    exports.Inject = Inject;\n    exports.Injectable = Injectable;\n    exports.InjectionToken = InjectionToken;\n    exports.Injector = Injector;\n    exports.Input = Input;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.LOCALE_ID = LOCALE_ID$1;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgProbeToken = NgProbeToken;\n    exports.NgZone = NgZone;\n    exports.Optional = Optional;\n    exports.Output = Output;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.Pipe = Pipe;\n    exports.PlatformRef = PlatformRef;\n    exports.Query = Query;\n    exports.QueryList = QueryList;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.Sanitizer = Sanitizer;\n    exports.Self = Self;\n    exports.SimpleChange = SimpleChange;\n    exports.SkipSelf = SkipSelf;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.TemplateRef = TemplateRef;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.Type = Type;\n    exports.VERSION = VERSION;\n    exports.Version = Version;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.ViewRef = ViewRef$1;\n    exports.WrappedValue = WrappedValue;\n    exports.asNativeElements = asNativeElements;\n    exports.assertPlatform = assertPlatform;\n    exports.createPlatform = createPlatform;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.defineInjectable = defineInjectable;\n    exports.destroyPlatform = destroyPlatform;\n    exports.enableProdMode = enableProdMode;\n    exports.forwardRef = forwardRef;\n    exports.getDebugNode = getDebugNode$1;\n    exports.getModuleFactory = getModuleFactory;\n    exports.getPlatform = getPlatform;\n    exports.inject = inject;\n    exports.isDevMode = isDevMode;\n    exports.platformCore = platformCore;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ɵConsole = Console;\n    exports.ɵDEFAULT_LOCALE_ID = DEFAULT_LOCALE_ID;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵINJECTOR_SCOPE = INJECTOR_SCOPE;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵNG_COMP_DEF = NG_COMP_DEF;\n    exports.ɵNG_DIR_DEF = NG_DIR_DEF;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_INJ_DEF = NG_INJ_DEF;\n    exports.ɵNG_MOD_DEF = NG_MOD_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_PROV_DEF = NG_PROV_DEF;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵallowSanitizationBypassAndThrow = allowSanitizationBypassAndThrow;\n    exports.ɵand = anchorDef;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵfindLocaleData = findLocaleData;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵgetLocalePluralCase = getLocalePluralCase;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵgetSanitizationBypassType = getSanitizationBypassType;\n    exports.ɵglobal = _global;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵpid = pipeDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵqud = queryDef;\n    exports.ɵregisterLocaleData = registerLocaleData;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵrenderComponent = renderComponent$1;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵsetDocument = setDocument;\n    exports.ɵsetLocaleId = setLocaleId;\n    exports.ɵstore = store;\n    exports.ɵstringify = stringify;\n    exports.ɵted = textDef;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵunregisterLocaleData = unregisterAllLocaleData;\n    exports.ɵunv = unwrapValue;\n    exports.ɵunwrapSafeValue = unwrapSafeValue;\n    exports.ɵvid = viewDef;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵCopyDefinitionFeature = ɵɵCopyDefinitionFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵadvance = ɵɵadvance;\n    exports.ɵɵallocHostVars = ɵɵallocHostVars;\n    exports.ɵɵattribute = ɵɵattribute;\n    exports.ɵɵattributeInterpolate1 = ɵɵattributeInterpolate1;\n    exports.ɵɵattributeInterpolate2 = ɵɵattributeInterpolate2;\n    exports.ɵɵattributeInterpolate3 = ɵɵattributeInterpolate3;\n    exports.ɵɵattributeInterpolate4 = ɵɵattributeInterpolate4;\n    exports.ɵɵattributeInterpolate5 = ɵɵattributeInterpolate5;\n    exports.ɵɵattributeInterpolate6 = ɵɵattributeInterpolate6;\n    exports.ɵɵattributeInterpolate7 = ɵɵattributeInterpolate7;\n    exports.ɵɵattributeInterpolate8 = ɵɵattributeInterpolate8;\n    exports.ɵɵattributeInterpolateV = ɵɵattributeInterpolateV;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵclassMapInterpolate1 = ɵɵclassMapInterpolate1;\n    exports.ɵɵclassMapInterpolate2 = ɵɵclassMapInterpolate2;\n    exports.ɵɵclassMapInterpolate3 = ɵɵclassMapInterpolate3;\n    exports.ɵɵclassMapInterpolate4 = ɵɵclassMapInterpolate4;\n    exports.ɵɵclassMapInterpolate5 = ɵɵclassMapInterpolate5;\n    exports.ɵɵclassMapInterpolate6 = ɵɵclassMapInterpolate6;\n    exports.ɵɵclassMapInterpolate7 = ɵɵclassMapInterpolate7;\n    exports.ɵɵclassMapInterpolate8 = ɵɵclassMapInterpolate8;\n    exports.ɵɵclassMapInterpolateV = ɵɵclassMapInterpolateV;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵelementContainer = ɵɵelementContainer;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵelementHostAttrs = ɵɵelementHostAttrs;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵhostProperty = ɵɵhostProperty;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵinject = ɵɵinject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵinjectPipeChangeDetectorRef = ɵɵinjectPipeChangeDetectorRef;\n    exports.ɵɵinvalidFactory = ɵɵinvalidFactory;\n    exports.ɵɵinvalidFactoryDep = ɵɵinvalidFactoryDep;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵloadQuery = ɵɵloadQuery;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylePropInterpolate1 = ɵɵstylePropInterpolate1;\n    exports.ɵɵstylePropInterpolate2 = ɵɵstylePropInterpolate2;\n    exports.ɵɵstylePropInterpolate3 = ɵɵstylePropInterpolate3;\n    exports.ɵɵstylePropInterpolate4 = ɵɵstylePropInterpolate4;\n    exports.ɵɵstylePropInterpolate5 = ɵɵstylePropInterpolate5;\n    exports.ɵɵstylePropInterpolate6 = ɵɵstylePropInterpolate6;\n    exports.ɵɵstylePropInterpolate7 = ɵɵstylePropInterpolate7;\n    exports.ɵɵstylePropInterpolate8 = ɵɵstylePropInterpolate8;\n    exports.ɵɵstylePropInterpolateV = ɵɵstylePropInterpolateV;\n    exports.ɵɵstyleSanitizer = ɵɵstyleSanitizer;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵtextInterpolate = ɵɵtextInterpolate;\n    exports.ɵɵtextInterpolate1 = ɵɵtextInterpolate1;\n    exports.ɵɵtextInterpolate2 = ɵɵtextInterpolate2;\n    exports.ɵɵtextInterpolate3 = ɵɵtextInterpolate3;\n    exports.ɵɵtextInterpolate4 = ɵɵtextInterpolate4;\n    exports.ɵɵtextInterpolate5 = ɵɵtextInterpolate5;\n    exports.ɵɵtextInterpolate6 = ɵɵtextInterpolate6;\n    exports.ɵɵtextInterpolate7 = ɵɵtextInterpolate7;\n    exports.ɵɵtextInterpolate8 = ɵɵtextInterpolate8;\n    exports.ɵɵtextInterpolateV = ɵɵtextInterpolateV;\n    exports.ɵɵupdateSyntheticHostBinding = ɵɵupdateSyntheticHostBinding;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}