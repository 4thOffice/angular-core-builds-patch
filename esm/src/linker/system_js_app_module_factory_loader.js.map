{"version":3,"file":"system_js_app_module_factory_loader.js","sourceRoot":"","sources":["../../../../../../modules/@angular/core/src/linker/system_js_app_module_factory_loader.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAGI,EAAC,UAAU,EAAC,MAAM,OAAO;OACzB,EAAC,MAAM,EAAC,MAAM,gBAAgB;OAI9B,EAAC,QAAQ,EAAC,MAAM,YAAY;AAEnC,MAAM,UAAU,GAAG,GAAG,CAAC;AACvB;IACE,YAAoB,SAAmB;QAAnB,cAAS,GAAT,SAAS,CAAU;IAAG,CAAC;IAE3C,IAAI,CAAC,IAAY;QACf,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAClD,EAAE,CAAC,CAAC,UAAU,KAAK,SAAS,CAAC;YAAC,UAAU,GAAG,SAAS,CAAC;QAErD,MAAM,CAAO,MAAO;aACf,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;aACrB,IAAI,CAAC,CAAC,MAAW,KAAK,MAAM,CAAC,UAAU,CAAC,CAAC;aACzC,IAAI,CAAC,CAAC,IAAS,KAAK,aAAa,CAAC,IAAI,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;aAC5D,IAAI,CAAC,CAAC,IAAS,KAAK,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC;IACvE,CAAC;AASH,CAAC;AARD,kBAAkB;AACX,kCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,sCAAc,GAA2D;IAChF,EAAC,IAAI,EAAE,QAAQ,GAAG;CACjB,CACA;AAED,MAAM,qBAAqB,GAAG,YAAY,CAAC;AAC3C,MAAM,oBAAoB,GAAG,WAAW,CAAC;AAEzC;;;GAGG;AACH;IACE,IAAI,CAAC,IAAY;QACf,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAClD,EAAE,CAAC,CAAC,UAAU,KAAK,SAAS,CAAC;YAAC,UAAU,GAAG,SAAS,CAAC;QAErD,MAAM,CAAO,MAAO;aACf,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,qBAAqB,CAAC;aAC7C,IAAI,CAAC,CAAC,MAAW,KAAK,MAAM,CAAC,UAAU,GAAG,oBAAoB,CAAC,CAAC;aAChE,IAAI,CAAC,CAAC,OAAY,KAAK,aAAa,CAAC,OAAO,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC;IAC1E,CAAC;AACH,CAAC;AAED,uBAAuB,KAAU,EAAE,UAAkB,EAAE,UAAkB;IACvE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACX,MAAM,IAAI,KAAK,CAAC,gBAAgB,UAAU,SAAS,UAAU,GAAG,CAAC,CAAC;IACpE,CAAC;IACD,MAAM,CAAC,KAAK,CAAC;AACf,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable} from '../di';\nimport {global} from '../facade/lang';\n\nimport {AppModuleFactory} from './app_module_factory';\nimport {AppModuleFactoryLoader} from './app_module_factory_loader';\nimport {Compiler} from './compiler';\n\nconst _SEPARATOR = '#';\nexport class SystemJsAppModuleLoader implements AppModuleFactoryLoader {\n  constructor(private _compiler: Compiler) {}\n\n  load(path: string): Promise<AppModuleFactory<any>> {\n    let [module, exportName] = path.split(_SEPARATOR);\n    if (exportName === undefined) exportName = 'default';\n\n    return (<any>global)\n        .System.import(module)\n        .then((module: any) => module[exportName])\n        .then((type: any) => checkNotEmpty(type, module, exportName))\n        .then((type: any) => this._compiler.compileAppModuleAsync(type));\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: Compiler, },\n];\n}\n\nconst FACTORY_MODULE_SUFFIX = '.ngfactory';\nconst FACTORY_CLASS_SUFFIX = 'NgFactory';\n\n/**\n * AppModuleFactoryLoader that uses SystemJS to load AppModuleFactories\n * @experimental\n */\nexport class SystemJsAppModuleFactoryLoader implements AppModuleFactoryLoader {\n  load(path: string): Promise<AppModuleFactory<any>> {\n    let [module, exportName] = path.split(_SEPARATOR);\n    if (exportName === undefined) exportName = 'default';\n\n    return (<any>global)\n        .System.import(module + FACTORY_MODULE_SUFFIX)\n        .then((module: any) => module[exportName + FACTORY_CLASS_SUFFIX])\n        .then((factory: any) => checkNotEmpty(factory, module, exportName));\n  }\n}\n\nfunction checkNotEmpty(value: any, modulePath: string, exportName: string): any {\n  if (!value) {\n    throw new Error(`Cannot find '${exportName}' in '${modulePath}'`);\n  }\n  return value;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}