{"version":3,"file":"app_module.js","sourceRoot":"","sources":["../../../../../../modules/@angular/core/src/metadata/app_module.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAC,kBAAkB,EAAC,MAAM,gBAAgB;AAGjD;;;GAGG;AACH,uCAAuC,kBAAkB;IAmFvD,YAAY,EAAC,SAAS,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE,OAAO,EAAC,GAM3D,EAAE;QACJ,OAAO,CAAC;QACR,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IA/FD;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA4BG;IACH,IAAI,SAAS,KAAY,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;AAmEpD,CAAC;AAAA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectableMetadata} from '../di/metadata';\nimport {Type} from '../facade/lang';\n\n/**\n * Declares an Application Module.\n * @stable\n */\nexport class AppModuleMetadata extends InjectableMetadata {\n  /**\n   * Defines the set of injectable objects that are available in the injector\n   * of this module.\n   *\n   * ## Simple Example\n   *\n   * Here is an example of a class that can be injected:\n   *\n   * ```\n   * class Greeter {\n   *    greet(name:string) {\n   *      return 'Hello ' + name + '!';\n   *    }\n   * }\n   *\n   * @AppModule({\n   *   providers: [\n   *     Greeter\n   *   ]\n   * })\n   * class HelloWorld {\n   *   greeter:Greeter;\n   *\n   *   constructor(greeter:Greeter) {\n   *     this.greeter = greeter;\n   *   }\n   * }\n   * ```\n   */\n  get providers(): any[] { return this._providers; }\n  private _providers: any[];\n\n\n  /**\n   * Specifies a list of directives that can be used within the template\n   * of any component that is part of this application module.\n   *\n   * ### Example\n   *\n   * ```javascript\n   * @AppModule({\n   *   directives: [NgFor]\n   * })\n   * class MyAppModule {\n   * }\n   * ```\n   */\n  directives: Array<Type|any[]>;\n\n  /**\n   * Specifies a list of pipes that can be used within the template\n   * of any component that is part of this application module.\n   *\n   * ### Example\n   *\n   * ```javascript\n   * @AppModule({\n   *   pipes: [SomePipe]\n   * })\n   * class MyAppModule {\n   * }\n   * ```\n   */\n  pipes: Array<Type|any[]>;\n\n  /**\n   * Defines the components that should be precompiled as well when\n   * this component is defined. For each components listed here,\n   * Angular will create a {@link ComponentFactory ComponentFactory} and store it in the\n   * {@link ComponentFactoryResolver ComponentFactoryResolver}.\n   */\n  precompile: Array<Type|any[]>;\n\n  /**\n   * Defines modules that should be included into this module.\n   * The providers / directives / pipes / precompile entries will be added\n   * to this module.\n   * Just like the main module, the modules listed here are also eagerly\n   * created and accessible via DI.\n   */\n  modules: Array<Type|any[]>;\n\n  constructor({providers, directives, pipes, precompile, modules}: {\n    providers?: any[],\n    directives?: Array<Type|any[]>,\n    pipes?: Array<Type|any[]>,\n    precompile?: Array<Type|any[]>,\n    modules?: Array<Type|any[]>\n  } = {}) {\n    super();\n    this._providers = providers;\n    this.directives = directives;\n    this.pipes = pipes;\n    this.precompile = precompile;\n    this.modules = modules;\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}