/**
* @license
* Copyright Google Inc. All Rights Reserved.
*
* Use of this source code is governed by an MIT-style license that can be
* found in the LICENSE file at https://angular.io/license
*/
export function toTStylingRange(prev, next) {
    return (prev << 18 /* PREV_SHIFT */ | next << 2 /* NEXT_SHIFT */);
}
export function getTStylingRangePrev(tStylingRange) {
    return tStylingRange >> 18 /* PREV_SHIFT */;
}
export function getTStylingRangePrevDuplicate(tStylingRange) {
    return (tStylingRange & 2 /* PREV_DUPLICATE */) ==
        2 /* PREV_DUPLICATE */;
}
export function setTStylingRangePrev(tStylingRange, previous) {
    return ((tStylingRange & ~4294705152 /* PREV_MASK */) |
        (previous << 18 /* PREV_SHIFT */));
}
export function setTStylingRangePrevDuplicate(tStylingRange) {
    return (tStylingRange | 2 /* PREV_DUPLICATE */);
}
export function getTStylingRangeNext(tStylingRange) {
    return (tStylingRange & 16380 /* NEXT_MASK */) >> 2 /* NEXT_SHIFT */;
}
export function setTStylingRangeNext(tStylingRange, next) {
    return ((tStylingRange & ~16380 /* NEXT_MASK */) | //
        next << 2 /* NEXT_SHIFT */);
}
export function getTStylingRangeNextDuplicate(tStylingRange) {
    return (tStylingRange & 1 /* NEXT_DUPLICATE */) ===
        1 /* NEXT_DUPLICATE */;
}
export function setTStylingRangeNextDuplicate(tStylingRange) {
    return (tStylingRange | 1 /* NEXT_DUPLICATE */);
}
export function getTStylingRangeTail(tStylingRange) {
    var next = getTStylingRangeNext(tStylingRange);
    return next === 0 ? getTStylingRangePrev(tStylingRange) : next;
}
//# sourceMappingURL=data:application/json;base64,