{"version":3,"sources":["../../../../../modules/@angular/core/src/animation/animation_group_player.ts"],"names":[],"mappings":"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","file":"animation_group_player.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isPresent, scheduleMicroTask} from '../facade/lang';\n\nimport {AnimationPlayer} from './animation_player';\nexport class AnimationGroupPlayer implements AnimationPlayer {\nprivate _onDoneFns: Function[] = [];\nprivate _onStartFns: Function[] = [];\nprivate _finished = false;\nprivate _started = false;\nprivate _destroyed = false;\npublic parentPlayer: AnimationPlayer = null;\n/**\n * @param {?} _players\n */\nconstructor(private _players: AnimationPlayer[]) {\n    let count = 0;\n    const total = this._players.length;\n    if (total == 0) {\n      scheduleMicroTask(() => this._onFinish());\n    } else {\n      this._players.forEach(player => {\n        player.parentPlayer = this;\n        player.onDone(() => {\n          if (++count >= total) {\n            this._onFinish();\n          }\n        });\n      });\n    }\n  }\n/**\n * @return {?}\n */\nprivate _onFinish() {\n    if (!this._finished) {\n      this._finished = true;\n      this._onDoneFns.forEach(fn => fn());\n      this._onDoneFns = [];\n    }\n  }\n/**\n * @return {?}\n */\ninit(): void { this._players.forEach(player => player.init()); }\n/**\n * @param {?} fn\n * @return {?}\n */\nonStart(fn: () => void): void { this._onStartFns.push(fn); }\n/**\n * @param {?} fn\n * @return {?}\n */\nonDone(fn: () => void): void { this._onDoneFns.push(fn); }\n/**\n * @return {?}\n */\nhasStarted() { return this._started; }\n/**\n * @return {?}\n */\nplay() {\n    if (!isPresent(this.parentPlayer)) {\n      this.init();\n    }\n    if (!this.hasStarted()) {\n      this._onStartFns.forEach(fn => fn());\n      this._onStartFns = [];\n      this._started = true;\n    }\n    this._players.forEach(player => player.play());\n  }\n/**\n * @return {?}\n */\npause(): void { this._players.forEach(player => player.pause()); }\n/**\n * @return {?}\n */\nrestart(): void { this._players.forEach(player => player.restart()); }\n/**\n * @return {?}\n */\nfinish(): void {\n    this._onFinish();\n    this._players.forEach(player => player.finish());\n  }\n/**\n * @return {?}\n */\ndestroy(): void {\n    if (!this._destroyed) {\n      this._onFinish();\n      this._players.forEach(player => player.destroy());\n      this._destroyed = true;\n    }\n  }\n/**\n * @return {?}\n */\nreset(): void {\n    this._players.forEach(player => player.reset());\n    this._destroyed = false;\n    this._finished = false;\n    this._started = false;\n  }\n/**\n * @param {?} p\n * @return {?}\n */\nsetPosition(p: number): void {\n    this._players.forEach(player => { player.setPosition(p); });\n  }\n/**\n * @return {?}\n */\ngetPosition(): number {\n    let /** @type {?} */ min = 0;\n    this._players.forEach(player => {\n      const /** @type {?} */ p = player.getPosition();\n      min = Math.min(p, min);\n    });\n    return min;\n  }\n/**\n * @return {?}\n */\nget players(): AnimationPlayer[] { return this._players; }\n}\n\nfunction AnimationGroupPlayer_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationGroupPlayer.prototype._onDoneFns;\n/** @type {?} */\nAnimationGroupPlayer.prototype._onStartFns;\n/** @type {?} */\nAnimationGroupPlayer.prototype._finished;\n/** @type {?} */\nAnimationGroupPlayer.prototype._started;\n/** @type {?} */\nAnimationGroupPlayer.prototype._destroyed;\n/** @type {?} */\nAnimationGroupPlayer.prototype.parentPlayer;\n/** @type {?} */\nAnimationGroupPlayer.prototype._players;\n}\n\n"]}