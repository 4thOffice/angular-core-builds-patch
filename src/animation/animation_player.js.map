{"version":3,"sources":["../../../../../modules/@angular/core/src/animation/animation_player.ts"],"names":[],"mappings":"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","file":"animation_player.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {scheduleMicroTask} from '../facade/lang';\n/**\n * \\@experimental Animation support is experimental.\n * @abstract\n */\nexport abstract class AnimationPlayer {\n/**\n * @abstract\n * @param {?} fn\n * @return {?}\n */\nonDone(fn: () => void) {}\n/**\n * @abstract\n * @param {?} fn\n * @return {?}\n */\nonStart(fn: () => void) {}\n/**\n * @abstract\n * @return {?}\n */\ninit() {}\n/**\n * @abstract\n * @return {?}\n */\nhasStarted() {}\n/**\n * @abstract\n * @return {?}\n */\nplay() {}\n/**\n * @abstract\n * @return {?}\n */\npause() {}\n/**\n * @abstract\n * @return {?}\n */\nrestart() {}\n/**\n * @abstract\n * @return {?}\n */\nfinish() {}\n/**\n * @abstract\n * @return {?}\n */\ndestroy() {}\n/**\n * @abstract\n * @return {?}\n */\nreset() {}\n/**\n * @abstract\n * @param {?} p\n * @return {?}\n */\nsetPosition(p: any) {}\n/**\n * @abstract\n * @return {?}\n */\ngetPosition() {}\n/**\n * @return {?}\n */\nget parentPlayer(): AnimationPlayer { throw new Error('NOT IMPLEMENTED: Base Class'); }\n/**\n * @param {?} player\n * @return {?}\n */\nset parentPlayer(player: AnimationPlayer) { throw new Error('NOT IMPLEMENTED: Base Class'); }\n}\nexport class NoOpAnimationPlayer implements AnimationPlayer {\nprivate _onDoneFns: Function[] = [];\nprivate _onStartFns: Function[] = [];\nprivate _started = false;\npublic parentPlayer: AnimationPlayer = null;\nconstructor() { scheduleMicroTask(() => this._onFinish()); }\n/**\n * \\@internal\n * @return {?}\n */\n_onFinish() {\n    this._onDoneFns.forEach(fn => fn());\n    this._onDoneFns = [];\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nonStart(fn: () => void): void { this._onStartFns.push(fn); }\n/**\n * @param {?} fn\n * @return {?}\n */\nonDone(fn: () => void): void { this._onDoneFns.push(fn); }\n/**\n * @return {?}\n */\nhasStarted(): boolean { return this._started; }\n/**\n * @return {?}\n */\ninit(): void {}\n/**\n * @return {?}\n */\nplay(): void {\n    if (!this.hasStarted()) {\n      this._onStartFns.forEach(fn => fn());\n      this._onStartFns = [];\n    }\n    this._started = true;\n  }\n/**\n * @return {?}\n */\npause(): void {}\n/**\n * @return {?}\n */\nrestart(): void {}\n/**\n * @return {?}\n */\nfinish(): void { this._onFinish(); }\n/**\n * @return {?}\n */\ndestroy(): void {}\n/**\n * @return {?}\n */\nreset(): void {}\n/**\n * @param {?} p\n * @return {?}\n */\nsetPosition(p: number): void {}\n/**\n * @return {?}\n */\ngetPosition(): number { return 0; }\n}\n\nfunction NoOpAnimationPlayer_tsickle_Closure_declarations() {\n/** @type {?} */\nNoOpAnimationPlayer.prototype._onDoneFns;\n/** @type {?} */\nNoOpAnimationPlayer.prototype._onStartFns;\n/** @type {?} */\nNoOpAnimationPlayer.prototype._started;\n/** @type {?} */\nNoOpAnimationPlayer.prototype.parentPlayer;\n}\n\n"]}