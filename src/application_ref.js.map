{"version":3,"file":"application_ref.js","sourceRoot":"","sources":["../../../../modules/@angular/core/src/application_ref.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ObservableWrapper, PromiseCompleter, PromiseWrapper} from '../src/facade/async';\nimport {ListWrapper} from '../src/facade/collection';\nimport {BaseException, ExceptionHandler, unimplemented} from '../src/facade/exceptions';\nimport {ConcreteType, Type, isBlank, isPresent, isPromise} from '../src/facade/lang';\n\nimport {APP_INITIALIZER, PLATFORM_INITIALIZER} from './application_tokens';\nimport {ChangeDetectorRef} from './change_detection/change_detector_ref';\nimport {Console} from './console';\nimport {Inject, Injectable, Injector, OpaqueToken, Optional, ReflectiveInjector, SkipSelf, forwardRef} from './di';\nimport {Compiler, CompilerFactory, CompilerOptions} from './linker/compiler';\nimport {ComponentFactory, ComponentRef} from './linker/component_factory';\nimport {ComponentFactoryResolver} from './linker/component_factory_resolver';\nimport {ComponentResolver} from './linker/component_resolver';\nimport {NgModuleFactory, NgModuleRef} from './linker/ng_module_factory';\nimport {WtfScopeFn, wtfCreateScope, wtfLeave} from './profile/profile';\nimport {Testability, TestabilityRegistry} from './testability/testability';\nimport {NgZone, NgZoneError} from './zone/ng_zone';\n\nvar _devMode: boolean = true;\nvar _runModeLocked: boolean = false;\nvar _platform: PlatformRef;\n\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nexport function enableProdMode(): void {\n  if (_runModeLocked) {\n    // Cannot use BaseException as that ends up importing from facade/lang.\n    throw new BaseException('Cannot enable prod mode after platform setup.');\n  }\n  _devMode = false;\n}\n\n/**\n * Locks the run mode of Angular. After this has been called,\n * it can't be changed any more. I.e. `isDevMode()` will always\n * return the same value.\n *\n * @deprecated This is a noop now. {@link isDevMode} automatically locks the run mode on first call.\n */\nexport function lockRunMode(): void {\n  console.warn('lockRunMode() is deprecated and not needed any more.');\n}\n\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nexport function isDevMode(): boolean {\n  _runModeLocked = true;\n  return _devMode;\n}\n\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nexport function createPlatform(injector: Injector): PlatformRef {\n  if (isPresent(_platform) && !_platform.disposed) {\n    throw new BaseException(\n        'There can be only one platform. Destroy the previous one to create a new one.');\n  }\n  _platform = injector.get(PlatformRef);\n  const inits: Function[] = <Function[]>injector.get(PLATFORM_INITIALIZER, null);\n  if (isPresent(inits)) inits.forEach(init => init());\n  return _platform;\n}\n\n/**\n * Factory for a platform.\n *\n * @experimental\n */\nexport type PlatformFactory = (extraProviders?: any[]) => PlatformRef;\n\n/**\n * Creates a fatory for a platform\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nexport function createPlatformFactory(\n    parentPlaformFactory: PlatformFactory, name: string, providers: any[] = []): PlatformFactory {\n  const marker = new OpaqueToken(`Platform: ${name}`);\n  return (extraProviders: any[] = []) => {\n    if (!getPlatform()) {\n      if (parentPlaformFactory) {\n        parentPlaformFactory(\n            providers.concat(extraProviders).concat({provide: marker, useValue: true}));\n      } else {\n        createPlatform(ReflectiveInjector.resolveAndCreate(\n            providers.concat(extraProviders).concat({provide: marker, useValue: true})));\n      }\n    }\n    return assertPlatform(marker);\n  };\n}\n\n/**\n * Checks that there currently is a platform\n * which contains the given token as a provider.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nexport function assertPlatform(requiredToken: any): PlatformRef {\n  var platform = getPlatform();\n  if (isBlank(platform)) {\n    throw new BaseException('No platform exists!');\n  }\n  if (isPresent(platform) && isBlank(platform.injector.get(requiredToken, null))) {\n    throw new BaseException(\n        'A platform with a different configuration has been created. Please destroy it first.');\n  }\n  return platform;\n}\n\n/**\n * Dispose the existing platform.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nexport function disposePlatform(): void {\n  if (isPresent(_platform) && !_platform.disposed) {\n    _platform.dispose();\n  }\n}\n\n/**\n * Returns the current platform.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nexport function getPlatform(): PlatformRef {\n  return isPresent(_platform) && !_platform.disposed ? _platform : null;\n}\n\n/**\n * Shortcut for ApplicationRef.bootstrap.\n * Requires a platform to be created first.\n *\n * @deprecated Use {@link bootstrapModuleFactory} instead.\n */\nexport function coreBootstrap<C>(\n    componentFactory: ComponentFactory<C>, injector: Injector): ComponentRef<C> {\n  throw new BaseException('coreBootstrap is deprecated. Use bootstrapModuleFactory instead.');\n}\n\n/**\n * Resolves the componentFactory for the given component,\n * waits for asynchronous initializers and bootstraps the component.\n * Requires a platform to be created first.\n *\n * @deprecated Use {@link bootstrapModule} instead.\n */\nexport function coreLoadAndBootstrap(\n    componentType: Type, injector: Injector): Promise<ComponentRef<any>> {\n  throw new BaseException('coreLoadAndBootstrap is deprecated. Use bootstrapModule instead.');\n}\n\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when {@link bootstrap}() is called, or\n * explicitly by calling {@link createPlatform}().\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nexport abstract class PlatformRef {\n  /**\n   * Creates an instance of an `@NgModule` for the given platform\n   * for offline compilation.\n   *\n   * ## Simple Example\n   *\n   * ```typescript\n   * my_module.ts:\n   *\n   * @NgModule({\n   *   imports: [BrowserModule]\n   * })\n   * class MyModule {}\n   *\n   * main.ts:\n   * import {MyModuleNgFactory} from './my_module.ngfactory';\n   * import {browserPlatform} from '@angular/platform-browser';\n   *\n   * let moduleRef = browserPlatform().bootstrapModuleFactory(MyModuleNgFactory);\n   * ```\n   *\n   * @experimental APIs related to application bootstrap are currently under review.\n   */\n  bootstrapModuleFactory<M>(moduleFactory: NgModuleFactory<M>): Promise<NgModuleRef<M>> {\n    throw unimplemented();\n  }\n\n  /**\n   * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n   *\n   * ## Simple Example\n   *\n   * ```typescript\n   * @NgModule({\n   *   imports: [BrowserModule]\n   * })\n   * class MyModule {}\n   *\n   * let moduleRef = browserPlatform().bootstrapModule(MyModule);\n   * ```\n   * @stable\n   */\n  bootstrapModule<M>(\n      moduleType: ConcreteType<M>,\n      compilerOptions: CompilerOptions|CompilerOptions[] = []): Promise<NgModuleRef<M>> {\n    throw unimplemented();\n  }\n\n  /**\n   * Register a listener to be called when the platform is disposed.\n   */\n  abstract registerDisposeListener(dispose: () => void): void;\n\n  /**\n   * Retrieve the platform {@link Injector}, which is the parent injector for\n   * every Angular application on the page and provides singleton providers.\n   */\n  get injector(): Injector { throw unimplemented(); };\n\n  /**\n   * Destroy the Angular platform and all Angular applications on the page.\n   */\n  abstract dispose(): void;\n\n  get disposed(): boolean { throw unimplemented(); }\n}\n\nfunction _callAndReportToExceptionHandler(\n    exceptionHandler: ExceptionHandler, callback: () => any): any {\n  try {\n    const result = callback();\n    if (isPromise(result)) {\n      return result.catch((e: any) => {\n        exceptionHandler.call(e);\n        // rethrow as the exception handler might not do it\n        throw e;\n      });\n    } else {\n      return result;\n    }\n  } catch (e) {\n    exceptionHandler.call(e);\n    // rethrow as the exception handler might not do it\n    throw e;\n  }\n}\nexport class PlatformRef_ extends PlatformRef {\n  /** @internal */\n  _applications: ApplicationRef[] = [];\n  /** @internal */\n  _disposeListeners: Function[] = [];\n\n  private _disposed: boolean = false;\n\n  constructor(private _injector: Injector) { super(); }\n\n  registerDisposeListener(dispose: () => void): void { this._disposeListeners.push(dispose); }\n\n  get injector(): Injector { return this._injector; }\n\n  get disposed() { return this._disposed; }\n\n  dispose(): void {\n    ListWrapper.clone(this._applications).forEach((app) => app.dispose());\n    this._disposeListeners.forEach((dispose) => dispose());\n    this._disposed = true;\n  }\n\n  /** @internal */\n  _applicationDisposed(app: ApplicationRef): void { ListWrapper.remove(this._applications, app); }\n\n  bootstrapModuleFactory<M>(moduleFactory: NgModuleFactory<M>): Promise<NgModuleRef<M>> {\n    // Note: We need to create the NgZone _before_ we instantiate the module,\n    // as instantiating the module creates some providers eagerly.\n    // So we create a mini parent injector that just contains the new NgZone and\n    // pass that as parent to the NgModuleFactory.\n    const ngZone = new NgZone({enableLongStackTrace: isDevMode()});\n    // Attention: Don't use ApplicationRef.run here,\n    // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n    return ngZone.run(() => {\n      const ngZoneInjector =\n          ReflectiveInjector.resolveAndCreate([{provide: NgZone, useValue: ngZone}], this.injector);\n      const moduleRef = moduleFactory.create(ngZoneInjector);\n      const exceptionHandler: ExceptionHandler = moduleRef.injector.get(ExceptionHandler);\n      ObservableWrapper.subscribe(ngZone.onError, (error: NgZoneError) => {\n        exceptionHandler.call(error.error, error.stackTrace);\n      });\n      return _callAndReportToExceptionHandler(exceptionHandler, () => {\n        const appInits = moduleRef.injector.get(APP_INITIALIZER, null);\n        const asyncInitPromises: Promise<any>[] = [];\n        if (isPresent(appInits)) {\n          for (let i = 0; i < appInits.length; i++) {\n            const initResult = appInits[i]();\n            if (isPromise(initResult)) {\n              asyncInitPromises.push(initResult);\n            }\n          }\n        }\n        const appRef: ApplicationRef_ = moduleRef.injector.get(ApplicationRef);\n        return Promise.all(asyncInitPromises).then(() => {\n          appRef.asyncInitDone();\n          return moduleRef;\n        });\n      });\n    });\n  }\n\n  bootstrapModule<M>(\n      moduleType: ConcreteType<M>,\n      compilerOptions: CompilerOptions|CompilerOptions[] = []): Promise<NgModuleRef<M>> {\n    const compilerFactory: CompilerFactory = this.injector.get(CompilerFactory);\n    const compiler = compilerFactory.createCompiler(\n        compilerOptions instanceof Array ? compilerOptions : [compilerOptions]);\n    return compiler.compileModuleAsync(moduleType)\n        .then((moduleFactory) => this.bootstrapModuleFactory(moduleFactory));\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: Injector, },\n];\n}\n\n/**\n * A reference to an Angular application running on a page.\n *\n * For more about Angular applications, see the documentation for {@link bootstrap}.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nexport abstract class ApplicationRef {\n  /**\n   * Register a listener to be called each time `bootstrap()` is called to bootstrap\n   * a new root component.\n   */\n  abstract registerBootstrapListener(listener: (ref: ComponentRef<any>) => void): void;\n\n  /**\n   * Register a listener to be called when the application is disposed.\n   */\n  abstract registerDisposeListener(dispose: () => void): void;\n\n  /**\n   * Returns a promise that resolves when all asynchronous application initializers\n   * are done.\n   */\n  abstract waitForAsyncInitializers(): Promise<any>;\n\n  /**\n   * Runs the given callback in the zone and returns the result of the callback.\n   * Exceptions will be forwarded to the ExceptionHandler and rethrown.\n   */\n  abstract run(callback: Function): any;\n\n  /**\n   * Bootstrap a new component at the root level of the application.\n   *\n   * ### Bootstrap process\n   *\n   * When bootstrapping a new root component into an application, Angular mounts the\n   * specified application component onto DOM elements identified by the [componentType]'s\n   * selector and kicks off automatic change detection to finish initializing the component.\n   *\n   * ### Example\n   * {@example core/ts/platform/platform.ts region='longform'}\n   */\n  abstract bootstrap<C>(componentFactory: ComponentFactory<C>|ConcreteType<C>): ComponentRef<C>;\n\n  /**\n   * Retrieve the application {@link Injector}.\n   */\n  get injector(): Injector { return <Injector>unimplemented(); };\n\n  /**\n   * Retrieve the application {@link NgZone}.\n   */\n  get zone(): NgZone { return <NgZone>unimplemented(); };\n\n  /**\n   * Dispose of this application and all of its components.\n   */\n  abstract dispose(): void;\n\n  /**\n   * Invoke this method to explicitly process change detection and its side-effects.\n   *\n   * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n   * further changes are detected. If additional changes are picked up during this second cycle,\n   * bindings in the app have side-effects that cannot be resolved in a single change detection\n   * pass.\n   * In this case, Angular throws an error, since an Angular application can only have one change\n   * detection pass during which all change detection must complete.\n   */\n  abstract tick(): void;\n\n  /**\n   * Get a list of component types registered to this application.\n   */\n  get componentTypes(): Type[] { return <Type[]>unimplemented(); };\n}\nexport class ApplicationRef_ extends ApplicationRef {\n  /** @internal */\n  static _tickScope: WtfScopeFn = wtfCreateScope('ApplicationRef#tick()');\n\n  /** @internal */\n  private _bootstrapListeners: Function[] = [];\n  /** @internal */\n  private _disposeListeners: Function[] = [];\n  /** @internal */\n  private _rootComponents: ComponentRef<any>[] = [];\n  /** @internal */\n  private _rootComponentTypes: Type[] = [];\n  /** @internal */\n  private _changeDetectorRefs: ChangeDetectorRef[] = [];\n  /** @internal */\n  private _runningTick: boolean = false;\n  /** @internal */\n  private _enforceNoNewChanges: boolean = false;\n\n  /** @internal */\n  _asyncInitDonePromise: PromiseCompleter<any> = PromiseWrapper.completer();\n\n  constructor(\n      private _platform: PlatformRef_, private _zone: NgZone, private _console: Console,\n      private _injector: Injector, private _exceptionHandler: ExceptionHandler,\n      private _componentFactoryResolver: ComponentFactoryResolver, private _testabilityRegistry: TestabilityRegistry, private _testability: Testability) {\n    super();\n    this._enforceNoNewChanges = isDevMode();\n    ObservableWrapper.subscribe(\n        this._zone.onMicrotaskEmpty, (_) => { this._zone.run(() => { this.tick(); }); });\n  }\n\n  registerBootstrapListener(listener: (ref: ComponentRef<any>) => void): void {\n    this._bootstrapListeners.push(listener);\n  }\n\n  registerDisposeListener(dispose: () => void): void { this._disposeListeners.push(dispose); }\n\n  registerChangeDetector(changeDetector: ChangeDetectorRef): void {\n    this._changeDetectorRefs.push(changeDetector);\n  }\n\n  unregisterChangeDetector(changeDetector: ChangeDetectorRef): void {\n    ListWrapper.remove(this._changeDetectorRefs, changeDetector);\n  }\n\n  /**\n   * @internal\n   */\n  asyncInitDone() { this._asyncInitDonePromise.resolve(null); }\n\n  waitForAsyncInitializers(): Promise<any> { return this._asyncInitDonePromise.promise; }\n\n  run(callback: Function): any {\n    return this._zone.run(\n        () => _callAndReportToExceptionHandler(this._exceptionHandler, <any>callback));\n  }\n\n  bootstrap<C>(componentOrFactory: ComponentFactory<C>|ConcreteType<C>): ComponentRef<C> {\n    return this.run(() => {\n      let componentFactory: ComponentFactory<C>;\n      if (componentOrFactory instanceof ComponentFactory) {\n        componentFactory = componentOrFactory;\n      } else {\n        componentFactory =\n            this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n      }\n      this._rootComponentTypes.push(componentFactory.componentType);\n      var compRef = componentFactory.create(this._injector, [], componentFactory.selector);\n      compRef.onDestroy(() => { this._unloadComponent(compRef); });\n      var testability = compRef.injector.get(Testability, null);\n      if (isPresent(testability)) {\n        compRef.injector.get(TestabilityRegistry)\n            .registerApplication(compRef.location.nativeElement, testability);\n      }\n\n      this._loadComponent(compRef);\n      if (isDevMode()) {\n        this._console.log(\n            `Angular 2 is running in the development mode. Call enableProdMode() to enable the production mode.`);\n      }\n      return compRef;\n    });\n  }\n\n  /** @internal */\n  _loadComponent(componentRef: ComponentRef<any>): void {\n    this._changeDetectorRefs.push(componentRef.changeDetectorRef);\n    this.tick();\n    this._rootComponents.push(componentRef);\n    this._bootstrapListeners.forEach((listener) => listener(componentRef));\n  }\n\n  /** @internal */\n  _unloadComponent(componentRef: ComponentRef<any>): void {\n    if (!ListWrapper.contains(this._rootComponents, componentRef)) {\n      return;\n    }\n    this.unregisterChangeDetector(componentRef.changeDetectorRef);\n    ListWrapper.remove(this._rootComponents, componentRef);\n  }\n\n  get injector(): Injector { return this._injector; }\n\n  get zone(): NgZone { return this._zone; }\n\n  tick(): void {\n    if (this._runningTick) {\n      throw new BaseException('ApplicationRef.tick is called recursively');\n    }\n\n    var s = ApplicationRef_._tickScope();\n    try {\n      this._runningTick = true;\n      this._changeDetectorRefs.forEach((detector) => detector.detectChanges());\n      if (this._enforceNoNewChanges) {\n        this._changeDetectorRefs.forEach((detector) => detector.checkNoChanges());\n      }\n    } finally {\n      this._runningTick = false;\n      wtfLeave(s);\n    }\n  }\n\n  dispose(): void {\n    // TODO(alxhub): Dispose of the NgZone.\n    ListWrapper.clone(this._rootComponents).forEach((ref) => ref.destroy());\n    this._disposeListeners.forEach((dispose) => dispose());\n    this._platform._applicationDisposed(this);\n  }\n\n  get componentTypes(): Type[] { return this._rootComponentTypes; }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: PlatformRef_, },\n{type: NgZone, },\n{type: Console, },\n{type: Injector, },\n{type: ExceptionHandler, },\n{type: ComponentFactoryResolver, },\n{type: TestabilityRegistry, decorators: [{ type: Optional }, ]},\n{type: Testability, decorators: [{ type: Optional }, ]},\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}