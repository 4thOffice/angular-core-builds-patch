{"version":3,"sources":["../../../../../../modules/@angular/core/src/change_detection/differs/default_keyvalue_differ.ts"],"names":[],"mappings":"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","file":"default_keyvalue_differ.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {StringMapWrapper} from '../../facade/collection';\nimport {isJsObject, looseIdentical, stringify} from '../../facade/lang';\nimport {ChangeDetectorRef} from '../change_detector_ref';\n\nimport {KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDifferFactory} from './keyvalue_differs';\nexport class DefaultKeyValueDifferFactory<K, V> implements KeyValueDifferFactory {\nconstructor() {}\n/**\n * @param {?} obj\n * @return {?}\n */\nsupports(obj: any): boolean { return obj instanceof Map || isJsObject(obj); }\n/**\n * @param {?} cdRef\n * @return {?}\n */\ncreate<K, V>(cdRef: ChangeDetectorRef): KeyValueDiffer<K, V> {\n    return new DefaultKeyValueDiffer<K, V>();\n  }\n}\nexport class DefaultKeyValueDiffer<K, V> implements KeyValueDiffer<K, V>, KeyValueChanges<K, V> {\nprivate _records: Map<K, V> = new Map<K, V>();\nprivate _mapHead: KeyValueChangeRecord_<K, V> = null;\nprivate _previousMapHead: KeyValueChangeRecord_<K, V> = null;\nprivate _changesHead: KeyValueChangeRecord_<K, V> = null;\nprivate _changesTail: KeyValueChangeRecord_<K, V> = null;\nprivate _additionsHead: KeyValueChangeRecord_<K, V> = null;\nprivate _additionsTail: KeyValueChangeRecord_<K, V> = null;\nprivate _removalsHead: KeyValueChangeRecord_<K, V> = null;\nprivate _removalsTail: KeyValueChangeRecord_<K, V> = null;\n/**\n * @return {?}\n */\nget isDirty(): boolean {\n    return this._additionsHead !== null || this._changesHead !== null ||\n        this._removalsHead !== null;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>;\n    for (record = this._mapHead; record !== null; record = record._next) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachPreviousItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>;\n    for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachChangedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>;\n    for (record = this._changesHead; record !== null; record = record._nextChanged) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachAddedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>;\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachRemovedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>;\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} map\n * @return {?}\n */\ndiff(map: Map<any, any>|{[k: string]: any}): any {\n    if (!map) {\n      map = new Map();\n    } else if (!(map instanceof Map || isJsObject(map))) {\n      throw new Error(`Error trying to diff '${map}'`);\n    }\n\n    return this.check(map) ? this : null;\n  }\n/**\n * @return {?}\n */\nonDestroy() {}\n/**\n * @param {?} map\n * @return {?}\n */\ncheck(map: Map<any, any>|{[k: string]: any}): boolean {\n    this._reset();\n    const /** @type {?} */ records = this._records;\n    let /** @type {?} */ oldSeqRecord: KeyValueChangeRecord_<K, V> = this._mapHead;\n    let /** @type {?} */ lastOldSeqRecord: KeyValueChangeRecord_<K, V> = null;\n    let /** @type {?} */ lastNewSeqRecord: KeyValueChangeRecord_<K, V> = null;\n    let /** @type {?} */ seqChanged: boolean = false;\n\n    this._forEach(map, (value: any, key: any) => {\n      let /** @type {?} */ newSeqRecord: any;\n      if (oldSeqRecord && key === oldSeqRecord.key) {\n        newSeqRecord = oldSeqRecord;\n        this._maybeAddToChanges(newSeqRecord, value);\n      } else {\n        seqChanged = true;\n        if (oldSeqRecord !== null) {\n          this._removeFromSeq(lastOldSeqRecord, oldSeqRecord);\n          this._addToRemovals(oldSeqRecord);\n        }\n        if (records.has(key)) {\n          newSeqRecord = records.get(key);\n          this._maybeAddToChanges(newSeqRecord, value);\n        } else {\n          newSeqRecord = new KeyValueChangeRecord_<K, V>(key);\n          records.set(key, newSeqRecord);\n          newSeqRecord.currentValue = value;\n          this._addToAdditions(newSeqRecord);\n        }\n      }\n\n      if (seqChanged) {\n        if (this._isInRemovals(newSeqRecord)) {\n          this._removeFromRemovals(newSeqRecord);\n        }\n        if (lastNewSeqRecord == null) {\n          this._mapHead = newSeqRecord;\n        } else {\n          lastNewSeqRecord._next = newSeqRecord;\n        }\n      }\n      lastOldSeqRecord = oldSeqRecord;\n      lastNewSeqRecord = newSeqRecord;\n      oldSeqRecord = oldSeqRecord && oldSeqRecord._next;\n    });\n    this._truncate(lastOldSeqRecord, oldSeqRecord);\n    return this.isDirty;\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_reset() {\n    if (this.isDirty) {\n      let /** @type {?} */ record: KeyValueChangeRecord_<K, V>;\n      // Record the state of the mapping\n      for (record = this._previousMapHead = this._mapHead; record !== null; record = record._next) {\n        record._nextPrevious = record._next;\n      }\n\n      for (record = this._changesHead; record !== null; record = record._nextChanged) {\n        record.previousValue = record.currentValue;\n      }\n\n      for (record = this._additionsHead; record != null; record = record._nextAdded) {\n        record.previousValue = record.currentValue;\n      }\n\n      this._changesHead = this._changesTail = null;\n      this._additionsHead = this._additionsTail = null;\n      this._removalsHead = this._removalsTail = null;\n    }\n  }\n/**\n * @param {?} lastRecord\n * @param {?} record\n * @return {?}\n */\nprivate _truncate(lastRecord: KeyValueChangeRecord_<K, V>, record: KeyValueChangeRecord_<K, V>) {\n    while (record !== null) {\n      if (lastRecord === null) {\n        this._mapHead = null;\n      } else {\n        lastRecord._next = null;\n      }\n      const /** @type {?} */ nextRecord = record._next;\n      this._addToRemovals(record);\n      lastRecord = record;\n      record = nextRecord;\n    }\n\n    for (let /** @type {?} */ rec: KeyValueChangeRecord_<K, V> = this._removalsHead; rec !== null;\n         rec = rec._nextRemoved) {\n      rec.previousValue = rec.currentValue;\n      rec.currentValue = null;\n      this._records.delete(rec.key);\n    }\n  }\n/**\n * @param {?} record\n * @param {?} newValue\n * @return {?}\n */\nprivate _maybeAddToChanges(record: KeyValueChangeRecord_<K, V>, newValue: any): void {\n    if (!looseIdentical(newValue, record.currentValue)) {\n      record.previousValue = record.currentValue;\n      record.currentValue = newValue;\n      this._addToChanges(record);\n    }\n  }\n/**\n * @param {?} record\n * @return {?}\n */\nprivate _isInRemovals(record: KeyValueChangeRecord_<K, V>) {\n    return record === this._removalsHead || record._nextRemoved !== null ||\n        record._prevRemoved !== null;\n  }\n/**\n * @param {?} record\n * @return {?}\n */\nprivate _addToRemovals(record: KeyValueChangeRecord_<K, V>) {\n    if (this._removalsHead === null) {\n      this._removalsHead = this._removalsTail = record;\n    } else {\n      this._removalsTail._nextRemoved = record;\n      record._prevRemoved = this._removalsTail;\n      this._removalsTail = record;\n    }\n  }\n/**\n * @param {?} prev\n * @param {?} record\n * @return {?}\n */\nprivate _removeFromSeq(prev: KeyValueChangeRecord_<K, V>, record: KeyValueChangeRecord_<K, V>) {\n    const /** @type {?} */ next = record._next;\n    if (prev === null) {\n      this._mapHead = next;\n    } else {\n      prev._next = next;\n    }\n    record._next = null;\n  }\n/**\n * @param {?} record\n * @return {?}\n */\nprivate _removeFromRemovals(record: KeyValueChangeRecord_<K, V>) {\n    const /** @type {?} */ prev = record._prevRemoved;\n    const /** @type {?} */ next = record._nextRemoved;\n    if (prev === null) {\n      this._removalsHead = next;\n    } else {\n      prev._nextRemoved = next;\n    }\n    if (next === null) {\n      this._removalsTail = prev;\n    } else {\n      next._prevRemoved = prev;\n    }\n    record._prevRemoved = record._nextRemoved = null;\n  }\n/**\n * @param {?} record\n * @return {?}\n */\nprivate _addToAdditions(record: KeyValueChangeRecord_<K, V>) {\n    if (this._additionsHead === null) {\n      this._additionsHead = this._additionsTail = record;\n    } else {\n      this._additionsTail._nextAdded = record;\n      this._additionsTail = record;\n    }\n  }\n/**\n * @param {?} record\n * @return {?}\n */\nprivate _addToChanges(record: KeyValueChangeRecord_<K, V>) {\n    if (this._changesHead === null) {\n      this._changesHead = this._changesTail = record;\n    } else {\n      this._changesTail._nextChanged = record;\n      this._changesTail = record;\n    }\n  }\n/**\n * @return {?}\n */\ntoString(): string {\n    const /** @type {?} */ items: any[] = [];\n    const /** @type {?} */ previous: any[] = [];\n    const /** @type {?} */ changes: any[] = [];\n    const /** @type {?} */ additions: any[] = [];\n    const /** @type {?} */ removals: any[] = [];\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>;\n\n    for (record = this._mapHead; record !== null; record = record._next) {\n      items.push(stringify(record));\n    }\n    for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n      previous.push(stringify(record));\n    }\n    for (record = this._changesHead; record !== null; record = record._nextChanged) {\n      changes.push(stringify(record));\n    }\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      additions.push(stringify(record));\n    }\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      removals.push(stringify(record));\n    }\n\n    return 'map: ' + items.join(', ') + '\\n' +\n        'previous: ' + previous.join(', ') + '\\n' +\n        'additions: ' + additions.join(', ') + '\\n' +\n        'changes: ' + changes.join(', ') + '\\n' +\n        'removals: ' + removals.join(', ') + '\\n';\n  }\n/**\n * \\@internal\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nprivate _forEach<K, V>(obj: Map<K, V>|{[k: string]: V}, fn: (v: V, k: any) => void) {\n    if (obj instanceof Map) {\n      obj.forEach(fn);\n    } else {\n      Object.keys(obj).forEach(k => fn(obj[k], k));\n    }\n  }\n}\n\nfunction DefaultKeyValueDiffer_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._records;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._mapHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._previousMapHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._changesHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._changesTail;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._additionsHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._additionsTail;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._removalsHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._removalsTail;\n}\n\n/**\n * \\@stable\n */\nclass KeyValueChangeRecord_<K, V> implements KeyValueChangeRecord<K, V> {\n  previousValue: V = null;\n  currentValue: V = null;\n\n  /** @internal */\n  _nextPrevious: KeyValueChangeRecord_<K, V> = null;\n  /** @internal */\n  _next: KeyValueChangeRecord_<K, V> = null;\n  /** @internal */\n  _nextAdded: KeyValueChangeRecord_<K, V> = null;\n  /** @internal */\n  _nextRemoved: KeyValueChangeRecord_<K, V> = null;\n  /** @internal */\n  _prevRemoved: KeyValueChangeRecord_<K, V> = null;\n  /** @internal */\n  _nextChanged: KeyValueChangeRecord_<K, V> = null;\n/**\n * @param {?} key\n */\nconstructor(public key: K) {}\n/**\n * @return {?}\n */\ntoString(): string {\n    return looseIdentical(this.previousValue, this.currentValue) ?\n        stringify(this.key) :\n        (stringify(this.key) + '[' + stringify(this.previousValue) + '->' +\n         stringify(this.currentValue) + ']');\n  }\n}\n\nfunction KeyValueChangeRecord__tsickle_Closure_declarations() {\n/** @type {?} */\nKeyValueChangeRecord_.prototype.previousValue;\n/** @type {?} */\nKeyValueChangeRecord_.prototype.currentValue;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextPrevious;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._next;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextAdded;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextRemoved;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._prevRemoved;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextChanged;\n/** @type {?} */\nKeyValueChangeRecord_.prototype.key;\n}\n\n"]}