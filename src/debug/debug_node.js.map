{"version":3,"sources":["../../../../../modules/@angular/core/src/debug/debug_node.ts"],"names":[],"mappings":"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","file":"debug_node.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di';\nimport {Predicate} from '../facade/collection';\nimport {RenderDebugInfo} from '../render/api';\nexport class EventListener {\n/**\n * @param {?} name\n * @param {?} callback\n */\nconstructor(public name: string,\npublic callback: Function){}; }\n\nfunction EventListener_tsickle_Closure_declarations() {\n/** @type {?} */\nEventListener.prototype.name;\n/** @type {?} */\nEventListener.prototype.callback;\n}\n\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nexport class DebugNode {\n  nativeNode: any;\n  listeners: EventListener[];\n  parent: DebugElement;\n/**\n * @param {?} nativeNode\n * @param {?} parent\n * @param {?} _debugInfo\n */\nconstructor(nativeNode: any, parent: DebugNode,\nprivate _debugInfo: RenderDebugInfo) {\n    this.nativeNode = nativeNode;\n    if (parent && parent instanceof DebugElement) {\n      parent.addChild(this);\n    } else {\n      this.parent = null;\n    }\n    this.listeners = [];\n  }\n/**\n * @return {?}\n */\nget injector(): Injector { return this._debugInfo ? this._debugInfo.injector : null; }\n/**\n * @return {?}\n */\nget componentInstance(): any { return this._debugInfo ? this._debugInfo.component : null; }\n/**\n * @return {?}\n */\nget context(): any { return this._debugInfo ? this._debugInfo.context : null; }\n/**\n * @return {?}\n */\nget references(): {[key: string]: any} {\n    return this._debugInfo ? this._debugInfo.references : null;\n  }\n/**\n * @return {?}\n */\nget providerTokens(): any[] { return this._debugInfo ? this._debugInfo.providerTokens : null; }\n/**\n * @return {?}\n */\nget source(): string { return this._debugInfo ? this._debugInfo.source : null; }\n}\n\nfunction DebugNode_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugNode.prototype.nativeNode;\n/** @type {?} */\nDebugNode.prototype.listeners;\n/** @type {?} */\nDebugNode.prototype.parent;\n/** @type {?} */\nDebugNode.prototype._debugInfo;\n}\n\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nexport class DebugElement extends DebugNode {\n  name: string;\n  properties: {[key: string]: any};\n  attributes: {[key: string]: string};\n  classes: {[key: string]: boolean};\n  styles: {[key: string]: string};\n  childNodes: DebugNode[];\n  nativeElement: any;\n/**\n * @param {?} nativeNode\n * @param {?} parent\n * @param {?} _debugInfo\n */\nconstructor(nativeNode: any, parent: any, _debugInfo: RenderDebugInfo) {\n    super(nativeNode, parent, _debugInfo);\n    this.properties = {};\n    this.attributes = {};\n    this.classes = {};\n    this.styles = {};\n    this.childNodes = [];\n    this.nativeElement = nativeNode;\n  }\n/**\n * @param {?} child\n * @return {?}\n */\naddChild(child: DebugNode) {\n    if (child) {\n      this.childNodes.push(child);\n      child.parent = this;\n    }\n  }\n/**\n * @param {?} child\n * @return {?}\n */\nremoveChild(child: DebugNode) {\n    const /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n    if (childIndex !== -1) {\n      child.parent = null;\n      this.childNodes.splice(childIndex, 1);\n    }\n  }\n/**\n * @param {?} child\n * @param {?} newChildren\n * @return {?}\n */\ninsertChildrenAfter(child: DebugNode, newChildren: DebugNode[]) {\n    const /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n    if (siblingIndex !== -1) {\n      const /** @type {?} */ previousChildren = this.childNodes.slice(0, siblingIndex + 1);\n      const /** @type {?} */ nextChildren = this.childNodes.slice(siblingIndex + 1);\n      this.childNodes = previousChildren.concat(newChildren, nextChildren);\n      for (let /** @type {?} */ i = 0; i < newChildren.length; ++i) {\n        const /** @type {?} */ newChild = newChildren[i];\n        if (newChild.parent) {\n          newChild.parent.removeChild(newChild);\n        }\n        newChild.parent = this;\n      }\n    }\n  }\n/**\n * @param {?} predicate\n * @return {?}\n */\nquery(predicate: Predicate<DebugElement>): DebugElement {\n    const /** @type {?} */ results = this.queryAll(predicate);\n    return results[0] || null;\n  }\n/**\n * @param {?} predicate\n * @return {?}\n */\nqueryAll(predicate: Predicate<DebugElement>): DebugElement[] {\n    const /** @type {?} */ matches: DebugElement[] = [];\n    _queryElementChildren(this, predicate, matches);\n    return matches;\n  }\n/**\n * @param {?} predicate\n * @return {?}\n */\nqueryAllNodes(predicate: Predicate<DebugNode>): DebugNode[] {\n    const /** @type {?} */ matches: DebugNode[] = [];\n    _queryNodeChildren(this, predicate, matches);\n    return matches;\n  }\n/**\n * @return {?}\n */\nget children(): DebugElement[] {\n    return /** @type {?} */(( this.childNodes.filter((node) => node instanceof DebugElement) as DebugElement[]));\n  }\n/**\n * @param {?} eventName\n * @param {?} eventObj\n * @return {?}\n */\ntriggerEventHandler(eventName: string, eventObj: any) {\n    this.listeners.forEach((listener) => {\n      if (listener.name == eventName) {\n        listener.callback(eventObj);\n      }\n    });\n  }\n}\n\nfunction DebugElement_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugElement.prototype.name;\n/** @type {?} */\nDebugElement.prototype.properties;\n/** @type {?} */\nDebugElement.prototype.attributes;\n/** @type {?} */\nDebugElement.prototype.classes;\n/** @type {?} */\nDebugElement.prototype.styles;\n/** @type {?} */\nDebugElement.prototype.childNodes;\n/** @type {?} */\nDebugElement.prototype.nativeElement;\n}\n\n/**\n * \\@experimental\n * @param {?} debugEls\n * @return {?}\n */\nexport function asNativeElements(debugEls: DebugElement[]): any {\n  return debugEls.map((el) => el.nativeElement);\n}\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(\n    element: DebugElement, predicate: Predicate<DebugElement>, matches: DebugElement[]) {\n  element.childNodes.forEach(node => {\n    if (node instanceof DebugElement) {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      _queryElementChildren(node, predicate, matches);\n    }\n  });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(\n    parentNode: DebugNode, predicate: Predicate<DebugNode>, matches: DebugNode[]) {\n  if (parentNode instanceof DebugElement) {\n    parentNode.childNodes.forEach(node => {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      if (node instanceof DebugElement) {\n        _queryNodeChildren(node, predicate, matches);\n      }\n    });\n  }\n}\n\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nconst /** @type {?} */ _nativeNodeToDebugNode = new Map<any, DebugNode>();\n/**\n * \\@experimental\n * @param {?} nativeNode\n * @return {?}\n */\nexport function getDebugNode(nativeNode: any): DebugNode {\n  return _nativeNodeToDebugNode.get(nativeNode);\n}\n/**\n * @return {?}\n */\nexport function getAllDebugNodes(): DebugNode[] {\n  return Array.from(_nativeNodeToDebugNode.values());\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function indexDebugNode(node: DebugNode) {\n  _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function removeDebugNodeFromIndex(node: DebugNode) {\n  _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n"]}