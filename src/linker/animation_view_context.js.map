{"version":3,"sources":["../../../../../modules/@angular/core/src/linker/animation_view_context.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AACH,OAAO,EAAA,oBAAE,EAAoB,MAAA,qCAAA,CAAA;AAG7B,OAAO,EAAA,uBAAE,EAAuB,MAAA,wCAAA,CAAA;AAChC,OAAO,EAAA,gBAAE,EAAgB,MAAA,iCAAA,CAAA;AACzB,MACC;IACD;;OAEG;IACH,YADsB,eAAiB;QAAjB,oBAAA,GAAA,eAAA,CAAiB;QAF7B,aAAA,GAAW,IAAI,gBAAA,EAAiB,CAAE;IAEU,CAAA;IAEtD;;;OAGG;IACH,yBAJG,CAAA,QAAA;QAKC,MAAM,gBAAgB,CAJhB,sBAAA,GAAyB,IAAA,CAAK,QAAC,CAAQ,aAAC,EAAa,CAAE;QAK7D,+DAA+D;QAC/D,iEAAiE;QACjE,EAAE,CAAC,CAAC,sBAJC,CAAsB,MAAC,CAAM,CAAC,CAAA;YAKjC,IAJI,oBAAA,CAAqB,sBAAC,CAAsB,CAAC,MAAC,CAAM,MAAM,QAAA,EAAS,CAAE,CAAC;QAK5E,CAAC;QAJC,IAAA,CAAK,CAAA;YAKL,QAAQ,EAJC,CAAE;QAKb,CAAC;IACH,CAAC;IACH;;;;;OAKG;IACH,cATG,CAAA,OAAA,EAAA,aAAA,EAAA,MAAA;QAUC,IAAI,CATC,eAAC,CAAe,OAAC,CAAO,MAAC,CAAM,CAAC;QAUrC,IAAI,CATC,QAAC,CAAQ,GAAC,CAAG,OAAC,EAAQ,aAAA,EAAe,MAAA,CAAO,CAAC;QAUlD,MAAM,CATC,MAAC,CAAM,MAAM,IAAA,CAAK,QAAC,CAAQ,MAAC,CAAM,OAAC,EAAQ,aAAA,EAAe,MAAA,CAAO,CAAC,CAAC;IAU5E,CAAC;IACH;;;;OAIG;IACH,mBAbG,CAAA,OAAA,EAAA,gBAAA,IAAA;QAcC,MAAM,gBAAgB,CAbhB,OAAA,GAA6B,EAAA,CAAG;QActC,EAAE,CAAC,CAAC,aAbC,CAAa,CAAC,CAAA;YAcjB,MAAM,gBAAgB,CAbhB,aAAA,GAAgB,IAAA,CAAK,QAAC,CAAQ,IAAC,CAAI,OAAC,EAAQ,aAAA,CAAc,CAAC;YAcjE,EAAE,CAAC,CAAC,aAbC,CAAa,CAAC,CAAA;gBAcjB,eAAe,CAbC,aAAC,EAAc,OAAA,CAAQ,CAAC;YAc1C,CAAC;QACH,CAAC;QAbC,IAAA,CAAK,CAAA;YAcL,IAAI,CAbC,QAAC,CAAQ,uBAAC,CAAuB,OAAC,CAAO,CAAC,OAAC,CAc5C,MAAM,IAbI,eAAA,CAAgB,MAAC,EAAO,OAAA,CAAQ,CAAC,CAAC;QAclD,CAAC;QACD,MAAM,CAbC,OAAA,CAAQ;IAcjB,CAAC;CACF;AAED;IACA,gBAAgB;IAChB,oBAAoB,CAAC,SAAS,CAAC,QAAQ,CAAC;IACxC,gBAAgB;IAChB,oBAAoB,CAAC,SAAS,CAAC,eAAe,CAAC;AAC/C,CAAC;AAED;;;;GAIG;AACH,yBAzBC,MAAA,EAAA,gBAAA;IA0BC,EAAE,CAAC,CAAC,CAzBC,MAAC,YAAiB,oBAAA,CAAqB,IAAI,CAAA,MAAE,YAAiB,uBAAA,CAAwB,CAAC,CAAC,CAAA;QA0B3F,MAAM,CAzBC,OAAC,CAAO,OAAC,CAAO,MAAC,IAAS,eAAA,CAAgB,MAAC,EAAO,gBAAA,CAAiB,CAAC,CAAC;IA0B9E,CAAC;IAzBC,IAAA,CAAK,CAAA;QA0BL,gBAAgB,CAzBC,IAAC,CAAI,MAAC,CAAM,CAAC;IA0BhC,CAAC;AACH,CAAC","file":"animation_view_context.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationGroupPlayer} from '../animation/animation_group_player';\nimport {AnimationPlayer} from '../animation/animation_player';\nimport {AnimationQueue} from '../animation/animation_queue';\nimport {AnimationSequencePlayer} from '../animation/animation_sequence_player';\nimport {ViewAnimationMap} from '../animation/view_animation_map';\nexport class AnimationViewContext {\nprivate _players = new ViewAnimationMap();\n/**\n * @param {?} _animationQueue\n */\nconstructor(private _animationQueue: AnimationQueue) {}\n/**\n * @param {?} callback\n * @return {?}\n */\nonAllActiveAnimationsDone(callback: () => any): void {\n    const /** @type {?} */ activeAnimationPlayers = this._players.getAllPlayers();\n    // we check for the length to avoid having GroupAnimationPlayer\n    // issue an unnecessary microtask when zero players are passed in\n    if (activeAnimationPlayers.length) {\n      new AnimationGroupPlayer(activeAnimationPlayers).onDone(() => callback());\n    } else {\n      callback();\n    }\n  }\n/**\n * @param {?} element\n * @param {?} animationName\n * @param {?} player\n * @return {?}\n */\nqueueAnimation(element: any, animationName: string, player: AnimationPlayer): void {\n    this._animationQueue.enqueue(player);\n    this._players.set(element, animationName, player);\n    player.onDone(() => this._players.remove(element, animationName, player));\n  }\n/**\n * @param {?} element\n * @param {?=} animationName\n * @return {?}\n */\ngetAnimationPlayers(element: any, animationName: string = null): AnimationPlayer[] {\n    const /** @type {?} */ players: AnimationPlayer[] = [];\n    if (animationName) {\n      const /** @type {?} */ currentPlayer = this._players.find(element, animationName);\n      if (currentPlayer) {\n        _recursePlayers(currentPlayer, players);\n      }\n    } else {\n      this._players.findAllPlayersByElement(element).forEach(\n          player => _recursePlayers(player, players));\n    }\n    return players;\n  }\n}\n\nfunction AnimationViewContext_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationViewContext.prototype._players;\n/** @type {?} */\nAnimationViewContext.prototype._animationQueue;\n}\n\n/**\n * @param {?} player\n * @param {?} collectedPlayers\n * @return {?}\n */\nfunction _recursePlayers(player: AnimationPlayer, collectedPlayers: AnimationPlayer[]) {\n  if ((player instanceof AnimationGroupPlayer) || (player instanceof AnimationSequencePlayer)) {\n    player.players.forEach(player => _recursePlayers(player, collectedPlayers));\n  } else {\n    collectedPlayers.push(player);\n  }\n}\n"]}