{"version":3,"sources":["../../../../../modules/@angular/core/src/linker/component_factory.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAMH,OAAO,EAAA,UAAE,EAAU,MAAA,eAAA,CAAA;AAGnB,OAAO,EAAA,SAAE,EAAS,MAAA,cAAA,CAAA;AAClB;;;;;;;;GAQG;AACH,MAEC;IADD;;;;OAIG;IACH,QAAgB,KAAA,CAAA;IAChB;;;;OAIG;IACH,QADgB,KAAA,CAAA;IAEhB;;;;OAIG;IACH,QAFgB,KAAA,CAAA;IAGhB;;;;OAIG;IACH,QAHgB,KAAA,CAAA;IAIhB;;;;OAIG;IACH,iBAJgB,KAAA,CAAA;IAKhB;;;;OAIG;IACH,aALgB,KAAA,CAAA;IAMhB;;;;OAIG;IACH,OANY,KAAA,CAAA;IAOZ;;;;;OAKG;IACH,SARY,CAAA,QAAA,IAAA,CAAA;CASX;AACD;;;GAGG;AACH,MAPC,oBAAA,SAAA,YAAA;IAQD;;;;;OAKG;IACH,YAZc,MAAQ,EAAgB,WAAyB,EAAU,cAAgB,EAC3E,UAAY;QAgBtB,KAAK,EAAE,CAAC;QAjBE,WAAA,GAAA,MAAA,CAAQ;QAAgB,gBAAA,GAAA,WAAA,CAAyB;QAAU,mBAAA,GAAA,cAAA,CAAgB;QAC3E,eAAA,GAAA,UAAA,CAAY;IAiBxB,CAAC;IACH;;OAEG;IACH,IAlBG,QAAA,KAA4B,MAAA,CAAO,IAAI,UAAA,CAAW,IAAC,CAAI,cAAC,CAAc,CAAC,CAAC,CAAA;IAmB3E;;OAEG;IACH,IArBG,QAAA,KAA0B,MAAA,CAAO,IAAA,CAAK,WAAC,CAAW,QAAC,CAAQ,IAAC,CAAI,MAAC,CAAM,CAAC,CAAC,CAAA;IAsB5E;;OAEG;IACH,IAxBG,QAAA,KAAmB,MAAA,CAAO,IAAA,CAAK,UAAC,CAAU,CAAC,CAAA;IAAA,CAAE;IAyBhD;;OAEG;IACH,IA3BG,QAAA,KAAyB,MAAA,CAAO,IAAA,CAAK,WAAC,CAAW,GAAC,CAAG,CAAC,CAAA;IAAA,CAAE;IA4B3D;;OAEG;IACH,IA9BG,iBAAA,KAA4C,MAAA,CAAO,IAAA,CAAK,WAAC,CAAW,GAAC,CAAG,CAAC,CAAA;IAAA,CAAE;IA+B9E;;OAEG;IACH,IAjCG,aAAA,KAAgC,MAAA,CAAA,CAAY,IAAC,CAAI,UAAC,CAAU,WAAC,CAAA,CAAW,CAAC,CAAA;IAkC5E;;OAEG;IACH,OAnCG,KAAiB,IAAA,CAAK,WAAC,CAAW,gBAAC,EAAgB,CAAE,CAAC,CAAA;IAoCzD;;;OAGG;IACH,SAvCG,CAAA,QAAA,IAAqC,IAAA,CAAK,QAAC,CAAQ,SAAC,CAAS,QAAC,CAAQ,CAAC,CAAC,CAAA;CAwC1E;AAED;IACA,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC;IAC/B,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,WAAW,CAAC;IACpC,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,cAAc,CAAC;IACvC,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,UAAU,CAAC;AACnC,CAAC;AAED;;GAEG;AACH,MAlDC;IAqDD;;;;OAIG;IACH,YAtDa,QAAU,EAAQ,UAA8B,EAAS,aAAwB;QAAjF,aAAA,GAAA,QAAA,CAAU;QAA+C,kBAAA,GAAA,aAAA,CAAwB;QAyD1F,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IACH;;;;;;OAMG;IACH,MA3DG,CA4DG,QAAkB,EAAE,mBAA4B,IAAI,EACpD,qBAAiC,IAAI;QACvC,MAAM,gBAAgB,CA3DhB,EAAA,GAAgB,QAAA,CAAS,GAAC,CAAG,SAAC,CAAS,CAAC;QA4D9C,EAAE,CAAC,CAAC,CA3DC,gBAAC,CAAgB,CAAC,CAAA;YA4DrB,gBAAgB,GA3DG,EAAA,CAAG;QA4DxB,CAAC;QACD,MAAM,gBAAgB,CA3DhB,QAAA,GAAyB,IAAI,IAAA,CAAK,UAAC,CAAU,EAAC,EAAG,IAAA,EAAM,IAAA,EAAM,IAAA,CAAK,CAAC;QA4DzE,MAAM,CA3DC,QAAA,CAAS,cAAC,CAAc,kBAAC,EAAmB,QAAA,EAAU,gBAAA,CAAiB,CAAC;IA4DjF,CAAC;CACF;AAED;IACA;;;OAGG;IACH,gBAAgB,CAAC,SAAS,CAAC,UAAU,CAAC;IACtC,gBAAgB;IAChB,gBAAgB,CAAC,SAAS,CAAC,QAAQ,CAAC;IACpC,gBAAgB;IAChB,gBAAgB,CAAC,SAAS,CAAC,aAAa,CAAC;AACzC,CAAC","file":"component_factory.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\n\nimport {ElementRef} from './element_ref';\nimport {AppView} from './view';\nimport {ViewRef} from './view_ref';\nimport {ViewUtils} from './view_utils';\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n * \n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n * \\@stable\n * @abstract\n */\nexport abstract class ComponentRef<C> {\n/**\n * Location of the Host Element of this Component Instance.\n * @abstract\n * @return {?}\n */\nlocation() {}\n/**\n * The injector on which the component instance exists.\n * @abstract\n * @return {?}\n */\ninjector() {}\n/**\n * The instance of the Component.\n * @abstract\n * @return {?}\n */\ninstance() {}\n/**\n * The {\\@link ViewRef} of the Host View of this Component instance.\n * @abstract\n * @return {?}\n */\nhostView() {}\n/**\n * The {\\@link ChangeDetectorRef} of the Component instance.\n * @abstract\n * @return {?}\n */\nchangeDetectorRef() {}\n/**\n * The component type.\n * @abstract\n * @return {?}\n */\ncomponentType() {}\n/**\n * Destroys the component instance and all of the data structures associated with it.\n * @abstract\n * @return {?}\n */\ndestroy() {}\n/**\n * Allows to register a callback that will be called when the component is destroyed.\n * @abstract\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function) {}\n}\n/**\n * workaround https://github.com/angular/tsickle/issues/350\n * @suppress {checkTypes}\n */\nexport class ComponentRef_<C> extends ComponentRef<C> {\n/**\n * @param {?} _index\n * @param {?} _parentView\n * @param {?} _nativeElement\n * @param {?} _component\n */\nconstructor(\nprivate _index: number,\nprivate _parentView: AppView<any>,\nprivate _nativeElement: any,\nprivate _component: C) {\n    super();\n  }\n/**\n * @return {?}\n */\nget location(): ElementRef { return new ElementRef(this._nativeElement); }\n/**\n * @return {?}\n */\nget injector(): Injector { return this._parentView.injector(this._index); }\n/**\n * @return {?}\n */\nget instance(): C { return this._component; };\n/**\n * @return {?}\n */\nget hostView(): ViewRef { return this._parentView.ref; };\n/**\n * @return {?}\n */\nget changeDetectorRef(): ChangeDetectorRef { return this._parentView.ref; };\n/**\n * @return {?}\n */\nget componentType(): Type<any> { return /** @type {?} */(( <any>this._component.constructor)); }\n/**\n * @return {?}\n */\ndestroy(): void { this._parentView.detachAndDestroy(); }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function): void { this.hostView.onDestroy(callback); }\n}\n\nfunction ComponentRef__tsickle_Closure_declarations() {\n/** @type {?} */\nComponentRef_.prototype._index;\n/** @type {?} */\nComponentRef_.prototype._parentView;\n/** @type {?} */\nComponentRef_.prototype._nativeElement;\n/** @type {?} */\nComponentRef_.prototype._component;\n}\n\n/**\n * \\@stable\n */\nexport class ComponentFactory<C> {\n  /** @internal */\n  _viewClass: Type<AppView<any>>;\n/**\n * @param {?} selector\n * @param {?} _viewClass\n * @param {?} componentType\n */\nconstructor(\npublic selector: string, _viewClass: Type<AppView<any>>,\npublic componentType: Type<any>) {\n    this._viewClass = _viewClass;\n  }\n/**\n * Creates a new component.\n * @param {?} injector\n * @param {?=} projectableNodes\n * @param {?=} rootSelectorOrNode\n * @return {?}\n */\ncreate(\n      injector: Injector, projectableNodes: any[][] = null,\n      rootSelectorOrNode: string|any = null): ComponentRef<C> {\n    const /** @type {?} */ vu: ViewUtils = injector.get(ViewUtils);\n    if (!projectableNodes) {\n      projectableNodes = [];\n    }\n    const /** @type {?} */ hostView: AppView<any> = new this._viewClass(vu, null, null, null);\n    return hostView.createHostView(rootSelectorOrNode, injector, projectableNodes);\n  }\n}\n\nfunction ComponentFactory_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nComponentFactory.prototype._viewClass;\n/** @type {?} */\nComponentFactory.prototype.selector;\n/** @type {?} */\nComponentFactory.prototype.componentType;\n}\n\n"]}