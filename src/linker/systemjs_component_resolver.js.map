{"version":3,"file":"systemjs_component_resolver.js","sourceRoot":"","sources":["../../../../../modules/@angular/core/src/linker/systemjs_component_resolver.ts"],"names":[],"mappings":";AAAA,qBAAqC,gBAAgB,CAAC,CAAA;AAMtD;;;GAGG;AACH;IACE,mCAAoB,SAA4B;QAA5B,cAAS,GAAT,SAAS,CAAmB;IAAG,CAAC;IAEpD,oDAAgB,GAAhB,UAAiB,aAA0B;QAA3C,iBAQC;QAPC,EAAE,CAAC,CAAC,eAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAO,aAAO;iBACf,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC;iBAC5B,IAAI,CAAC,UAAC,MAAW,CAAC,iBAAiB,IAAK,OAAA,KAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,MAAM,CAAC,OAAO,CAAC,EAA/C,CAA+C,CAAC,CAAC;QAChG,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAO,aAAa,CAAC,CAAC;QAC9D,CAAC;IACH,CAAC;IAED,8CAAU,GAAV,cAAc,CAAC;IACjB,gCAAC;AAAD,CAAC,AAdD,IAcC;AAdY,iCAAyB,4BAcrC,CAAA","sourcesContent":["import {Type, global, isString} from '../facade/lang';\n\nimport {ComponentFactory} from './component_factory';\nimport {ComponentResolver} from './component_resolver';\n\n\n/**\n * Component resolver that can load components lazily\n * @experimental\n */\nexport class SystemJsComponentResolver implements ComponentResolver {\n  constructor(private _resolver: ComponentResolver) {}\n\n  resolveComponent(componentType: string|Type): Promise<ComponentFactory<any>> {\n    if (isString(componentType)) {\n      return (<any>global)\n          .System.import(componentType)\n          .then((module: any /** TODO #9100 */) => this._resolver.resolveComponent(module.default));\n    } else {\n      return this._resolver.resolveComponent(<Type>componentType);\n    }\n  }\n\n  clearCache() {}\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}