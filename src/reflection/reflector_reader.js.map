{"version":3,"sources":["../../../../../modules/@angular/core/src/reflection/reflector_reader.ts"],"names":[],"mappings":"AACA;;;;GAIG;AACH,MAMC;IALD;;;;OAIG;IACH,UACY,CAAA,UAAA,IAAA,CAAA;IAAZ;;;;OAIG;IACH,WAJY,CAAA,UAAA,IAAA,CAAA;IAKZ;;;;OAIG;IACH,YATY,CAAA,UAAA,IAAA,CAAA;IAUZ;;;;OAIG;IACH,SAdY,CAAA,UAAA,IAAA,CAAA;IAeZ;;;;;;;OAOG;IACH,iBAtBY,CAAA,IAAA,EAAA,SAAA,EAAA,OAAA,EAAA,OAAA,IAAA,CAAA;IAuBZ;;;;;OAKG;IACH,WA5BY,CAAA,UAAA,EAAA,IAAA,IAAA,CAAA;CA6BX","file":"reflector_reader.js","sourceRoot":"","sourcesContent":["\n/**\n * Provides read-only access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n * @abstract\n */\nexport abstract class ReflectorReader {\n/**\n * @abstract\n * @param {?} typeOrFunc\n * @return {?}\n */\nparameters(typeOrFunc: /*Type*/ any) {}\n/**\n * @abstract\n * @param {?} typeOrFunc\n * @return {?}\n */\nannotations(typeOrFunc: /*Type*/ any) {}\n/**\n * @abstract\n * @param {?} typeOrFunc\n * @return {?}\n */\npropMetadata(typeOrFunc: /*Type*/ any) {}\n/**\n * @abstract\n * @param {?} typeOrFunc\n * @return {?}\n */\nimportUri(typeOrFunc: /*Type*/ any) {}\n/**\n * @abstract\n * @param {?} name\n * @param {?} moduleUrl\n * @param {?} members\n * @param {?} runtime\n * @return {?}\n */\nresolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any) {}\n/**\n * @abstract\n * @param {?} identifier\n * @param {?} name\n * @return {?}\n */\nresolveEnum(identifier: any, name: string) {}\n}\n"]}