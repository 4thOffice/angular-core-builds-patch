{"version":3,"sources":["../../../../../modules/@angular/core/src/render/api.ts"],"names":[],"mappings":"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","file":"api.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationKeyframe} from '../../src/animation/animation_keyframe';\nimport {AnimationPlayer} from '../../src/animation/animation_player';\nimport {AnimationStyles} from '../../src/animation/animation_styles';\nimport {Injector} from '../di/injector';\nimport {ViewEncapsulation} from '../metadata/view';\nexport class RenderComponentType {\n/**\n * @param {?} id\n * @param {?} templateUrl\n * @param {?} slotCount\n * @param {?} encapsulation\n * @param {?} styles\n * @param {?} animations\n */\nconstructor(\npublic id: string,\npublic templateUrl: string,\npublic slotCount: number,\npublic encapsulation: ViewEncapsulation,\npublic styles: Array<string|any[]>,\npublic animations: {[key: string]: Function}) {}\n}\n\nfunction RenderComponentType_tsickle_Closure_declarations() {\n/** @type {?} */\nRenderComponentType.prototype.id;\n/** @type {?} */\nRenderComponentType.prototype.templateUrl;\n/** @type {?} */\nRenderComponentType.prototype.slotCount;\n/** @type {?} */\nRenderComponentType.prototype.encapsulation;\n/** @type {?} */\nRenderComponentType.prototype.styles;\n/** @type {?} */\nRenderComponentType.prototype.animations;\n}\n\n/**\n * @abstract\n */\nexport abstract class RenderDebugInfo {\n/**\n * @abstract\n * @return {?}\n */\ninjector() {}\n/**\n * @abstract\n * @return {?}\n */\ncomponent() {}\n/**\n * @abstract\n * @return {?}\n */\nproviderTokens() {}\n/**\n * @abstract\n * @return {?}\n */\nreferences() {}\n/**\n * @abstract\n * @return {?}\n */\ncontext() {}\n/**\n * @abstract\n * @return {?}\n */\nsource() {}\n}\n\nexport interface DirectRenderer {\n  remove(node: any): void;\n  appendChild(node: any, parent: any): void;\n  insertBefore(node: any, refNode: any): void;\n  nextSibling(node: any): any;\n  parentElement(node: any): any;\n}\n/**\n * \\@experimental\n * @abstract\n */\nexport abstract class Renderer {\n/**\n * @abstract\n * @param {?} selectorOrNode\n * @param {?=} debugInfo\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|any, debugInfo?: RenderDebugInfo) {}\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?} name\n * @param {?=} debugInfo\n * @return {?}\n */\ncreateElement(parentElement: any, name: string, debugInfo?: RenderDebugInfo) {}\n/**\n * @abstract\n * @param {?} hostElement\n * @return {?}\n */\ncreateViewRoot(hostElement: any) {}\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?=} debugInfo\n * @return {?}\n */\ncreateTemplateAnchor(parentElement: any, debugInfo?: RenderDebugInfo) {}\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?} value\n * @param {?=} debugInfo\n * @return {?}\n */\ncreateText(parentElement: any, value: string, debugInfo?: RenderDebugInfo) {}\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?} nodes\n * @return {?}\n */\nprojectNodes(parentElement: any, nodes: any[]) {}\n/**\n * @abstract\n * @param {?} node\n * @param {?} viewRootNodes\n * @return {?}\n */\nattachViewAfter(node: any, viewRootNodes: any[]) {}\n/**\n * @abstract\n * @param {?} viewRootNodes\n * @return {?}\n */\ndetachView(viewRootNodes: any[]) {}\n/**\n * @abstract\n * @param {?} hostElement\n * @param {?} viewAllNodes\n * @return {?}\n */\ndestroyView(hostElement: any, viewAllNodes: any[]) {}\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nlisten(renderElement: any, name: string, callback: Function) {}\n/**\n * @abstract\n * @param {?} target\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nlistenGlobal(target: string, name: string, callback: Function) {}\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nsetElementProperty(renderElement: any, propertyName: string, propertyValue: any) {}\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} attributeName\n * @param {?} attributeValue\n * @return {?}\n */\nsetElementAttribute(renderElement: any, attributeName: string, attributeValue: string) {}\n/**\n * Used only in debug mode to serialize property changes to dom nodes as attributes.\n * @abstract\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nsetBindingDebugInfo(renderElement: any, propertyName: string, propertyValue: string) {}\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nsetElementClass(renderElement: any, className: string, isAdd: boolean) {}\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} styleName\n * @param {?} styleValue\n * @return {?}\n */\nsetElementStyle(renderElement: any, styleName: string, styleValue: string) {}\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} methodName\n * @param {?=} args\n * @return {?}\n */\ninvokeElementMethod(renderElement: any, methodName: string, args?: any[]) {}\n/**\n * @abstract\n * @param {?} renderNode\n * @param {?} text\n * @return {?}\n */\nsetText(renderNode: any, text: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} startingStyles\n * @param {?} keyframes\n * @param {?} duration\n * @param {?} delay\n * @param {?} easing\n * @param {?=} previousPlayers\n * @return {?}\n */\nanimate(\n      element: any, startingStyles: AnimationStyles, keyframes: AnimationKeyframe[],\n      duration: number, delay: number, easing: string,\n      previousPlayers?: AnimationPlayer[]) {}\n}\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n * \n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link #setElementProperty} or {\\@link #setElementAttribute}\n * respectively.\n * \n * If you are implementing a custom renderer, you must implement this interface.\n * \n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n * \\@experimental\n * @abstract\n */\nexport abstract class RootRenderer {\n/**\n * @abstract\n * @param {?} componentType\n * @return {?}\n */\nrenderComponent(componentType: RenderComponentType) {}\n}\n"]}