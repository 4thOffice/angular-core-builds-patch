{"version":3,"sources":["../../../../../modules/@angular/core/src/transition/transition_engine.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AACH,OAAO,EAAkB,mBAAA,EAAoB,MAAA,+BAAA,CAAA;AAE7C;;;GAGG;AACH,MACC;IAAD;;;;;OAKG;IACH,UALY,CAAA,SAAA,EAAA,OAAA,IAAA,CAAA;IAMZ;;;;OAIG;IACH,UAVY,CAAA,OAAA,IAAA,CAAA;IAWZ;;;;;OAKG;IACH,OAhBY,CAAA,OAAA,EAAA,YAAA,IAAA,CAAA;IAiBZ;;;OAGG;IACH,iBApBY,KAAA,CAAA;CAqBX;AACD;;GAEG;AACH,MAnBC,2BAAA,SAAA,gBAAA;IAoBD,gBAnBG,KAAA,EAAA,CAAA,CAAA,CAAA;IAoBH;;;;OAIG;IACH,UAvBG,CAAA,SAAA,EAAA,OAAA,IAAgD,SAAA,CAAU,WAAC,CAAW,OAAC,CAAO,CAAC,CAAC,CAAA;IAwBnF;;;OAGG;IACH,UA1BG,CAAA,OAAA,IAAgC,MAAA,CAAO,OAAC,CAAO,CAAC,CAAC,CAAA;IA2BpD;;;;OAIG;IACH,OA9BG,CAAA,OAAA,EAAA,YAAA;QA+BC,MAAM,CA9BC,IAAI,mBAAA,EAAoB,CAAE;IA+BnC,CAAC;IACH;;OAEG;IACH,iBAhCG,KAAyB,CAAA;CAiC3B;AACD;;;GAGG;AACH,gBAnCC,OAAA;IAoCC,OAAO,CAnCC,UAAC,CAAU,WAAC,CAAW,OAAC,CAAO,CAAC;AAoC1C,CAAC","file":"transition_engine.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationPlayer, NoOpAnimationPlayer} from '../animation/animation_player';\nimport {TransitionInstruction} from '../triggers';\n/**\n * \\@experimental Transition support is experimental.\n * @abstract\n */\nexport abstract class TransitionEngine {\n/**\n * @abstract\n * @param {?} container\n * @param {?} element\n * @return {?}\n */\ninsertNode(container: any, element: any) {}\n/**\n * @abstract\n * @param {?} element\n * @return {?}\n */\nremoveNode(element: any) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} instructions\n * @return {?}\n */\nprocess(element: any, instructions: TransitionInstruction[]) {}\n/**\n * @abstract\n * @return {?}\n */\ntriggerAnimations() {}\n}\n/**\n * \\@experimental Transition support is experimental.\n */\nexport class NoOpTransitionEngine extends TransitionEngine {\nconstructor() { super(); }\n/**\n * @param {?} container\n * @param {?} element\n * @return {?}\n */\ninsertNode(container: any, element: any): void { container.appendChild(element); }\n/**\n * @param {?} element\n * @return {?}\n */\nremoveNode(element: any): void { remove(element); }\n/**\n * @param {?} element\n * @param {?} instructions\n * @return {?}\n */\nprocess(element: any, instructions: TransitionInstruction[]): AnimationPlayer {\n    return new NoOpAnimationPlayer();\n  }\n/**\n * @return {?}\n */\ntriggerAnimations(): void {}\n}\n/**\n * @param {?} element\n * @return {?}\n */\nfunction remove(element: any) {\n  element.parentNode.removeChild(element);\n}\n"]}