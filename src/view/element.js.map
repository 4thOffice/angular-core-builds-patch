{"version":3,"sources":["../../../../../modules/@angular/core/src/view/element.ts"],"names":[],"mappings":"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","file":"element.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isDevMode} from '../application_ref';\nimport {SecurityContext} from '../security';\n\nimport {BindingDef, BindingType, DebugContext, DisposableFn, ElementData, ElementHandleEventFn, ElementOutputDef, NodeData, NodeDef, NodeFlags, NodeType, QueryValueType, Services, ViewData, ViewDefinition, ViewDefinitionFactory, ViewFlags, asElementData} from './types';\nimport {checkAndUpdateBinding, dispatchEvent, elementEventFullName, filterQueryId, getParentRenderElement, resolveViewDefinition, sliceErrorStack, splitMatchedQueriesDsl, splitNamespace} from './util';\n\nconst /** @type {?} */ NOOP: any = () => {};\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?=} handleEvent\n * @param {?=} templateFactory\n * @return {?}\n */\nexport function anchorDef(\n    flags: NodeFlags, matchedQueriesDsl: [string | number, QueryValueType][],\n    ngContentIndex: number, childCount: number, handleEvent?: ElementHandleEventFn,\n    templateFactory?: ViewDefinitionFactory): NodeDef {\n  if (!handleEvent) {\n    handleEvent = NOOP;\n  }\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  // skip the call to sliceErrorStack itself + the call to this function.\n  const /** @type {?} */ source = isDevMode() ? sliceErrorStack(2, 3) : '';\n  const /** @type {?} */ template = templateFactory ? resolveViewDefinition(templateFactory) : null;\n\n  return {\n    type: NodeType.Element,\n    // will bet set by the view definition\n    index: undefined,\n    reverseChildIndex: undefined,\n    parent: undefined,\n    renderParent: undefined,\n    bindingIndex: undefined,\n    disposableIndex: undefined,\n    // regular values\n    flags,\n    childFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references, ngContentIndex, childCount,\n    bindings: [],\n    disposableCount: 0,\n    element: {\n      ns: undefined,\n      name: undefined,\n      attrs: undefined,\n      outputs: [], template, source,\n      // will bet set by the view definition\n      component: undefined,\n      publicProviders: undefined,\n      allProviders: undefined, handleEvent\n    },\n    provider: undefined,\n    text: undefined,\n    pureExpression: undefined,\n    query: undefined,\n    ngContent: undefined\n  };\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?} namespaceAndName\n * @param {?=} fixedAttrs\n * @param {?=} bindings\n * @param {?=} outputs\n * @param {?=} handleEvent\n * @return {?}\n */\nexport function elementDef(\n    flags: NodeFlags, matchedQueriesDsl: [string | number, QueryValueType][],\n    ngContentIndex: number, childCount: number, namespaceAndName: string,\n    fixedAttrs: [string, string][] = [],\n    bindings?:\n        ([BindingType.ElementClass, string] | [BindingType.ElementStyle, string, string] |\n         [BindingType.ElementAttribute | BindingType.ElementProperty, string, SecurityContext])[],\n    outputs?: (string | [string, string])[], handleEvent?: ElementHandleEventFn): NodeDef {\n  if (!handleEvent) {\n    handleEvent = NOOP;\n  }\n  // skip the call to sliceErrorStack itself + the call to this function.\n  const /** @type {?} */ source = isDevMode() ? sliceErrorStack(2, 3) : '';\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  let /** @type {?} */ ns: string;\n  let /** @type {?} */ name: string;\n  if (namespaceAndName) {\n    [ns, name] = splitNamespace(namespaceAndName);\n  }\n  bindings = bindings || [];\n  const /** @type {?} */ bindingDefs: BindingDef[] = new Array(bindings.length);\n  for (let /** @type {?} */ i = 0; i < bindings.length; i++) {\n    const /** @type {?} */ entry = bindings[i];\n    let /** @type {?} */ bindingDef: BindingDef;\n    const /** @type {?} */ bindingType = entry[0];\n    const [ns, name] = splitNamespace(entry[1]);\n    let /** @type {?} */ securityContext: SecurityContext;\n    let /** @type {?} */ suffix: string;\n    switch (bindingType) {\n      case BindingType.ElementStyle:\n        suffix = /** @type {?} */(( <string>entry[2]));\n        break;\n      case BindingType.ElementAttribute:\n      case BindingType.ElementProperty:\n        securityContext = /** @type {?} */(( <SecurityContext>entry[2]));\n        break;\n    }\n    bindingDefs[i] = {type: bindingType, ns, name, nonMinifiedName: name, securityContext, suffix};\n  }\n  outputs = outputs || [];\n  const /** @type {?} */ outputDefs: ElementOutputDef[] = new Array(outputs.length);\n  for (let /** @type {?} */ i = 0; i < outputs.length; i++) {\n    const /** @type {?} */ output = outputs[i];\n    let /** @type {?} */ target: string;\n    let /** @type {?} */ eventName: string;\n    if (Array.isArray(output)) {\n      [target, eventName] = output;\n    } else {\n      eventName = output;\n    }\n    outputDefs[i] = {eventName: eventName, target: target};\n  }\n  fixedAttrs = fixedAttrs || [];\n  const /** @type {?} */ attrs = /** @type {?} */(( <[string, string, string][]>fixedAttrs.map(([namespaceAndName, value]) => {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    return [ns, name, value];\n  })));\n  return {\n    type: NodeType.Element,\n    // will bet set by the view definition\n    index: undefined,\n    reverseChildIndex: undefined,\n    parent: undefined,\n    renderParent: undefined,\n    bindingIndex: undefined,\n    disposableIndex: undefined,\n    // regular values\n    flags,\n    childFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references, ngContentIndex, childCount,\n    bindings: bindingDefs,\n    disposableCount: outputDefs.length,\n    element: {\n      ns,\n      name,\n      attrs,\n      outputs: outputDefs, source,\n      template: undefined,\n      // will bet set by the view definition\n      component: undefined,\n      publicProviders: undefined,\n      allProviders: undefined, handleEvent,\n    },\n    provider: undefined,\n    text: undefined,\n    pureExpression: undefined,\n    query: undefined,\n    ngContent: undefined\n  };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function createElement(view: ViewData, renderHost: any, def: NodeDef): ElementData {\n  const /** @type {?} */ elDef = def.element;\n  const /** @type {?} */ rootSelectorOrNode = view.root.selectorOrNode;\n  const /** @type {?} */ renderer = view.renderer;\n  let /** @type {?} */ el: any;\n  if (view.parent || !rootSelectorOrNode) {\n    if (elDef.name) {\n      el = renderer.createElement(elDef.name, elDef.ns);\n    } else {\n      el = renderer.createComment('');\n    }\n    const /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n      renderer.appendChild(parentEl, el);\n    }\n  } else {\n    el = renderer.selectRootElement(rootSelectorOrNode);\n  }\n  if (elDef.attrs) {\n    for (let /** @type {?} */ i = 0; i < elDef.attrs.length; i++) {\n      const [ns, name, value] = elDef.attrs[i];\n      renderer.setAttribute(el, name, value, ns);\n    }\n  }\n  if (elDef.outputs.length) {\n    for (let /** @type {?} */ i = 0; i < elDef.outputs.length; i++) {\n      const /** @type {?} */ output = elDef.outputs[i];\n      const /** @type {?} */ handleEventClosure = renderEventHandlerClosure(\n          view, def.index, elementEventFullName(output.target, output.eventName));\n      const /** @type {?} */ disposable = /** @type {?} */((\n          <any>renderer.listen(output.target || el, output.eventName, handleEventClosure)));\n      view.disposables[def.disposableIndex + i] = disposable;\n    }\n  }\n  return {\n    renderElement: el,\n    embeddedViews: (def.flags & NodeFlags.HasEmbeddedViews) ? [] : undefined,\n    projectedViews: undefined\n  };\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction renderEventHandlerClosure(view: ViewData, index: number, eventName: string) {\n  return (event: any) => dispatchEvent(view, index, eventName, event);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdateElementInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any) {\n  const /** @type {?} */ bindLen = def.bindings.length;\n  if (bindLen > 0) checkAndUpdateElementValue(view, def, 0, v0);\n  if (bindLen > 1) checkAndUpdateElementValue(view, def, 1, v1);\n  if (bindLen > 2) checkAndUpdateElementValue(view, def, 2, v2);\n  if (bindLen > 3) checkAndUpdateElementValue(view, def, 3, v3);\n  if (bindLen > 4) checkAndUpdateElementValue(view, def, 4, v4);\n  if (bindLen > 5) checkAndUpdateElementValue(view, def, 5, v5);\n  if (bindLen > 6) checkAndUpdateElementValue(view, def, 6, v6);\n  if (bindLen > 7) checkAndUpdateElementValue(view, def, 7, v7);\n  if (bindLen > 8) checkAndUpdateElementValue(view, def, 8, v8);\n  if (bindLen > 9) checkAndUpdateElementValue(view, def, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdateElementDynamic(view: ViewData, def: NodeDef, values: any[]) {\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    checkAndUpdateElementValue(view, def, i, values[i]);\n  }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateElementValue(view: ViewData, def: NodeDef, bindingIdx: number, value: any) {\n  if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n    return;\n  }\n  const /** @type {?} */ binding = def.bindings[bindingIdx];\n  const /** @type {?} */ renderNode = asElementData(view, def.index).renderElement;\n  const /** @type {?} */ name = binding.name;\n  switch (binding.type) {\n    case BindingType.ElementAttribute:\n      setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n      break;\n    case BindingType.ElementClass:\n      setElementClass(view, renderNode, name, value);\n      break;\n    case BindingType.ElementStyle:\n      setElementStyle(view, binding, renderNode, name, value);\n      break;\n    case BindingType.ElementProperty:\n      setElementProperty(view, binding, renderNode, name, value);\n      break;\n  }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementAttribute(\n    view: ViewData, binding: BindingDef, renderNode: any, ns: string, name: string, value: any) {\n  const /** @type {?} */ securityContext = binding.securityContext;\n  let /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n  renderValue = renderValue != null ? renderValue.toString() : null;\n  const /** @type {?} */ renderer = view.renderer;\n  if (value != null) {\n    renderer.setAttribute(renderNode, name, renderValue, ns);\n  } else {\n    renderer.removeAttribute(renderNode, name, ns);\n  }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementClass(view: ViewData, renderNode: any, name: string, value: boolean) {\n  const /** @type {?} */ renderer = view.renderer;\n  if (value) {\n    renderer.addClass(renderNode, name);\n  } else {\n    renderer.removeClass(renderNode, name);\n  }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementStyle(\n    view: ViewData, binding: BindingDef, renderNode: any, name: string, value: any) {\n  let /** @type {?} */ renderValue = view.root.sanitizer.sanitize(SecurityContext.STYLE, value);\n  if (renderValue != null) {\n    renderValue = renderValue.toString();\n    const /** @type {?} */ unit = binding.suffix;\n    if (unit != null) {\n      renderValue = renderValue + unit;\n    }\n  } else {\n    renderValue = null;\n  }\n  const /** @type {?} */ renderer = view.renderer;\n  if (renderValue != null) {\n    renderer.setStyle(renderNode, name, renderValue, false, false);\n  } else {\n    renderer.removeStyle(renderNode, name, false);\n  }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementProperty(\n    view: ViewData, binding: BindingDef, renderNode: any, name: string, value: any) {\n  const /** @type {?} */ securityContext = binding.securityContext;\n  let /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n  view.renderer.setProperty(renderNode, name, renderValue);\n}\n"]}