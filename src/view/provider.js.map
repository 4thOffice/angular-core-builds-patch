{"version":3,"sources":["../../../../../modules/@angular/core/src/view/provider.ts"],"names":[],"mappings":"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","file":"provider.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef, SimpleChange, SimpleChanges} from '../change_detection/change_detection';\nimport {Injector} from '../di';\nimport {ElementRef} from '../linker/element_ref';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport * as v1renderer from '../render/api';\nimport {Type} from '../type';\n\nimport {createChangeDetectorRef, createInjector, createTemplateRef, createViewContainerRef} from './refs';\nimport {BindingDef, BindingType, DepDef, DepFlags, DirectiveOutputDef, DisposableFn, NodeData, NodeDef, NodeFlags, NodeType, ProviderData, ProviderType, QueryBindingType, QueryDef, QueryValueType, RootData, Services, ViewData, ViewDefinition, ViewFlags, ViewState, asElementData, asProviderData} from './types';\nimport {checkAndUpdateBinding, dispatchEvent, isComponentView, tokenKey, viewParentElIndex} from './util';\n\nconst /** @type {?} */ RendererV1TokenKey = tokenKey(v1renderer.Renderer);\nconst /** @type {?} */ ElementRefTokenKey = tokenKey(ElementRef);\nconst /** @type {?} */ ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nconst /** @type {?} */ TemplateRefTokenKey = tokenKey(TemplateRef);\nconst /** @type {?} */ ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nconst /** @type {?} */ InjectorRefTokenKey = tokenKey(Injector);\n\nconst /** @type {?} */ NOT_CREATED = new Object();\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} childCount\n * @param {?} ctor\n * @param {?} deps\n * @param {?=} props\n * @param {?=} outputs\n * @param {?=} component\n * @return {?}\n */\nexport function directiveDef(\n    flags: NodeFlags, matchedQueries: [string, QueryValueType][], childCount: number, ctor: any,\n    deps: ([DepFlags, any] | any)[], props?: {[name: string]: [number, string]},\n    outputs?: {[name: string]: string}, component?: () => ViewDefinition): NodeDef {\n  const /** @type {?} */ bindings: BindingDef[] = [];\n  if (props) {\n    for (let /** @type {?} */ prop in props) {\n      const [bindingIndex, nonMinifiedName] = props[prop];\n      bindings[bindingIndex] = {\n        type: BindingType.DirectiveProperty,\n        name: prop, nonMinifiedName,\n        securityContext: undefined,\n        suffix: undefined\n      };\n    }\n  }\n  const /** @type {?} */ outputDefs: DirectiveOutputDef[] = [];\n  if (outputs) {\n    for (let /** @type {?} */ propName in outputs) {\n      outputDefs.push({propName, eventName: outputs[propName]});\n    }\n  }\n  return _def(\n      NodeType.Directive, flags, matchedQueries, childCount, ProviderType.Class, ctor, ctor, deps,\n      bindings, outputDefs, component);\n}\n/**\n * @param {?} flags\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nexport function pipeDef(flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef {\n  return _def(NodeType.Pipe, flags, null, 0, ProviderType.Class, ctor, ctor, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} type\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nexport function providerDef(\n    flags: NodeFlags, matchedQueries: [string, QueryValueType][], type: ProviderType, token: any,\n    value: any, deps: ([DepFlags, any] | any)[]): NodeDef {\n  return _def(NodeType.Provider, flags, matchedQueries, 0, type, token, value, deps);\n}\n/**\n * @param {?} type\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} childCount\n * @param {?} providerType\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @param {?=} bindings\n * @param {?=} outputs\n * @param {?=} component\n * @return {?}\n */\nexport function _def(\n    type: NodeType, flags: NodeFlags, matchedQueries: [string, QueryValueType][],\n    childCount: number, providerType: ProviderType, token: any, value: any,\n    deps: ([DepFlags, any] | any)[], bindings?: BindingDef[], outputs?: DirectiveOutputDef[],\n    component?: () => ViewDefinition): NodeDef {\n  const /** @type {?} */ matchedQueryDefs: {[queryId: string]: QueryValueType} = {};\n  if (matchedQueries) {\n    matchedQueries.forEach(([queryId, valueType]) => { matchedQueryDefs[queryId] = valueType; });\n  }\n  if (!outputs) {\n    outputs = [];\n  }\n  if (!bindings) {\n    bindings = [];\n  }\n\n  const /** @type {?} */ depDefs: DepDef[] = deps.map(value => {\n    let /** @type {?} */ token: any;\n    let /** @type {?} */ flags: DepFlags;\n    if (Array.isArray(value)) {\n      [flags, token] = value;\n    } else {\n      flags = DepFlags.None;\n      token = value;\n    }\n    return {flags, token, tokenKey: tokenKey(token)};\n  });\n  if (component) {\n    flags = flags | NodeFlags.HasComponent;\n  }\n\n  return {\n    type,\n    // will bet set by the view definition\n    index: undefined,\n    reverseChildIndex: undefined,\n    parent: undefined,\n    childFlags: undefined,\n    childMatchedQueries: undefined,\n    bindingIndex: undefined,\n    disposableIndex: undefined,\n    // regular values\n    flags,\n    matchedQueries: matchedQueryDefs,\n    ngContentIndex: undefined, childCount, bindings,\n    disposableCount: outputs.length,\n    element: undefined,\n    provider: {\n      type: providerType,\n      token,\n      tokenKey: tokenKey(token), value,\n      deps: depDefs, outputs, component\n    },\n    text: undefined,\n    pureExpression: undefined,\n    query: undefined,\n    ngContent: undefined\n  };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createProviderInstance(view: ViewData, def: NodeDef): any {\n  return def.flags & NodeFlags.LazyProvider ? NOT_CREATED : _createProviderInstance(view, def);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createPipeInstance(view: ViewData, def: NodeDef): any {\n  // deps are looked up from component.\n  let /** @type {?} */ compView = view;\n  while (compView.parent && !isComponentView(compView)) {\n    compView = compView.parent;\n  }\n  // pipes are always eager and classes!\n  return createClass(\n      compView.parent, compView.parentIndex, viewParentElIndex(compView), def.provider.value,\n      def.provider.deps);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createDirectiveInstance(view: ViewData, def: NodeDef): any {\n  const /** @type {?} */ providerDef = def.provider;\n  // directives are always eager and classes!\n  const /** @type {?} */ instance = createClass(view, def.index, def.parent, def.provider.value, def.provider.deps);\n  if (providerDef.outputs.length) {\n    for (let /** @type {?} */ i = 0; i < providerDef.outputs.length; i++) {\n      const /** @type {?} */ output = providerDef.outputs[i];\n      const /** @type {?} */ subscription = instance[output.propName].subscribe(\n          eventHandlerClosure(view, def.parent, output.eventName));\n      view.disposables[def.disposableIndex + i] = subscription.unsubscribe.bind(subscription);\n    }\n  }\n  return instance;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view: ViewData, index: number, eventName: string) {\n  return (event: any) => dispatchEvent(view, index, eventName, event);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdateDirectiveInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any) {\n  const /** @type {?} */ providerData = asProviderData(view, def.index);\n  const /** @type {?} */ directive = providerData.instance;\n  let /** @type {?} */ changes: SimpleChanges;\n  // Note: fallthrough is intended!\n  switch (def.bindings.length) {\n    case 10:\n      changes = checkAndUpdateProp(view, providerData, def, 9, v9, changes);\n    case 9:\n      changes = checkAndUpdateProp(view, providerData, def, 8, v8, changes);\n    case 8:\n      changes = checkAndUpdateProp(view, providerData, def, 7, v7, changes);\n    case 7:\n      changes = checkAndUpdateProp(view, providerData, def, 6, v6, changes);\n    case 6:\n      changes = checkAndUpdateProp(view, providerData, def, 5, v5, changes);\n    case 5:\n      changes = checkAndUpdateProp(view, providerData, def, 4, v4, changes);\n    case 4:\n      changes = checkAndUpdateProp(view, providerData, def, 3, v3, changes);\n    case 3:\n      changes = checkAndUpdateProp(view, providerData, def, 2, v2, changes);\n    case 2:\n      changes = checkAndUpdateProp(view, providerData, def, 1, v1, changes);\n    case 1:\n      changes = checkAndUpdateProp(view, providerData, def, 0, v0, changes);\n  }\n  if (changes) {\n    directive.ngOnChanges(changes);\n  }\n  if ((view.state & ViewState.FirstCheck) && (def.flags & NodeFlags.OnInit)) {\n    directive.ngOnInit();\n  }\n  if (def.flags & NodeFlags.DoCheck) {\n    directive.ngDoCheck();\n  }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdateDirectiveDynamic(view: ViewData, def: NodeDef, values: any[]) {\n  const /** @type {?} */ providerData = asProviderData(view, def.index);\n  const /** @type {?} */ directive = providerData.instance;\n  let /** @type {?} */ changes: SimpleChanges;\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    changes = checkAndUpdateProp(view, providerData, def, i, values[i], changes);\n  }\n  if (changes) {\n    directive.ngOnChanges(changes);\n  }\n  if ((view.state & ViewState.FirstCheck) && (def.flags & NodeFlags.OnInit)) {\n    directive.ngOnInit();\n  }\n  if (def.flags & NodeFlags.DoCheck) {\n    directive.ngDoCheck();\n  }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction _createProviderInstance(view: ViewData, def: NodeDef): any {\n  const /** @type {?} */ providerDef = def.provider;\n  let /** @type {?} */ injectable: any;\n  switch (providerDef.type) {\n    case ProviderType.Class:\n      injectable = createClass(view, def.index, def.parent, providerDef.value, providerDef.deps);\n      break;\n    case ProviderType.Factory:\n      injectable = callFactory(view, def.index, def.parent, providerDef.value, providerDef.deps);\n      break;\n    case ProviderType.UseExisting:\n      injectable = resolveDep(view, def.index, def.parent, providerDef.deps[0]);\n      break;\n    case ProviderType.Value:\n      injectable = providerDef.value;\n      break;\n  }\n  return injectable;\n}\n/**\n * @param {?} view\n * @param {?} requestorNodeIndex\n * @param {?} elIndex\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(\n    view: ViewData, requestorNodeIndex: number, elIndex: number, ctor: any, deps: DepDef[]): any {\n  const /** @type {?} */ len = deps.length;\n  let /** @type {?} */ injectable: any;\n  switch (len) {\n    case 0:\n      injectable = new ctor();\n      break;\n    case 1:\n      injectable = new ctor(resolveDep(view, requestorNodeIndex, elIndex, deps[0]));\n      break;\n    case 2:\n      injectable = new ctor(\n          resolveDep(view, requestorNodeIndex, elIndex, deps[0]),\n          resolveDep(view, requestorNodeIndex, elIndex, deps[1]));\n      break;\n    case 3:\n      injectable = new ctor(\n          resolveDep(view, requestorNodeIndex, elIndex, deps[0]),\n          resolveDep(view, requestorNodeIndex, elIndex, deps[1]),\n          resolveDep(view, requestorNodeIndex, elIndex, deps[2]));\n      break;\n    default:\n      const /** @type {?} */ depValues = new Array(len);\n      for (let /** @type {?} */ i = 0; i < len; i++) {\n        depValues[i] = resolveDep(view, requestorNodeIndex, elIndex, deps[i]);\n      }\n      injectable = new ctor(...depValues);\n  }\n  return injectable;\n}\n/**\n * @param {?} view\n * @param {?} requestorNodeIndex\n * @param {?} elIndex\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(\n    view: ViewData, requestorNodeIndex: number, elIndex: number, factory: any,\n    deps: DepDef[]): any {\n  const /** @type {?} */ len = deps.length;\n  let /** @type {?} */ injectable: any;\n  switch (len) {\n    case 0:\n      injectable = factory();\n      break;\n    case 1:\n      injectable = factory(resolveDep(view, requestorNodeIndex, elIndex, deps[0]));\n      break;\n    case 2:\n      injectable = factory(\n          resolveDep(view, requestorNodeIndex, elIndex, deps[0]),\n          resolveDep(view, requestorNodeIndex, elIndex, deps[1]));\n      break;\n    case 3:\n      injectable = factory(\n          resolveDep(view, requestorNodeIndex, elIndex, deps[0]),\n          resolveDep(view, requestorNodeIndex, elIndex, deps[1]),\n          resolveDep(view, requestorNodeIndex, elIndex, deps[2]));\n      break;\n    default:\n      const /** @type {?} */ depValues = Array(len);\n      for (let /** @type {?} */ i = 0; i < len; i++) {\n        depValues[i] = resolveDep(view, requestorNodeIndex, elIndex, deps[i]);\n      }\n      injectable = factory(...depValues);\n  }\n  return injectable;\n}\n/**\n * @param {?} view\n * @param {?} requestNodeIndex\n * @param {?} elIndex\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nexport function resolveDep(\n    view: ViewData, requestNodeIndex: number, elIndex: number, depDef: DepDef,\n    notFoundValue = Injector.THROW_IF_NOT_FOUND): any {\n  if (depDef.flags & DepFlags.Value) {\n    return depDef.token;\n  }\n  const /** @type {?} */ startView = view;\n  if (depDef.flags & DepFlags.Optional) {\n    notFoundValue = null;\n  }\n  const /** @type {?} */ tokenKey = depDef.tokenKey;\n\n  if (depDef.flags & DepFlags.SkipSelf) {\n    requestNodeIndex = null;\n    elIndex = view.def.nodes[elIndex].parent;\n    while (elIndex == null && view) {\n      elIndex = viewParentElIndex(view);\n      view = view.parent;\n    }\n  }\n\n  while (view) {\n    const /** @type {?} */ elDef = view.def.nodes[elIndex];\n    switch (tokenKey) {\n      case RendererV1TokenKey: {\n        let /** @type {?} */ compView = view;\n        while (compView && !isComponentView(compView)) {\n          compView = compView.parent;\n        }\n        const /** @type {?} */ rootRenderer: v1renderer.RootRenderer =\n            view.root.injector.get(v1renderer.RootRenderer);\n\n        // Note: Don't fill in the styles as they have been installed already!\n        return rootRenderer.renderComponent(new v1renderer.RenderComponentType(\n            view.def.component.id, '', 0, view.def.component.encapsulation, [], {}));\n      }\n      case ElementRefTokenKey:\n        return new ElementRef(asElementData(view, elIndex).renderElement);\n      case ViewContainerRefTokenKey:\n        return createViewContainerRef(view, elIndex);\n      case TemplateRefTokenKey:\n        return createTemplateRef(view, elDef);\n      case ChangeDetectorRefTokenKey:\n        let /** @type {?} */ cdView = view;\n        // If we are still checking dependencies on the initial element...\n        if (requestNodeIndex != null) {\n          const /** @type {?} */ requestorNodeDef = view.def.nodes[requestNodeIndex];\n          if (requestorNodeDef.flags & NodeFlags.HasComponent) {\n            cdView = asProviderData(view, requestNodeIndex).componentView;\n          }\n        }\n        return createChangeDetectorRef(cdView);\n      case InjectorRefTokenKey:\n        return createInjector(view, elIndex);\n      default:\n        const /** @type {?} */ providerIndex = elDef.element.providerIndices[tokenKey];\n        if (providerIndex != null) {\n          const /** @type {?} */ providerData = asProviderData(view, providerIndex);\n          if (providerData.instance === NOT_CREATED) {\n            providerData.instance = _createProviderInstance(view, view.def.nodes[providerIndex]);\n          }\n          return providerData.instance;\n        }\n    }\n    requestNodeIndex = null;\n    elIndex = viewParentElIndex(view);\n    view = view.parent;\n  }\n  return startView.root.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} providerData\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction checkAndUpdateProp(\n    view: ViewData, providerData: ProviderData, def: NodeDef, bindingIdx: number, value: any,\n    changes: SimpleChanges): SimpleChanges {\n  let /** @type {?} */ change: SimpleChange;\n  let /** @type {?} */ changed: boolean;\n  if (def.flags & NodeFlags.OnChanges) {\n    const /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    changed = checkAndUpdateBinding(view, def, bindingIdx, value);\n    change = changed ?\n        new SimpleChange(oldValue, value, (view.state & ViewState.FirstCheck) !== 0) :\n        null;\n  } else {\n    changed = checkAndUpdateBinding(view, def, bindingIdx, value);\n  }\n  if (changed) {\n    if (def.flags & NodeFlags.HasComponent) {\n      const /** @type {?} */ compView = providerData.componentView;\n      if (compView.def.flags & ViewFlags.OnPush) {\n        compView.state |= ViewState.ChecksEnabled;\n      }\n    }\n    const /** @type {?} */ binding = def.bindings[bindingIdx];\n    const /** @type {?} */ propName = binding.name;\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (change) {\n      changes = changes || {};\n      changes[binding.nonMinifiedName] = change;\n    }\n  }\n  return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nexport function callLifecycleHooksChildrenFirst(view: ViewData, lifecycles: NodeFlags) {\n  if (!(view.def.nodeFlags & lifecycles)) {\n    return;\n  }\n  const /** @type {?} */ len = view.def.nodes.length;\n  for (let /** @type {?} */ i = 0; i < len; i++) {\n    // We use the reverse child oreder to call providers of children first.\n    const /** @type {?} */ nodeDef = view.def.reverseChildNodes[i];\n    const /** @type {?} */ nodeIndex = nodeDef.index;\n    if (nodeDef.flags & lifecycles) {\n      // a leaf\n      Services.setCurrentNode(view, nodeIndex);\n      callProviderLifecycles(asProviderData(view, nodeIndex).instance, nodeDef.flags & lifecycles);\n    } else if ((nodeDef.childFlags & lifecycles) === 0) {\n      // a parent with leafs\n      // no child matches one of the lifecycles,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} provider\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callProviderLifecycles(provider: any, lifecycles: NodeFlags) {\n  if (lifecycles & NodeFlags.AfterContentInit) {\n    provider.ngAfterContentInit();\n  }\n  if (lifecycles & NodeFlags.AfterContentChecked) {\n    provider.ngAfterContentChecked();\n  }\n  if (lifecycles & NodeFlags.AfterViewInit) {\n    provider.ngAfterViewInit();\n  }\n  if (lifecycles & NodeFlags.AfterViewChecked) {\n    provider.ngAfterViewChecked();\n  }\n  if (lifecycles & NodeFlags.OnDestroy) {\n    provider.ngOnDestroy();\n  }\n}\n"]}