{"version":3,"sources":["../../../../../modules/@angular/core/src/view/provider.ts"],"names":[],"mappings":"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","file":"provider.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isDevMode} from '../application_ref';\nimport {ChangeDetectorRef, SimpleChange, SimpleChanges} from '../change_detection/change_detection';\nimport {Injector} from '../di';\nimport {stringify} from '../facade/lang';\nimport {ElementRef} from '../linker/element_ref';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {Renderer} from '../render/api';\nimport {Type} from '../type';\n\nimport {queryDef} from './query';\nimport {BindingDef, BindingType, DepDef, DepFlags, DisposableFn, EntryAction, NodeData, NodeDef, NodeFlags, NodeType, ProviderData, ProviderOutputDef, ProviderType, QueryBindingType, QueryDef, QueryValueType, Refs, RootData, ViewData, ViewDefinition, ViewFlags, ViewState, asElementData, asProviderData} from './types';\nimport {checkAndUpdateBinding, dispatchEvent, entryAction, findElementDef, parentDiIndex, setBindingDebugInfo, setCurrentNode, unwrapValue} from './util';\n\nconst /** @type {?} */ _tokenKeyCache = new Map<any, string>();\n\nconst /** @type {?} */ RendererTokenKey = tokenKey(Renderer);\nconst /** @type {?} */ ElementRefTokenKey = tokenKey(ElementRef);\nconst /** @type {?} */ ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nconst /** @type {?} */ TemplateRefTokenKey = tokenKey(TemplateRef);\nconst /** @type {?} */ ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nconst /** @type {?} */ InjectorRefTokenKey = tokenKey(Injector);\n\nconst /** @type {?} */ NOT_CREATED = new Object();\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} childCount\n * @param {?} ctor\n * @param {?} deps\n * @param {?=} props\n * @param {?=} outputs\n * @param {?=} component\n * @return {?}\n */\nexport function directiveDef(\n    flags: NodeFlags, matchedQueries: [string, QueryValueType][], childCount: number, ctor: any,\n    deps: ([DepFlags, any] | any)[], props?: {[name: string]: [number, string]},\n    outputs?: {[name: string]: string}, component?: () => ViewDefinition): NodeDef {\n  return _providerDef(\n      flags, matchedQueries, childCount, ProviderType.Class, ctor, ctor, deps, props, outputs,\n      component);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} type\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nexport function providerDef(\n    flags: NodeFlags, matchedQueries: [string, QueryValueType][], type: ProviderType, token: any,\n    value: any, deps: ([DepFlags, any] | any)[]): NodeDef {\n  return _providerDef(flags, matchedQueries, 0, type, token, value, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} childCount\n * @param {?} type\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @param {?=} props\n * @param {?=} outputs\n * @param {?=} component\n * @return {?}\n */\nexport function _providerDef(\n    flags: NodeFlags, matchedQueries: [string, QueryValueType][], childCount: number,\n    type: ProviderType, token: any, value: any, deps: ([DepFlags, any] | any)[],\n    props?: {[name: string]: [number, string]}, outputs?: {[name: string]: string},\n    component?: () => ViewDefinition): NodeDef {\n  const /** @type {?} */ matchedQueryDefs: {[queryId: string]: QueryValueType} = {};\n  if (matchedQueries) {\n    matchedQueries.forEach(([queryId, valueType]) => { matchedQueryDefs[queryId] = valueType; });\n  }\n\n  const /** @type {?} */ bindings: BindingDef[] = [];\n  if (props) {\n    for (let /** @type {?} */ prop in props) {\n      const [bindingIndex, nonMinifiedName] = props[prop];\n      bindings[bindingIndex] = {\n        type: BindingType.ProviderProperty,\n        name: prop, nonMinifiedName,\n        securityContext: undefined,\n        suffix: undefined\n      };\n    }\n  }\n  const /** @type {?} */ outputDefs: ProviderOutputDef[] = [];\n  if (outputs) {\n    for (let /** @type {?} */ propName in outputs) {\n      outputDefs.push({propName, eventName: outputs[propName]});\n    }\n  }\n  const /** @type {?} */ depDefs: DepDef[] = deps.map(value => {\n    let /** @type {?} */ token: any;\n    let /** @type {?} */ flags: DepFlags;\n    if (Array.isArray(value)) {\n      [flags, token] = value;\n    } else {\n      flags = DepFlags.None;\n      token = value;\n    }\n    return {flags, token, tokenKey: tokenKey(token)};\n  });\n  if (component) {\n    flags = flags | NodeFlags.HasComponent;\n  }\n\n  return {\n    type: NodeType.Provider,\n    // will bet set by the view definition\n    index: undefined,\n    reverseChildIndex: undefined,\n    parent: undefined,\n    childFlags: undefined,\n    childMatchedQueries: undefined,\n    bindingIndex: undefined,\n    disposableIndex: undefined,\n    // regular values\n    flags,\n    matchedQueries: matchedQueryDefs,\n    ngContentIndex: undefined, childCount, bindings,\n    disposableCount: outputDefs.length,\n    element: undefined,\n    provider: {\n      type,\n      token,\n      tokenKey: tokenKey(token), value,\n      deps: depDefs,\n      outputs: outputDefs, component\n    },\n    text: undefined,\n    pureExpression: undefined,\n    query: undefined,\n    ngContent: undefined\n  };\n}\n/**\n * @param {?} token\n * @return {?}\n */\nexport function tokenKey(token: any): string {\n  let /** @type {?} */ key = _tokenKeyCache.get(token);\n  if (!key) {\n    key = stringify(token) + '_' + _tokenKeyCache.size;\n    _tokenKeyCache.set(token, key);\n  }\n  return key;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createProviderInstance(view: ViewData, def: NodeDef): any {\n  const /** @type {?} */ providerDef = def.provider;\n  return def.flags & NodeFlags.LazyProvider ? NOT_CREATED : createInstance(view, def);\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view: ViewData, index: number, eventName: string) {\n  return entryAction(\n      EntryAction.HandleEvent, (event: any) => dispatchEvent(view, index, eventName, event));\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdateProviderInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any) {\n  const /** @type {?} */ provider = asProviderData(view, def.index).instance;\n  let /** @type {?} */ changes: SimpleChanges;\n  // Note: fallthrough is intended!\n  switch (def.bindings.length) {\n    case 10:\n      changes = checkAndUpdateProp(view, provider, def, 9, v9, changes);\n    case 9:\n      changes = checkAndUpdateProp(view, provider, def, 8, v8, changes);\n    case 8:\n      changes = checkAndUpdateProp(view, provider, def, 7, v7, changes);\n    case 7:\n      changes = checkAndUpdateProp(view, provider, def, 6, v6, changes);\n    case 6:\n      changes = checkAndUpdateProp(view, provider, def, 5, v5, changes);\n    case 5:\n      changes = checkAndUpdateProp(view, provider, def, 4, v4, changes);\n    case 4:\n      changes = checkAndUpdateProp(view, provider, def, 3, v3, changes);\n    case 3:\n      changes = checkAndUpdateProp(view, provider, def, 2, v2, changes);\n    case 2:\n      changes = checkAndUpdateProp(view, provider, def, 1, v1, changes);\n    case 1:\n      changes = checkAndUpdateProp(view, provider, def, 0, v0, changes);\n  }\n  if (changes) {\n    provider.ngOnChanges(changes);\n  }\n  if ((view.state & ViewState.FirstCheck) && (def.flags & NodeFlags.OnInit)) {\n    provider.ngOnInit();\n  }\n  if (def.flags & NodeFlags.DoCheck) {\n    provider.ngDoCheck();\n  }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdateProviderDynamic(view: ViewData, def: NodeDef, values: any[]) {\n  const /** @type {?} */ provider = asProviderData(view, def.index).instance;\n  let /** @type {?} */ changes: SimpleChanges;\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    changes = checkAndUpdateProp(view, provider, def, i, values[i], changes);\n  }\n  if (changes) {\n    provider.ngOnChanges(changes);\n  }\n  if ((view.state & ViewState.FirstCheck) && (def.flags & NodeFlags.OnInit)) {\n    provider.ngOnInit();\n  }\n  if (def.flags & NodeFlags.DoCheck) {\n    provider.ngDoCheck();\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction createInstance(view: ViewData, nodeDef: NodeDef): any {\n  const /** @type {?} */ providerDef = nodeDef.provider;\n  let /** @type {?} */ injectable: any;\n  switch (providerDef.type) {\n    case ProviderType.Class:\n      injectable =\n          createClass(view, nodeDef.index, nodeDef.parent, providerDef.value, providerDef.deps);\n      break;\n    case ProviderType.Factory:\n      injectable =\n          callFactory(view, nodeDef.index, nodeDef.parent, providerDef.value, providerDef.deps);\n      break;\n    case ProviderType.UseExisting:\n      injectable = resolveDep(view, nodeDef.index, nodeDef.parent, providerDef.deps[0]);\n      break;\n    case ProviderType.Value:\n      injectable = providerDef.value;\n      break;\n  }\n  if (providerDef.outputs.length) {\n    for (let /** @type {?} */ i = 0; i < providerDef.outputs.length; i++) {\n      const /** @type {?} */ output = providerDef.outputs[i];\n      const /** @type {?} */ subscription = injectable[output.propName].subscribe(\n          eventHandlerClosure(view, nodeDef.parent, output.eventName));\n      view.disposables[nodeDef.disposableIndex + i] = subscription.unsubscribe.bind(subscription);\n    }\n  }\n  return injectable;\n}\n/**\n * @param {?} view\n * @param {?} requestorNodeIndex\n * @param {?} elIndex\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(\n    view: ViewData, requestorNodeIndex: number, elIndex: number, ctor: any, deps: DepDef[]): any {\n  const /** @type {?} */ len = deps.length;\n  let /** @type {?} */ injectable: any;\n  switch (len) {\n    case 0:\n      injectable = new ctor();\n      break;\n    case 1:\n      injectable = new ctor(resolveDep(view, requestorNodeIndex, elIndex, deps[0]));\n      break;\n    case 2:\n      injectable = new ctor(\n          resolveDep(view, requestorNodeIndex, elIndex, deps[0]),\n          resolveDep(view, requestorNodeIndex, elIndex, deps[1]));\n      break;\n    case 3:\n      injectable = new ctor(\n          resolveDep(view, requestorNodeIndex, elIndex, deps[0]),\n          resolveDep(view, requestorNodeIndex, elIndex, deps[1]),\n          resolveDep(view, requestorNodeIndex, elIndex, deps[2]));\n      break;\n    default:\n      const /** @type {?} */ depValues = new Array(len);\n      for (let /** @type {?} */ i = 0; i < len; i++) {\n        depValues[i] = resolveDep(view, requestorNodeIndex, elIndex, deps[i]);\n      }\n      injectable = new ctor(...depValues);\n  }\n  return injectable;\n}\n/**\n * @param {?} view\n * @param {?} requestorNodeIndex\n * @param {?} elIndex\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(\n    view: ViewData, requestorNodeIndex: number, elIndex: number, factory: any,\n    deps: DepDef[]): any {\n  const /** @type {?} */ len = deps.length;\n  let /** @type {?} */ injectable: any;\n  switch (len) {\n    case 0:\n      injectable = factory();\n      break;\n    case 1:\n      injectable = factory(resolveDep(view, requestorNodeIndex, elIndex, deps[0]));\n      break;\n    case 2:\n      injectable = factory(\n          resolveDep(view, requestorNodeIndex, elIndex, deps[0]),\n          resolveDep(view, requestorNodeIndex, elIndex, deps[1]));\n      break;\n    case 3:\n      injectable = factory(\n          resolveDep(view, requestorNodeIndex, elIndex, deps[0]),\n          resolveDep(view, requestorNodeIndex, elIndex, deps[1]),\n          resolveDep(view, requestorNodeIndex, elIndex, deps[2]));\n      break;\n    default:\n      const /** @type {?} */ depValues = Array(len);\n      for (let /** @type {?} */ i = 0; i < len; i++) {\n        depValues[i] = resolveDep(view, requestorNodeIndex, elIndex, deps[i]);\n      }\n      injectable = factory(...depValues);\n  }\n  return injectable;\n}\n/**\n * @param {?} view\n * @param {?} requestNodeIndex\n * @param {?} elIndex\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nexport function resolveDep(\n    view: ViewData, requestNodeIndex: number, elIndex: number, depDef: DepDef,\n    notFoundValue = Injector.THROW_IF_NOT_FOUND): any {\n  const /** @type {?} */ startView = view;\n  if (depDef.flags & DepFlags.Optional) {\n    notFoundValue = null;\n  }\n  const /** @type {?} */ tokenKey = depDef.tokenKey;\n\n  if (depDef.flags & DepFlags.SkipSelf) {\n    requestNodeIndex = null;\n    elIndex = view.def.nodes[elIndex].parent;\n    while (elIndex == null && view) {\n      elIndex = parentDiIndex(view);\n      view = view.parent;\n    }\n  }\n\n  while (view) {\n    const /** @type {?} */ elDef = view.def.nodes[elIndex];\n    switch (tokenKey) {\n      case RendererTokenKey:\n        if (view.renderer) {\n          return view.renderer;\n        } else {\n          return Injector.NULL.get(depDef.token, notFoundValue);\n        }\n      case ElementRefTokenKey:\n        return new ElementRef(asElementData(view, elIndex).renderElement);\n      case ViewContainerRefTokenKey:\n        return Refs.createViewContainerRef(view, elIndex);\n      case TemplateRefTokenKey:\n        return Refs.createTemplateRef(view, elDef);\n      case ChangeDetectorRefTokenKey:\n        let /** @type {?} */ cdView = view;\n        // If we are still checking dependencies on the initial element...\n        if (requestNodeIndex != null) {\n          const /** @type {?} */ requestorNodeDef = view.def.nodes[requestNodeIndex];\n          if (requestorNodeDef.flags & NodeFlags.HasComponent) {\n            cdView = asProviderData(view, requestNodeIndex).componentView;\n          }\n        }\n        // A ViewRef is also a ChangeDetectorRef\n        return Refs.createViewRef(cdView);\n      case InjectorRefTokenKey:\n        return Refs.createInjector(view, elIndex);\n      default:\n        const /** @type {?} */ providerIndex = elDef.element.providerIndices[tokenKey];\n        if (providerIndex != null) {\n          const /** @type {?} */ providerData = asProviderData(view, providerIndex);\n          if (providerData.instance === NOT_CREATED) {\n            providerData.instance = createInstance(view, view.def.nodes[providerIndex]);\n          }\n          return providerData.instance;\n        }\n    }\n    requestNodeIndex = null;\n    elIndex = parentDiIndex(view);\n    view = view.parent;\n  }\n  return startView.root.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} provider\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction checkAndUpdateProp(\n    view: ViewData, provider: any, def: NodeDef, bindingIdx: number, value: any,\n    changes: SimpleChanges): SimpleChanges {\n  let /** @type {?} */ change: SimpleChange;\n  let /** @type {?} */ changed: boolean;\n  if (def.flags & NodeFlags.OnChanges) {\n    const /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    changed = checkAndUpdateBinding(view, def, bindingIdx, value);\n    change = changed ?\n        new SimpleChange(oldValue, value, (view.state & ViewState.FirstCheck) !== 0) :\n        null;\n  } else {\n    changed = checkAndUpdateBinding(view, def, bindingIdx, value);\n  }\n  if (changed) {\n    value = unwrapValue(value);\n    const /** @type {?} */ binding = def.bindings[bindingIdx];\n    const /** @type {?} */ propName = binding.name;\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    provider[propName] = value;\n\n    if (isDevMode() && (view.def.flags & ViewFlags.DirectDom) === 0) {\n      setBindingDebugInfo(\n          view.renderer, asElementData(view, def.parent).renderElement, binding.nonMinifiedName,\n          value);\n    }\n    if (change) {\n      changes = changes || {};\n      changes[binding.nonMinifiedName] = change;\n    }\n  }\n  return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nexport function callLifecycleHooksChildrenFirst(view: ViewData, lifecycles: NodeFlags) {\n  if (!(view.def.nodeFlags & lifecycles)) {\n    return;\n  }\n  const /** @type {?} */ len = view.def.nodes.length;\n  for (let /** @type {?} */ i = 0; i < len; i++) {\n    // We use the provider post order to call providers of children first.\n    const /** @type {?} */ nodeDef = view.def.reverseChildNodes[i];\n    const /** @type {?} */ nodeIndex = nodeDef.index;\n    if (nodeDef.flags & lifecycles) {\n      // a leaf\n      setCurrentNode(view, nodeIndex);\n      callProviderLifecycles(asProviderData(view, nodeIndex).instance, nodeDef.flags & lifecycles);\n    } else if ((nodeDef.childFlags & lifecycles) === 0) {\n      // a parent with leafs\n      // no child matches one of the lifecycles,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} provider\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callProviderLifecycles(provider: any, lifecycles: NodeFlags) {\n  if (lifecycles & NodeFlags.AfterContentInit) {\n    provider.ngAfterContentInit();\n  }\n  if (lifecycles & NodeFlags.AfterContentChecked) {\n    provider.ngAfterContentChecked();\n  }\n  if (lifecycles & NodeFlags.AfterViewInit) {\n    provider.ngAfterViewInit();\n  }\n  if (lifecycles & NodeFlags.AfterViewChecked) {\n    provider.ngAfterViewChecked();\n  }\n  if (lifecycles & NodeFlags.OnDestroy) {\n    provider.ngOnDestroy();\n  }\n}\n"]}