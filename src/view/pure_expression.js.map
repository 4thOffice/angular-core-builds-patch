{"version":3,"sources":["../../../../../modules/@angular/core/src/view/pure_expression.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAA,UAAE,EAAW,QAAA,EAAS,MAAA,YAAA;OACtB,EAAa,WAAA,EAAqB,QAAA,EAA6B,QAAA,EAA4C,kBAAA,EAA8B,oBAAA,EAAqB,MAAA,SAAA;OAC9J,EAAA,qBAAE,EAAsB,WAAA,EAAY,MAAA,QAAA;AAC3C;;;;GAIG;AACH,4BAJC,SAAA,EAAA,QAAA;IAKC,MAAM,CAJC,kBAAA,CAKH,kBAAkB,CAJC,IAAC,EAAK,IAAI,KAAA,CAAM,QAAC,CAAQ,EAK5C,EAAC,KAJC,EAAM,SAAA,EAAW,QAAA,EAAU,QAAA,CAAS,SAAC,CAAS,EAAE,KAAA,EAAO,QAAA,CAAS,IAAC,EAAI,CAAC,CAAC;AAK/E,CAAC;AACD;;;GAGG;AACH,6BAPC,QAAA;IAQC,MAAM,CAPC,kBAAA,CAAmB,kBAAC,CAAkB,KAAC,EAAM,IAAI,KAAA,CAAM,QAAC,CAAQ,EAAE,SAAA,CAAU,CAAC;AAQtF,CAAC;AACD;;;GAGG;AACH,8BAVC,aAAA;IAWC,MAAM,CAVC,kBAAA,CAAmB,kBAAC,CAAkB,MAAC,EAAO,aAAA,EAAe,SAAA,CAAU,CAAC;AAWjF,CAAC;AACD;;;;;GAKG;AACH,4BACI,IAAwB,EAAE,aAAuB,EAAE,OAAe;IACpE,MAAM,gBAAgB,CAfhB,QAAA,GAAyB,IAAI,KAAA,CAAM,aAAC,CAAa,MAAC,CAAM,CAAC;IAgB/D,GAAG,CAAC,CAAC,IAfC,gBAAA,CAAG,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,aAAA,CAAc,MAAC,EAAO,CAAA,EAAE,EAAG,CAAA;QAgB7C,MAAM,gBAAgB,CAfhB,IAAA,GAAO,aAAA,CAAc,CAAC,CAAC,CAAC;QAgB9B,QAAQ,CAfC,CAAC,CAAC,GAAG;YAgBZ,IAAI,EAfE,WAAA,CAAY,sBAAC;YAgBnB,IAAI,EAfE,IAAA;YAgBN,eAAe,EAfE,IAAA;YAgBjB,eAAe,EAfE,SAAA;YAgBjB,MAAM,EAfE,SAAA;SAgBT,CAfC;IAgBJ,CAAC;IACD,MAAM,CAfC;QAgBL,IAAI,EAfE,QAAA,CAAS,cAAC;QAgBhB,sCAAsC;QACtC,KAAK,EAfE,SAAA;QAgBP,iBAAiB,EAfE,SAAA;QAgBnB,MAAM,EAfE,SAAA;QAgBR,UAAU,EAfE,SAAA;QAgBZ,mBAAmB,EAfE,SAAA;QAgBrB,YAAY,EAfE,SAAA;QAgBd,eAAe,EAfE,SAAA;QAgBjB,iBAAiB;QACjB,KAAK,EAfE,CAAA;QAgBP,cAAc,EAfE,EAAA;QAgBhB,cAAc,EAfE,SAAA;QAgBhB,UAAU,EAfE,CAAA,EAAG,QAAA;QAgBf,eAAe,EAfE,CAAA;QAgBjB,OAAO,EAfE,SAAA;QAgBT,QAAQ,EAfE,SAAA;QAgBV,IAAI,EAfE,SAAA;QAgBN,cAAc,EAfE,EAAA,IAAE,EAAK,OAAA,EAAQ;QAgB/B,KAAK,EAfE,SAAA;QAgBP,SAAS,EAfE,SAAA;KAgBZ,CAfC;AAgBJ,CAAC;AACD;;;;GAIG;AACH,qCAnBC,IAAA,EAAA,GAAA;IAoBC,MAAM,gBAAgB,CAnBhB,IAAA,GAAO,GAAA,CAAI,cAAC,CAAc,OAAC;QAoB7B,UAAU,CAnBC,IAAC,EAAK,GAAA,CAAI,KAAC,EAAM,GAAA,CAAI,MAAC,EAAO,GAAA,CAAI,cAAC,CAAc,OAAC,CAAO;QAoBnE,SAAS,CAnBC;IAoBd,MAAM,CAnBC,EAAA,KAAE,EAAM,SAAA,EAAW,IAAA,EAAK,CAAC;AAoBlC,CAAC;AACD;;;;;;;;;;;;;;GAcG;AACH,mDACI,IAAc,EAAE,GAAY,EAAE,EAAO,EAAE,EAAO,EAAE,EAAO,EAAE,EAAO,EAAE,EAAO,EAAE,EAAO,EAAE,EAAO,EAC3F,EAAO,EAAE,EAAO,EAAE,EAAO;IAC3B,MAAM,gBAAgB,CAjChB,QAAA,GAAW,GAAA,CAAI,QAAC,CAAQ;IAkC9B,IAAI,gBAAgB,CAjChB,OAAA,GAAU,KAAA,CAAM;IAkCpB,iCAAiC;IACjC,MAAM,CAAC,CAAC,QAjCC,CAAQ,MAAC,CAAM,CAAC,CAAA;QAkCvB,KAjCK,EAAA;YAkCH,EAAE,CAAC,CAAC,qBAjCC,CAAqB,IAAC,EAAK,GAAA,EAAK,CAAA,EAAG,EAAA,CAAG,CAAC;gBAAC,OAAA,GAAU,IAAA,CAAK;QAkC9D,KAjCK,CAAA;YAkCH,EAAE,CAAC,CAAC,qBAjCC,CAAqB,IAAC,EAAK,GAAA,EAAK,CAAA,EAAG,EAAA,CAAG,CAAC;gBAAC,OAAA,GAAU,IAAA,CAAK;QAkC9D,KAjCK,CAAA;YAkCH,EAAE,CAAC,CAAC,qBAjCC,CAAqB,IAAC,EAAK,GAAA,EAAK,CAAA,EAAG,EAAA,CAAG,CAAC;gBAAC,OAAA,GAAU,IAAA,CAAK;QAkC9D,KAjCK,CAAA;YAkCH,EAAE,CAAC,CAAC,qBAjCC,CAAqB,IAAC,EAAK,GAAA,EAAK,CAAA,EAAG,EAAA,CAAG,CAAC;gBAAC,OAAA,GAAU,IAAA,CAAK;QAkC9D,KAjCK,CAAA;YAkCH,EAAE,CAAC,CAAC,qBAjCC,CAAqB,IAAC,EAAK,GAAA,EAAK,CAAA,EAAG,EAAA,CAAG,CAAC;gBAAC,OAAA,GAAU,IAAA,CAAK;QAkC9D,KAjCK,CAAA;YAkCH,EAAE,CAAC,CAAC,qBAjCC,CAAqB,IAAC,EAAK,GAAA,EAAK,CAAA,EAAG,EAAA,CAAG,CAAC;gBAAC,OAAA,GAAU,IAAA,CAAK;QAkC9D,KAjCK,CAAA;YAkCH,EAAE,CAAC,CAAC,qBAjCC,CAAqB,IAAC,EAAK,GAAA,EAAK,CAAA,EAAG,EAAA,CAAG,CAAC;gBAAC,OAAA,GAAU,IAAA,CAAK;QAkC9D,KAjCK,CAAA;YAkCH,EAAE,CAAC,CAAC,qBAjCC,CAAqB,IAAC,EAAK,GAAA,EAAK,CAAA,EAAG,EAAA,CAAG,CAAC;gBAAC,OAAA,GAAU,IAAA,CAAK;QAkC9D,KAjCK,CAAA;YAkCH,EAAE,CAAC,CAAC,qBAjCC,CAAqB,IAAC,EAAK,GAAA,EAAK,CAAA,EAAG,EAAA,CAAG,CAAC;gBAAC,OAAA,GAAU,IAAA,CAAK;QAkC9D,KAjCK,CAAA;YAkCH,EAAE,CAAC,CAAC,qBAjCC,CAAqB,IAAC,EAAK,GAAA,EAAK,CAAA,EAAG,EAAA,CAAG,CAAC;gBAAC,OAAA,GAAU,IAAA,CAAK;IAkChE,CAAC;IAED,EAAE,CAAC,CAAC,OAjCC,CAAO,CAAC,CAAA;QAkCX,EAAE,GAjCG,WAAA,CAAY,EAAC,CAAE,CAAC;QAkCrB,EAAE,GAjCG,WAAA,CAAY,EAAC,CAAE,CAAC;QAkCrB,EAAE,GAjCG,WAAA,CAAY,EAAC,CAAE,CAAC;QAkCrB,EAAE,GAjCG,WAAA,CAAY,EAAC,CAAE,CAAC;QAkCrB,EAAE,GAjCG,WAAA,CAAY,EAAC,CAAE,CAAC;QAkCrB,EAAE,GAjCG,WAAA,CAAY,EAAC,CAAE,CAAC;QAkCrB,EAAE,GAjCG,WAAA,CAAY,EAAC,CAAE,CAAC;QAkCrB,EAAE,GAjCG,WAAA,CAAY,EAAC,CAAE,CAAC;QAkCrB,EAAE,GAjCG,WAAA,CAAY,EAAC,CAAE,CAAC;QAkCrB,EAAE,GAjCG,WAAA,CAAY,EAAC,CAAE,CAAC;QAmCrB,MAAM,gBAAgB,CAjChB,IAAA,GAAO,oBAAA,CAAqB,IAAC,EAAK,GAAA,CAAI,KAAC,CAAK,CAAC;QAkCnD,IAAI,gBAAgB,CAjChB,KAAO,CAAI;QAkCf,MAAM,CAAC,CAAC,GAjCC,CAAG,cAAC,CAAc,IAAC,CAAI,CAAC,CAAA;YAkC/B,KAjCK,kBAAA,CAAmB,KAAC;gBAkCvB,KAAK,GAjCG,IAAI,KAAA,CAAM,QAAC,CAAQ,MAAC,CAAM,CAAC;gBAkCnC,iCAAiC;gBACjC,MAAM,CAAC,CAAC,QAjCC,CAAQ,MAAC,CAAM,CAAC,CAAA;oBAkCvB,KAjCK,EAAA;wBAkCH,KAAK,CAjCC,CAAC,CAAC,GAAG,EAAA,CAAG;oBAkChB,KAjCK,CAAA;wBAkCH,KAAK,CAjCC,CAAC,CAAC,GAAG,EAAA,CAAG;oBAkChB,KAjCK,CAAA;wBAkCH,KAAK,CAjCC,CAAC,CAAC,GAAG,EAAA,CAAG;oBAkChB,KAjCK,CAAA;wBAkCH,KAAK,CAjCC,CAAC,CAAC,GAAG,EAAA,CAAG;oBAkChB,KAjCK,CAAA;wBAkCH,KAAK,CAjCC,CAAC,CAAC,GAAG,EAAA,CAAG;oBAkChB,KAjCK,CAAA;wBAkCH,KAAK,CAjCC,CAAC,CAAC,GAAG,EAAA,CAAG;oBAkChB,KAjCK,CAAA;wBAkCH,KAAK,CAjCC,CAAC,CAAC,GAAG,EAAA,CAAG;oBAkChB,KAjCK,CAAA;wBAkCH,KAAK,CAjCC,CAAC,CAAC,GAAG,EAAA,CAAG;oBAkChB,KAjCK,CAAA;wBAkCH,KAAK,CAjCC,CAAC,CAAC,GAAG,EAAA,CAAG;oBAkChB,KAjCK,CAAA;wBAkCH,KAAK,CAjCC,CAAC,CAAC,GAAG,EAAA,CAAG;gBAkClB,CAAC;gBACD,KAAK,CAAC;YACR,KAjCK,kBAAA,CAAmB,MAAC;gBAkCvB,KAAK,GAjCG,EAAA,CAAG;gBAkCX,iCAAiC;gBACjC,MAAM,CAAC,CAAC,QAjCC,CAAQ,MAAC,CAAM,CAAC,CAAA;oBAkCvB,KAjCK,EAAA;wBAkCH,KAAK,CAjCC,QAAC,CAAQ,CAAC,CAAC,CAAC,IAAC,CAAI,GAAG,EAAA,CAAG;oBAkC/B,KAjCK,CAAA;wBAkCH,KAAK,CAjCC,QAAC,CAAQ,CAAC,CAAC,CAAC,IAAC,CAAI,GAAG,EAAA,CAAG;oBAkC/B,KAjCK,CAAA;wBAkCH,KAAK,CAjCC,QAAC,CAAQ,CAAC,CAAC,CAAC,IAAC,CAAI,GAAG,EAAA,CAAG;oBAkC/B,KAjCK,CAAA;wBAkCH,KAAK,CAjCC,QAAC,CAAQ,CAAC,CAAC,CAAC,IAAC,CAAI,GAAG,EAAA,CAAG;oBAkC/B,KAjCK,CAAA;wBAkCH,KAAK,CAjCC,QAAC,CAAQ,CAAC,CAAC,CAAC,IAAC,CAAI,GAAG,EAAA,CAAG;oBAkC/B,KAjCK,CAAA;wBAkCH,KAAK,CAjCC,QAAC,CAAQ,CAAC,CAAC,CAAC,IAAC,CAAI,GAAG,EAAA,CAAG;oBAkC/B,KAjCK,CAAA;wBAkCH,KAAK,CAjCC,QAAC,CAAQ,CAAC,CAAC,CAAC,IAAC,CAAI,GAAG,EAAA,CAAG;oBAkC/B,KAjCK,CAAA;wBAkCH,KAAK,CAjCC,QAAC,CAAQ,CAAC,CAAC,CAAC,IAAC,CAAI,GAAG,EAAA,CAAG;oBAkC/B,KAjCK,CAAA;wBAkCH,KAAK,CAjCC,QAAC,CAAQ,CAAC,CAAC,CAAC,IAAC,CAAI,GAAG,EAAA,CAAG;oBAkC/B,KAjCK,CAAA;wBAkCH,KAAK,CAjCC,QAAC,CAAQ,CAAC,CAAC,CAAC,IAAC,CAAI,GAAG,EAAA,CAAG;gBAkCjC,CAAC;gBACD,KAAK,CAAC;YACR,KAjCK,kBAAA,CAAmB,IAAC;gBAkCvB,MAAM,CAAC,CAAC,QAjCC,CAAQ,MAAC,CAAM,CAAC,CAAA;oBAkCvB,KAjCK,EAAA;wBAkCH,KAAK,GAjCG,IAAA,CAAK,IAAC,CAAI,SAAC,CAAS,EAAC,EAAG,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,CAAG,CAAC;wBAkCpE,KAAK,CAAC;oBACR,KAjCK,CAAA;wBAkCH,KAAK,GAjCG,IAAA,CAAK,IAAC,CAAI,SAAC,CAAS,EAAC,EAAG,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,CAAG,CAAC;wBAkChE,KAAK,CAAC;oBACR,KAjCK,CAAA;wBAkCH,KAAK,GAjCG,IAAA,CAAK,IAAC,CAAI,SAAC,CAAS,EAAC,EAAG,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,CAAG,CAAC;wBAkC5D,KAAK,CAAC;oBACR,KAjCK,CAAA;wBAkCH,KAAK,GAjCG,IAAA,CAAK,IAAC,CAAI,SAAC,CAAS,EAAC,EAAG,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,CAAG,CAAC;wBAkCxD,KAAK,CAAC;oBACR,KAjCK,CAAA;wBAkCH,KAAK,GAjCG,IAAA,CAAK,IAAC,CAAI,SAAC,CAAS,EAAC,EAAG,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,CAAG,CAAC;wBAkCpD,KAAK,CAAC;oBACR,KAjCK,CAAA;wBAkCH,KAAK,GAjCG,IAAA,CAAK,IAAC,CAAI,SAAC,CAAS,EAAC,EAAG,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,CAAG,CAAC;wBAkChD,KAAK,CAAC;oBACR,KAjCK,CAAA;wBAkCH,KAAK,GAjCG,IAAA,CAAK,IAAC,CAAI,SAAC,CAAS,EAAC,EAAG,EAAA,EAAI,EAAA,EAAI,EAAA,CAAG,CAAC;wBAkC5C,KAAK,CAAC;oBACR,KAjCK,CAAA;wBAkCH,KAAK,GAjCG,IAAA,CAAK,IAAC,CAAI,SAAC,CAAS,EAAC,EAAG,EAAA,EAAI,EAAA,CAAG,CAAC;wBAkCxC,KAAK,CAAC;oBACR,KAjCK,CAAA;wBAkCH,KAAK,GAjCG,IAAA,CAAK,IAAC,CAAI,SAAC,CAAS,EAAC,EAAG,EAAA,CAAG,CAAC;wBAkCpC,KAAK,CAAC;oBACR,KAjCK,CAAA;wBAkCH,KAAK,GAjCG,IAAA,CAAK,IAAC,CAAI,SAAC,CAAS,EAAC,CAAE,CAAC;wBAkChC,KAAK,CAAC;gBACV,CAAC;gBACD,KAAK,CAAC;QACV,CAAC;QACD,IAAI,CAjCC,KAAC,GAAO,KAAA,CAAM;IAkCrB,CAAC;AACH,CAAC;AACD;;;;;GAKG;AACH,oDAtCC,IAAA,EAAA,GAAA,EAAA,MAAA;IAuCC,MAAM,gBAAgB,CAtChB,QAAA,GAAW,GAAA,CAAI,QAAC,CAAQ;IAuC9B,IAAI,gBAAgB,CAtChB,OAAA,GAAU,KAAA,CAAM;IAuCpB,GAAG,CAAC,CAAC,IAtCC,gBAAA,CAAG,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,MAAA,CAAO,MAAC,EAAO,CAAA,EAAE,EAAG,CAAA;QAuCtC,iDAAiD;QACjD,sCAAsC;QACtC,EAAE,CAAC,CAAC,qBAtCC,CAAqB,IAAC,EAAK,GAAA,EAAK,CAAA,EAAG,MAAA,CAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;YAuClD,OAAO,GAtCG,IAAA,CAAK;QAuCjB,CAAC;IACH,CAAC;IACD,EAAE,CAAC,CAAC,OAtCC,CAAO,CAAC,CAAA;QAuCX,MAAM,gBAAgB,CAtChB,IAAA,GAAO,oBAAA,CAAqB,IAAC,EAAK,GAAA,CAAI,KAAC,CAAK,CAAC;QAuCnD,IAAI,gBAAgB,CAtChB,KAAO,CAAI;QAuCf,MAAM,CAAC,CAAC,GAtCC,CAAG,cAAC,CAAc,IAAC,CAAI,CAAC,CAAA;YAuC/B,KAtCK,kBAAA,CAAmB,KAAC;gBAuCvB,KAAK,GAtCG,IAAI,KAAA,CAAM,MAAC,CAAM,MAAC,CAAM,CAAC;gBAuCjC,GAAG,CAAC,CAAC,IAtCC,gBAAA,CAAG,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,MAAA,CAAO,MAAC,EAAO,CAAA,EAAE,EAAG,CAAA;oBAuCtC,KAAK,CAtCC,CAAC,CAAC,GAAG,WAAA,CAAY,MAAC,CAAM,CAAC,CAAC,CAAC,CAAC;gBAuCpC,CAAC;gBACD,KAAK,CAAC;YACR,KAtCK,kBAAA,CAAmB,MAAC;gBAuCvB,KAAK,GAtCG,EAAA,CAAG;gBAuCX,GAAG,CAAC,CAAC,IAtCC,gBAAA,CAAG,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,MAAA,CAAO,MAAC,EAAO,CAAA,EAAE,EAAG,CAAA;oBAuCtC,KAAK,CAtCC,QAAC,CAAQ,CAAC,CAAC,CAAC,IAAC,CAAI,GAAG,WAAA,CAAY,MAAC,CAAM,CAAC,CAAC,CAAC,CAAC;gBAuCnD,CAAC;gBACD,KAAK,CAAC;YACR,KAtCK,kBAAA,CAAmB,IAAC;gBAuCvB,MAAM,gBAAgB,CAtChB,MAAA,GAAS,IAAI,KAAA,CAAM,MAAC,CAAM,MAAC,CAAM,CAAC;gBAuCxC,GAAG,CAAC,CAAC,IAtCC,gBAAA,CAAG,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,MAAA,CAAO,MAAC,EAAO,CAAA,EAAE,EAAG,CAAA;oBAuCtC,MAAM,CAtCC,CAAC,CAAC,GAAG,WAAA,CAAY,MAAC,CAAM,CAAC,CAAC,CAAC,CAAC;gBAuCrC,CAAC;gBACD,KAAK,GAtCG,CAAA,CAAM,IAAC,CAAI,IAAC,CAAI,SAAC,CAAA,CAAS,CAAC,GAAC,MAAG,CAAM,CAAC;gBAuC9C,KAAK,CAAC;QACV,CAAC;QACD,IAAI,CAtCC,KAAC,GAAO,KAAA,CAAM;IAuCrB,CAAC;AACH,CAAC","file":"pure_expression.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {resolveDep, tokenKey} from './provider';\nimport {BindingDef, BindingType, DepDef, DepFlags, NodeData, NodeDef, NodeType, ProviderData, PureExpressionData, PureExpressionType, ViewData, asPureExpressionData} from './types';\nimport {checkAndUpdateBinding, unwrapValue} from './util';\n/**\n * @param {?} pipeToken\n * @param {?} argCount\n * @return {?}\n */\nexport function purePipeDef(pipeToken: any, argCount: number): NodeDef {\n  return _pureExpressionDef(\n      PureExpressionType.Pipe, new Array(argCount),\n      {token: pipeToken, tokenKey: tokenKey(pipeToken), flags: DepFlags.None});\n}\n/**\n * @param {?} argCount\n * @return {?}\n */\nexport function pureArrayDef(argCount: number): NodeDef {\n  return _pureExpressionDef(PureExpressionType.Array, new Array(argCount), undefined);\n}\n/**\n * @param {?} propertyNames\n * @return {?}\n */\nexport function pureObjectDef(propertyNames: string[]): NodeDef {\n  return _pureExpressionDef(PureExpressionType.Object, propertyNames, undefined);\n}\n/**\n * @param {?} type\n * @param {?} propertyNames\n * @param {?} pipeDep\n * @return {?}\n */\nfunction _pureExpressionDef(\n    type: PureExpressionType, propertyNames: string[], pipeDep: DepDef): NodeDef {\n  const /** @type {?} */ bindings: BindingDef[] = new Array(propertyNames.length);\n  for (let /** @type {?} */ i = 0; i < propertyNames.length; i++) {\n    const /** @type {?} */ prop = propertyNames[i];\n    bindings[i] = {\n      type: BindingType.PureExpressionProperty,\n      name: prop,\n      nonMinifiedName: prop,\n      securityContext: undefined,\n      suffix: undefined\n    };\n  }\n  return {\n    type: NodeType.PureExpression,\n    // will bet set by the view definition\n    index: undefined,\n    reverseChildIndex: undefined,\n    parent: undefined,\n    childFlags: undefined,\n    childMatchedQueries: undefined,\n    bindingIndex: undefined,\n    disposableIndex: undefined,\n    // regular values\n    flags: 0,\n    matchedQueries: {},\n    ngContentIndex: undefined,\n    childCount: 0, bindings,\n    disposableCount: 0,\n    element: undefined,\n    provider: undefined,\n    text: undefined,\n    pureExpression: {type, pipeDep},\n    query: undefined,\n    ngContent: undefined\n  };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createPureExpression(view: ViewData, def: NodeDef): PureExpressionData {\n  const /** @type {?} */ pipe = def.pureExpression.pipeDep ?\n      resolveDep(view, def.index, def.parent, def.pureExpression.pipeDep) :\n      undefined;\n  return {value: undefined, pipe};\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdatePureExpressionInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any) {\n  const /** @type {?} */ bindings = def.bindings;\n  let /** @type {?} */ changed = false;\n  // Note: fallthrough is intended!\n  switch (bindings.length) {\n    case 10:\n      if (checkAndUpdateBinding(view, def, 9, v9)) changed = true;\n    case 9:\n      if (checkAndUpdateBinding(view, def, 8, v8)) changed = true;\n    case 8:\n      if (checkAndUpdateBinding(view, def, 7, v7)) changed = true;\n    case 7:\n      if (checkAndUpdateBinding(view, def, 6, v6)) changed = true;\n    case 6:\n      if (checkAndUpdateBinding(view, def, 5, v5)) changed = true;\n    case 5:\n      if (checkAndUpdateBinding(view, def, 4, v4)) changed = true;\n    case 4:\n      if (checkAndUpdateBinding(view, def, 3, v3)) changed = true;\n    case 3:\n      if (checkAndUpdateBinding(view, def, 2, v2)) changed = true;\n    case 2:\n      if (checkAndUpdateBinding(view, def, 1, v1)) changed = true;\n    case 1:\n      if (checkAndUpdateBinding(view, def, 0, v0)) changed = true;\n  }\n\n  if (changed) {\n    v0 = unwrapValue(v0);\n    v1 = unwrapValue(v1);\n    v2 = unwrapValue(v2);\n    v3 = unwrapValue(v3);\n    v4 = unwrapValue(v4);\n    v5 = unwrapValue(v5);\n    v6 = unwrapValue(v6);\n    v7 = unwrapValue(v7);\n    v8 = unwrapValue(v8);\n    v9 = unwrapValue(v9);\n\n    const /** @type {?} */ data = asPureExpressionData(view, def.index);\n    let /** @type {?} */ value: any;\n    switch (def.pureExpression.type) {\n      case PureExpressionType.Array:\n        value = new Array(bindings.length);\n        // Note: fallthrough is intended!\n        switch (bindings.length) {\n          case 10:\n            value[9] = v9;\n          case 9:\n            value[8] = v8;\n          case 8:\n            value[7] = v7;\n          case 7:\n            value[6] = v6;\n          case 6:\n            value[5] = v5;\n          case 5:\n            value[4] = v4;\n          case 4:\n            value[3] = v3;\n          case 3:\n            value[2] = v2;\n          case 2:\n            value[1] = v1;\n          case 1:\n            value[0] = v0;\n        }\n        break;\n      case PureExpressionType.Object:\n        value = {};\n        // Note: fallthrough is intended!\n        switch (bindings.length) {\n          case 10:\n            value[bindings[9].name] = v9;\n          case 9:\n            value[bindings[8].name] = v8;\n          case 8:\n            value[bindings[7].name] = v7;\n          case 7:\n            value[bindings[6].name] = v6;\n          case 6:\n            value[bindings[5].name] = v5;\n          case 5:\n            value[bindings[4].name] = v4;\n          case 4:\n            value[bindings[3].name] = v3;\n          case 3:\n            value[bindings[2].name] = v2;\n          case 2:\n            value[bindings[1].name] = v1;\n          case 1:\n            value[bindings[0].name] = v0;\n        }\n        break;\n      case PureExpressionType.Pipe:\n        switch (bindings.length) {\n          case 10:\n            value = data.pipe.transform(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n          case 9:\n            value = data.pipe.transform(v0, v1, v2, v3, v4, v5, v6, v7, v8);\n            break;\n          case 8:\n            value = data.pipe.transform(v0, v1, v2, v3, v4, v5, v6, v7);\n            break;\n          case 7:\n            value = data.pipe.transform(v0, v1, v2, v3, v4, v5, v6);\n            break;\n          case 6:\n            value = data.pipe.transform(v0, v1, v2, v3, v4, v5);\n            break;\n          case 5:\n            value = data.pipe.transform(v0, v1, v2, v3, v4);\n            break;\n          case 4:\n            value = data.pipe.transform(v0, v1, v2, v3);\n            break;\n          case 3:\n            value = data.pipe.transform(v0, v1, v2);\n            break;\n          case 2:\n            value = data.pipe.transform(v0, v1);\n            break;\n          case 1:\n            value = data.pipe.transform(v0);\n            break;\n        }\n        break;\n    }\n    data.value = value;\n  }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdatePureExpressionDynamic(view: ViewData, def: NodeDef, values: any[]) {\n  const /** @type {?} */ bindings = def.bindings;\n  let /** @type {?} */ changed = false;\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    // Note: We need to loop over all values, so that\n    // the old values are updates as well!\n    if (checkAndUpdateBinding(view, def, i, values[i])) {\n      changed = true;\n    }\n  }\n  if (changed) {\n    const /** @type {?} */ data = asPureExpressionData(view, def.index);\n    let /** @type {?} */ value: any;\n    switch (def.pureExpression.type) {\n      case PureExpressionType.Array:\n        value = new Array(values.length);\n        for (let /** @type {?} */ i = 0; i < values.length; i++) {\n          value[i] = unwrapValue(values[i]);\n        }\n        break;\n      case PureExpressionType.Object:\n        value = {};\n        for (let /** @type {?} */ i = 0; i < values.length; i++) {\n          value[bindings[i].name] = unwrapValue(values[i]);\n        }\n        break;\n      case PureExpressionType.Pipe:\n        const /** @type {?} */ params = new Array(values.length);\n        for (let /** @type {?} */ i = 0; i < values.length; i++) {\n          params[i] = unwrapValue(values[i]);\n        }\n        value = ( /** @type {?} */((<any>data.pipe.transform)))(...params);\n        break;\n    }\n    data.value = value;\n  }\n}\n"]}