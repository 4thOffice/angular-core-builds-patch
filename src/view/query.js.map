{"version":3,"sources":["../../../../../modules/@angular/core/src/view/query.ts"],"names":[],"mappings":"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","file":"query.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementRef} from '../linker/element_ref';\nimport {QueryList} from '../linker/query_list';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\n\nimport {NodeDef, NodeFlags, NodeType, QueryBindingDef, QueryBindingType, QueryDef, QueryValueType, Refs, ViewData, asElementData, asProviderData, asQueryList} from './types';\nimport {declaredViewContainer} from './util';\n/**\n * @param {?} flags\n * @param {?} id\n * @param {?} bindings\n * @return {?}\n */\nexport function queryDef(\n    flags: NodeFlags, id: string, bindings: {[propName: string]: QueryBindingType}): NodeDef {\n  let /** @type {?} */ bindingDefs: QueryBindingDef[] = [];\n  for (let /** @type {?} */ propName in bindings) {\n    const /** @type {?} */ bindingType = bindings[propName];\n    bindingDefs.push({propName, bindingType});\n  }\n\n  return {\n    type: NodeType.Query,\n    // will bet set by the view definition\n    index: undefined,\n    reverseChildIndex: undefined,\n    parent: undefined,\n    childFlags: undefined,\n    childMatchedQueries: undefined,\n    bindingIndex: undefined,\n    disposableIndex: undefined,\n    // regular values\n    flags,\n    ngContentIndex: undefined,\n    matchedQueries: {},\n    childCount: 0,\n    bindings: [],\n    disposableCount: 0,\n    element: undefined,\n    provider: undefined,\n    text: undefined,\n    pureExpression: undefined,\n    query: {id, bindings: bindingDefs},\n    ngContent: undefined\n  };\n}\n/**\n * @return {?}\n */\nexport function createQuery(): QueryList<any> {\n  return new QueryList();\n}\n/**\n * @param {?} queryId\n * @param {?} view\n * @return {?}\n */\nexport function dirtyParentQuery(queryId: string, view: ViewData) {\n  let /** @type {?} */ nodeIndex = view.parentIndex;\n  view = view.parent;\n  let /** @type {?} */ queryIdx: number;\n  while (view) {\n    const /** @type {?} */ elementDef = view.def.nodes[nodeIndex];\n    queryIdx = elementDef.element.providerIndices[queryId];\n    if (queryIdx != null) {\n      break;\n    }\n    nodeIndex = view.parentIndex;\n    view = view.parent;\n  }\n  if (!view) {\n    throw new Error(\n        `Illegal State: Tried to dirty parent query ${queryId} but the query could not be found!`);\n  }\n  asQueryList(view, queryIdx).setDirty();\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nexport function checkAndUpdateQuery(view: ViewData, nodeDef: NodeDef) {\n  const /** @type {?} */ queryList = asQueryList(view, nodeDef.index);\n  if (!queryList.dirty) {\n    return;\n  }\n  const /** @type {?} */ queryId = nodeDef.query.id;\n  const /** @type {?} */ providerDef = view.def.nodes[nodeDef.parent];\n  const /** @type {?} */ providerData = asProviderData(view, providerDef.index);\n  let /** @type {?} */ newValues: any[];\n  if (nodeDef.flags & NodeFlags.HasContentQuery) {\n    const /** @type {?} */ elementDef = view.def.nodes[providerDef.parent];\n    newValues = calcQueryValues(\n        view, elementDef.index, elementDef.index + elementDef.childCount, queryId, []);\n  } else if (nodeDef.flags & NodeFlags.HasViewQuery) {\n    const /** @type {?} */ compView = providerData.componentView;\n    newValues = calcQueryValues(compView, 0, compView.def.nodes.length - 1, queryId, []);\n  }\n  queryList.reset(newValues);\n  let /** @type {?} */ boundValue: any;\n  const /** @type {?} */ bindings = nodeDef.query.bindings;\n  for (let /** @type {?} */ i = 0; i < bindings.length; i++) {\n    const /** @type {?} */ binding = bindings[i];\n    switch (binding.bindingType) {\n      case QueryBindingType.First:\n        boundValue = queryList.first;\n        break;\n      case QueryBindingType.All:\n        boundValue = queryList;\n        break;\n    }\n    providerData.instance[binding.propName] = boundValue;\n  }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryId\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(\n    view: ViewData, startIndex: number, endIndex: number, queryId: string, values: any[]): any[] {\n  const /** @type {?} */ len = view.def.nodes.length;\n  for (let /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    const /** @type {?} */ value = getQueryValue(view, nodeDef, queryId);\n    if (value != null) {\n      // a match\n      values.push(value);\n    }\n    if (nodeDef.flags & NodeFlags.HasEmbeddedViews &&\n        queryId in nodeDef.element.template.nodeMatchedQueries) {\n      // check embedded views that were attached at the place of their template.\n      const /** @type {?} */ elementData = asElementData(view, i);\n      const /** @type {?} */ embeddedViews = elementData.embeddedViews;\n      for (let /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n        const /** @type {?} */ embeddedView = embeddedViews[k];\n        const /** @type {?} */ dvc = declaredViewContainer(embeddedView);\n        if (dvc && dvc === elementData) {\n          calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryId, values);\n        }\n      }\n      const /** @type {?} */ projectedViews = elementData.projectedViews;\n      if (projectedViews) {\n        for (let /** @type {?} */ k = 0; k < projectedViews.length; k++) {\n          const /** @type {?} */ projectedView = projectedViews[k];\n          calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryId, values);\n        }\n      }\n    }\n    if (!(queryId in nodeDef.childMatchedQueries)) {\n      // If don't check descendants, skip the children.\n      // Or: no child matches the query, then skip the children as well.\n      i += nodeDef.childCount;\n    }\n  }\n  return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryId\n * @return {?}\n */\nexport function getQueryValue(view: ViewData, nodeDef: NodeDef, queryId: string): any {\n  const /** @type {?} */ queryValueType = /** @type {?} */(( <QueryValueType>nodeDef.matchedQueries[queryId]));\n  if (queryValueType != null) {\n    // a match\n    let /** @type {?} */ value: any;\n    switch (queryValueType) {\n      case QueryValueType.RenderElement:\n        value = asElementData(view, nodeDef.index).renderElement;\n        break;\n      case QueryValueType.ElementRef:\n        value = new ElementRef(asElementData(view, nodeDef.index).renderElement);\n        break;\n      case QueryValueType.TemplateRef:\n        value = Refs.createTemplateRef(view, nodeDef);\n        break;\n      case QueryValueType.ViewContainerRef:\n        value = Refs.createViewContainerRef(view, nodeDef.index);\n        break;\n      case QueryValueType.Provider:\n        value = asProviderData(view, nodeDef.index).instance;\n        break;\n    }\n    return value;\n  }\n}"]}