{"version":3,"sources":["../../../../../modules/@angular/core/src/view/refs.ts"],"names":[],"mappings":"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","file":"refs.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NoOpAnimationPlayer} from '../animation/animation_player';\nimport {ApplicationRef} from '../application_ref';\nimport {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {Injector} from '../di';\nimport {ComponentFactory, ComponentRef} from '../linker/component_factory';\nimport {ElementRef} from '../linker/element_ref';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {EmbeddedViewRef, InternalViewRef, ViewRef} from '../linker/view_ref';\nimport {Renderer as RendererV1, RendererV2} from '../render/api';\nimport {Type} from '../type';\nimport {VERSION} from '../version';\n\nimport {ArgumentType, BindingType, DebugContext, DepFlags, ElementData, NodeCheckFn, NodeData, NodeDef, NodeFlags, NodeType, RootData, Services, ViewData, ViewDefinition, ViewDefinitionFactory, ViewState, asElementData, asProviderData, asTextData} from './types';\nimport {isComponentView, renderNode, resolveViewDefinition, rootRenderNodes, splitNamespace, tokenKey, viewParentEl} from './util';\n\nconst /** @type {?} */ EMPTY_CONTEXT = new Object();\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @return {?}\n */\nexport function createComponentFactory(\n    selector: string, componentType: Type<any>,\n    viewDefFactory: ViewDefinitionFactory): ComponentFactory<any> {\n  return new ComponentFactory_(selector, componentType, viewDefFactory);\n}\nclass ComponentFactory_ extends ComponentFactory<any> {\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n */\nconstructor(selector: string, componentType: Type<any>, viewDefFactory: ViewDefinitionFactory) {\n    super(selector, <any>viewDefFactory, componentType);\n  }\n/**\n * Creates a new component.\n * @param {?} injector\n * @param {?=} projectableNodes\n * @param {?=} rootSelectorOrNode\n * @return {?}\n */\ncreate(\n      injector: Injector, projectableNodes: any[][] = null,\n      rootSelectorOrNode: string|any = null): ComponentRef<any> {\n    const /** @type {?} */ viewDef = resolveViewDefinition(this._viewClass);\n    const /** @type {?} */ componentNodeIndex = viewDef.nodes[0].element.component.index;\n    const /** @type {?} */ view = Services.createRootView(\n        injector, projectableNodes || [], rootSelectorOrNode, viewDef, EMPTY_CONTEXT);\n    const /** @type {?} */ component = asProviderData(view, componentNodeIndex).instance;\n    view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n\n    return new ComponentRef_(view, new ViewRef_(view), component);\n  }\n}\nclass ComponentRef_ extends ComponentRef<any> {\nprivate _elDef: NodeDef;\n/**\n * @param {?} _view\n * @param {?} _viewRef\n * @param {?} _component\n */\nconstructor(private _view: ViewData,\nprivate _viewRef: ViewRef,\nprivate _component: any) {\n    super();\n    this._elDef = this._view.def.nodes[0];\n  }\n/**\n * @return {?}\n */\nget location(): ElementRef {\n    return new ElementRef(asElementData(this._view, this._elDef.index).renderElement);\n  }\n/**\n * @return {?}\n */\nget injector(): Injector { return new Injector_(this._view, this._elDef); }\n/**\n * @return {?}\n */\nget instance(): any { return this._component; };\n/**\n * @return {?}\n */\nget hostView(): ViewRef { return this._viewRef; };\n/**\n * @return {?}\n */\nget changeDetectorRef(): ChangeDetectorRef { return this._viewRef; };\n/**\n * @return {?}\n */\nget componentType(): Type<any> { return /** @type {?} */(( <any>this._component.constructor)); }\n/**\n * @return {?}\n */\ndestroy(): void { this._viewRef.destroy(); }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function): void { this._viewRef.onDestroy(callback); }\n}\n\nfunction ComponentRef__tsickle_Closure_declarations() {\n/** @type {?} */\nComponentRef_.prototype._elDef;\n/** @type {?} */\nComponentRef_.prototype._view;\n/** @type {?} */\nComponentRef_.prototype._viewRef;\n/** @type {?} */\nComponentRef_.prototype._component;\n}\n\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nexport function createViewContainerRef(view: ViewData, elDef: NodeDef): ViewContainerRef {\n  return new ViewContainerRef_(view, elDef);\n}\nclass ViewContainerRef_ implements ViewContainerRef {\nprivate _data: ElementData;\n/**\n * @param {?} _view\n * @param {?} _elDef\n */\nconstructor(private _view: ViewData,\nprivate _elDef: NodeDef) {\n    this._data = asElementData(_view, _elDef.index);\n  }\n/**\n * @return {?}\n */\nget element(): ElementRef { return new ElementRef(this._data.renderElement); }\n/**\n * @return {?}\n */\nget injector(): Injector { return new Injector_(this._view, this._elDef); }\n/**\n * @return {?}\n */\nget parentInjector(): Injector {\n    let /** @type {?} */ view = this._view;\n    let /** @type {?} */ elDef = this._elDef.parent;\n    while (!elDef && view) {\n      elDef = viewParentEl(view);\n      view = view.parent;\n    }\n    return view ? new Injector_(view, elDef) : this._view.root.injector;\n  }\n/**\n * @return {?}\n */\nclear(): void {\n    const /** @type {?} */ len = this._data.embeddedViews.length;\n    for (let /** @type {?} */ i = len - 1; i >= 0; i--) {\n      const /** @type {?} */ view = Services.detachEmbeddedView(this._data, i);\n      Services.destroyView(view);\n    }\n  }\n/**\n * @param {?} index\n * @return {?}\n */\nget(index: number): ViewRef { return this._getViewRef(this._data.embeddedViews[index]); }\n/**\n * @param {?} view\n * @return {?}\n */\nprivate _getViewRef(view: ViewData) {\n    if (view) {\n      const /** @type {?} */ ref = new ViewRef_(view);\n      ref.attachToViewContainerRef(this);\n      return ref;\n    }\n    return null;\n  }\n/**\n * @return {?}\n */\nget length(): number { return this._data.embeddedViews.length; };\n/**\n * @param {?} templateRef\n * @param {?=} context\n * @param {?=} index\n * @return {?}\n */\ncreateEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, index?: number):\n      EmbeddedViewRef<C> {\n    const /** @type {?} */ viewRef = templateRef.createEmbeddedView(context || /** @type {?} */(( <any>{})));\n    this.insert(viewRef, index);\n    return viewRef;\n  }\n/**\n * @param {?} componentFactory\n * @param {?=} index\n * @param {?=} injector\n * @param {?=} projectableNodes\n * @return {?}\n */\ncreateComponent<C>(\n      componentFactory: ComponentFactory<C>, index?: number, injector?: Injector,\n      projectableNodes?: any[][]): ComponentRef<C> {\n    const /** @type {?} */ contextInjector = injector || this.parentInjector;\n    const /** @type {?} */ componentRef = componentFactory.create(contextInjector, projectableNodes);\n    this.insert(componentRef.hostView, index);\n    return componentRef;\n  }\n/**\n * @param {?} viewRef\n * @param {?=} index\n * @return {?}\n */\ninsert(viewRef: ViewRef, index?: number): ViewRef {\n    const /** @type {?} */ viewRef_ = /** @type {?} */(( <ViewRef_>viewRef));\n    const /** @type {?} */ viewData = viewRef_._view;\n    Services.attachEmbeddedView(this._data, index, viewData);\n    viewRef_.attachToViewContainerRef(this);\n    return viewRef;\n  }\n/**\n * @param {?} viewRef\n * @param {?} currentIndex\n * @return {?}\n */\nmove(viewRef: ViewRef_, currentIndex: number): ViewRef {\n    const /** @type {?} */ previousIndex = this._data.embeddedViews.indexOf(viewRef._view);\n    Services.moveEmbeddedView(this._data, previousIndex, currentIndex);\n    return viewRef;\n  }\n/**\n * @param {?} viewRef\n * @return {?}\n */\nindexOf(viewRef: ViewRef): number {\n    return this._data.embeddedViews.indexOf(( /** @type {?} */((<ViewRef_>viewRef)))._view);\n  }\n/**\n * @param {?=} index\n * @return {?}\n */\nremove(index?: number): void {\n    const /** @type {?} */ viewData = Services.detachEmbeddedView(this._data, index);\n    if (viewData) {\n      Services.destroyView(viewData);\n    }\n  }\n/**\n * @param {?=} index\n * @return {?}\n */\ndetach(index?: number): ViewRef {\n    const /** @type {?} */ view = Services.detachEmbeddedView(this._data, index);\n    if (view) {\n      const /** @type {?} */ viewRef = this._getViewRef(view);\n      viewRef.detachFromContainer();\n      return viewRef;\n    }\n    return null;\n  }\n}\n\nfunction ViewContainerRef__tsickle_Closure_declarations() {\n/** @type {?} */\nViewContainerRef_.prototype._data;\n/** @type {?} */\nViewContainerRef_.prototype._view;\n/** @type {?} */\nViewContainerRef_.prototype._elDef;\n}\n\n/**\n * @param {?} view\n * @return {?}\n */\nexport function createChangeDetectorRef(view: ViewData): ChangeDetectorRef {\n  return new ViewRef_(view);\n}\nexport class ViewRef_ implements EmbeddedViewRef<any>, InternalViewRef {\n  /** @internal */\n  _view: ViewData;\nprivate _viewContainerRef: ViewContainerRef;\nprivate _appRef: ApplicationRef;\n/**\n * @param {?} _view\n */\nconstructor(_view: ViewData) {\n    this._view = _view;\n    this._viewContainerRef = null;\n    this._appRef = null;\n  }\n/**\n * @return {?}\n */\nget rootNodes(): any[] { return rootRenderNodes(this._view); }\n/**\n * @return {?}\n */\nget context() { return this._view.context; }\n/**\n * @return {?}\n */\nget destroyed(): boolean { return (this._view.state & ViewState.Destroyed) !== 0; }\n/**\n * @return {?}\n */\nmarkForCheck(): void { this.reattach(); }\n/**\n * @return {?}\n */\ndetach(): void { this._view.state &= ~ViewState.ChecksEnabled; }\n/**\n * @return {?}\n */\ndetectChanges(): void { Services.checkAndUpdateView(this._view); }\n/**\n * @return {?}\n */\ncheckNoChanges(): void { Services.checkNoChangesView(this._view); }\n/**\n * @return {?}\n */\nreattach(): void { this._view.state |= ViewState.ChecksEnabled; }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function) {\n    if (!this._view.disposables) {\n      this._view.disposables = [];\n    }\n    this._view.disposables.push( /** @type {?} */((<any>callback)));\n  }\n/**\n * @return {?}\n */\ndestroy() {\n    if (this._appRef) {\n      this._appRef.detachView(this);\n    } else if (this._viewContainerRef) {\n      this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n    }\n    Services.destroyView(this._view);\n  }\n/**\n * @return {?}\n */\ndetachFromContainer() {\n    this._appRef = null;\n    this._viewContainerRef = null;\n  }\n/**\n * @param {?} appRef\n * @return {?}\n */\nattachToAppRef(appRef: ApplicationRef) {\n    if (this._viewContainerRef) {\n      throw new Error('This view is already attached to a ViewContainer!');\n    }\n    this._appRef = appRef;\n  }\n/**\n * @param {?} vcRef\n * @return {?}\n */\nattachToViewContainerRef(vcRef: ViewContainerRef) {\n    if (this._appRef) {\n      throw new Error('This view is already attached directly to the ApplicationRef!');\n    }\n    this._viewContainerRef = vcRef;\n  }\n}\n\nfunction ViewRef__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nViewRef_.prototype._view;\n/** @type {?} */\nViewRef_.prototype._viewContainerRef;\n/** @type {?} */\nViewRef_.prototype._appRef;\n}\n\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createTemplateRef(view: ViewData, def: NodeDef): TemplateRef<any> {\n  return new TemplateRef_(view, def);\n}\nclass TemplateRef_ implements TemplateRef<any> {\n/**\n * @param {?} _parentView\n * @param {?} _def\n */\nconstructor(private _parentView: ViewData,\nprivate _def: NodeDef) {}\n/**\n * @param {?} context\n * @return {?}\n */\ncreateEmbeddedView(context: any): EmbeddedViewRef<any> {\n    return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, context));\n  }\n/**\n * @return {?}\n */\nget elementRef(): ElementRef {\n    return new ElementRef(asElementData(this._parentView, this._def.index).renderElement);\n  }\n}\n\nfunction TemplateRef__tsickle_Closure_declarations() {\n/** @type {?} */\nTemplateRef_.prototype._parentView;\n/** @type {?} */\nTemplateRef_.prototype._def;\n}\n\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nexport function createInjector(view: ViewData, elDef: NodeDef): Injector {\n  return new Injector_(view, elDef);\n}\nclass Injector_ implements Injector {\n/**\n * @param {?} view\n * @param {?} elDef\n */\nconstructor(private view: ViewData,\nprivate elDef: NodeDef) {}\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n    const /** @type {?} */ allowPrivateServices = !!this.elDef.element.component;\n    return Services.resolveDep(\n        this.view, this.elDef, allowPrivateServices,\n        {flags: DepFlags.None, token, tokenKey: tokenKey(token)}, notFoundValue);\n  }\n}\n\nfunction Injector__tsickle_Closure_declarations() {\n/** @type {?} */\nInjector_.prototype.view;\n/** @type {?} */\nInjector_.prototype.elDef;\n}\n\n/**\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function nodeValue(view: ViewData, index: number): any {\n  const /** @type {?} */ def = view.def.nodes[index];\n  switch (def.type) {\n    case NodeType.Element:\n      if (def.element.template) {\n        return createTemplateRef(view, def);\n      } else {\n        return asElementData(view, def.index).renderElement;\n      }\n    case NodeType.Text:\n      return asTextData(view, def.index).renderText;\n    case NodeType.Directive:\n    case NodeType.Pipe:\n    case NodeType.Provider:\n      return asProviderData(view, def.index).instance;\n  }\n  return undefined;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function createRendererV1(view: ViewData): RendererV1 {\n  return new RendererAdapter(view.renderer);\n}\nclass RendererAdapter implements RendererV1 {\n/**\n * @param {?} delegate\n */\nconstructor(private delegate: RendererV2) {}\n/**\n * @param {?} selectorOrNode\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|Element): Element {\n    return this.delegate.selectRootElement(selectorOrNode);\n  }\n/**\n * @param {?} parent\n * @param {?} namespaceAndName\n * @return {?}\n */\ncreateElement(parent: Element|DocumentFragment, namespaceAndName: string): Element {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    const /** @type {?} */ el = this.delegate.createElement(name, ns);\n    if (parent) {\n      this.delegate.appendChild(parent, el);\n    }\n    return el;\n  }\n/**\n * @param {?} hostElement\n * @return {?}\n */\ncreateViewRoot(hostElement: Element): Element|DocumentFragment { return hostElement; }\n/**\n * @param {?} parentElement\n * @return {?}\n */\ncreateTemplateAnchor(parentElement: Element|DocumentFragment): Comment {\n    const /** @type {?} */ comment = this.delegate.createComment('');\n    if (parentElement) {\n      this.delegate.appendChild(parentElement, comment);\n    }\n    return comment;\n  }\n/**\n * @param {?} parentElement\n * @param {?} value\n * @return {?}\n */\ncreateText(parentElement: Element|DocumentFragment, value: string): any {\n    const /** @type {?} */ node = this.delegate.createText(value);\n    if (parentElement) {\n      this.delegate.appendChild(parentElement, node);\n    }\n    return node;\n  }\n/**\n * @param {?} parentElement\n * @param {?} nodes\n * @return {?}\n */\nprojectNodes(parentElement: Element|DocumentFragment, nodes: Node[]) {\n    for (let /** @type {?} */ i = 0; i < nodes.length; i++) {\n      this.delegate.appendChild(parentElement, nodes[i]);\n    }\n  }\n/**\n * @param {?} node\n * @param {?} viewRootNodes\n * @return {?}\n */\nattachViewAfter(node: Node, viewRootNodes: Node[]) {\n    const /** @type {?} */ parentElement = this.delegate.parentNode(node);\n    const /** @type {?} */ nextSibling = this.delegate.nextSibling(node);\n    for (let /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n      this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n    }\n  }\n/**\n * @param {?} viewRootNodes\n * @return {?}\n */\ndetachView(viewRootNodes: (Element|Text|Comment)[]) {\n    for (let /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n      const /** @type {?} */ node = viewRootNodes[i];\n      const /** @type {?} */ parentElement = this.delegate.parentNode(node);\n      this.delegate.removeChild(parentElement, node);\n    }\n  }\n/**\n * @param {?} hostElement\n * @param {?} viewAllNodes\n * @return {?}\n */\ndestroyView(hostElement: Element|DocumentFragment, viewAllNodes: Node[]) {\n    for (let /** @type {?} */ i = 0; i < viewAllNodes.length; i++) {\n      this.delegate.destroyNode(viewAllNodes[i]);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nlisten(renderElement: any, name: string, callback: Function): Function {\n    return this.delegate.listen(renderElement, name, /** @type {?} */(( <any>callback)));\n  }\n/**\n * @param {?} target\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nlistenGlobal(target: string, name: string, callback: Function): Function {\n    return this.delegate.listen(target, name, /** @type {?} */(( <any>callback)));\n  }\n/**\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nsetElementProperty(\n      renderElement: Element|DocumentFragment, propertyName: string, propertyValue: any): void {\n    this.delegate.setProperty(renderElement, propertyName, propertyValue);\n  }\n/**\n * @param {?} renderElement\n * @param {?} namespaceAndName\n * @param {?} attributeValue\n * @return {?}\n */\nsetElementAttribute(renderElement: Element, namespaceAndName: string, attributeValue: string):\n      void {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    if (attributeValue != null) {\n      this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n    } else {\n      this.delegate.removeAttribute(renderElement, name, ns);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nsetBindingDebugInfo(renderElement: Element, propertyName: string, propertyValue: string): void {}\n/**\n * @param {?} renderElement\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nsetElementClass(renderElement: Element, className: string, isAdd: boolean): void {\n    if (isAdd) {\n      this.delegate.addClass(renderElement, className);\n    } else {\n      this.delegate.removeClass(renderElement, className);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} styleName\n * @param {?} styleValue\n * @return {?}\n */\nsetElementStyle(renderElement: HTMLElement, styleName: string, styleValue: string): void {\n    if (styleValue != null) {\n      this.delegate.setStyle(renderElement, styleName, styleValue, false, false);\n    } else {\n      this.delegate.removeStyle(renderElement, styleName, false);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} methodName\n * @param {?} args\n * @return {?}\n */\ninvokeElementMethod(renderElement: Element, methodName: string, args: any[]): void {\n    ( /** @type {?} */((renderElement as any)))[methodName].apply(renderElement, args);\n  }\n/**\n * @param {?} renderNode\n * @param {?} text\n * @return {?}\n */\nsetText(renderNode: Text, text: string): void { this.delegate.setValue(renderNode, text); }\n/**\n * @return {?}\n */\nanimate(): NoOpAnimationPlayer { return new NoOpAnimationPlayer(); }\n}\n\nfunction RendererAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nRendererAdapter.prototype.delegate;\n}\n"]}