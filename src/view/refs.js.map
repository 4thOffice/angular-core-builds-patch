{"version":3,"sources":["../../../../../modules/@angular/core/src/view/refs.ts"],"names":[],"mappings":"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","file":"refs.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {Injectable, Injector} from '../di';\nimport {ComponentFactory, ComponentRef} from '../linker/component_factory';\nimport {ElementRef} from '../linker/element_ref';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {EmbeddedViewRef, ViewRef} from '../linker/view_ref';\nimport {RenderComponentType, Renderer, RootRenderer} from '../render/api';\nimport {Sanitizer, SecurityContext} from '../security';\nimport {Type} from '../type';\n\nimport {resolveDep, tokenKey} from './provider';\nimport {getQueryValue} from './query';\nimport {DebugContext, DepFlags, ElementData, NodeData, NodeDef, NodeType, Refs, RootData, ViewData, ViewDefinition, ViewDefinitionFactory, ViewState, asElementData, asProviderData} from './types';\nimport {findElementDef, isComponentView, parentDiIndex, renderNode, resolveViewDefinition, rootRenderNodes} from './util';\nimport {checkAndUpdateView, checkNoChangesView, createEmbeddedView, createRootView, destroyView} from './view';\nimport {attachEmbeddedView, detachEmbeddedView, moveEmbeddedView} from './view_attach';\n\nconst /** @type {?} */ EMPTY_CONTEXT = new Object();\n/**\n * @return {?}\n */\nexport function createRefs() {\n  return new Refs_();\n}\nexport class Refs_ implements Refs {\n/**\n * @param {?} selector\n * @param {?} viewDefFactory\n * @return {?}\n */\ncreateComponentFactory(selector: string, viewDefFactory: ViewDefinitionFactory):\n      ComponentFactory<any> {\n    return new ComponentFactory_(selector, viewDefFactory);\n  }\n/**\n * @param {?} data\n * @return {?}\n */\ncreateViewRef(data: ViewData): ViewRef { return new ViewRef_(data); }\n/**\n * @param {?} view\n * @param {?} elIndex\n * @return {?}\n */\ncreateViewContainerRef(view: ViewData, elIndex: number): ViewContainerRef {\n    return new ViewContainerRef_(view, elIndex);\n  }\n/**\n * @param {?} parentView\n * @param {?} def\n * @return {?}\n */\ncreateTemplateRef(parentView: ViewData, def: NodeDef): TemplateRef<any> {\n    return new TemplateRef_(parentView, def);\n  }\n/**\n * @param {?} view\n * @param {?} elIndex\n * @return {?}\n */\ncreateInjector(view: ViewData, elIndex: number): Injector { return new Injector_(view, elIndex); }\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\ncreateDebugContext(view: ViewData, nodeIndex: number): DebugContext {\n    return new DebugContext_(view, nodeIndex);\n  }\n}\nclass ComponentFactory_ implements ComponentFactory<any> {\n  /**\n   * Only needed so that we can implement ComponentFactory\n   * @internal */\n  _viewClass: any;\nprivate _viewDef: ViewDefinition;\nprivate _componentNodeIndex: number;\n/**\n * @param {?} selector\n * @param {?} viewDefFactory\n */\nconstructor(public selector: string, viewDefFactory: ViewDefinitionFactory) {\n    const viewDef = this._viewDef = resolveViewDefinition(viewDefFactory);\n    const len = viewDef.nodes.length;\n    for (let i = 0; i < len; i++) {\n      const nodeDef = viewDef.nodes[i];\n      if (nodeDef.provider && nodeDef.provider.component) {\n        this._componentNodeIndex = i;\n        break;\n      }\n    }\n    if (this._componentNodeIndex == null) {\n      throw new Error(`Illegal State: Could not find a component in the view definition!`);\n    }\n  }\n/**\n * @return {?}\n */\nget componentType(): Type<any> {\n    return this._viewDef.nodes[this._componentNodeIndex].provider.value;\n  }\n/**\n * Creates a new component.\n * @param {?} injector\n * @param {?=} projectableNodes\n * @param {?=} rootSelectorOrNode\n * @return {?}\n */\ncreate(\n      injector: Injector, projectableNodes: any[][] = null,\n      rootSelectorOrNode: string|any = null): ComponentRef<any> {\n    if (!projectableNodes) {\n      projectableNodes = [];\n    }\n    if (!rootSelectorOrNode) {\n      rootSelectorOrNode = this.selector;\n    }\n    const /** @type {?} */ renderer = injector.get(RootRenderer);\n    const /** @type {?} */ sanitizer = injector.get(Sanitizer);\n\n    const /** @type {?} */ root: RootData =\n        {injector, projectableNodes, selectorOrNode: rootSelectorOrNode, sanitizer, renderer};\n\n    const /** @type {?} */ view = createRootView(root, this._viewDef, EMPTY_CONTEXT);\n    const /** @type {?} */ component = asProviderData(view, this._componentNodeIndex).instance;\n    return new ComponentRef_(view, component);\n  }\n}\n\nfunction ComponentFactory__tsickle_Closure_declarations() {\n/**\n * Only needed so that we can implement ComponentFactory\n * \\@internal\n * @type {?}\n */\nComponentFactory_.prototype._viewClass;\n/** @type {?} */\nComponentFactory_.prototype._viewDef;\n/** @type {?} */\nComponentFactory_.prototype._componentNodeIndex;\n/** @type {?} */\nComponentFactory_.prototype.selector;\n}\n\nclass ComponentRef_ implements ComponentRef<any> {\nprivate _viewRef: ViewRef_;\n/**\n * @param {?} _view\n * @param {?} _component\n */\nconstructor(private _view: ViewData,\nprivate _component: any) {\n    this._viewRef = new ViewRef_(_view);\n  }\n/**\n * @return {?}\n */\nget location(): ElementRef { return new ElementRef(asElementData(this._view, 0).renderElement); }\n/**\n * @return {?}\n */\nget injector(): Injector { return new Injector_(this._view, 0); }\n/**\n * @return {?}\n */\nget instance(): any { return this._component; };\n/**\n * @return {?}\n */\nget hostView(): ViewRef { return this._viewRef; };\n/**\n * @return {?}\n */\nget changeDetectorRef(): ChangeDetectorRef { return this._viewRef; };\n/**\n * @return {?}\n */\nget componentType(): Type<any> { return /** @type {?} */(( <any>this._component.constructor)); }\n/**\n * @return {?}\n */\ndestroy(): void { this._viewRef.destroy(); }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function): void { this._viewRef.onDestroy(callback); }\n}\n\nfunction ComponentRef__tsickle_Closure_declarations() {\n/** @type {?} */\nComponentRef_.prototype._viewRef;\n/** @type {?} */\nComponentRef_.prototype._view;\n/** @type {?} */\nComponentRef_.prototype._component;\n}\n\nclass ViewContainerRef_ implements ViewContainerRef {\nprivate _data: ElementData;\n/**\n * @param {?} _view\n * @param {?} _elIndex\n */\nconstructor(private _view: ViewData,\nprivate _elIndex: number) {\n    this._data = asElementData(_view, _elIndex);\n  }\n/**\n * @return {?}\n */\nget element(): ElementRef { return new ElementRef(this._data.renderElement); }\n/**\n * @return {?}\n */\nget injector(): Injector { return new Injector_(this._view, this._elIndex); }\n/**\n * @return {?}\n */\nget parentInjector(): Injector {\n    let /** @type {?} */ view = this._view;\n    let /** @type {?} */ elIndex = view.def.nodes[this._elIndex].parent;\n    while (elIndex == null && view) {\n      elIndex = parentDiIndex(view);\n      view = view.parent;\n    }\n    return view ? new Injector_(view, elIndex) : this._view.root.injector;\n  }\n/**\n * @return {?}\n */\nclear(): void {\n    const /** @type {?} */ len = this._data.embeddedViews.length;\n    for (let /** @type {?} */ i = len - 1; i >= 0; i--) {\n      const /** @type {?} */ view = detachEmbeddedView(this._data, i);\n      destroyView(view);\n    }\n  }\n/**\n * @param {?} index\n * @return {?}\n */\nget(index: number): ViewRef { return new ViewRef_(this._data.embeddedViews[index]); }\n/**\n * @return {?}\n */\nget length(): number { return this._data.embeddedViews.length; };\n/**\n * @param {?} templateRef\n * @param {?=} context\n * @param {?=} index\n * @return {?}\n */\ncreateEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, index?: number):\n      EmbeddedViewRef<C> {\n    const /** @type {?} */ viewRef = templateRef.createEmbeddedView(context);\n    this.insert(viewRef, index);\n    return viewRef;\n  }\n/**\n * @param {?} componentFactory\n * @param {?=} index\n * @param {?=} injector\n * @param {?=} projectableNodes\n * @return {?}\n */\ncreateComponent<C>(\n      componentFactory: ComponentFactory<C>, index?: number, injector?: Injector,\n      projectableNodes?: any[][]): ComponentRef<C> {\n    const /** @type {?} */ contextInjector = injector || this.parentInjector;\n    const /** @type {?} */ componentRef = componentFactory.create(contextInjector, projectableNodes);\n    this.insert(componentRef.hostView, index);\n    return componentRef;\n  }\n/**\n * @param {?} viewRef\n * @param {?=} index\n * @return {?}\n */\ninsert(viewRef: ViewRef, index?: number): ViewRef {\n    const /** @type {?} */ viewData = ( /** @type {?} */((<ViewRef_>viewRef)))._view;\n    attachEmbeddedView(this._data, index, viewData);\n    return viewRef;\n  }\n/**\n * @param {?} viewRef\n * @param {?} currentIndex\n * @return {?}\n */\nmove(viewRef: ViewRef_, currentIndex: number): ViewRef {\n    const /** @type {?} */ previousIndex = this._data.embeddedViews.indexOf(viewRef._view);\n    moveEmbeddedView(this._data, previousIndex, currentIndex);\n    return viewRef;\n  }\n/**\n * @param {?} viewRef\n * @return {?}\n */\nindexOf(viewRef: ViewRef): number {\n    return this._data.embeddedViews.indexOf(( /** @type {?} */((<ViewRef_>viewRef)))._view);\n  }\n/**\n * @param {?=} index\n * @return {?}\n */\nremove(index?: number): void {\n    const /** @type {?} */ viewData = detachEmbeddedView(this._data, index);\n    destroyView(viewData);\n  }\n/**\n * @param {?=} index\n * @return {?}\n */\ndetach(index?: number): ViewRef {\n    const /** @type {?} */ view = this.get(index);\n    detachEmbeddedView(this._data, index);\n    return view;\n  }\n}\n\nfunction ViewContainerRef__tsickle_Closure_declarations() {\n/** @type {?} */\nViewContainerRef_.prototype._data;\n/** @type {?} */\nViewContainerRef_.prototype._view;\n/** @type {?} */\nViewContainerRef_.prototype._elIndex;\n}\n\nclass ViewRef_ implements EmbeddedViewRef<any> {\n  /** @internal */\n  _view: ViewData;\n/**\n * @param {?} _view\n */\nconstructor(_view: ViewData) { this._view = _view; }\n/**\n * @return {?}\n */\nget rootNodes(): any[] { return rootRenderNodes(this._view); }\n/**\n * @return {?}\n */\nget context() { return this._view.context; }\n/**\n * @return {?}\n */\nget destroyed(): boolean { return (this._view.state & ViewState.Destroyed) !== 0; }\n/**\n * @return {?}\n */\nmarkForCheck(): void { this.reattach(); }\n/**\n * @return {?}\n */\ndetach(): void { this._view.state &= ~ViewState.ChecksEnabled; }\n/**\n * @return {?}\n */\ndetectChanges(): void { checkAndUpdateView(this._view); }\n/**\n * @return {?}\n */\ncheckNoChanges(): void { checkNoChangesView(this._view); }\n/**\n * @return {?}\n */\nreattach(): void { this._view.state |= ViewState.ChecksEnabled; }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function) { this._view.disposables.push( /** @type {?} */((<any>callback))); }\n/**\n * @return {?}\n */\ndestroy() { destroyView(this._view); }\n}\n\nfunction ViewRef__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nViewRef_.prototype._view;\n}\n\nclass TemplateRef_ implements TemplateRef<any> {\n/**\n * @param {?} _parentView\n * @param {?} _def\n */\nconstructor(private _parentView: ViewData,\nprivate _def: NodeDef) {}\n/**\n * @param {?} context\n * @return {?}\n */\ncreateEmbeddedView(context: any): EmbeddedViewRef<any> {\n    return new ViewRef_(createEmbeddedView(this._parentView, this._def, context));\n  }\n/**\n * @return {?}\n */\nget elementRef(): ElementRef {\n    return new ElementRef(asElementData(this._parentView, this._def.index).renderElement);\n  }\n}\n\nfunction TemplateRef__tsickle_Closure_declarations() {\n/** @type {?} */\nTemplateRef_.prototype._parentView;\n/** @type {?} */\nTemplateRef_.prototype._def;\n}\n\nclass Injector_ implements Injector {\n/**\n * @param {?} view\n * @param {?} elIndex\n */\nconstructor(private view: ViewData,\nprivate elIndex: number) {}\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n    return resolveDep(\n        this.view, undefined, this.elIndex,\n        {flags: DepFlags.None, token, tokenKey: tokenKey(token)}, notFoundValue);\n  }\n}\n\nfunction Injector__tsickle_Closure_declarations() {\n/** @type {?} */\nInjector_.prototype.view;\n/** @type {?} */\nInjector_.prototype.elIndex;\n}\n\nclass DebugContext_ implements DebugContext {\nprivate nodeDef: NodeDef;\nprivate elDef: NodeDef;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n */\nconstructor(public view: ViewData,\npublic nodeIndex: number) {\n    if (nodeIndex == null) {\n      this.nodeIndex = nodeIndex = view.parentIndex;\n      this.view = view = view.parent;\n    }\n    this.nodeDef = view.def.nodes[nodeIndex];\n    this.elDef = findElementDef(view, nodeIndex);\n  }\n/**\n * @return {?}\n */\nget injector(): Injector { return new Injector_(this.view, this.elDef.index); }\n/**\n * @return {?}\n */\nget component(): any { return this.view.component; }\n/**\n * @return {?}\n */\nget providerTokens(): any[] {\n    const /** @type {?} */ tokens: any[] = [];\n    if (this.elDef) {\n      for (let /** @type {?} */ i = this.elDef.index + 1; i <= this.elDef.index + this.elDef.childCount; i++) {\n        const /** @type {?} */ childDef = this.view.def.nodes[i];\n        if (childDef.type === NodeType.Provider) {\n          tokens.push(childDef.provider.token);\n        } else {\n          i += childDef.childCount;\n        }\n      }\n    }\n    return tokens;\n  }\n/**\n * @return {?}\n */\nget references(): {[key: string]: any} {\n    const /** @type {?} */ references: {[key: string]: any} = {};\n    if (this.elDef) {\n      collectReferences(this.view, this.elDef, references);\n\n      for (let /** @type {?} */ i = this.elDef.index + 1; i <= this.elDef.index + this.elDef.childCount; i++) {\n        const /** @type {?} */ childDef = this.view.def.nodes[i];\n        if (childDef.type === NodeType.Provider) {\n          collectReferences(this.view, childDef, references);\n        } else {\n          i += childDef.childCount;\n        }\n      }\n    }\n    return references;\n  }\n/**\n * @return {?}\n */\nget context(): any { return this.view.context; }\n/**\n * @return {?}\n */\nget source(): string {\n    if (this.nodeDef.type === NodeType.Text) {\n      return this.nodeDef.text.source;\n    } else {\n      return this.elDef.element.source;\n    }\n  }\n/**\n * @return {?}\n */\nget componentRenderElement() {\n    const /** @type {?} */ elData = findHostElement(this.view);\n    return elData ? elData.renderElement : undefined;\n  }\n/**\n * @return {?}\n */\nget renderNode(): any {\n    let /** @type {?} */ nodeDef = this.nodeDef.type === NodeType.Text ? this.nodeDef : this.elDef;\n    return renderNode(this.view, nodeDef);\n  }\n}\n\nfunction DebugContext__tsickle_Closure_declarations() {\n/** @type {?} */\nDebugContext_.prototype.nodeDef;\n/** @type {?} */\nDebugContext_.prototype.elDef;\n/** @type {?} */\nDebugContext_.prototype.view;\n/** @type {?} */\nDebugContext_.prototype.nodeIndex;\n}\n\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view: ViewData): ElementData {\n  while (view && !isComponentView(view)) {\n    view = view.parent;\n  }\n  if (view.parent) {\n    const /** @type {?} */ hostData = asElementData(view.parent, view.parentIndex);\n    return hostData;\n  }\n  return undefined;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view: ViewData, nodeDef: NodeDef, references: {[key: string]: any}) {\n  for (let /** @type {?} */ queryId in nodeDef.matchedQueries) {\n    if (queryId.startsWith('#')) {\n      references[queryId.slice(1)] = getQueryValue(view, nodeDef, queryId);\n    }\n  }\n}"]}