{"version":3,"sources":["../../../../../modules/@angular/core/src/view/refs.ts"],"names":[],"mappings":"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","file":"refs.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isDevMode} from '../application_ref';\nimport {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {Injectable, Injector} from '../di';\nimport {ComponentFactory, ComponentRef} from '../linker/component_factory';\nimport {ElementRef} from '../linker/element_ref';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {EmbeddedViewRef, ViewRef} from '../linker/view_ref';\nimport * as v1renderer from '../render/api';\nimport {Sanitizer, SecurityContext} from '../security';\nimport {Type} from '../type';\n\nimport {DirectDomRenderer, LegacyRendererAdapter} from './renderer';\nimport {ArgumentType, BindingType, DebugContext, DepFlags, ElementData, NodeCheckFn, NodeData, NodeDef, NodeType, RendererV2, RootData, Services, ViewData, ViewDefinition, ViewDefinitionFactory, ViewState, asElementData, asProviderData} from './types';\nimport {findElementDef, isComponentView, parentDiIndex, renderNode, resolveViewDefinition, rootRenderNodes, tokenKey} from './util';\n\nconst /** @type {?} */ EMPTY_CONTEXT = new Object();\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @return {?}\n */\nexport function createComponentFactory(\n    selector: string, componentType: Type<any>,\n    viewDefFactory: ViewDefinitionFactory): ComponentFactory<any> {\n  return new ComponentFactory_(selector, componentType, viewDefFactory);\n}\nclass ComponentFactory_ implements ComponentFactory<any> {\n  /**\n   * We are not renaming this field as the old ComponentFactory is using it.\n   * @internal */\n  _viewClass: any;\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} _viewDefFactory\n */\nconstructor(\npublic selector: string,\npublic componentType: Type<any>,\n      _viewDefFactory: ViewDefinitionFactory) {\n    this._viewClass = _viewDefFactory;\n  }\n/**\n * Creates a new component.\n * @param {?} injector\n * @param {?=} projectableNodes\n * @param {?=} rootSelectorOrNode\n * @return {?}\n */\ncreate(\n      injector: Injector, projectableNodes: any[][] = null,\n      rootSelectorOrNode: string|any = null): ComponentRef<any> {\n    const /** @type {?} */ viewDef = resolveViewDefinition(this._viewClass);\n    let /** @type {?} */ componentNodeIndex: number;\n    const /** @type {?} */ len = viewDef.nodes.length;\n    for (let /** @type {?} */ i = 0; i < len; i++) {\n      const /** @type {?} */ nodeDef = viewDef.nodes[i];\n      if (nodeDef.provider && nodeDef.provider.component) {\n        componentNodeIndex = i;\n        break;\n      }\n    }\n    if (componentNodeIndex == null) {\n      throw new Error(`Illegal State: Could not find a component in the view definition!`);\n    }\n    const /** @type {?} */ view = Services.createRootView(\n        injector, projectableNodes || [], rootSelectorOrNode, viewDef, EMPTY_CONTEXT);\n    const /** @type {?} */ component = asProviderData(view, componentNodeIndex).instance;\n    return new ComponentRef_(view, new ViewRef_(view), component);\n  }\n}\n\nfunction ComponentFactory__tsickle_Closure_declarations() {\n/**\n * We are not renaming this field as the old ComponentFactory is using it.\n * \\@internal\n * @type {?}\n */\nComponentFactory_.prototype._viewClass;\n/** @type {?} */\nComponentFactory_.prototype.selector;\n/** @type {?} */\nComponentFactory_.prototype.componentType;\n}\n\nclass ComponentRef_ implements ComponentRef<any> {\n/**\n * @param {?} _view\n * @param {?} _viewRef\n * @param {?} _component\n */\nconstructor(private _view: ViewData,\nprivate _viewRef: ViewRef,\nprivate _component: any) {}\n/**\n * @return {?}\n */\nget location(): ElementRef { return new ElementRef(asElementData(this._view, 0).renderElement); }\n/**\n * @return {?}\n */\nget injector(): Injector { return new Injector_(this._view, 0); }\n/**\n * @return {?}\n */\nget instance(): any { return this._component; };\n/**\n * @return {?}\n */\nget hostView(): ViewRef { return this._viewRef; };\n/**\n * @return {?}\n */\nget changeDetectorRef(): ChangeDetectorRef { return this._viewRef; };\n/**\n * @return {?}\n */\nget componentType(): Type<any> { return /** @type {?} */(( <any>this._component.constructor)); }\n/**\n * @return {?}\n */\ndestroy(): void { this._viewRef.destroy(); }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function): void { this._viewRef.onDestroy(callback); }\n}\n\nfunction ComponentRef__tsickle_Closure_declarations() {\n/** @type {?} */\nComponentRef_.prototype._view;\n/** @type {?} */\nComponentRef_.prototype._viewRef;\n/** @type {?} */\nComponentRef_.prototype._component;\n}\n\n/**\n * @param {?} view\n * @param {?} elIndex\n * @return {?}\n */\nexport function createViewContainerRef(view: ViewData, elIndex: number): ViewContainerRef {\n  return new ViewContainerRef_(view, elIndex);\n}\nclass ViewContainerRef_ implements ViewContainerRef {\nprivate _data: ElementData;\n/**\n * @param {?} _view\n * @param {?} _elIndex\n */\nconstructor(private _view: ViewData,\nprivate _elIndex: number) {\n    this._data = asElementData(_view, _elIndex);\n  }\n/**\n * @return {?}\n */\nget element(): ElementRef { return new ElementRef(this._data.renderElement); }\n/**\n * @return {?}\n */\nget injector(): Injector { return new Injector_(this._view, this._elIndex); }\n/**\n * @return {?}\n */\nget parentInjector(): Injector {\n    let /** @type {?} */ view = this._view;\n    let /** @type {?} */ elIndex = view.def.nodes[this._elIndex].parent;\n    while (elIndex == null && view) {\n      elIndex = parentDiIndex(view);\n      view = view.parent;\n    }\n    return view ? new Injector_(view, elIndex) : this._view.root.injector;\n  }\n/**\n * @return {?}\n */\nclear(): void {\n    const /** @type {?} */ len = this._data.embeddedViews.length;\n    for (let /** @type {?} */ i = len - 1; i >= 0; i--) {\n      const /** @type {?} */ view = Services.detachEmbeddedView(this._data, i);\n      Services.destroyView(view);\n    }\n  }\n/**\n * @param {?} index\n * @return {?}\n */\nget(index: number): ViewRef { return new ViewRef_(this._data.embeddedViews[index]); }\n/**\n * @return {?}\n */\nget length(): number { return this._data.embeddedViews.length; };\n/**\n * @param {?} templateRef\n * @param {?=} context\n * @param {?=} index\n * @return {?}\n */\ncreateEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, index?: number):\n      EmbeddedViewRef<C> {\n    const /** @type {?} */ viewRef = templateRef.createEmbeddedView(context);\n    this.insert(viewRef, index);\n    return viewRef;\n  }\n/**\n * @param {?} componentFactory\n * @param {?=} index\n * @param {?=} injector\n * @param {?=} projectableNodes\n * @return {?}\n */\ncreateComponent<C>(\n      componentFactory: ComponentFactory<C>, index?: number, injector?: Injector,\n      projectableNodes?: any[][]): ComponentRef<C> {\n    const /** @type {?} */ contextInjector = injector || this.parentInjector;\n    const /** @type {?} */ componentRef = componentFactory.create(contextInjector, projectableNodes);\n    this.insert(componentRef.hostView, index);\n    return componentRef;\n  }\n/**\n * @param {?} viewRef\n * @param {?=} index\n * @return {?}\n */\ninsert(viewRef: ViewRef, index?: number): ViewRef {\n    const /** @type {?} */ viewData = ( /** @type {?} */((<ViewRef_>viewRef)))._view;\n    Services.attachEmbeddedView(this._data, index, viewData);\n    return viewRef;\n  }\n/**\n * @param {?} viewRef\n * @param {?} currentIndex\n * @return {?}\n */\nmove(viewRef: ViewRef_, currentIndex: number): ViewRef {\n    const /** @type {?} */ previousIndex = this._data.embeddedViews.indexOf(viewRef._view);\n    Services.moveEmbeddedView(this._data, previousIndex, currentIndex);\n    return viewRef;\n  }\n/**\n * @param {?} viewRef\n * @return {?}\n */\nindexOf(viewRef: ViewRef): number {\n    return this._data.embeddedViews.indexOf(( /** @type {?} */((<ViewRef_>viewRef)))._view);\n  }\n/**\n * @param {?=} index\n * @return {?}\n */\nremove(index?: number): void {\n    const /** @type {?} */ viewData = Services.detachEmbeddedView(this._data, index);\n    Services.destroyView(viewData);\n  }\n/**\n * @param {?=} index\n * @return {?}\n */\ndetach(index?: number): ViewRef {\n    const /** @type {?} */ view = this.get(index);\n    Services.detachEmbeddedView(this._data, index);\n    return view;\n  }\n}\n\nfunction ViewContainerRef__tsickle_Closure_declarations() {\n/** @type {?} */\nViewContainerRef_.prototype._data;\n/** @type {?} */\nViewContainerRef_.prototype._view;\n/** @type {?} */\nViewContainerRef_.prototype._elIndex;\n}\n\n/**\n * @param {?} view\n * @return {?}\n */\nexport function createChangeDetectorRef(view: ViewData): ChangeDetectorRef {\n  return new ViewRef_(view);\n}\nclass ViewRef_ implements EmbeddedViewRef<any> {\n  /** @internal */\n  _view: ViewData;\n/**\n * @param {?} _view\n */\nconstructor(_view: ViewData) { this._view = _view; }\n/**\n * @return {?}\n */\nget rootNodes(): any[] { return rootRenderNodes(this._view); }\n/**\n * @return {?}\n */\nget context() { return this._view.context; }\n/**\n * @return {?}\n */\nget destroyed(): boolean { return (this._view.state & ViewState.Destroyed) !== 0; }\n/**\n * @return {?}\n */\nmarkForCheck(): void { this.reattach(); }\n/**\n * @return {?}\n */\ndetach(): void { this._view.state &= ~ViewState.ChecksEnabled; }\n/**\n * @return {?}\n */\ndetectChanges(): void { Services.checkAndUpdateView(this._view); }\n/**\n * @return {?}\n */\ncheckNoChanges(): void { Services.checkNoChangesView(this._view); }\n/**\n * @return {?}\n */\nreattach(): void { this._view.state |= ViewState.ChecksEnabled; }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function) { this._view.disposables.push( /** @type {?} */((<any>callback))); }\n/**\n * @return {?}\n */\ndestroy() { Services.destroyView(this._view); }\n}\n\nfunction ViewRef__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nViewRef_.prototype._view;\n}\n\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createTemplateRef(view: ViewData, def: NodeDef): TemplateRef<any> {\n  return new TemplateRef_(view, def);\n}\nclass TemplateRef_ implements TemplateRef<any> {\n/**\n * @param {?} _parentView\n * @param {?} _def\n */\nconstructor(private _parentView: ViewData,\nprivate _def: NodeDef) {}\n/**\n * @param {?} context\n * @return {?}\n */\ncreateEmbeddedView(context: any): EmbeddedViewRef<any> {\n    return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, context));\n  }\n/**\n * @return {?}\n */\nget elementRef(): ElementRef {\n    return new ElementRef(asElementData(this._parentView, this._def.index).renderElement);\n  }\n}\n\nfunction TemplateRef__tsickle_Closure_declarations() {\n/** @type {?} */\nTemplateRef_.prototype._parentView;\n/** @type {?} */\nTemplateRef_.prototype._def;\n}\n\n/**\n * @param {?} view\n * @param {?} elIndex\n * @return {?}\n */\nexport function createInjector(view: ViewData, elIndex: number): Injector {\n  return new Injector_(view, elIndex);\n}\nclass Injector_ implements Injector {\n/**\n * @param {?} view\n * @param {?} elIndex\n */\nconstructor(private view: ViewData,\nprivate elIndex: number) {}\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n    return Services.resolveDep(\n        this.view, undefined, this.elIndex,\n        {flags: DepFlags.None, token, tokenKey: tokenKey(token)}, notFoundValue);\n  }\n}\n\nfunction Injector__tsickle_Closure_declarations() {\n/** @type {?} */\nInjector_.prototype.view;\n/** @type {?} */\nInjector_.prototype.elIndex;\n}\n\n"]}