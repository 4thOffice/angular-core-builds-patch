{"version":3,"sources":["../../../../../modules/@angular/core/src/view/refs.ts"],"names":[],"mappings":"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","file":"refs.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {Injector} from '../di';\nimport {ComponentFactory, ComponentRef} from '../linker/component_factory';\nimport {ElementRef} from '../linker/element_ref';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {EmbeddedViewRef, ViewRef} from '../linker/view_ref';\nimport {Type} from '../type';\n\nimport {ArgumentType, BindingType, DebugContext, DepFlags, ElementData, NodeCheckFn, NodeData, NodeDef, NodeFlags, NodeType, RootData, Services, ViewData, ViewDefinition, ViewDefinitionFactory, ViewState, asElementData, asProviderData} from './types';\nimport {isComponentView, renderNode, resolveViewDefinition, rootRenderNodes, tokenKey, viewParentEl} from './util';\n\nconst /** @type {?} */ EMPTY_CONTEXT = new Object();\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @return {?}\n */\nexport function createComponentFactory(\n    selector: string, componentType: Type<any>,\n    viewDefFactory: ViewDefinitionFactory): ComponentFactory<any> {\n  return new ComponentFactory_(selector, componentType, viewDefFactory);\n}\nclass ComponentFactory_ implements ComponentFactory<any> {\n  /**\n   * We are not renaming this field as the old ComponentFactory is using it.\n   * @internal */\n  _viewClass: any;\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} _viewDefFactory\n */\nconstructor(\npublic selector: string,\npublic componentType: Type<any>,\n      _viewDefFactory: ViewDefinitionFactory) {\n    this._viewClass = _viewDefFactory;\n  }\n/**\n * Creates a new component.\n * @param {?} injector\n * @param {?=} projectableNodes\n * @param {?=} rootSelectorOrNode\n * @return {?}\n */\ncreate(\n      injector: Injector, projectableNodes: any[][] = null,\n      rootSelectorOrNode: string|any = null): ComponentRef<any> {\n    const /** @type {?} */ viewDef = resolveViewDefinition(this._viewClass);\n    const /** @type {?} */ componentNodeIndex = viewDef.nodes[0].element.component.index;\n    const /** @type {?} */ view = Services.createRootView(\n        injector, projectableNodes || [], rootSelectorOrNode, viewDef, EMPTY_CONTEXT);\n    const /** @type {?} */ component = asProviderData(view, componentNodeIndex).instance;\n    return new ComponentRef_(view, new ViewRef_(view), component);\n  }\n}\n\nfunction ComponentFactory__tsickle_Closure_declarations() {\n/**\n * We are not renaming this field as the old ComponentFactory is using it.\n * \\@internal\n * @type {?}\n */\nComponentFactory_.prototype._viewClass;\n/** @type {?} */\nComponentFactory_.prototype.selector;\n/** @type {?} */\nComponentFactory_.prototype.componentType;\n}\n\nclass ComponentRef_ implements ComponentRef<any> {\nprivate _elDef: NodeDef;\n/**\n * @param {?} _view\n * @param {?} _viewRef\n * @param {?} _component\n */\nconstructor(private _view: ViewData,\nprivate _viewRef: ViewRef,\nprivate _component: any) {\n    this._elDef = this._view.def.nodes[0];\n  }\n/**\n * @return {?}\n */\nget location(): ElementRef {\n    return new ElementRef(asElementData(this._view, this._elDef.index).renderElement);\n  }\n/**\n * @return {?}\n */\nget injector(): Injector { return new Injector_(this._view, this._elDef); }\n/**\n * @return {?}\n */\nget instance(): any { return this._component; };\n/**\n * @return {?}\n */\nget hostView(): ViewRef { return this._viewRef; };\n/**\n * @return {?}\n */\nget changeDetectorRef(): ChangeDetectorRef { return this._viewRef; };\n/**\n * @return {?}\n */\nget componentType(): Type<any> { return /** @type {?} */(( <any>this._component.constructor)); }\n/**\n * @return {?}\n */\ndestroy(): void { this._viewRef.destroy(); }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function): void { this._viewRef.onDestroy(callback); }\n}\n\nfunction ComponentRef__tsickle_Closure_declarations() {\n/** @type {?} */\nComponentRef_.prototype._elDef;\n/** @type {?} */\nComponentRef_.prototype._view;\n/** @type {?} */\nComponentRef_.prototype._viewRef;\n/** @type {?} */\nComponentRef_.prototype._component;\n}\n\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nexport function createViewContainerRef(view: ViewData, elDef: NodeDef): ViewContainerRef {\n  return new ViewContainerRef_(view, elDef);\n}\nclass ViewContainerRef_ implements ViewContainerRef {\nprivate _data: ElementData;\n/**\n * @param {?} _view\n * @param {?} _elDef\n */\nconstructor(private _view: ViewData,\nprivate _elDef: NodeDef) {\n    this._data = asElementData(_view, _elDef.index);\n  }\n/**\n * @return {?}\n */\nget element(): ElementRef { return new ElementRef(this._data.renderElement); }\n/**\n * @return {?}\n */\nget injector(): Injector { return new Injector_(this._view, this._elDef); }\n/**\n * @return {?}\n */\nget parentInjector(): Injector {\n    let /** @type {?} */ view = this._view;\n    let /** @type {?} */ elDef = this._elDef.parent;\n    while (!elDef && view) {\n      elDef = viewParentEl(view);\n      view = view.parent;\n    }\n    return view ? new Injector_(view, elDef) : this._view.root.injector;\n  }\n/**\n * @return {?}\n */\nclear(): void {\n    const /** @type {?} */ len = this._data.embeddedViews.length;\n    for (let /** @type {?} */ i = len - 1; i >= 0; i--) {\n      const /** @type {?} */ view = Services.detachEmbeddedView(this._data, i);\n      Services.destroyView(view);\n    }\n  }\n/**\n * @param {?} index\n * @return {?}\n */\nget(index: number): ViewRef { return new ViewRef_(this._data.embeddedViews[index]); }\n/**\n * @return {?}\n */\nget length(): number { return this._data.embeddedViews.length; };\n/**\n * @param {?} templateRef\n * @param {?=} context\n * @param {?=} index\n * @return {?}\n */\ncreateEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, index?: number):\n      EmbeddedViewRef<C> {\n    const /** @type {?} */ viewRef = templateRef.createEmbeddedView(context || /** @type {?} */(( <any>{})));\n    this.insert(viewRef, index);\n    return viewRef;\n  }\n/**\n * @param {?} componentFactory\n * @param {?=} index\n * @param {?=} injector\n * @param {?=} projectableNodes\n * @return {?}\n */\ncreateComponent<C>(\n      componentFactory: ComponentFactory<C>, index?: number, injector?: Injector,\n      projectableNodes?: any[][]): ComponentRef<C> {\n    const /** @type {?} */ contextInjector = injector || this.parentInjector;\n    const /** @type {?} */ componentRef = componentFactory.create(contextInjector, projectableNodes);\n    this.insert(componentRef.hostView, index);\n    return componentRef;\n  }\n/**\n * @param {?} viewRef\n * @param {?=} index\n * @return {?}\n */\ninsert(viewRef: ViewRef, index?: number): ViewRef {\n    const /** @type {?} */ viewData = ( /** @type {?} */((<ViewRef_>viewRef)))._view;\n    Services.attachEmbeddedView(this._data, index, viewData);\n    return viewRef;\n  }\n/**\n * @param {?} viewRef\n * @param {?} currentIndex\n * @return {?}\n */\nmove(viewRef: ViewRef_, currentIndex: number): ViewRef {\n    const /** @type {?} */ previousIndex = this._data.embeddedViews.indexOf(viewRef._view);\n    Services.moveEmbeddedView(this._data, previousIndex, currentIndex);\n    return viewRef;\n  }\n/**\n * @param {?} viewRef\n * @return {?}\n */\nindexOf(viewRef: ViewRef): number {\n    return this._data.embeddedViews.indexOf(( /** @type {?} */((<ViewRef_>viewRef)))._view);\n  }\n/**\n * @param {?=} index\n * @return {?}\n */\nremove(index?: number): void {\n    const /** @type {?} */ viewData = Services.detachEmbeddedView(this._data, index);\n    Services.destroyView(viewData);\n  }\n/**\n * @param {?=} index\n * @return {?}\n */\ndetach(index?: number): ViewRef {\n    const /** @type {?} */ view = this.get(index);\n    Services.detachEmbeddedView(this._data, index);\n    return view;\n  }\n}\n\nfunction ViewContainerRef__tsickle_Closure_declarations() {\n/** @type {?} */\nViewContainerRef_.prototype._data;\n/** @type {?} */\nViewContainerRef_.prototype._view;\n/** @type {?} */\nViewContainerRef_.prototype._elDef;\n}\n\n/**\n * @param {?} view\n * @return {?}\n */\nexport function createChangeDetectorRef(view: ViewData): ChangeDetectorRef {\n  return new ViewRef_(view);\n}\nclass ViewRef_ implements EmbeddedViewRef<any> {\n  /** @internal */\n  _view: ViewData;\n/**\n * @param {?} _view\n */\nconstructor(_view: ViewData) { this._view = _view; }\n/**\n * @return {?}\n */\nget rootNodes(): any[] { return rootRenderNodes(this._view); }\n/**\n * @return {?}\n */\nget context() { return this._view.context; }\n/**\n * @return {?}\n */\nget destroyed(): boolean { return (this._view.state & ViewState.Destroyed) !== 0; }\n/**\n * @return {?}\n */\nmarkForCheck(): void { this.reattach(); }\n/**\n * @return {?}\n */\ndetach(): void { this._view.state &= ~ViewState.ChecksEnabled; }\n/**\n * @return {?}\n */\ndetectChanges(): void { Services.checkAndUpdateView(this._view); }\n/**\n * @return {?}\n */\ncheckNoChanges(): void { Services.checkNoChangesView(this._view); }\n/**\n * @return {?}\n */\nreattach(): void { this._view.state |= ViewState.ChecksEnabled; }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function) { this._view.disposables.push( /** @type {?} */((<any>callback))); }\n/**\n * @return {?}\n */\ndestroy() { Services.destroyView(this._view); }\n}\n\nfunction ViewRef__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nViewRef_.prototype._view;\n}\n\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createTemplateRef(view: ViewData, def: NodeDef): TemplateRef<any> {\n  return new TemplateRef_(view, def);\n}\nclass TemplateRef_ implements TemplateRef<any> {\n/**\n * @param {?} _parentView\n * @param {?} _def\n */\nconstructor(private _parentView: ViewData,\nprivate _def: NodeDef) {}\n/**\n * @param {?} context\n * @return {?}\n */\ncreateEmbeddedView(context: any): EmbeddedViewRef<any> {\n    return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, context));\n  }\n/**\n * @return {?}\n */\nget elementRef(): ElementRef {\n    return new ElementRef(asElementData(this._parentView, this._def.index).renderElement);\n  }\n}\n\nfunction TemplateRef__tsickle_Closure_declarations() {\n/** @type {?} */\nTemplateRef_.prototype._parentView;\n/** @type {?} */\nTemplateRef_.prototype._def;\n}\n\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nexport function createInjector(view: ViewData, elDef: NodeDef): Injector {\n  return new Injector_(view, elDef);\n}\nclass Injector_ implements Injector {\n/**\n * @param {?} view\n * @param {?} elDef\n */\nconstructor(private view: ViewData,\nprivate elDef: NodeDef) {}\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n    return Services.resolveDep(\n        this.view, this.elDef, true, {flags: DepFlags.None, token, tokenKey: tokenKey(token)},\n        notFoundValue);\n  }\n}\n\nfunction Injector__tsickle_Closure_declarations() {\n/** @type {?} */\nInjector_.prototype.view;\n/** @type {?} */\nInjector_.prototype.elDef;\n}\n\n"]}