{"version":3,"sources":["../../../../../modules/@angular/core/src/view/services.ts"],"names":[],"mappings":"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","file":"services.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isDevMode} from '../application_ref';\nimport {Injectable, Injector} from '../di';\nimport {looseIdentical} from '../facade/lang';\nimport {ElementRef} from '../linker/element_ref';\nimport * as v1renderer from '../render/api';\nimport {Sanitizer, SecurityContext} from '../security';\nimport {Type} from '../type';\n\nimport {isViewDebugError, viewDestroyedError, viewWrappedDebugError} from './errors';\nimport {resolveDep} from './provider';\nimport {getQueryValue} from './query';\nimport {createInjector} from './refs';\nimport {DirectDomRenderer, LegacyRendererAdapter} from './renderer';\nimport {ArgumentType, BindingType, DebugContext, DepFlags, ElementData, NodeCheckFn, NodeData, NodeDef, NodeType, RendererV2, RootData, Services, ViewData, ViewDefinition, ViewDefinitionFactory, ViewState, asElementData, asProviderData} from './types';\nimport {checkBinding, findElementDef, isComponentView, parentDiIndex, renderNode, resolveViewDefinition, rootRenderNodes} from './util';\nimport {checkAndUpdateView, checkNoChangesView, createEmbeddedView, createRootView, destroyView} from './view';\nimport {attachEmbeddedView, detachEmbeddedView, moveEmbeddedView} from './view_attach';\n\nlet /** @type {?} */ initialized = false;\n/**\n * @return {?}\n */\nexport function initServicesIfNeeded() {\n  if (initialized) {\n    return;\n  }\n  initialized = true;\n  const /** @type {?} */ services = isDevMode() ? createDebugServices() : createProdServices();\n  Services.setCurrentNode = services.setCurrentNode;\n  Services.createRootView = services.createRootView;\n  Services.createEmbeddedView = services.createEmbeddedView;\n  Services.checkAndUpdateView = services.checkAndUpdateView;\n  Services.checkNoChangesView = services.checkNoChangesView;\n  Services.destroyView = services.destroyView;\n  Services.attachEmbeddedView = services.attachEmbeddedView,\n  Services.detachEmbeddedView = services.detachEmbeddedView,\n  Services.moveEmbeddedView = services.moveEmbeddedView;\n  Services.resolveDep = services.resolveDep;\n  Services.createDebugContext = services.createDebugContext;\n  Services.handleEvent = services.handleEvent;\n  Services.updateView = services.updateView;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n  return {\n    setCurrentNode: () => {},\n    createRootView: createProdRootView,\n    createEmbeddedView: createEmbeddedView,\n    checkAndUpdateView: checkAndUpdateView,\n    checkNoChangesView: checkNoChangesView,\n    destroyView: destroyView,\n    attachEmbeddedView: attachEmbeddedView,\n    detachEmbeddedView: detachEmbeddedView,\n    moveEmbeddedView: moveEmbeddedView,\n    resolveDep: resolveDep,\n    createDebugContext: (view: ViewData, nodeIndex: number) => new DebugContext_(view, nodeIndex),\n    handleEvent: (view: ViewData, nodeIndex: number, eventName: string, event: any) =>\n                     view.def.handleEvent(view, nodeIndex, eventName, event),\n    updateView: (check: NodeCheckFn, view: ViewData) => view.def.update(check, view)\n  };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n  return {\n    setCurrentNode: debugSetCurrentNode,\n    createRootView: debugCreateRootView,\n    createEmbeddedView: debugCreateEmbeddedView,\n    checkAndUpdateView: debugCheckAndUpdateView,\n    checkNoChangesView: debugCheckNoChangesView,\n    destroyView: debugDestroyView,\n    attachEmbeddedView: attachEmbeddedView,\n    detachEmbeddedView: detachEmbeddedView,\n    moveEmbeddedView: moveEmbeddedView,\n    resolveDep: resolveDep,\n    createDebugContext: (view: ViewData, nodeIndex: number) => new DebugContext_(view, nodeIndex),\n    handleEvent: debugHandleEvent,\n    updateView: debugUpdateView\n  };\n}\n/**\n * @param {?} injector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(\n    injector: Injector, projectableNodes: any[][], rootSelectorOrNode: string | any,\n    def: ViewDefinition, context?: any): ViewData {\n  return createRootView(\n      createRootData(injector, projectableNodes, rootSelectorOrNode), def, context);\n}\n/**\n * @param {?} injector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(\n    injector: Injector, projectableNodes: any[][], rootSelectorOrNode: string | any,\n    def: ViewDefinition, context?: any): ViewData {\n  const /** @type {?} */ root = createRootData(injector, projectableNodes, rootSelectorOrNode);\n  const /** @type {?} */ debugRoot: RootData = {\n    injector: root.injector,\n    projectableNodes: root.projectableNodes,\n    element: root.element,\n    renderer: new DebugRenderer(root.renderer),\n    sanitizer: root.sanitizer\n  };\n  return callWithDebugContext('create', createRootView, null, [debugRoot, def, context]);\n}\n/**\n * @param {?} injector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(\n    injector: Injector, projectableNodes: any[][], rootSelectorOrNode: any): RootData {\n  const /** @type {?} */ sanitizer = injector.get(Sanitizer);\n  // TODO(tbosch): once the new renderer interface is implemented via platform-browser,\n  // just get it via the injector and drop LegacyRendererAdapter and DirectDomRenderer.\n  const /** @type {?} */ renderer = isDevMode() ? new LegacyRendererAdapter(injector.get(v1renderer.RootRenderer)) :\n                                 new DirectDomRenderer();\n  const /** @type {?} */ rootElement =\n      rootSelectorOrNode ? renderer.selectRootElement(rootSelectorOrNode) : undefined;\n  return {injector, projectableNodes, element: rootElement, sanitizer, renderer};\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(parent: ViewData, anchorDef: NodeDef, context?: any): ViewData {\n  return callWithDebugContext('create', createEmbeddedView, null, [parent, anchorDef, context]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view: ViewData) {\n  return callWithDebugContext('detectChanges', checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view: ViewData) {\n  return callWithDebugContext('checkNoChanges', checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view: ViewData) {\n  return callWithDebugContext('destroyView', destroyView, null, [view]);\n}\n\n\nlet /** @type {?} */ _currentAction: string;\nlet /** @type {?} */ _currentView: ViewData;\nlet /** @type {?} */ _currentNodeIndex: number;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view: ViewData, nodeIndex: number) {\n  _currentView = view;\n  _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view: ViewData, nodeIndex: number, eventName: string, event: any) {\n  if (view.state & ViewState.Destroyed) {\n    throw viewDestroyedError(_currentAction);\n  }\n  debugSetCurrentNode(view, nodeIndex);\n  return callWithDebugContext(\n      'handleEvent', view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} check\n * @param {?} view\n * @return {?}\n */\nfunction debugUpdateView(check: NodeCheckFn, view: ViewData) {\n  if (view.state & ViewState.Destroyed) {\n    throw viewDestroyedError(_currentAction);\n  }\n  debugSetCurrentNode(view, nextNodeIndexWithBinding(view, 0));\n  return view.def.update(debugCheckFn, view);\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction debugCheckFn(\n      view: ViewData, nodeIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n      v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any) {\n    const /** @type {?} */ values = argStyle === ArgumentType.Dynamic ? v0 : [].slice.call(arguments, 3);\n    const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n    for (let /** @type {?} */ i = 0; i < nodeDef.bindings.length; i++) {\n      const /** @type {?} */ binding = nodeDef.bindings[i];\n      const /** @type {?} */ value = values[i];\n      if ((binding.type === BindingType.ElementProperty ||\n           binding.type === BindingType.ProviderProperty) &&\n          checkBinding(view, nodeDef, i, value)) {\n        const /** @type {?} */ elIndex = nodeDef.type === NodeType.Provider ? nodeDef.parent : nodeDef.index;\n        setBindingDebugInfo(\n            view.root.renderer, asElementData(view, elIndex).renderElement, binding.nonMinifiedName,\n            value);\n      }\n    }\n    const /** @type {?} */ result = check(view, nodeIndex, /** @type {?} */(( <any>argStyle)), v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n\n    debugSetCurrentNode(view, nextNodeIndexWithBinding(view, nodeIndex));\n    return result;\n  };\n}\n/**\n * @param {?} renderer\n * @param {?} renderNode\n * @param {?} propName\n * @param {?} value\n * @return {?}\n */\nfunction setBindingDebugInfo(renderer: RendererV2, renderNode: any, propName: string, value: any) {\n  try {\n    renderer.setAttribute(\n        renderNode, `ng-reflect-${camelCaseToDashCase(propName)}`, value ? value.toString() : null);\n  } catch ( /** @type {?} */e) {\n    renderer.setAttribute(\n        renderNode, `ng-reflect-${camelCaseToDashCase(propName)}`,\n        '[ERROR] Exception while trying to serialize the value');\n  }\n}\n\nconst /** @type {?} */ CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input: string): string {\n  return input.replace(CAMEL_CASE_REGEXP, (...m: any[]) => '-' + m[1].toLowerCase());\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextNodeIndexWithBinding(view: ViewData, nodeIndex: number): number {\n  for (let /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if (nodeDef.bindings && nodeDef.bindings.length) {\n      return i;\n    }\n  }\n  return undefined;\n}\nclass DebugRenderer implements RendererV2 {\n/**\n * @param {?} _delegate\n */\nconstructor(private _delegate: RendererV2) {}\n/**\n * @param {?} name\n * @return {?}\n */\ncreateElement(name: string): any {\n    return this._delegate.createElement(name, getCurrentDebugContext());\n  }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateComment(value: string): any {\n    return this._delegate.createComment(value, getCurrentDebugContext());\n  }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateText(value: string): any {\n    return this._delegate.createText(value, getCurrentDebugContext());\n  }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @return {?}\n */\nappendChild(parent: any, newChild: any): void {\n    return this._delegate.appendChild(parent, newChild);\n  }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @param {?} refChild\n * @return {?}\n */\ninsertBefore(parent: any, newChild: any, refChild: any): void {\n    return this._delegate.insertBefore(parent, newChild, refChild);\n  }\n/**\n * @param {?} parent\n * @param {?} oldChild\n * @return {?}\n */\nremoveChild(parent: any, oldChild: any): void {\n    return this._delegate.removeChild(parent, oldChild);\n  }\n/**\n * @param {?} selectorOrNode\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|any): any {\n    return this._delegate.selectRootElement(selectorOrNode, getCurrentDebugContext());\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nparentNode(node: any): any { return this._delegate.parentNode(node); }\n/**\n * @param {?} node\n * @return {?}\n */\nnextSibling(node: any): any { return this._delegate.nextSibling(node); }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetAttribute(el: any, name: string, value: string): void {\n    return this._delegate.setAttribute(el, name, value);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\nremoveAttribute(el: any, name: string): void { return this._delegate.removeAttribute(el, name); }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\naddClass(el: any, name: string): void { return this._delegate.addClass(el, name); }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\nremoveClass(el: any, name: string): void { return this._delegate.removeClass(el, name); }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} value\n * @return {?}\n */\nsetStyle(el: any, style: string, value: any): void {\n    return this._delegate.setStyle(el, style, value);\n  }\n/**\n * @param {?} el\n * @param {?} style\n * @return {?}\n */\nremoveStyle(el: any, style: string): void { return this._delegate.removeStyle(el, style); }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetProperty(el: any, name: string, value: any): void {\n    return this._delegate.setProperty(el, name, value);\n  }\n/**\n * @param {?} node\n * @param {?} value\n * @return {?}\n */\nsetText(node: any, value: string): void { return this._delegate.setText(node, value); }\n/**\n * @param {?} target\n * @param {?} eventName\n * @param {?} callback\n * @return {?}\n */\nlisten(target: 'window'|'document'|any, eventName: string, callback: (event: any) => boolean):\n      () => void {\n    return this._delegate.listen(target, eventName, callback);\n  }\n}\n\nfunction DebugRenderer_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugRenderer.prototype._delegate;\n}\n\nclass DebugContext_ implements DebugContext {\nprivate nodeDef: NodeDef;\nprivate elDef: NodeDef;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n */\nconstructor(public view: ViewData,\npublic nodeIndex: number) {\n    if (nodeIndex == null) {\n      this.nodeIndex = nodeIndex = view.parentIndex;\n      this.view = view = view.parent;\n    }\n    this.nodeDef = view.def.nodes[nodeIndex];\n    this.elDef = findElementDef(view, nodeIndex);\n  }\n/**\n * @return {?}\n */\nget injector(): Injector { return createInjector(this.view, this.elDef.index); }\n/**\n * @return {?}\n */\nget component(): any { return this.view.component; }\n/**\n * @return {?}\n */\nget providerTokens(): any[] {\n    const /** @type {?} */ tokens: any[] = [];\n    if (this.elDef) {\n      for (let /** @type {?} */ i = this.elDef.index + 1; i <= this.elDef.index + this.elDef.childCount; i++) {\n        const /** @type {?} */ childDef = this.view.def.nodes[i];\n        if (childDef.type === NodeType.Provider) {\n          tokens.push(childDef.provider.token);\n        } else {\n          i += childDef.childCount;\n        }\n      }\n    }\n    return tokens;\n  }\n/**\n * @return {?}\n */\nget references(): {[key: string]: any} {\n    const /** @type {?} */ references: {[key: string]: any} = {};\n    if (this.elDef) {\n      collectReferences(this.view, this.elDef, references);\n\n      for (let /** @type {?} */ i = this.elDef.index + 1; i <= this.elDef.index + this.elDef.childCount; i++) {\n        const /** @type {?} */ childDef = this.view.def.nodes[i];\n        if (childDef.type === NodeType.Provider) {\n          collectReferences(this.view, childDef, references);\n        } else {\n          i += childDef.childCount;\n        }\n      }\n    }\n    return references;\n  }\n/**\n * @return {?}\n */\nget context(): any { return this.view.context; }\n/**\n * @return {?}\n */\nget source(): string {\n    if (this.nodeDef.type === NodeType.Text) {\n      return this.nodeDef.text.source;\n    } else {\n      return this.elDef.element.source;\n    }\n  }\n/**\n * @return {?}\n */\nget componentRenderElement() {\n    const /** @type {?} */ elData = findHostElement(this.view);\n    return elData ? elData.renderElement : undefined;\n  }\n/**\n * @return {?}\n */\nget renderNode(): any {\n    let /** @type {?} */ nodeDef = this.nodeDef.type === NodeType.Text ? this.nodeDef : this.elDef;\n    return renderNode(this.view, nodeDef);\n  }\n}\n\nfunction DebugContext__tsickle_Closure_declarations() {\n/** @type {?} */\nDebugContext_.prototype.nodeDef;\n/** @type {?} */\nDebugContext_.prototype.elDef;\n/** @type {?} */\nDebugContext_.prototype.view;\n/** @type {?} */\nDebugContext_.prototype.nodeIndex;\n}\n\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view: ViewData): ElementData {\n  while (view && !isComponentView(view)) {\n    view = view.parent;\n  }\n  if (view.parent) {\n    const /** @type {?} */ hostData = asElementData(view.parent, view.parentIndex);\n    return hostData;\n  }\n  return undefined;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view: ViewData, nodeDef: NodeDef, references: {[key: string]: any}) {\n  for (let /** @type {?} */ queryId in nodeDef.matchedQueries) {\n    if (queryId.startsWith('#')) {\n      references[queryId.slice(1)] = getQueryValue(view, nodeDef, queryId);\n    }\n  }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action: string, fn: any, self: any, args: any[]) {\n  const /** @type {?} */ oldAction = _currentAction;\n  const /** @type {?} */ oldView = _currentView;\n  const /** @type {?} */ oldNodeIndex = _currentNodeIndex;\n  try {\n    _currentAction = action;\n    const /** @type {?} */ result = fn.apply(self, args);\n    _currentView = oldView;\n    _currentNodeIndex = oldNodeIndex;\n    _currentAction = oldAction;\n    return result;\n  } catch ( /** @type {?} */e) {\n    if (isViewDebugError(e) || !_currentView) {\n      throw e;\n    }\n    throw viewWrappedDebugError(e, getCurrentDebugContext());\n  }\n}\n/**\n * @return {?}\n */\nfunction getCurrentDebugContext() {\n  return new DebugContext_(_currentView, _currentNodeIndex);\n}"]}