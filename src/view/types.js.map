{"version":3,"sources":["../../../../../modules/@angular/core/src/view/types.ts"],"names":[],"mappings":"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","file":"types.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PipeTransform} from '../change_detection/change_detection';\nimport {Injector} from '../di';\nimport {ComponentFactory} from '../linker/component_factory';\nimport {QueryList} from '../linker/query_list';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {ViewRef} from '../linker/view_ref';\nimport {RenderComponentType, RenderDebugInfo, Renderer, RootRenderer} from '../render/api';\nimport {Sanitizer, SecurityContext} from '../security';\n\n// -------------------------------------\n// Defs\n// -------------------------------------\n\nexport interface ViewDefinition {\n  flags: ViewFlags;\n  componentType: RenderComponentType;\n  update: ViewUpdateFn;\n  handleEvent: ViewHandleEventFn;\n  /**\n   * Order: Depth first.\n   * Especially providers are before elements / anchors.\n   */\n  nodes: NodeDef[];\n  /** aggregated NodeFlags for all nodes **/\n  nodeFlags: NodeFlags;\n  /**\n   * Order: parents before children, but children in reverse order.\n   * Especially providers are after elements / anchors.\n   */\n  reverseChildNodes: NodeDef[];\n  lastRootNode: NodeDef;\n  bindingCount: number;\n  disposableCount: number;\n  /**\n   * ids of all queries that are matched by one of the nodes.\n   * This includes query ids from templates as well.\n   */\n  nodeMatchedQueries: {[queryId: string]: boolean};\n}\n\nexport type ViewDefinitionFactory = () => ViewDefinition;\n\nexport type ViewUpdateFn = (view: ViewData) => void;\n\nexport type ViewHandleEventFn =\n    (view: ViewData, nodeIndex: number, eventName: string, event: any) => boolean;\nexport type ViewFlags = number;\nexport let ViewFlags: any = {};\nViewFlags.None = 0;\nViewFlags.DirectDom = 2;\nViewFlags.OnPush = 4;\nViewFlags[ViewFlags.None] = \"None\";\nViewFlags[ViewFlags.DirectDom] = \"DirectDom\";\nViewFlags[ViewFlags.OnPush] = \"OnPush\";\n\n\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n */\nexport interface NodeDef {\n  type: NodeType;\n  index: number;\n  reverseChildIndex: number;\n  flags: NodeFlags;\n  parent: number;\n  /** this is checked against NgContentDef.index to find matched nodes */\n  ngContentIndex: number;\n  /** number of transitive children */\n  childCount: number;\n  /** aggregated NodeFlags for all children **/\n  childFlags: NodeFlags;\n\n  bindingIndex: number;\n  bindings: BindingDef[];\n  disposableIndex: number;\n  disposableCount: number;\n  /**\n   * ids and value types of all queries that are matched by this node.\n   */\n  matchedQueries: {[queryId: string]: QueryValueType};\n  /**\n   * ids of all queries that are matched by one of the child nodes.\n   * This includes query ids from templates as well.\n   */\n  childMatchedQueries: {[queryId: string]: boolean};\n  element: ElementDef;\n  provider: ProviderDef;\n  text: TextDef;\n  pureExpression: PureExpressionDef;\n  query: QueryDef;\n  ngContent: NgContentDef;\n}\nexport type NodeType = number;\nexport let NodeType: any = {};\nNodeType.Element = 0;\nNodeType.Text = 1;\nNodeType.Provider = 2;\nNodeType.PureExpression = 3;\nNodeType.Query = 4;\nNodeType.NgContent = 5;\nNodeType[NodeType.Element] = \"Element\";\nNodeType[NodeType.Text] = \"Text\";\nNodeType[NodeType.Provider] = \"Provider\";\nNodeType[NodeType.PureExpression] = \"PureExpression\";\nNodeType[NodeType.Query] = \"Query\";\nNodeType[NodeType.NgContent] = \"NgContent\";\n\nexport type NodeFlags = number;\nexport let NodeFlags: any = {};\nNodeFlags.None = 0;\nNodeFlags.OnInit = 1;\nNodeFlags.OnDestroy = 2;\nNodeFlags.DoCheck = 4;\nNodeFlags.OnChanges = 8;\nNodeFlags.AfterContentInit = 16;\nNodeFlags.AfterContentChecked = 32;\nNodeFlags.AfterViewInit = 64;\nNodeFlags.AfterViewChecked = 128;\nNodeFlags.HasEmbeddedViews = 256;\nNodeFlags.HasComponent = 512;\nNodeFlags.HasContentQuery = 1024;\nNodeFlags.HasViewQuery = 2048;\nNodeFlags.LazyProvider = 4096;\nNodeFlags[NodeFlags.None] = \"None\";\nNodeFlags[NodeFlags.OnInit] = \"OnInit\";\nNodeFlags[NodeFlags.OnDestroy] = \"OnDestroy\";\nNodeFlags[NodeFlags.DoCheck] = \"DoCheck\";\nNodeFlags[NodeFlags.OnChanges] = \"OnChanges\";\nNodeFlags[NodeFlags.AfterContentInit] = \"AfterContentInit\";\nNodeFlags[NodeFlags.AfterContentChecked] = \"AfterContentChecked\";\nNodeFlags[NodeFlags.AfterViewInit] = \"AfterViewInit\";\nNodeFlags[NodeFlags.AfterViewChecked] = \"AfterViewChecked\";\nNodeFlags[NodeFlags.HasEmbeddedViews] = \"HasEmbeddedViews\";\nNodeFlags[NodeFlags.HasComponent] = \"HasComponent\";\nNodeFlags[NodeFlags.HasContentQuery] = \"HasContentQuery\";\nNodeFlags[NodeFlags.HasViewQuery] = \"HasViewQuery\";\nNodeFlags[NodeFlags.LazyProvider] = \"LazyProvider\";\n\n\nexport interface BindingDef {\n  type: BindingType;\n  name: string;\n  nonMinifiedName: string;\n  securityContext: SecurityContext;\n  suffix: string;\n}\nexport type BindingType = number;\nexport let BindingType: any = {};\nBindingType.ElementAttribute = 0;\nBindingType.ElementClass = 1;\nBindingType.ElementStyle = 2;\nBindingType.ElementProperty = 3;\nBindingType.ProviderProperty = 4;\nBindingType.Interpolation = 5;\nBindingType.PureExpressionProperty = 6;\nBindingType[BindingType.ElementAttribute] = \"ElementAttribute\";\nBindingType[BindingType.ElementClass] = \"ElementClass\";\nBindingType[BindingType.ElementStyle] = \"ElementStyle\";\nBindingType[BindingType.ElementProperty] = \"ElementProperty\";\nBindingType[BindingType.ProviderProperty] = \"ProviderProperty\";\nBindingType[BindingType.Interpolation] = \"Interpolation\";\nBindingType[BindingType.PureExpressionProperty] = \"PureExpressionProperty\";\n\nexport type QueryValueType = number;\nexport let QueryValueType: any = {};\nQueryValueType.ElementRef = 0;\nQueryValueType.RenderElement = 1;\nQueryValueType.TemplateRef = 2;\nQueryValueType.ViewContainerRef = 3;\nQueryValueType.Provider = 4;\nQueryValueType[QueryValueType.ElementRef] = \"ElementRef\";\nQueryValueType[QueryValueType.RenderElement] = \"RenderElement\";\nQueryValueType[QueryValueType.TemplateRef] = \"TemplateRef\";\nQueryValueType[QueryValueType.ViewContainerRef] = \"ViewContainerRef\";\nQueryValueType[QueryValueType.Provider] = \"Provider\";\n\n\nexport interface ElementDef {\n  name: string;\n  attrs: {[name: string]: string};\n  outputs: ElementOutputDef[];\n  template: ViewDefinition;\n  /**\n   * visible providers for DI in the view,\n   * as see from this element.\n   */\n  providerIndices: {[tokenKey: string]: number};\n  source: string;\n}\n\nexport interface ElementOutputDef {\n  target: string;\n  eventName: string;\n}\n\nexport interface ProviderDef {\n  type: ProviderType;\n  token: any;\n  tokenKey: string;\n  value: any;\n  deps: DepDef[];\n  outputs: ProviderOutputDef[];\n  // closure to allow recursive components\n  component: ViewDefinitionFactory;\n}\nexport type ProviderType = number;\nexport let ProviderType: any = {};\nProviderType.Value = 0;\nProviderType.Class = 1;\nProviderType.Factory = 2;\nProviderType.UseExisting = 3;\nProviderType[ProviderType.Value] = \"Value\";\nProviderType[ProviderType.Class] = \"Class\";\nProviderType[ProviderType.Factory] = \"Factory\";\nProviderType[ProviderType.UseExisting] = \"UseExisting\";\n\n\nexport interface DepDef {\n  flags: DepFlags;\n  token: any;\n  tokenKey: string;\n}\nexport type DepFlags = number;\nexport let DepFlags: any = {};\nDepFlags.None = 0;\nDepFlags.SkipSelf = 1;\nDepFlags.Optional = 2;\nDepFlags[DepFlags.None] = \"None\";\nDepFlags[DepFlags.SkipSelf] = \"SkipSelf\";\nDepFlags[DepFlags.Optional] = \"Optional\";\n\n\nexport interface ProviderOutputDef {\n  propName: string;\n  eventName: string;\n}\n\nexport interface TextDef {\n  prefix: string;\n  source: string;\n}\n\nexport interface PureExpressionDef {\n  type: PureExpressionType;\n  pipeDep: DepDef;\n}\nexport type PureExpressionType = number;\nexport let PureExpressionType: any = {};\nPureExpressionType.Array = 0;\nPureExpressionType.Object = 1;\nPureExpressionType.Pipe = 2;\nPureExpressionType[PureExpressionType.Array] = \"Array\";\nPureExpressionType[PureExpressionType.Object] = \"Object\";\nPureExpressionType[PureExpressionType.Pipe] = \"Pipe\";\n\n\nexport interface QueryDef {\n  id: string;\n  bindings: QueryBindingDef[];\n}\n\nexport interface QueryBindingDef {\n  propName: string;\n  bindingType: QueryBindingType;\n}\nexport type QueryBindingType = number;\nexport let QueryBindingType: any = {};\nQueryBindingType.First = 0;\nQueryBindingType.All = 1;\nQueryBindingType[QueryBindingType.First] = \"First\";\nQueryBindingType[QueryBindingType.All] = \"All\";\n\n\nexport interface NgContentDef {\n  /**\n   * this index is checked against NodeDef.ngContentIndex to find the nodes\n   * that are matched by this ng-content.\n   * Note that a NodeDef with an ng-content can be reprojected, i.e.\n   * have a ngContentIndex on its own.\n   */\n  index: number;\n}\n\n// -------------------------------------\n// Data\n// -------------------------------------\n\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ViewData {\n  def: ViewDefinition;\n  renderer: Renderer;\n  root: RootData;\n  // index of parent element / anchor. Not the index\n  // of the provider with the component view.\n  parentIndex: number;\n  parent: ViewData;\n  component: any;\n  context: any;\n  // Attention: Never loop over this, as this will\n  // create a polymorphic usage site.\n  // Instead: Always loop over ViewDefinition.nodes,\n  // and call the right accessor (e.g. `elementData`) based on\n  // the NodeType.\n  nodes: {[key: number]: NodeData};\n  state: ViewState;\n  oldValues: any[];\n  disposables: DisposableFn[];\n}\nexport type ViewState = number;\nexport let ViewState: any = {};\nViewState.FirstCheck = 1;\nViewState.ChecksEnabled = 2;\nViewState.Errored = 4;\nViewState.Destroyed = 8;\nViewState[ViewState.FirstCheck] = \"FirstCheck\";\nViewState[ViewState.ChecksEnabled] = \"ChecksEnabled\";\nViewState[ViewState.Errored] = \"Errored\";\nViewState[ViewState.Destroyed] = \"Destroyed\";\n\n\nexport type DisposableFn = () => void;\n/**\n * Node instance data.\n * \n * We have a separate type per NodeType to save memory\n * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n * \n * To keep our code monomorphic,\n * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n * purposes.\n */\nexport class NodeData {\nprivate __brand: any; }\n\nfunction NodeData_tsickle_Closure_declarations() {\n/** @type {?} */\nNodeData.prototype.__brand;\n}\n\n\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface TextData { renderText: any; }\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asTextData(view: ViewData, index: number): TextData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ElementData {\n  renderElement: any;\n  embeddedViews: ViewData[];\n  // views that have been created from the template\n  // of this element,\n  // but inserted into the embeddedViews of another element.\n  // By default, this is undefined.\n  projectedViews: ViewData[];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asElementData(view: ViewData, index: number): ElementData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ProviderData {\n  instance: any;\n  componentView: ViewData;\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asProviderData(view: ViewData, index: number): ProviderData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface PureExpressionData {\n  value: any;\n  pipe: PipeTransform;\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asPureExpressionData(view: ViewData, index: number): PureExpressionData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asQueryList(view: ViewData, index: number): QueryList<any> {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n\nexport interface RootData {\n  injector: Injector;\n  projectableNodes: any[][];\n  selectorOrNode: string|any;\n  renderer: RootRenderer;\n  sanitizer: Sanitizer;\n}\nexport type EntryAction = number;\nexport let EntryAction: any = {};\nEntryAction.CheckAndUpdate = 0;\nEntryAction.CheckNoChanges = 1;\nEntryAction.Create = 2;\nEntryAction.Destroy = 3;\nEntryAction.HandleEvent = 4;\nEntryAction[EntryAction.CheckAndUpdate] = \"CheckAndUpdate\";\nEntryAction[EntryAction.CheckNoChanges] = \"CheckNoChanges\";\nEntryAction[EntryAction.Create] = \"Create\";\nEntryAction[EntryAction.Destroy] = \"Destroy\";\nEntryAction[EntryAction.HandleEvent] = \"HandleEvent\";\n\n\nexport interface DebugContext extends RenderDebugInfo {\n  view: ViewData;\n  nodeIndex: number;\n  componentRenderElement: any;\n  renderNode: any;\n}\n/**\n * This class is used to prevent cycles in the source files.\n * @abstract\n */\nexport abstract class Refs {\nprivate static instance: Refs;\n/**\n * @param {?} instance\n * @return {?}\n */\nstatic setInstance(instance: Refs) { Refs.instance = instance; }\n/**\n * @param {?} selector\n * @param {?} viewDefFactory\n * @return {?}\n */\nstatic createComponentFactory(selector: string, viewDefFactory: ViewDefinitionFactory):\n      ComponentFactory<any> {\n    return Refs.instance.createComponentFactory(selector, viewDefFactory);\n  }\n/**\n * @param {?} data\n * @return {?}\n */\nstatic createViewRef(data: ViewData): ViewRef { return Refs.instance.createViewRef(data); }\n/**\n * @param {?} view\n * @param {?} elIndex\n * @return {?}\n */\nstatic createViewContainerRef(view: ViewData, elIndex: number): ViewContainerRef {\n    return Refs.instance.createViewContainerRef(view, elIndex);\n  }\n/**\n * @param {?} parentView\n * @param {?} def\n * @return {?}\n */\nstatic createTemplateRef(parentView: ViewData, def: NodeDef): TemplateRef<any> {\n    return Refs.instance.createTemplateRef(parentView, def);\n  }\n/**\n * @param {?} view\n * @param {?} elIndex\n * @return {?}\n */\nstatic createInjector(view: ViewData, elIndex: number): Injector {\n    return Refs.instance.createInjector(view, elIndex);\n  }\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nstatic createDebugContext(view: ViewData, nodeIndex: number): DebugContext {\n    return Refs.instance.createDebugContext(view, nodeIndex);\n  }\n/**\n * @abstract\n * @param {?} selector\n * @param {?} viewDefFactory\n * @return {?}\n */\ncreateComponentFactory(selector: string, viewDefFactory: ViewDefinitionFactory) {}\n/**\n * @abstract\n * @param {?} data\n * @return {?}\n */\ncreateViewRef(data: ViewData) {}\n/**\n * @abstract\n * @param {?} view\n * @param {?} elIndex\n * @return {?}\n */\ncreateViewContainerRef(view: ViewData, elIndex: number) {}\n/**\n * @abstract\n * @param {?} parentView\n * @param {?} def\n * @return {?}\n */\ncreateTemplateRef(parentView: ViewData, def: NodeDef) {}\n/**\n * @abstract\n * @param {?} view\n * @param {?} elIndex\n * @return {?}\n */\ncreateInjector(view: ViewData, elIndex: number) {}\n/**\n * @abstract\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\ncreateDebugContext(view: ViewData, nodeIndex: number) {}\n}\n\nfunction Refs_tsickle_Closure_declarations() {\n/** @type {?} */\nRefs.instance;\n}\n\n"]}