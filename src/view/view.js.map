{"version":3,"sources":["../../../../../modules/@angular/core/src/view/view.ts"],"names":[],"mappings":"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","file":"view.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ViewEncapsulation} from '../metadata/view';\n\nimport {checkAndUpdateElementDynamic, checkAndUpdateElementInline, createElement} from './element';\nimport {expressionChangedAfterItHasBeenCheckedError} from './errors';\nimport {appendNgContent} from './ng_content';\nimport {callLifecycleHooksChildrenFirst, checkAndUpdateProviderDynamic, checkAndUpdateProviderInline, createProviderInstance} from './provider';\nimport {checkAndUpdatePureExpressionDynamic, checkAndUpdatePureExpressionInline, createPureExpression} from './pure_expression';\nimport {checkAndUpdateQuery, createQuery, queryDef} from './query';\nimport {checkAndUpdateTextDynamic, checkAndUpdateTextInline, createText} from './text';\nimport {ArgumentType, ComponentDefinition, ElementDef, NodeData, NodeDef, NodeFlags, NodeType, ProviderData, ProviderDef, RootData, Services, TextDef, ViewData, ViewDefinition, ViewDefinitionFactory, ViewFlags, ViewHandleEventFn, ViewState, ViewUpdateFn, asElementData, asProviderData, asPureExpressionData, asQueryList} from './types';\nimport {checkBindingNoChanges, isComponentView, queryIdIsReference, resolveViewDefinition} from './util';\n\nconst /** @type {?} */ NOOP = (): any => undefined;\n/**\n * @param {?} flags\n * @param {?} nodesWithoutIndices\n * @param {?=} update\n * @param {?=} handleEvent\n * @param {?=} compId\n * @param {?=} encapsulation\n * @param {?=} styles\n * @return {?}\n */\nexport function viewDef(\n    flags: ViewFlags, nodesWithoutIndices: NodeDef[], update?: ViewUpdateFn,\n    handleEvent?: ViewHandleEventFn, compId?: string, encapsulation?: ViewEncapsulation,\n    styles?: string[]): ViewDefinition {\n  // clone nodes and set auto calculated values\n  if (nodesWithoutIndices.length === 0) {\n    throw new Error(`Illegal State: Views without nodes are not allowed!`);\n  }\n\n  const /** @type {?} */ nodes: NodeDef[] = new Array(nodesWithoutIndices.length);\n  const /** @type {?} */ reverseChildNodes: NodeDef[] = new Array(nodesWithoutIndices.length);\n  let /** @type {?} */ viewBindingCount = 0;\n  let /** @type {?} */ viewDisposableCount = 0;\n  let /** @type {?} */ viewNodeFlags = 0;\n  let /** @type {?} */ viewMatchedQueries: {[queryId: string]: boolean} = {};\n  let /** @type {?} */ currentParent: NodeDef = null;\n  let /** @type {?} */ lastRootNode: NodeDef = null;\n  for (let /** @type {?} */ i = 0; i < nodesWithoutIndices.length; i++) {\n    while (currentParent && i > currentParent.index + currentParent.childCount) {\n      const /** @type {?} */ newParent = nodes[currentParent.parent];\n      if (newParent) {\n        newParent.childFlags |= currentParent.childFlags;\n        copyQueryMatchesInto(currentParent.childMatchedQueries, newParent.childMatchedQueries);\n      }\n      currentParent = newParent;\n    }\n    const /** @type {?} */ nodeWithoutIndices = nodesWithoutIndices[i];\n    const /** @type {?} */ reverseChildIndex = calculateReverseChildIndex(\n        currentParent, i, nodeWithoutIndices.childCount, nodesWithoutIndices.length);\n\n    const /** @type {?} */ node = cloneAndModifyNode(nodeWithoutIndices, {\n      index: i,\n      parent: currentParent ? currentParent.index : undefined,\n      bindingIndex: viewBindingCount,\n      disposableIndex: viewDisposableCount, reverseChildIndex,\n    });\n    if (node.element) {\n      node.element = cloneAndModifyElement(node.element, {\n        // Use protoypical inheritance to not get O(n^2) complexity...\n        providerIndices:\n            Object.create(currentParent ? currentParent.element.providerIndices : null),\n      });\n    }\n    nodes[i] = node;\n    reverseChildNodes[reverseChildIndex] = node;\n    validateNode(currentParent, node, nodesWithoutIndices.length);\n\n    viewNodeFlags |= node.flags;\n    copyQueryMatchesInto(node.matchedQueries, viewMatchedQueries);\n    viewBindingCount += node.bindings.length;\n    viewDisposableCount += node.disposableCount;\n    if (currentParent) {\n      currentParent.childFlags |= node.flags;\n      copyQueryMatchesInto(node.matchedQueries, currentParent.childMatchedQueries);\n      if (node.element && node.element.template) {\n        copyQueryMatchesInto(\n            node.element.template.nodeMatchedQueries, currentParent.childMatchedQueries);\n      }\n    }\n\n    if (!currentParent) {\n      lastRootNode = node;\n    }\n    if (node.provider) {\n      currentParent.element.providerIndices[node.provider.tokenKey] = i;\n    }\n    if (node.query) {\n      const /** @type {?} */ elementDef = nodes[currentParent.parent];\n      elementDef.element.providerIndices[node.query.id] = i;\n    }\n    if (node.childCount) {\n      currentParent = node;\n    }\n  }\n  while (currentParent) {\n    const /** @type {?} */ newParent = nodes[currentParent.parent];\n    if (newParent) {\n      newParent.childFlags |= currentParent.childFlags;\n      copyQueryMatchesInto(currentParent.childMatchedQueries, newParent.childMatchedQueries);\n    }\n    currentParent = newParent;\n  }\n  const /** @type {?} */ componentDef =\n      compId ? /** @type {?} */(( <ComponentDefinition>{id: compId, encapsulation, styles})) : undefined;\n  return {\n    nodeFlags: viewNodeFlags,\n    nodeMatchedQueries: viewMatchedQueries, flags,\n    nodes: nodes, reverseChildNodes,\n    update: update || NOOP,\n    handleEvent: handleEvent || NOOP,\n    component: componentDef,\n    bindingCount: viewBindingCount,\n    disposableCount: viewDisposableCount, lastRootNode\n  };\n}\n/**\n * @param {?} source\n * @param {?} target\n * @return {?}\n */\nfunction copyQueryMatchesInto(\n    source: {[queryId: string]: any}, target: {[queryId: string]: boolean}) {\n  for (let /** @type {?} */ prop in source) {\n    if (!queryIdIsReference(prop)) {\n      target[prop] = true;\n    }\n  }\n}\n/**\n * @param {?} currentParent\n * @param {?} i\n * @param {?} childCount\n * @param {?} nodeCount\n * @return {?}\n */\nfunction calculateReverseChildIndex(\n    currentParent: NodeDef, i: number, childCount: number, nodeCount: number) {\n  // Notes about reverse child order:\n  // - Every node is directly before its children, in dfs and reverse child order.\n  // - node.childCount contains all children, in dfs and reverse child order.\n  // - In dfs order, every node is before its first child\n  // - In reverse child order, every node is before its last child\n\n  // Algorithm, main idea:\n  // - In reverse child order, the ranges for each child + its transitive children are mirrored\n  //   regarding their position inside of their parent\n\n  // Visualization:\n  // Given the following tree:\n  // Nodes: n0\n  //             n1         n2\n  //                n11 n12    n21 n22\n  // dfs:    0   1   2   3  4   5   6\n  // result: 0   4   6   5  1   3   2\n  //\n  // Example:\n  // Current node = 1\n  // 1) lastChildIndex = 3\n  // 2) lastChildOffsetRelativeToParentInDfsOrder = 2\n  // 3) parentEndIndexInReverseChildOrder = 6\n  // 4) result = 4\n  let /** @type {?} */ lastChildOffsetRelativeToParentInDfsOrder: number;\n  let /** @type {?} */ parentEndIndexInReverseChildOrder: number;\n  if (currentParent) {\n    const /** @type {?} */ lastChildIndex = i + childCount;\n    lastChildOffsetRelativeToParentInDfsOrder = lastChildIndex - currentParent.index - 1;\n    parentEndIndexInReverseChildOrder = currentParent.reverseChildIndex + currentParent.childCount;\n  } else {\n    lastChildOffsetRelativeToParentInDfsOrder = i + childCount;\n    parentEndIndexInReverseChildOrder = nodeCount - 1;\n  }\n  return parentEndIndexInReverseChildOrder - lastChildOffsetRelativeToParentInDfsOrder;\n}\n/**\n * @param {?} parent\n * @param {?} node\n * @param {?} nodeCount\n * @return {?}\n */\nfunction validateNode(parent: NodeDef, node: NodeDef, nodeCount: number) {\n  const /** @type {?} */ template = node.element && node.element.template;\n  if (template) {\n    if (template.lastRootNode && template.lastRootNode.flags & NodeFlags.HasEmbeddedViews) {\n      throw new Error(\n          `Illegal State: Last root node of a template can't have embedded views, at index ${node.index}!`);\n    }\n  }\n  if (node.provider) {\n    const /** @type {?} */ parentType = parent ? parent.type : null;\n    if (parentType !== NodeType.Element) {\n      throw new Error(\n          `Illegal State: Provider nodes need to be children of elements or anchors, at index ${node.index}!`);\n    }\n  }\n  if (node.query) {\n    const /** @type {?} */ parentType = parent ? parent.type : null;\n    if (parentType !== NodeType.Provider) {\n      throw new Error(\n          `Illegal State: Query nodes need to be children of providers, at index ${node.index}!`);\n    }\n  }\n  if (node.childCount) {\n    const /** @type {?} */ parentEnd = parent ? parent.index + parent.childCount : nodeCount - 1;\n    if (node.index <= parentEnd && node.index + node.childCount > parentEnd) {\n      throw new Error(\n          `Illegal State: childCount of node leads outside of parent, at index ${node.index}!`);\n    }\n  }\n}\n/**\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction cloneAndModifyNode(nodeDef: NodeDef, values: {\n  index: number,\n  reverseChildIndex: number,\n  parent: number,\n  bindingIndex: number,\n  disposableIndex: number,\n}): NodeDef {\n  // Attention: don't use copyInto here to prevent v8 from treating this object\n  // as a dictionary!\n  return {\n    type: nodeDef.type,\n    index: values.index,\n    reverseChildIndex: values.reverseChildIndex,\n    parent: values.parent,\n    childFlags: 0,\n    childMatchedQueries: {},\n    bindingIndex: values.bindingIndex,\n    disposableIndex: values.disposableIndex,\n    flags: nodeDef.flags,\n    matchedQueries: nodeDef.matchedQueries,\n    ngContentIndex: nodeDef.ngContentIndex,\n    childCount: nodeDef.childCount,\n    bindings: nodeDef.bindings,\n    disposableCount: nodeDef.disposableCount,\n    element: nodeDef.element,\n    provider: nodeDef.provider,\n    text: nodeDef.text,\n    pureExpression: nodeDef.pureExpression,\n    query: nodeDef.query,\n    ngContent: nodeDef.ngContent\n  };\n}\n/**\n * @param {?} elementDef\n * @param {?} values\n * @return {?}\n */\nfunction cloneAndModifyElement(\n    elementDef: ElementDef, values: {providerIndices: {[tokenKey: string]: number}}): ElementDef {\n  // Attention: don't use copyInto here to prevent v8 from treating this object\n  // as a dictionary!\n  return {\n    name: elementDef.name,\n    attrs: elementDef.attrs,\n    outputs: elementDef.outputs,\n    template: elementDef.template,\n    providerIndices: values.providerIndices,\n    source: elementDef.source\n  };\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?=} context\n * @return {?}\n */\nexport function createEmbeddedView(parent: ViewData, anchorDef: NodeDef, context?: any): ViewData {\n  // embedded views are seen as siblings to the anchor, so we need\n  // to get the parent of the anchor and use it as parentIndex.\n  const /** @type {?} */ view = createView(parent.root, parent, anchorDef.index, anchorDef.element.template);\n  initView(view, parent.component, context);\n  createViewNodes(view);\n  return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nexport function createRootView(root: RootData, def: ViewDefinition, context?: any): ViewData {\n  const /** @type {?} */ view = createView(root, null, null, def);\n  initView(view, context, context);\n  createViewNodes(view);\n  return view;\n}\n/**\n * @param {?} root\n * @param {?} parent\n * @param {?} parentIndex\n * @param {?} def\n * @return {?}\n */\nfunction createView(\n    root: RootData, parent: ViewData, parentIndex: number, def: ViewDefinition): ViewData {\n  const /** @type {?} */ nodes: NodeData[] = new Array(def.nodes.length);\n  const /** @type {?} */ disposables = def.disposableCount ? new Array(def.disposableCount) : undefined;\n  const /** @type {?} */ view: ViewData = {\n    def,\n    parent,\n    parentIndex,\n    context: undefined,\n    component: undefined, nodes,\n    state: ViewState.FirstCheck | ViewState.ChecksEnabled, root,\n    oldValues: new Array(def.bindingCount), disposables\n  };\n  return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view: ViewData, component: any, context: any) {\n  view.component = component;\n  view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view: ViewData) {\n  let /** @type {?} */ renderHost: any;\n  if (isComponentView(view)) {\n    renderHost = asElementData(view.parent, view.parentIndex).renderElement;\n  }\n\n  const /** @type {?} */ def = view.def;\n  const /** @type {?} */ nodes = view.nodes;\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    Services.setCurrentNode(view, i);\n    switch (nodeDef.type) {\n      case NodeType.Element:\n        nodes[i] = /** @type {?} */(( createElement(view, renderHost, nodeDef) as any));\n        break;\n      case NodeType.Text:\n        nodes[i] = /** @type {?} */(( createText(view, renderHost, nodeDef) as any));\n        break;\n      case NodeType.Provider:\n        if (nodeDef.provider.component) {\n          // Components can inject a ChangeDetectorRef that needs a references to\n          // the component view. Therefore, we create the component view first\n          // and set the ProviderData in ViewData, and then instantiate the provider.\n          const /** @type {?} */ componentView = createView(\n              view.root, view, nodeDef.parent, resolveViewDefinition(nodeDef.provider.component));\n          const /** @type {?} */ providerData = /** @type {?} */(( <ProviderData>{componentView, instance: undefined}));\n          nodes[i] = /** @type {?} */(( providerData as any));\n          const /** @type {?} */ instance = providerData.instance = createProviderInstance(view, nodeDef);\n          initView(componentView, instance, instance);\n        } else {\n          const /** @type {?} */ instance = createProviderInstance(view, nodeDef);\n          const /** @type {?} */ providerData = /** @type {?} */(( <ProviderData>{componentView: undefined, instance}));\n          nodes[i] = /** @type {?} */(( providerData as any));\n        }\n        break;\n      case NodeType.PureExpression:\n        nodes[i] = /** @type {?} */(( createPureExpression(view, nodeDef) as any));\n        break;\n      case NodeType.Query:\n        nodes[i] = /** @type {?} */(( createQuery() as any));\n        break;\n      case NodeType.NgContent:\n        appendNgContent(view, renderHost, nodeDef);\n        // no runtime data needed for NgContent...\n        nodes[i] = undefined;\n        break;\n    }\n  }\n  // Create the ViewData.nodes of component views after we created everything else,\n  // so that e.g. ng-content works\n  execComponentViewsAction(view, ViewAction.CreateViewNodes);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function checkNoChangesView(view: ViewData) {\n  Services.updateView(checkNoChangesNode, view);\n  execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n  execQueriesAction(view, NodeFlags.HasContentQuery, QueryAction.CheckNoChanges);\n  execComponentViewsAction(view, ViewAction.CheckNoChanges);\n  execQueriesAction(view, NodeFlags.HasViewQuery, QueryAction.CheckNoChanges);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function checkAndUpdateView(view: ViewData) {\n  Services.updateView(checkAndUpdateNode, view);\n  execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(view, NodeFlags.HasContentQuery, QueryAction.CheckAndUpdate);\n\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterContentChecked |\n          (view.state & ViewState.FirstCheck ? NodeFlags.AfterContentInit : 0));\n  execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(view, NodeFlags.HasViewQuery, QueryAction.CheckAndUpdate);\n\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterViewChecked |\n          (view.state & ViewState.FirstCheck ? NodeFlags.AfterViewInit : 0));\n\n  if (view.def.flags & ViewFlags.OnPush) {\n    view.state &= ~ViewState.ChecksEnabled;\n  }\n  view.state &= ~ViewState.FirstCheck;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNode(\n    view: ViewData, nodeIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  if (argStyle === ArgumentType.Inline) {\n    return checkAndUpdateNodeInline(view, nodeIndex, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    return checkAndUpdateNodeDynamic(view, nodeIndex, v0);\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(\n    view: ViewData, nodeIndex: number, v0?: any, v1?: any, v2?: any, v3?: any, v4?: any, v5?: any,\n    v6?: any, v7?: any, v8?: any, v9?: any): any {\n  const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n  switch (nodeDef.type) {\n    case NodeType.Element:\n      return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case NodeType.Text:\n      return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case NodeType.Provider:\n      return checkAndUpdateProviderInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case NodeType.PureExpression:\n      return checkAndUpdatePureExpressionInline(\n          view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view: ViewData, nodeIndex: number, values: any[]): any {\n  const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n  switch (nodeDef.type) {\n    case NodeType.Element:\n      return checkAndUpdateElementDynamic(view, nodeDef, values);\n    case NodeType.Text:\n      return checkAndUpdateTextDynamic(view, nodeDef, values);\n    case NodeType.Provider:\n      return checkAndUpdateProviderDynamic(view, nodeDef, values);\n    case NodeType.PureExpression:\n      return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkNoChangesNode(\n    view: ViewData, nodeIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  if (argStyle === ArgumentType.Inline) {\n    return checkNoChangesNodeInline(view, nodeIndex, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    return checkNoChangesNodeDynamic(view, nodeIndex, v0);\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(\n    view: ViewData, nodeIndex: number, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any,\n    v6: any, v7: any, v8: any, v9: any): void {\n  const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n  // Note: fallthrough is intended!\n  switch (nodeDef.bindings.length) {\n    case 10:\n      checkBindingNoChanges(view, nodeDef, 9, v9);\n    case 9:\n      checkBindingNoChanges(view, nodeDef, 8, v8);\n    case 8:\n      checkBindingNoChanges(view, nodeDef, 7, v7);\n    case 7:\n      checkBindingNoChanges(view, nodeDef, 6, v6);\n    case 6:\n      checkBindingNoChanges(view, nodeDef, 5, v5);\n    case 5:\n      checkBindingNoChanges(view, nodeDef, 4, v4);\n    case 4:\n      checkBindingNoChanges(view, nodeDef, 3, v3);\n    case 3:\n      checkBindingNoChanges(view, nodeDef, 2, v2);\n    case 2:\n      checkBindingNoChanges(view, nodeDef, 1, v1);\n    case 1:\n      checkBindingNoChanges(view, nodeDef, 0, v0);\n  }\n  return nodeDef.type === NodeType.PureExpression ? asPureExpressionData(view, nodeIndex).value :\n                                                    undefined;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view: ViewData, nodeIndex: number, values: any[]): void {\n  const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    checkBindingNoChanges(view, nodeDef, i, values[i]);\n  }\n  return nodeDef.type === NodeType.PureExpression ? asPureExpressionData(view, nodeIndex).value :\n                                                    undefined;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view: ViewData, nodeDef: NodeDef) {\n  const /** @type {?} */ queryList = asQueryList(view, nodeDef.index);\n  if (queryList.dirty) {\n    throw expressionChangedAfterItHasBeenCheckedError(\n        Services.createDebugContext(view, nodeDef.index), `Query ${nodeDef.query.id} not dirty`,\n        `Query ${nodeDef.query.id} dirty`, (view.state & ViewState.FirstCheck) !== 0);\n  }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function destroyView(view: ViewData) {\n  callLifecycleHooksChildrenFirst(view, NodeFlags.OnDestroy);\n  if (view.disposables) {\n    for (let /** @type {?} */ i = 0; i < view.disposables.length; i++) {\n      view.disposables[i]();\n    }\n  }\n  execComponentViewsAction(view, ViewAction.Destroy);\n  execEmbeddedViewsAction(view, ViewAction.Destroy);\n  view.state |= ViewState.Destroyed;\n}\ntype ViewAction = number;\nlet ViewAction: any = {};\nViewAction.CreateViewNodes = 0;\nViewAction.CheckNoChanges = 1;\nViewAction.CheckAndUpdate = 2;\nViewAction.Destroy = 3;\nViewAction[ViewAction.CreateViewNodes] = \"CreateViewNodes\";\nViewAction[ViewAction.CheckNoChanges] = \"CheckNoChanges\";\nViewAction[ViewAction.CheckAndUpdate] = \"CheckAndUpdate\";\nViewAction[ViewAction.Destroy] = \"Destroy\";\n\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ def = view.def;\n  if (!(def.nodeFlags & NodeFlags.HasComponent)) {\n    return;\n  }\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.HasComponent) {\n      // a leaf\n      const /** @type {?} */ providerData = asProviderData(view, i);\n      callViewAction(providerData.componentView, action);\n    } else if ((nodeDef.childFlags & NodeFlags.HasComponent) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ def = view.def;\n  if (!(def.nodeFlags & NodeFlags.HasEmbeddedViews)) {\n    return;\n  }\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.HasEmbeddedViews) {\n      // a leaf\n      const /** @type {?} */ embeddedViews = asElementData(view, i).embeddedViews;\n      if (embeddedViews) {\n        for (let /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n          callViewAction(embeddedViews[k], action);\n        }\n      }\n    } else if ((nodeDef.childFlags & NodeFlags.HasEmbeddedViews) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ viewState = view.state;\n  switch (action) {\n    case ViewAction.CheckNoChanges:\n      if ((viewState & ViewState.ChecksEnabled) &&\n          (viewState & (ViewState.Errored | ViewState.Destroyed)) === 0) {\n        checkNoChangesView(view);\n      }\n      break;\n    case ViewAction.CheckAndUpdate:\n      if ((viewState & ViewState.ChecksEnabled) &&\n          (viewState & (ViewState.Errored | ViewState.Destroyed)) === 0) {\n        checkAndUpdateView(view);\n      }\n      break;\n    case ViewAction.Destroy:\n      destroyView(view);\n      break;\n    case ViewAction.CreateViewNodes:\n      createViewNodes(view);\n      break;\n  }\n}\ntype QueryAction = number;\nlet QueryAction: any = {};\nQueryAction.CheckAndUpdate = 0;\nQueryAction.CheckNoChanges = 1;\nQueryAction[QueryAction.CheckAndUpdate] = \"CheckAndUpdate\";\nQueryAction[QueryAction.CheckNoChanges] = \"CheckNoChanges\";\n\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} action\n * @return {?}\n */\nfunction execQueriesAction(view: ViewData, queryFlags: NodeFlags, action: QueryAction) {\n  if (!(view.def.nodeFlags & queryFlags)) {\n    return;\n  }\n  const /** @type {?} */ nodeCount = view.def.nodes.length;\n  for (let /** @type {?} */ i = 0; i < nodeCount; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & queryFlags) {\n      Services.setCurrentNode(view, nodeDef.index);\n      switch (action) {\n        case QueryAction.CheckAndUpdate:\n          checkAndUpdateQuery(view, nodeDef);\n          break;\n        case QueryAction.CheckNoChanges:\n          checkNoChangesQuery(view, nodeDef);\n          break;\n      }\n    } else if ((nodeDef.childFlags & queryFlags) === 0) {\n      // no child has a content query\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n"]}