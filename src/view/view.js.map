{"version":3,"sources":["../../../../../modules/@angular/core/src/view/view.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAGH,OAAO,EAAA,4BAAE,EAA6B,2BAAA,EAA6B,aAAA,EAAc,MAAA,WAAA,CAAA;AACjF,OAAO,EAAA,2CAAE,EAA2C,MAAA,UAAA,CAAA;AACpD,OAAO,EAAA,eAAE,EAAe,MAAA,cAAA,CAAA;AACxB,OAAO,EAAA,+BAAE,EAAgC,6BAAA,EAA+B,4BAAA,EAA8B,sBAAA,EAAuB,MAAA,YAAA,CAAA;AAC7H,OAAO,EAAA,mCAAE,EAAoC,kCAAA,EAAoC,oBAAA,EAAqB,MAAA,mBAAA,CAAA;AACtG,OAAO,EAAA,mBAAE,EAAoB,WAAA,EAAsB,MAAA,SAAA,CAAA;AACnD,OAAO,EAAA,yBAAE,EAA0B,wBAAA,EAA0B,UAAA,EAAW,MAAA,QAAA,CAAA;AACxE,OAAO,EAAa,WAAA,EAAgC,SAAA,EAAW,QAAA,EAAqC,IAAA,EAA0E,SAAA,EAA8B,SAAA,EAAyB,aAAA,EAAe,cAAA,EAAgB,oBAAA,EAAsB,WAAA,EAAY,MAAA,SAAA,CAAA;AACtS,OAAO,EAAA,qBAAE,EAAsB,aAAA,EAAe,gBAAA,EAAkB,WAAA,EAAa,WAAA,EAAa,eAAA,EAAiB,qBAAA,EAAuB,cAAA,EAAe,MAAA,QAAA,CAAA;AAEjJ,IAAM,gBAAgB,CAAhB,IAAA,GAAO,cAAW,OAAA,SAAA,EAAA,CAAA,CAAU;AAClC;;;;;;;GAOG;AACH,MAPC,kBAQG,KAAgB,EAAE,mBAA8B,EAAE,MAAqB,EACvE,WAA+B,EAAE,aAAmC;IACtE,6CAA6C;IAC7C,EAAE,CAAC,CAAC,mBAPC,CAAmB,MAAC,KAAU,CAAA,CAAE,CAAC,CAAA;QAQpC,MAPM,IAAI,KAAA,CAAM,qDAAC,CAAqD,CAAC;IAQzE,CAAC;IAED,IAAM,gBAAgB,CAPhB,KAAA,GAAmB,IAAI,KAAA,CAAM,mBAAC,CAAmB,MAAC,CAAM,CAAC;IAQ/D,IAAM,gBAAgB,CAPhB,iBAAA,GAA+B,IAAI,KAAA,CAAM,mBAAC,CAAmB,MAAC,CAAM,CAAC;IAQ3E,IAAI,gBAAgB,CAPhB,gBAAA,GAAmB,CAAA,CAAE;IAQzB,IAAI,gBAAgB,CAPhB,mBAAA,GAAsB,CAAA,CAAE;IAQ5B,IAAI,gBAAgB,CAPhB,aAAA,GAAgB,CAAA,CAAE;IAQtB,IAAI,gBAAgB,CAPhB,kBAAA,GAAmD,EAAA,CAAG;IAQ1D,IAAI,gBAAgB,CAPhB,aAAA,GAAyB,IAAA,CAAK;IAQlC,IAAI,gBAAgB,CAPhB,YAAA,GAAwB,IAAA,CAAK;IAQjC,GAAG,CAAC,CAAC,IAPC,gBAAA,CAAG,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,mBAAA,CAAoB,MAAC,EAAO,CAAA,EAAE,EAAG,CAAA;QAQnD,OAAO,aAPC,IAAgB,CAAA,GAAI,aAAA,CAAc,KAAC,GAAO,aAAA,CAAc,UAAC,EAAW,CAAA;YAQ1E,IAAM,gBAAgB,CAPhB,SAAA,GAAY,KAAA,CAAM,aAAC,CAAa,MAAC,CAAM,CAAC;YAQ9C,EAAE,CAAC,CAAC,SAPC,CAAS,CAAC,CAAA;gBAQb,SAAS,CAPC,UAAC,IAAa,aAAA,CAAc,UAAC,CAAU;gBAQjD,QAAQ,CAPC,aAAC,CAAa,mBAAC,EAAoB,SAAA,CAAU,mBAAC,CAAmB,CAAC;YAQ7E,CAAC;YACD,aAAa,GAPG,SAAA,CAAU;QAQ5B,CAAC;QACD,IAAM,gBAAgB,CAPhB,kBAAA,GAAqB,mBAAA,CAAoB,CAAC,CAAC,CAAC;QAQlD,IAAM,gBAAgB,CAPhB,iBAAA,GAAoB,0BAAA,CAQtB,aAAa,EAPE,CAAA,EAAG,kBAAA,CAAmB,UAAC,EAAW,mBAAA,CAAoB,MAAC,CAAM,CAAC;QASjF,IAAM,gBAAgB,CAPhB,IAAA,GAAO,kBAAA,CAAmB,kBAAC,EAAmB;YAQlD,KAAK,EAPE,CAAA;YAQP,MAAM,EAPE,aAAA,GAAgB,aAAA,CAAc,KAAC,GAAO,SAAA;YAQ9C,YAAY,EAPE,gBAAA;YAQd,eAAe,EAPE,mBAAA,EAAqB,iBAAA,mBAAA;SAQvC,CAPC,CAAC;QAQH,EAAE,CAAC,CAAC,IAPC,CAAI,OAAC,CAAO,CAAC,CAAA;YAQhB,IAAI,CAPC,OAAC,GAAS,qBAAA,CAAsB,IAAC,CAAI,OAAC,EAAQ;gBAQjD,8DAA8D;gBAC9D,eAAe,EACX,MAAM,CAPC,MAAC,CAAM,aAAC,GAAe,aAAA,CAAc,OAAC,CAAO,eAAC,GAAiB,IAAA,CAAK;aAQhF,CAPC,CAAC;QAQL,CAAC;QACD,KAAK,CAPC,CAAC,CAAC,GAAG,IAAA,CAAK;QAQhB,iBAAiB,CAPC,iBAAC,CAAiB,GAAG,IAAA,CAAK;QAQ5C,YAAY,CAPC,aAAC,EAAc,IAAA,CAAK,CAAC;QASlC,aAAa,IAPI,IAAA,CAAK,KAAC,CAAK;QAQ5B,QAAQ,CAPC,IAAC,CAAI,cAAC,EAAe,kBAAA,CAAmB,CAAC;QAQlD,gBAAgB,IAPI,IAAA,CAAK,QAAC,CAAQ,MAAC,CAAM;QAQzC,mBAAmB,IAPI,IAAA,CAAK,eAAC,CAAe;QAQ5C,EAAE,CAAC,CAAC,aAPC,CAAa,CAAC,CAAA;YAQjB,aAAa,CAPC,UAAC,IAAa,IAAA,CAAK,KAAC,CAAK;YAQvC,QAAQ,CAPC,IAAC,CAAI,cAAC,EAAe,aAAA,CAAc,mBAAC,CAAmB,CAAC;YAQjE,EAAE,CAAC,CAAC,IAPC,CAAI,OAAC,IAAU,IAAA,CAAK,OAAC,CAAO,QAAC,CAAQ,CAAC,CAAA;gBAQzC,QAAQ,CAPC,IAAC,CAAI,OAAC,CAAO,QAAC,CAAQ,kBAAC,EAAmB,aAAA,CAAc,mBAAC,CAAmB,CAAC;YAQxF,CAAC;QACH,CAAC;QAED,EAAE,CAAC,CAAC,CAPC,aAAC,CAAa,CAAC,CAAA;YAQlB,YAAY,GAPG,IAAA,CAAK;QAQtB,CAAC;QACD,EAAE,CAAC,CAAC,IAPC,CAAI,QAAC,CAAQ,CAAC,CAAA;YAQjB,aAAa,CAPC,OAAC,CAAO,eAAC,CAAe,IAAC,CAAI,QAAC,CAAQ,QAAC,CAAQ,GAAG,CAAA,CAAE;QAQpE,CAAC;QACD,EAAE,CAAC,CAAC,IAPC,CAAI,KAAC,CAAK,CAAC,CAAA;YAQd,IAAM,gBAAgB,CAPhB,UAAA,GAAa,KAAA,CAAM,aAAC,CAAa,MAAC,CAAM,CAAC;YAQ/C,UAAU,CAPC,OAAC,CAAO,eAAC,CAAe,IAAC,CAAI,KAAC,CAAK,EAAC,CAAE,GAAG,CAAA,CAAE;QAQxD,CAAC;QACD,EAAE,CAAC,CAAC,IAPC,CAAI,UAAC,CAAU,CAAC,CAAA;YAQnB,aAAa,GAPG,IAAA,CAAK;QAQvB,CAAC;IACH,CAAC;IACD,OAAO,aAPC,EAAc,CAAA;QAQpB,IAAM,gBAAgB,CAPhB,SAAA,GAAY,KAAA,CAAM,aAAC,CAAa,MAAC,CAAM,CAAC;QAQ9C,EAAE,CAAC,CAAC,SAPC,CAAS,CAAC,CAAA;YAQb,SAAS,CAPC,UAAC,IAAa,aAAA,CAAc,UAAC,CAAU;YAQjD,QAAQ,CAPC,aAAC,CAAa,mBAAC,EAAoB,SAAA,CAAU,mBAAC,CAAmB,CAAC;QAQ7E,CAAC;QACD,aAAa,GAPG,SAAA,CAAU;IAQ5B,CAAC;IAED,MAAM,CAPC;QAQL,SAAS,EAPE,aAAA;QAQX,kBAAkB,EAPE,kBAAA,EAAoB,KAAA,OAAA;QAQxC,KAAK,EAPE,KAAA,EAAO,iBAAA,mBAAA;QAQd,MAAM,EAPE,MAAA,IAAU,IAAA;QAQlB,WAAW,EAPE,WAAA,IAAe,IAAA,EAAM,aAAA,eAAA;QAQlC,YAAY,EAPE,gBAAA;QAQd,eAAe,EAPE,mBAAA,EAAqB,YAAA,cAAA;KAQvC,CAPC;AAQJ,CAAC;AACD;;;;GAIG;AACH,kBAXC,MAAA,EAAA,MAAA;IAYC,GAAG,CAAC,CAAC,IAXC,gBAAA,CAAG,IAAA,IAAQ,MAAA,CAAO,CAAC,CAAA;QAYvB,MAAM,CAXC,IAAC,CAAI,GAAG,MAAA,CAAO,IAAC,CAAI,CAAC;IAY9B,CAAC;AACH,CAAC;AACD;;;;;;GAMG;AACH,oCACI,aAAsB,EAAE,CAAS,EAAE,UAAkB,EAAE,SAAiB;IAC1E,mCAAmC;IACnC,gFAAgF;IAChF,2EAA2E;IAC3E,uDAAuD;IACvD,gEAAgE;IAEhE,wBAAwB;IACxB,6FAA6F;IAC7F,oDAAoD;IAEpD,iBAAiB;IACjB,4BAA4B;IAC5B,YAAY;IACZ,4BAA4B;IAC5B,oCAAoC;IACpC,mCAAmC;IACnC,mCAAmC;IACnC,EAAE;IACF,WAAW;IACX,mBAAmB;IACnB,wBAAwB;IACxB,mDAAmD;IACnD,2CAA2C;IAC3C,gBAAgB;IAChB,IAAI,gBAAgB,CAjBhB,yCAA2C,CAAO;IAkBtD,IAAI,gBAAgB,CAjBhB,iCAAmC,CAAO;IAkB9C,EAAE,CAAC,CAAC,aAjBC,CAAa,CAAC,CAAA;QAkBjB,IAAM,gBAAgB,CAjBhB,cAAA,GAAiB,CAAA,GAAI,UAAA,CAAW;QAkBtC,yCAAyC,GAjBG,cAAA,GAAiB,aAAA,CAAc,KAAC,GAAO,CAAA,CAAE;QAkBrF,iCAAiC,GAjBG,aAAA,CAAc,iBAAC,GAAmB,aAAA,CAAc,UAAC,CAAU;IAkBjG,CAAC;IAjBC,IAAA,CAAK,CAAA;QAkBL,yCAAyC,GAjBG,CAAA,GAAI,UAAA,CAAW;QAkB3D,iCAAiC,GAjBG,SAAA,GAAY,CAAA,CAAE;IAkBpD,CAAC;IACD,MAAM,CAjBC,iCAAA,GAAoC,yCAAA,CAA0C;AAkBvF,CAAC;AACD;;;;GAIG;AACH,sBArBC,MAAA,EAAA,IAAA;IAsBC,IAAM,gBAAgB,CArBhB,QAAA,GAAW,IAAA,CAAK,OAAC,IAAU,IAAA,CAAK,OAAC,CAAO,QAAC,CAAQ;IAsBvD,EAAE,CAAC,CAAC,QArBC,CAAQ,CAAC,CAAA;QAsBZ,EAAE,CAAC,CAAC,QArBC,CAAQ,YAAC,IAAe,QAAA,CAAS,YAAC,CAAY,KAAC,GAAO,SAAA,CAAU,gBAAC,CAAgB,CAAC,CAAA;YAsBrF,MArBM,IAAI,KAAA,CAsBN,qFAAmF,IArBC,CAAI,KAAC,MAAK,CAAG,CAAC;QAsBxG,CAAC;IACH,CAAC;IACD,EAAE,CAAC,CAAC,IArBC,CAAI,QAAC,CAAQ,CAAC,CAAA;QAsBjB,IAAM,gBAAgB,CArBhB,UAAA,GAAa,MAAA,GAAS,MAAA,CAAO,IAAC,GAAM,IAAA,CAAK;QAsB/C,EAAE,CAAC,CAAC,UArBC,KAAc,QAAA,CAAS,OAAC,CAAO,CAAC,CAAA;YAsBnC,MArBM,IAAI,KAAA,CAsBN,wFAAsF,IArBC,CAAI,KAAC,MAAK,CAAG,CAAC;QAsB3G,CAAC;IACH,CAAC;IACD,EAAE,CAAC,CAAC,IArBC,CAAI,KAAC,CAAK,CAAC,CAAA;QAsBd,IAAM,gBAAgB,CArBhB,UAAA,GAAa,MAAA,GAAS,MAAA,CAAO,IAAC,GAAM,IAAA,CAAK;QAsB/C,EAAE,CAAC,CAAC,UArBC,KAAc,QAAA,CAAS,QAAC,CAAQ,CAAC,CAAA;YAsBpC,MArBM,IAAI,KAAA,CAsBN,2EAAyE,IArBC,CAAI,KAAC,MAAK,CAAG,CAAC;QAsB9F,CAAC;IACH,CAAC;IACD,EAAE,CAAC,CAAC,IArBC,CAAI,UAAC,CAAU,CAAC,CAAA;QAsBnB,EAAE,CAAC,CAAC,MArBC,CAAM,CAAC,CAAA;YAsBV,IAAM,gBAAgB,CArBhB,SAAA,GAAY,MAAA,CAAO,KAAC,GAAO,MAAA,CAAO,UAAC,CAAU;YAsBnD,EAAE,CAAC,CAAC,IArBC,CAAI,KAAC,IAAQ,SAAA,IAAa,IAAA,CAAK,KAAC,GAAO,IAAA,CAAK,UAAC,GAAY,SAAA,CAAU,CAAC,CAAA;gBAsBvE,MArBM,IAAI,KAAA,CAsBN,yEAAuE,IArBC,CAAI,KAAC,MAAK,CAAG,CAAC;YAsB5F,CAAC;QACH,CAAC;IACH,CAAC;AACH,CAAC;AACD;;;;GAIG;AACH,4BAzBC,OAAA,EAAA,MA+BA;IACC,IAAM,gBAAgB,CAzBhB,UAAA,GAAoB,CAAO,EAAC,CAAA,CAAE;IA0BpC,QAAQ,CAzBC,OAAC,EAAQ,UAAA,CAAW,CAAC;IA2B9B,UAAU,CAzBC,KAAC,GAAO,MAAA,CAAO,KAAC,CAAK;IA0BhC,UAAU,CAzBC,YAAC,GAAc,MAAA,CAAO,YAAC,CAAY;IA0B9C,UAAU,CAzBC,eAAC,GAAiB,MAAA,CAAO,eAAC,CAAe;IA0BpD,UAAU,CAzBC,MAAC,GAAQ,MAAA,CAAO,MAAC,CAAM;IA0BlC,UAAU,CAzBC,iBAAC,GAAmB,MAAA,CAAO,iBAAC,CAAiB;IA2BxD,mFAAmF;IACnF,UAAU,CAzBC,UAAC,GAAY,CAAA,CAAE;IA0B1B,UAAU,CAzBC,mBAAC,GAAqB,EAAA,CAAG;IA0BpC,MAAM,CAzBC,UAAA,CAAW;AA0BpB,CAAC;AACD;;;;GAIG;AACH,+BACI,UAAsB,EAAE,MAAuD;IACjF,IAAM,gBAAgB,CA7BhB,aAAA,GAA0B,CAAO,EAAC,CAAA,CAAE;IA8B1C,QAAQ,CA7BC,UAAC,EAAW,aAAA,CAAc,CAAC;IA8BpC,aAAa,CA7BC,eAAC,GAAiB,MAAA,CAAO,eAAC,CAAe;IA8BvD,MAAM,CA7BC,aAAA,CAAc;AA8BvB,CAAC;AACD;;;;;GAKG;AACH,MAlCC,6BAAA,MAAA,EAAA,SAAA,EAAA,OAAA;IAmCC,gEAAgE;IAChE,6DAA6D;IAC7D,IAAM,gBAAgB,CAlChB,IAAA,GAAO,UAAA,CAAW,MAAC,CAAM,IAAC,EAAK,MAAA,EAAQ,SAAA,CAAU,KAAC,EAAM,SAAA,CAAU,OAAC,CAAO,QAAC,CAAQ,CAAC;IAmC1F,QAAQ,CAlCC,IAAC,EAAK,MAAA,CAAO,SAAC,EAAU,OAAA,CAAQ,CAAC;IAmC1C,eAAe,CAlCC,IAAC,CAAI,CAAC;IAmCtB,MAAM,CAlCC,IAAA,CAAK;AAmCd,CAAC;AACD;;;;;GAKG;AACH,MAvCC,yBAAA,IAAA,EAAA,GAAA,EAAA,OAAA;IAwCC,IAAM,gBAAgB,CAvChB,IAAA,GAAO,UAAA,CAAW,IAAC,EAAK,IAAA,EAAM,IAAA,EAAM,GAAA,CAAI,CAAC;IAwC/C,QAAQ,CAvCC,IAAC,EAAK,OAAA,EAAS,OAAA,CAAQ,CAAC;IAwCjC,eAAe,CAvCC,IAAC,CAAI,CAAC;IAwCtB,MAAM,CAvCC,IAAA,CAAK;AAwCd,CAAC;AACD;;;;;;GAMG;AACH,oBACI,IAAc,EAAE,MAAgB,EAAE,WAAmB,EAAE,GAAmB;IAC5E,IAAM,gBAAgB,CA7ChB,KAAA,GAAoB,IAAI,KAAA,CAAM,GAAC,CAAG,KAAC,CAAK,MAAC,CAAM,CAAC;IA8CtD,IAAI,gBAAgB,CA7ChB,QAAU,CAAS;IA8CvB,EAAE,CAAC,CAAC,GA7CC,CAAG,KAAC,IAAQ,IAAA,IAAQ,CAAA,GAAE,CAAG,KAAC,GAAO,SAAA,CAAU,SAAC,CAAS,CAAC,CAAC,CAAA;QA8C1D,QAAQ,GA7CG,IAAA,CAAK;IA8ClB,CAAC;IA7CC,IAAA,CAAK,CAAA;QA8CL,QAAQ;YACJ,GAAG,CA7CC,aAAC,GAAe,IAAA,CAAK,QAAC,CAAQ,eAAC,CAAe,GAAC,CAAG,aAAC,CAAa,GAAG,MAAA,CAAO,QAAC,CAAQ;IA8C7F,CAAC;IACD,IAAM,gBAAgB,CA7ChB,WAAA,GAAc,GAAA,CAAI,eAAC,GAAiB,IAAI,KAAA,CAAM,GAAC,CAAG,eAAC,CAAe,GAAG,SAAA,CAAU;IA8CrF,IAAM,gBAAgB,CA7ChB,IAAA,GAAiB;QA8CrB,GAAG,KAAA;QACH,MAAM,QAAA;QACN,WAAW,aAAA;QACX,OAAO,EA7CE,SAAA;QA8CT,SAAS,EA7CE,SAAA,EAAW,KAAA,OAAA;QA8CtB,KAAK,EA7CE,SAAA,CAAU,UAAC,GAAY,SAAA,CAAU,aAAC,EAAc,QAAA,UAAA,EAAU,IAAA,MAAA;QA8CjE,SAAS,EA7CE,IAAI,KAAA,CAAM,GAAC,CAAG,YAAC,CAAY,EAAE,WAAA,aAAA;KA8CzC,CA7CC;IA8CF,MAAM,CA7CC,IAAA,CAAK;AA8Cd,CAAC;AACD;;;;;GAKG;AACH,kBAlDC,IAAA,EAAA,SAAA,EAAA,OAAA;IAmDC,IAAI,CAlDC,SAAC,GAAW,SAAA,CAAU;IAmD3B,IAAI,CAlDC,OAAC,GAAS,OAAA,CAAQ;AAmDzB,CAAC;AAED,IAAM,gBAAgB,CAlDhB,eAAA,GAmDF,WAAW,CAlDC,WAAC,CAAW,cAAC,EAAe,gBAAA,CAAiB,CAAC;AAmD9D;;;GAGG;AACH,0BArDC,IAAA;IAsDC,IAAI,gBAAgB,CArDhB,UAAY,CAAI;IAsDpB,EAAE,CAAC,CAAC,eArDC,CAAe,IAAC,CAAI,CAAC,CAAC,CAAA;QAsDzB,UAAU,GArDG,aAAA,CAAc,IAAC,CAAI,MAAC,EAAO,IAAA,CAAK,WAAC,CAAW,CAAC,aAAC,CAAa;QAsDxE,EAAE,CAAC,CAAC,IArDC,CAAI,QAAC,CAAQ,CAAC,CAAA;YAsDjB,UAAU,GArDG,IAAA,CAAK,QAAC,CAAQ,cAAC,CAAc,UAAC,CAAU,CAAC;QAsDxD,CAAC;IACH,CAAC;IAED,IAAM,gBAAgB,CArDhB,GAAA,GAAM,IAAA,CAAK,GAAC,CAAG;IAsDrB,IAAM,gBAAgB,CArDhB,KAAA,GAAQ,IAAA,CAAK,KAAC,CAAK;IAsDzB,GAAG,CAAC,CAAC,IArDC,gBAAA,CAAG,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,GAAA,CAAI,KAAC,CAAK,MAAC,EAAO,CAAA,EAAE,EAAG,CAAA;QAsDzC,IAAM,gBAAgB,CArDhB,OAAA,GAAU,GAAA,CAAI,KAAC,CAAK,CAAC,CAAC,CAAC;QAsD7B,uDAAuD;QACvD,8DAA8D;QAC9D,cAAc,CArDC,IAAC,EAAK,OAAA,CAAQ,MAAC,CAAM,CAAC;QAsDrC,MAAM,CAAC,CAAC,OArDC,CAAO,IAAC,CAAI,CAAC,CAAA;YAsDpB,KArDK,QAAA,CAAS,OAAC;gBAsDb,KAAK,CArDC,CAAC,CAAC,GAAC,CAAE,aAAA,CAAc,IAAC,EAAK,UAAA,EAAY,OAAA,CAAY,CAAA,CAAI;gBAsD3D,KAAK,CAAC;YACR,KArDK,QAAA,CAAS,IAAC;gBAsDb,KAAK,CArDC,CAAC,CAAC,GAAC,CAAE,UAAA,CAAW,IAAC,EAAK,UAAA,EAAY,OAAA,CAAY,CAAA,CAAI;gBAsDxD,KAAK,CAAC;YACR,KArDK,QAAA,CAAS,QAAC;gBAsDb,EAAE,CAAC,CAAC,OArDC,CAAO,QAAC,CAAQ,SAAC,CAAS,CAAC,CAAA;oBAsD9B,uEAAuE;oBACvE,oEAAoE;oBACpE,2EAA2E;oBAC3E,IAAM,gBAAgB,CArDhB,aAAA,GAAgB,UAAA,CAsDlB,IAAI,CArDC,IAAC,EAAK,IAAA,EAAM,OAAA,CAAQ,MAAC,EAAO,qBAAA,CAAsB,OAAC,CAAO,QAAC,CAAQ,SAAC,CAAS,CAAC,CAAC;oBAsDxF,IAAM,gBAAgB,CArDhB,YAAA,GAAa,CAAgB,EAAC,aAAC,eAAA,EAAc,QAAA,EAAU,SAAA,EAAU,CAAA,CAAC;oBAsDxE,KAAK,CArDC,CAAC,CAAC,GAAC,CAAE,YAAgB,CAAA,CAAI;oBAsD/B,IAAM,gBAAgB,CArDhB,QAAA,GAAW,YAAA,CAAa,QAAC,GAAU,sBAAA,CAAuB,IAAC,EAAK,OAAA,CAAQ,CAAC;oBAsD/E,QAAQ,CArDC,aAAC,EAAc,QAAA,EAAU,QAAA,CAAS,CAAC;gBAsD9C,CAAC;gBArDC,IAAA,CAAK,CAAA;oBAsDL,IAAM,gBAAgB,CArDhB,QAAA,GAAW,sBAAA,CAAuB,IAAC,EAAK,OAAA,CAAQ,CAAC;oBAsDvD,IAAM,gBAAgB,CArDhB,YAAA,GAAa,CAAgB,EAAC,aAAC,EAAc,SAAA,EAAW,QAAA,UAAA,EAAS,CAAA,CAAC;oBAsDxE,KAAK,CArDC,CAAC,CAAC,GAAC,CAAE,YAAgB,CAAA,CAAI;gBAsDjC,CAAC;gBACD,KAAK,CAAC;YACR,KArDK,QAAA,CAAS,cAAC;gBAsDb,KAAK,CArDC,CAAC,CAAC,GAAC,CAAE,oBAAA,CAAqB,IAAC,EAAK,OAAA,CAAY,CAAA,CAAI;gBAsDtD,KAAK,CAAC;YACR,KArDK,QAAA,CAAS,KAAC;gBAsDb,KAAK,CArDC,CAAC,CAAC,GAAC,CAAE,WAAA,EAAiB,CAAA,CAAI;gBAsDhC,KAAK,CAAC;YACR,KArDK,QAAA,CAAS,SAAC;gBAsDb,eAAe,CArDC,IAAC,EAAK,UAAA,EAAY,OAAA,CAAQ,CAAC;gBAsD3C,0CAA0C;gBAC1C,KAAK,CArDC,CAAC,CAAC,GAAG,SAAA,CAAU;gBAsDrB,KAAK,CAAC;QACV,CAAC;IACH,CAAC;IACD,iFAAiF;IACjF,gCAAgC;IAChC,wBAAwB,CArDC,IAAC,EAAK,UAAA,CAAW,eAAC,CAAe,CAAC;AAsD7D,CAAC;AAED,MAAM,CArDC,IAAA,gBAAA,CAAM,kBAAA,GAsDT,WAAW,CArDC,WAAC,CAAW,cAAC,EAAe,mBAAA,CAAoB,CAAC;AAsDjE;;;GAGG;AACH,6BAxDC,IAAA;IAyDC,IAAI,CAxDC,GAAC,CAAG,MAAC,CAAM,IAAC,CAAI,CAAC;IAyDtB,uBAAuB,CAxDC,IAAC,EAAK,UAAA,CAAW,cAAC,CAAc,CAAC;IAyDzD,iBAAiB,CAxDC,IAAC,EAAK,SAAA,CAAU,eAAC,EAAgB,WAAA,CAAY,cAAC,CAAc,CAAC;IAyD/E,wBAAwB,CAxDC,IAAC,EAAK,UAAA,CAAW,cAAC,CAAc,CAAC;IAyD1D,iBAAiB,CAxDC,IAAC,EAAK,SAAA,CAAU,YAAC,EAAa,WAAA,CAAY,cAAC,CAAc,CAAC;AAyD9E,CAAC;AAED,MAAM,CAxDC,IAAA,gBAAA,CAAM,kBAAA,GAyDT,WAAW,CAxDC,WAAC,CAAW,cAAC,EAAe,mBAAA,CAAoB,CAAC;AAyDjE;;;GAGG;AACH,6BA3DC,IAAA;IA4DC,IAAI,CA3DC,GAAC,CAAG,MAAC,CAAM,IAAC,CAAI,CAAC;IA4DtB,uBAAuB,CA3DC,IAAC,EAAK,UAAA,CAAW,cAAC,CAAc,CAAC;IA4DzD,iBAAiB,CA3DC,IAAC,EAAK,SAAA,CAAU,eAAC,EAAgB,WAAA,CAAY,cAAC,CAAc,CAAC;IA6D/E,+BAA+B,CAC3B,IAAI,EA3DE,SAAA,CAAU,mBAAC;QA4Db,CAAC,IA3DC,CAAI,KAAC,GAAO,SAAA,CAAU,UAAC,GAAY,SAAA,CAAU,gBAAC,GAAkB,CAAA,CAAE,CAAC,CAAC;IA4D9E,wBAAwB,CA3DC,IAAC,EAAK,UAAA,CAAW,cAAC,CAAc,CAAC;IA4D1D,iBAAiB,CA3DC,IAAC,EAAK,SAAA,CAAU,YAAC,EAAa,WAAA,CAAY,cAAC,CAAc,CAAC;IA6D5E,+BAA+B,CAC3B,IAAI,EA3DE,SAAA,CAAU,gBAAC;QA4Db,CAAC,IA3DC,CAAI,KAAC,GAAO,SAAA,CAAU,UAAC,GAAY,SAAA,CAAU,aAAC,GAAe,CAAA,CAAE,CAAC,CAAC;IA6D3E,EAAE,CAAC,CAAC,IA3DC,CAAI,GAAC,CAAG,KAAC,GAAO,SAAA,CAAU,MAAC,CAAM,CAAC,CAAA;QA4DrC,IAAI,CA3DC,KAAC,IAAQ,CAAA,SAAE,CAAS,aAAC,CAAa;IA4DzC,CAAC;IACD,IAAI,CA3DC,KAAC,IAAQ,CAAA,SAAE,CAAS,UAAC,CAAU;AA4DtC,CAAC;AACD;;;;;;;;;;;;GAYG;AACH,MAvEC,0BAwEG,EAAQ,EAAE,EAAQ,EAAE,EAAQ,EAAE,EAAQ,EAAE,EAAQ,EAAE,EAAQ,EAAE,EAAQ,EAAE,EAAQ,EAAE,EAAQ,EACxF,EAAQ;IACV,IAAM,gBAAgB,CAvEhB,MAAA,GAAS,aAAA,EAAc,CAAE;IAwE/B,IAAM,gBAAgB,CAvEhB,IAAA,GAAO,WAAA,EAAY,CAAE;IAwE3B,IAAM,gBAAgB,CAvEhB,SAAA,GAAY,gBAAA,EAAiB,CAAE;IAwErC,IAAM,gBAAgB,CAvEhB,OAAA,GAAU,IAAA,CAAK,GAAC,CAAG,KAAC,CAAK,SAAC,CAAS,CAAC;IAwE1C,MAAM,CAAC,CAAC,MAvEC,CAAM,CAAC,CAAA;QAwEd,KAvEK,WAAA,CAAY,cAAC;YAwEhB,wBAAwB,CAvEC,IAAC,EAAK,SAAA,EAAW,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,CAAG,CAAC;YAwElF,KAAK,CAAC;QACR,KAvEK,WAAA,CAAY,cAAC;YAwEhB,MAAM,CAAC,CAAC,OAvEC,CAAO,IAAC,CAAI,CAAC,CAAA;gBAwEpB,KAvEK,QAAA,CAAS,OAAC;oBAwEb,2BAA2B,CAvEC,IAAC,EAAK,OAAA,EAAS,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,CAAG,CAAC;oBAwEnF,KAAK,CAAC;gBACR,KAvEK,QAAA,CAAS,IAAC;oBAwEb,wBAAwB,CAvEC,IAAC,EAAK,OAAA,EAAS,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,CAAG,CAAC;oBAwEhF,KAAK,CAAC;gBACR,KAvEK,QAAA,CAAS,QAAC;oBAwEb,4BAA4B,CAvEC,IAAC,EAAK,OAAA,EAAS,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,CAAG,CAAC;oBAwEpF,KAAK,CAAC;gBACR,KAvEK,QAAA,CAAS,cAAC;oBAwEb,kCAAkC,CAvEC,IAAC,EAAK,OAAA,EAAS,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,CAAG,CAAC;oBAwE1F,KAAK,CAAC;YACV,CAAC;YACD,KAAK,CAAC;QACR;YACE,MAvEM,IAAI,KAAA,CAAM,8BAAC,WAA4B,CAAW,MAAC,CAAO,CAAE,CAAC;IAwEvE,CAAC;IACD,MAAM,CAvEC,OAAA,CAAQ,IAAC,KAAQ,QAAA,CAAS,cAAC,GAAgB,oBAAA,CAAqB,IAAC,EAAK,SAAA,CAAU,CAAC,KAAC;QAwEvC,SAAS,CAvEC;AAwE9D,CAAC;AACD;;;GAGG;AACH,MA1EC,2BAAA,MAAA;IA2EC,IAAM,gBAAgB,CA1EhB,MAAA,GAAS,aAAA,EAAc,CAAE;IA2E/B,IAAM,gBAAgB,CA1EhB,IAAA,GAAO,WAAA,EAAY,CAAE;IA2E3B,IAAM,gBAAgB,CA1EhB,SAAA,GAAY,gBAAA,EAAiB,CAAE;IA2ErC,IAAM,gBAAgB,CA1EhB,OAAA,GAAU,IAAA,CAAK,GAAC,CAAG,KAAC,CAAK,SAAC,CAAS,CAAC;IA2E1C,MAAM,CAAC,CAAC,MA1EC,CAAM,CAAC,CAAA;QA2Ed,KA1EK,WAAA,CAAY,cAAC;YA2EhB,yBAAyB,CA1EC,IAAC,EAAK,SAAA,EAAW,MAAA,CAAO,CAAC;YA2EnD,KAAK,CAAC;QACR,KA1EK,WAAA,CAAY,cAAC;YA2EhB,MAAM,CAAC,CAAC,OA1EC,CAAO,IAAC,CAAI,CAAC,CAAA;gBA2EpB,KA1EK,QAAA,CAAS,OAAC;oBA2Eb,4BAA4B,CA1EC,IAAC,EAAK,OAAA,EAAS,MAAA,CAAO,CAAC;oBA2EpD,KAAK,CAAC;gBACR,KA1EK,QAAA,CAAS,IAAC;oBA2Eb,yBAAyB,CA1EC,IAAC,EAAK,OAAA,EAAS,MAAA,CAAO,CAAC;oBA2EjD,KAAK,CAAC;gBACR,KA1EK,QAAA,CAAS,QAAC;oBA2Eb,6BAA6B,CA1EC,IAAC,EAAK,OAAA,EAAS,MAAA,CAAO,CAAC;oBA2ErD,KAAK,CAAC;gBACR,KA1EK,QAAA,CAAS,cAAC;oBA2Eb,mCAAmC,CA1EC,IAAC,EAAK,OAAA,EAAS,MAAA,CAAO,CAAC;oBA2E3D,KAAK,CAAC;YACV,CAAC;YACD,KAAK,CAAC;QACR;YACE,MA1EM,IAAI,KAAA,CAAM,8BAAC,WAA4B,CAAW,MAAC,CAAO,CAAE,CAAC;IA2EvE,CAAC;IACD,MAAM,CA1EC,OAAA,CAAQ,IAAC,KAAQ,QAAA,CAAS,cAAC,GAAgB,oBAAA,CAAqB,IAAC,EAAK,SAAA,CAAU,CAAC,KAAC;QA2EvC,SAAS,CA1EC;AA2E9D,CAAC;AACD;;;;;;;;;;;;;;GAcG;AACH,kCACI,IAAc,EAAE,SAAiB,EAAE,EAAO,EAAE,EAAO,EAAE,EAAO,EAAE,EAAO,EAAE,EAAO,EAAE,EAAO,EACvF,EAAO,EAAE,EAAO,EAAE,EAAO,EAAE,EAAO;IACpC,IAAM,gBAAgB,CAxFhB,OAAA,GAAU,IAAA,CAAK,GAAC,CAAG,KAAC,CAAK,SAAC,CAAS,CAAC;IAyF1C,iCAAiC;IACjC,MAAM,CAAC,CAAC,OAxFC,CAAO,QAAC,CAAQ,MAAC,CAAM,CAAC,CAAA;QAyF/B,KAxFK,EAAA;YAyFH,qBAAqB,CAxFC,IAAC,EAAK,OAAA,EAAS,CAAA,EAAG,EAAA,CAAG,CAAC;QAyF9C,KAxFK,CAAA;YAyFH,qBAAqB,CAxFC,IAAC,EAAK,OAAA,EAAS,CAAA,EAAG,EAAA,CAAG,CAAC;QAyF9C,KAxFK,CAAA;YAyFH,qBAAqB,CAxFC,IAAC,EAAK,OAAA,EAAS,CAAA,EAAG,EAAA,CAAG,CAAC;QAyF9C,KAxFK,CAAA;YAyFH,qBAAqB,CAxFC,IAAC,EAAK,OAAA,EAAS,CAAA,EAAG,EAAA,CAAG,CAAC;QAyF9C,KAxFK,CAAA;YAyFH,qBAAqB,CAxFC,IAAC,EAAK,OAAA,EAAS,CAAA,EAAG,EAAA,CAAG,CAAC;QAyF9C,KAxFK,CAAA;YAyFH,qBAAqB,CAxFC,IAAC,EAAK,OAAA,EAAS,CAAA,EAAG,EAAA,CAAG,CAAC;QAyF9C,KAxFK,CAAA;YAyFH,qBAAqB,CAxFC,IAAC,EAAK,OAAA,EAAS,CAAA,EAAG,EAAA,CAAG,CAAC;QAyF9C,KAxFK,CAAA;YAyFH,qBAAqB,CAxFC,IAAC,EAAK,OAAA,EAAS,CAAA,EAAG,EAAA,CAAG,CAAC;QAyF9C,KAxFK,CAAA;YAyFH,qBAAqB,CAxFC,IAAC,EAAK,OAAA,EAAS,CAAA,EAAG,EAAA,CAAG,CAAC;QAyF9C,KAxFK,CAAA;YAyFH,qBAAqB,CAxFC,IAAC,EAAK,OAAA,EAAS,CAAA,EAAG,EAAA,CAAG,CAAC;IAyFhD,CAAC;IACD,MAAM,CAxFC,SAAA,CAAU;AAyFnB,CAAC;AACD;;;;;GAKG;AACH,mCA7FC,IAAA,EAAA,SAAA,EAAA,MAAA;IA8FC,IAAM,gBAAgB,CA7FhB,OAAA,GAAU,IAAA,CAAK,GAAC,CAAG,KAAC,CAAK,SAAC,CAAS,CAAC;IA8F1C,GAAG,CAAC,CAAC,IA7FC,gBAAA,CAAG,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,MAAA,CAAO,MAAC,EAAO,CAAA,EAAE,EAAG,CAAA;QA8FtC,qBAAqB,CA7FC,IAAC,EAAK,OAAA,EAAS,CAAA,EAAG,MAAA,CAAO,CAAC,CAAC,CAAC,CAAC;IA8FrD,CAAC;AACH,CAAC;AACD;;;;GAIG;AACH,6BAjGC,IAAA,EAAA,OAAA;IAkGC,IAAM,gBAAgB,CAjGhB,SAAA,GAAY,WAAA,CAAY,IAAC,EAAK,OAAA,CAAQ,KAAC,CAAK,CAAC;IAkGnD,EAAE,CAAC,CAAC,SAjGC,CAAS,KAAC,CAAK,CAAC,CAAA;QAkGnB,MAjGM,2CAAA,CAkGF,IAAI,CAjGC,kBAAC,CAAkB,IAAC,EAAK,OAAA,CAAQ,KAAC,CAAK,EAAE,WAAA,OAAU,CAAO,KAAC,CAAK,EAAC,eAAE,EAkGxE,WAAS,OAjGC,CAAO,KAAC,CAAK,EAAC,WAAE,EAAS,CAAA,IAAE,CAAI,KAAC,GAAO,SAAA,CAAU,UAAC,CAAU,KAAK,CAAA,CAAE,CAAC;IAkGpF,CAAC;AACH,CAAC;AAED,MAAM,CAjGC,IAAA,gBAAA,CAAM,WAAA,GAAwC,WAAA,CAAY,WAAC,CAAW,OAAC,EAAQ,YAAA,CAAa,CAAC;AAkGpG;;;GAGG;AACH,sBApGC,IAAA;IAqGC,+BAA+B,CApGC,IAAC,EAAK,SAAA,CAAU,SAAC,CAAS,CAAC;IAqG3D,EAAE,CAAC,CAAC,IApGC,CAAI,WAAC,CAAW,CAAC,CAAA;QAqGpB,GAAG,CAAC,CAAC,IApGC,gBAAA,CAAG,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,IAAA,CAAK,WAAC,CAAW,MAAC,EAAO,CAAA,EAAE,EAAG,CAAA;YAqGhD,IAAI,CApGC,WAAC,CAAW,CAAC,CAAC,EAAC,CAAE;QAqGxB,CAAC;IACH,CAAC;IACD,wBAAwB,CApGC,IAAC,EAAK,UAAA,CAAW,OAAC,CAAO,CAAC;IAqGnD,uBAAuB,CApGC,IAAC,EAAK,UAAA,CAAW,OAAC,CAAO,CAAC;IAqGlD,IAAI,CApGC,KAAC,IAAQ,SAAA,CAAU,SAAC,CAAS;AAqGpC,CAAC;AAED,IAAI,UAAU,GAAQ,EAAE,CAAC;AACzB,UAAU,CAAC,eAAe,GAAG,CAAC,CAAC;AAC/B,UAAU,CAAC,cAAc,GAAG,CAAC,CAAC;AAC9B,UAAU,CAAC,cAAc,GAAG,CAAC,CAAC;AAC9B,UAAU,CAAC,OAAO,GAAG,CAAC,CAAC;AACvB,UAAU,CAAC,UAAU,CAAC,eAAe,CAAC,GAAG,iBAAiB,CAAC;AAC3D,UAAU,CAAC,UAAU,CAAC,cAAc,CAAC,GAAG,gBAAgB,CAAC;AACzD,UAAU,CAAC,UAAU,CAAC,cAAc,CAAC,GAAG,gBAAgB,CAAC;AACzD,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC;AAE3C;;;;GAIG;AACH,kCA5GC,IAAA,EAAA,MAAA;IA6GC,IAAM,gBAAgB,CA5GhB,GAAA,GAAM,IAAA,CAAK,GAAC,CAAG;IA6GrB,EAAE,CAAC,CAAC,CA5GC,CAAC,GAAC,CAAG,SAAC,GAAW,SAAA,CAAU,YAAC,CAAY,CAAC,CAAC,CAAA;QA6G7C,MAAM,CAAC;IACT,CAAC;IACD,GAAG,CAAC,CAAC,IA5GC,gBAAA,CAAG,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,GAAA,CAAI,KAAC,CAAK,MAAC,EAAO,CAAA,EAAE,EAAG,CAAA;QA6GzC,IAAM,gBAAgB,CA5GhB,OAAA,GAAU,GAAA,CAAI,KAAC,CAAK,CAAC,CAAC,CAAC;QA6G7B,EAAE,CAAC,CAAC,OA5GC,CAAO,KAAC,GAAO,SAAA,CAAU,YAAC,CAAY,CAAC,CAAA;YA6G1C,SAAS;YACT,IAAM,gBAAgB,CA5GhB,YAAA,GAAe,cAAA,CAAe,IAAC,EAAK,CAAA,CAAE,CAAC;YA6G7C,cAAc,CA5GC,YAAC,CAAY,aAAC,EAAc,MAAA,CAAO,CAAC;QA6GrD,CAAC;QA5GC,IAAA,CAAK,EAAA,CAAA,CAAA,CAAK,OAAC,CAAO,UAAC,GAAY,SAAA,CAAU,YAAC,CAAY,KAAK,CAAA,CAAE,CAAC,CAAA;YA6G9D,sBAAsB;YACtB,2BAA2B;YAC3B,yBAAyB;YACzB,CAAC,IA5GI,OAAA,CAAQ,UAAC,CAAU;QA6G1B,CAAC;IACH,CAAC;AACH,CAAC;AACD;;;;GAIG;AACH,iCAhHC,IAAA,EAAA,MAAA;IAiHC,IAAM,gBAAgB,CAhHhB,GAAA,GAAM,IAAA,CAAK,GAAC,CAAG;IAiHrB,EAAE,CAAC,CAAC,CAhHC,CAAC,GAAC,CAAG,SAAC,GAAW,SAAA,CAAU,gBAAC,CAAgB,CAAC,CAAC,CAAA;QAiHjD,MAAM,CAAC;IACT,CAAC;IACD,GAAG,CAAC,CAAC,IAhHC,gBAAA,CAAG,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,GAAA,CAAI,KAAC,CAAK,MAAC,EAAO,CAAA,EAAE,EAAG,CAAA;QAiHzC,IAAM,gBAAgB,CAhHhB,OAAA,GAAU,GAAA,CAAI,KAAC,CAAK,CAAC,CAAC,CAAC;QAiH7B,EAAE,CAAC,CAAC,OAhHC,CAAO,KAAC,GAAO,SAAA,CAAU,gBAAC,CAAgB,CAAC,CAAA;YAiH9C,SAAS;YACT,IAAM,gBAAgB,CAhHhB,aAAA,GAAgB,aAAA,CAAc,IAAC,EAAK,CAAA,CAAE,CAAC,aAAC,CAAa;YAiH3D,EAAE,CAAC,CAAC,aAhHC,CAAa,CAAC,CAAA;gBAiHjB,GAAG,CAAC,CAAC,IAhHC,gBAAA,CAAG,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,aAAA,CAAc,MAAC,EAAO,CAAA,EAAE,EAAG,CAAA;oBAiH7C,cAAc,CAhHC,aAAC,CAAa,CAAC,CAAC,EAAE,MAAA,CAAO,CAAC;gBAiH3C,CAAC;YACH,CAAC;QACH,CAAC;QAhHC,IAAA,CAAK,EAAA,CAAA,CAAA,CAAK,OAAC,CAAO,UAAC,GAAY,SAAA,CAAU,gBAAC,CAAgB,KAAK,CAAA,CAAE,CAAC,CAAA;YAiHlE,sBAAsB;YACtB,2BAA2B;YAC3B,yBAAyB;YACzB,CAAC,IAhHI,OAAA,CAAQ,UAAC,CAAU;QAiH1B,CAAC;IACH,CAAC;AACH,CAAC;AACD;;;;GAIG;AACH,wBApHC,IAAA,EAAA,MAAA;IAqHC,IAAM,gBAAgB,CApHhB,SAAA,GAAY,IAAA,CAAK,KAAC,CAAK;IAqH7B,MAAM,CAAC,CAAC,MApHC,CAAM,CAAC,CAAA;QAqHd,KApHK,UAAA,CAAW,cAAC;YAqHf,EAAE,CAAC,CAAC,CApHC,SAAC,GAAW,SAAA,CAAU,aAAC,CAAa;gBAqHrC,CAAC,SApHC,GAAW,CAAA,SAAE,CAAS,OAAC,GAAS,SAAA,CAAU,SAAC,CAAS,CAAC,KAAK,CAAA,CAAE,CAAC,CAAA;gBAqHjE,mBAAmB,CApHC,IAAC,CAAI,CAAC;YAqH5B,CAAC;YACD,KAAK,CAAC;QACR,KApHK,UAAA,CAAW,cAAC;YAqHf,EAAE,CAAC,CAAC,CApHC,SAAC,GAAW,SAAA,CAAU,aAAC,CAAa;gBAqHrC,CAAC,SApHC,GAAW,CAAA,SAAE,CAAS,OAAC,GAAS,SAAA,CAAU,SAAC,CAAS,CAAC,KAAK,CAAA,CAAE,CAAC,CAAA;gBAqHjE,mBAAmB,CApHC,IAAC,CAAI,CAAC;YAqH5B,CAAC;YACD,KAAK,CAAC;QACR,KApHK,UAAA,CAAW,OAAC;YAqHf,YAAY,CApHC,IAAC,CAAI,CAAC;YAqHnB,KAAK,CAAC;QACR,KApHK,UAAA,CAAW,eAAC;YAqHf,gBAAgB,CApHC,IAAC,CAAI,CAAC;YAqHvB,KAAK,CAAC;IACV,CAAC;AACH,CAAC;AAED,IAAI,WAAW,GAAQ,EAAE,CAAC;AAC1B,WAAW,CAAC,cAAc,GAAG,CAAC,CAAC;AAC/B,WAAW,CAAC,cAAc,GAAG,CAAC,CAAC;AAC/B,WAAW,CAAC,WAAW,CAAC,cAAc,CAAC,GAAG,gBAAgB,CAAC;AAC3D,WAAW,CAAC,WAAW,CAAC,cAAc,CAAC,GAAG,gBAAgB,CAAC;AAE3D;;;;;GAKG;AACH,2BA3HC,IAAA,EAAA,UAAA,EAAA,MAAA;IA4HC,EAAE,CAAC,CAAC,CA3HC,CAAC,IAAC,CAAI,GAAC,CAAG,SAAC,GAAW,UAAA,CAAW,CAAC,CAAC,CAAA;QA4HtC,MAAM,CAAC;IACT,CAAC;IACD,IAAM,gBAAgB,CA3HhB,SAAA,GAAY,IAAA,CAAK,GAAC,CAAG,KAAC,CAAK,MAAC,CAAM;IA4HxC,GAAG,CAAC,CAAC,IA3HC,gBAAA,CAAG,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,SAAA,EAAW,CAAA,EAAE,EAAG,CAAA;QA4HlC,IAAM,gBAAgB,CA3HhB,OAAA,GAAU,IAAA,CAAK,GAAC,CAAG,KAAC,CAAK,CAAC,CAAC,CAAC;QA4HlC,EAAE,CAAC,CAAC,OA3HC,CAAO,KAAC,GAAO,UAAA,CAAW,CAAC,CAAA;YA4H9B,cAAc,CA3HC,IAAC,EAAK,OAAA,CAAQ,KAAC,CAAK,CAAC;YA4HpC,MAAM,CAAC,CAAC,MA3HC,CAAM,CAAC,CAAA;gBA4Hd,KA3HK,WAAA,CAAY,cAAC;oBA4HhB,mBAAmB,CA3HC,IAAC,EAAK,OAAA,CAAQ,CAAC;oBA4HnC,KAAK,CAAC;gBACR,KA3HK,WAAA,CAAY,cAAC;oBA4HhB,mBAAmB,CA3HC,IAAC,EAAK,OAAA,CAAQ,CAAC;oBA4HnC,KAAK,CAAC;YACV,CAAC;QACH,CAAC;QA3HC,IAAA,CAAK,EAAA,CAAA,CAAA,CAAK,OAAC,CAAO,UAAC,GAAY,UAAA,CAAW,KAAK,CAAA,CAAE,CAAC,CAAA;YA4HlD,+BAA+B;YAC/B,yBAAyB;YACzB,CAAC,IA3HI,OAAA,CAAQ,UAAC,CAAU;QA4H1B,CAAC;IACH,CAAC;AACH,CAAC","file":"view.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {RenderComponentType, Renderer} from '../render/api';\nimport {checkAndUpdateElementDynamic, checkAndUpdateElementInline, createElement} from './element';\nimport {expressionChangedAfterItHasBeenCheckedError} from './errors';\nimport {appendNgContent} from './ng_content';\nimport {callLifecycleHooksChildrenFirst, checkAndUpdateProviderDynamic, checkAndUpdateProviderInline, createProviderInstance} from './provider';\nimport {checkAndUpdatePureExpressionDynamic, checkAndUpdatePureExpressionInline, createPureExpression} from './pure_expression';\nimport {checkAndUpdateQuery, createQuery, queryDef} from './query';\nimport {checkAndUpdateTextDynamic, checkAndUpdateTextInline, createText} from './text';\nimport {ElementDef, EntryAction, NodeData, NodeDef, NodeFlags, NodeType, ProviderData, ProviderDef, Refs, RootData, TextDef, ViewData, ViewDefinition, ViewDefinitionFactory, ViewFlags, ViewHandleEventFn, ViewState, ViewUpdateFn, asElementData, asProviderData, asPureExpressionData, asQueryList} from './types';\nimport {checkBindingNoChanges, currentAction, currentNodeIndex, currentView, entryAction, isComponentView, resolveViewDefinition, setCurrentNode} from './util';\n\nconst /** @type {?} */ NOOP = (): any => undefined;\n/**\n * @param {?} flags\n * @param {?} nodesWithoutIndices\n * @param {?=} update\n * @param {?=} handleEvent\n * @param {?=} componentType\n * @return {?}\n */\nexport function viewDef(\n    flags: ViewFlags, nodesWithoutIndices: NodeDef[], update?: ViewUpdateFn,\n    handleEvent?: ViewHandleEventFn, componentType?: RenderComponentType): ViewDefinition {\n  // clone nodes and set auto calculated values\n  if (nodesWithoutIndices.length === 0) {\n    throw new Error(`Illegal State: Views without nodes are not allowed!`);\n  }\n\n  const /** @type {?} */ nodes: NodeDef[] = new Array(nodesWithoutIndices.length);\n  const /** @type {?} */ reverseChildNodes: NodeDef[] = new Array(nodesWithoutIndices.length);\n  let /** @type {?} */ viewBindingCount = 0;\n  let /** @type {?} */ viewDisposableCount = 0;\n  let /** @type {?} */ viewNodeFlags = 0;\n  let /** @type {?} */ viewMatchedQueries: {[queryId: string]: boolean} = {};\n  let /** @type {?} */ currentParent: NodeDef = null;\n  let /** @type {?} */ lastRootNode: NodeDef = null;\n  for (let /** @type {?} */ i = 0; i < nodesWithoutIndices.length; i++) {\n    while (currentParent && i > currentParent.index + currentParent.childCount) {\n      const /** @type {?} */ newParent = nodes[currentParent.parent];\n      if (newParent) {\n        newParent.childFlags |= currentParent.childFlags;\n        copyInto(currentParent.childMatchedQueries, newParent.childMatchedQueries);\n      }\n      currentParent = newParent;\n    }\n    const /** @type {?} */ nodeWithoutIndices = nodesWithoutIndices[i];\n    const /** @type {?} */ reverseChildIndex = calculateReverseChildIndex(\n        currentParent, i, nodeWithoutIndices.childCount, nodesWithoutIndices.length);\n\n    const /** @type {?} */ node = cloneAndModifyNode(nodeWithoutIndices, {\n      index: i,\n      parent: currentParent ? currentParent.index : undefined,\n      bindingIndex: viewBindingCount,\n      disposableIndex: viewDisposableCount, reverseChildIndex,\n    });\n    if (node.element) {\n      node.element = cloneAndModifyElement(node.element, {\n        // Use protoypical inheritance to not get O(n^2) complexity...\n        providerIndices:\n            Object.create(currentParent ? currentParent.element.providerIndices : null),\n      });\n    }\n    nodes[i] = node;\n    reverseChildNodes[reverseChildIndex] = node;\n    validateNode(currentParent, node);\n\n    viewNodeFlags |= node.flags;\n    copyInto(node.matchedQueries, viewMatchedQueries);\n    viewBindingCount += node.bindings.length;\n    viewDisposableCount += node.disposableCount;\n    if (currentParent) {\n      currentParent.childFlags |= node.flags;\n      copyInto(node.matchedQueries, currentParent.childMatchedQueries);\n      if (node.element && node.element.template) {\n        copyInto(node.element.template.nodeMatchedQueries, currentParent.childMatchedQueries);\n      }\n    }\n\n    if (!currentParent) {\n      lastRootNode = node;\n    }\n    if (node.provider) {\n      currentParent.element.providerIndices[node.provider.tokenKey] = i;\n    }\n    if (node.query) {\n      const /** @type {?} */ elementDef = nodes[currentParent.parent];\n      elementDef.element.providerIndices[node.query.id] = i;\n    }\n    if (node.childCount) {\n      currentParent = node;\n    }\n  }\n  while (currentParent) {\n    const /** @type {?} */ newParent = nodes[currentParent.parent];\n    if (newParent) {\n      newParent.childFlags |= currentParent.childFlags;\n      copyInto(currentParent.childMatchedQueries, newParent.childMatchedQueries);\n    }\n    currentParent = newParent;\n  }\n\n  return {\n    nodeFlags: viewNodeFlags,\n    nodeMatchedQueries: viewMatchedQueries, flags,\n    nodes: nodes, reverseChildNodes,\n    update: update || NOOP,\n    handleEvent: handleEvent || NOOP, componentType,\n    bindingCount: viewBindingCount,\n    disposableCount: viewDisposableCount, lastRootNode\n  };\n}\n/**\n * @param {?} source\n * @param {?} target\n * @return {?}\n */\nfunction copyInto(source: any, target: any) {\n  for (let /** @type {?} */ prop in source) {\n    target[prop] = source[prop];\n  }\n}\n/**\n * @param {?} currentParent\n * @param {?} i\n * @param {?} childCount\n * @param {?} nodeCount\n * @return {?}\n */\nfunction calculateReverseChildIndex(\n    currentParent: NodeDef, i: number, childCount: number, nodeCount: number) {\n  // Notes about reverse child order:\n  // - Every node is directly before its children, in dfs and reverse child order.\n  // - node.childCount contains all children, in dfs and reverse child order.\n  // - In dfs order, every node is before its first child\n  // - In reverse child order, every node is before its last child\n\n  // Algorithm, main idea:\n  // - In reverse child order, the ranges for each child + its transitive children are mirrored\n  //   regarding their position inside of their parent\n\n  // Visualization:\n  // Given the following tree:\n  // Nodes: n0\n  //             n1         n2\n  //                n11 n12    n21 n22\n  // dfs:    0   1   2   3  4   5   6\n  // result: 0   4   6   5  1   3   2\n  //\n  // Example:\n  // Current node = 1\n  // 1) lastChildIndex = 3\n  // 2) lastChildOffsetRelativeToParentInDfsOrder = 2\n  // 3) parentEndIndexInReverseChildOrder = 6\n  // 4) result = 4\n  let /** @type {?} */ lastChildOffsetRelativeToParentInDfsOrder: number;\n  let /** @type {?} */ parentEndIndexInReverseChildOrder: number;\n  if (currentParent) {\n    const /** @type {?} */ lastChildIndex = i + childCount;\n    lastChildOffsetRelativeToParentInDfsOrder = lastChildIndex - currentParent.index - 1;\n    parentEndIndexInReverseChildOrder = currentParent.reverseChildIndex + currentParent.childCount;\n  } else {\n    lastChildOffsetRelativeToParentInDfsOrder = i + childCount;\n    parentEndIndexInReverseChildOrder = nodeCount - 1;\n  }\n  return parentEndIndexInReverseChildOrder - lastChildOffsetRelativeToParentInDfsOrder;\n}\n/**\n * @param {?} parent\n * @param {?} node\n * @return {?}\n */\nfunction validateNode(parent: NodeDef, node: NodeDef) {\n  const /** @type {?} */ template = node.element && node.element.template;\n  if (template) {\n    if (template.lastRootNode && template.lastRootNode.flags & NodeFlags.HasEmbeddedViews) {\n      throw new Error(\n          `Illegal State: Last root node of a template can't have embedded views, at index ${node.index}!`);\n    }\n  }\n  if (node.provider) {\n    const /** @type {?} */ parentType = parent ? parent.type : null;\n    if (parentType !== NodeType.Element) {\n      throw new Error(\n          `Illegal State: Provider nodes need to be children of elements or anchors, at index ${node.index}!`);\n    }\n  }\n  if (node.query) {\n    const /** @type {?} */ parentType = parent ? parent.type : null;\n    if (parentType !== NodeType.Provider) {\n      throw new Error(\n          `Illegal State: Query nodes need to be children of providers, at index ${node.index}!`);\n    }\n  }\n  if (node.childCount) {\n    if (parent) {\n      const /** @type {?} */ parentEnd = parent.index + parent.childCount;\n      if (node.index <= parentEnd && node.index + node.childCount > parentEnd) {\n        throw new Error(\n            `Illegal State: childCount of node leads outside of parent, at index ${node.index}!`);\n      }\n    }\n  }\n}\n/**\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction cloneAndModifyNode(nodeDef: NodeDef, values: {\n  index: number,\n  reverseChildIndex: number,\n  parent: number,\n  bindingIndex: number,\n  disposableIndex: number,\n}): NodeDef {\n  const /** @type {?} */ clonedNode: NodeDef = /** @type {?} */(( <any>{}));\n  copyInto(nodeDef, clonedNode);\n\n  clonedNode.index = values.index;\n  clonedNode.bindingIndex = values.bindingIndex;\n  clonedNode.disposableIndex = values.disposableIndex;\n  clonedNode.parent = values.parent;\n  clonedNode.reverseChildIndex = values.reverseChildIndex;\n\n  // Note: We can't set the value immediately, as we need to walk the children first.\n  clonedNode.childFlags = 0;\n  clonedNode.childMatchedQueries = {};\n  return clonedNode;\n}\n/**\n * @param {?} elementDef\n * @param {?} values\n * @return {?}\n */\nfunction cloneAndModifyElement(\n    elementDef: ElementDef, values: {providerIndices: {[tokenKey: string]: number}}): ElementDef {\n  const /** @type {?} */ clonedElement: ElementDef = /** @type {?} */(( <any>{}));\n  copyInto(elementDef, clonedElement);\n  clonedElement.providerIndices = values.providerIndices;\n  return clonedElement;\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?=} context\n * @return {?}\n */\nexport function createEmbeddedView(parent: ViewData, anchorDef: NodeDef, context?: any): ViewData {\n  // embedded views are seen as siblings to the anchor, so we need\n  // to get the parent of the anchor and use it as parentIndex.\n  const /** @type {?} */ view = createView(parent.root, parent, anchorDef.index, anchorDef.element.template);\n  initView(view, parent.component, context);\n  createViewNodes(view);\n  return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nexport function createRootView(root: RootData, def: ViewDefinition, context?: any): ViewData {\n  const /** @type {?} */ view = createView(root, null, null, def);\n  initView(view, context, context);\n  createViewNodes(view);\n  return view;\n}\n/**\n * @param {?} root\n * @param {?} parent\n * @param {?} parentIndex\n * @param {?} def\n * @return {?}\n */\nfunction createView(\n    root: RootData, parent: ViewData, parentIndex: number, def: ViewDefinition): ViewData {\n  const /** @type {?} */ nodes: NodeData[] = new Array(def.nodes.length);\n  let /** @type {?} */ renderer: Renderer;\n  if (def.flags != null && (def.flags & ViewFlags.DirectDom)) {\n    renderer = null;\n  } else {\n    renderer =\n        def.componentType ? root.renderer.renderComponent(def.componentType) : parent.renderer;\n  }\n  const /** @type {?} */ disposables = def.disposableCount ? new Array(def.disposableCount) : undefined;\n  const /** @type {?} */ view: ViewData = {\n    def,\n    parent,\n    parentIndex,\n    context: undefined,\n    component: undefined, nodes,\n    state: ViewState.FirstCheck | ViewState.ChecksEnabled, renderer, root,\n    oldValues: new Array(def.bindingCount), disposables\n  };\n  return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view: ViewData, component: any, context: any) {\n  view.component = component;\n  view.context = context;\n}\n\nconst /** @type {?} */ createViewNodes: (view: ViewData) => void =\n    entryAction(EntryAction.CheckNoChanges, _createViewNodes);\n/**\n * @param {?} view\n * @return {?}\n */\nfunction _createViewNodes(view: ViewData) {\n  let /** @type {?} */ renderHost: any;\n  if (isComponentView(view)) {\n    renderHost = asElementData(view.parent, view.parentIndex).renderElement;\n    if (view.renderer) {\n      renderHost = view.renderer.createViewRoot(renderHost);\n    }\n  }\n\n  const /** @type {?} */ def = view.def;\n  const /** @type {?} */ nodes = view.nodes;\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    // As the current node is being created, we have to use\n    // the parent node as the current node for error messages, ...\n    setCurrentNode(view, nodeDef.parent);\n    switch (nodeDef.type) {\n      case NodeType.Element:\n        nodes[i] = /** @type {?} */(( createElement(view, renderHost, nodeDef) as any));\n        break;\n      case NodeType.Text:\n        nodes[i] = /** @type {?} */(( createText(view, renderHost, nodeDef) as any));\n        break;\n      case NodeType.Provider:\n        if (nodeDef.provider.component) {\n          // Components can inject a ChangeDetectorRef that needs a references to\n          // the component view. Therefore, we create the component view first\n          // and set the ProviderData in ViewData, and then instantiate the provider.\n          const /** @type {?} */ componentView = createView(\n              view.root, view, nodeDef.parent, resolveViewDefinition(nodeDef.provider.component));\n          const /** @type {?} */ providerData = /** @type {?} */(( <ProviderData>{componentView, instance: undefined}));\n          nodes[i] = /** @type {?} */(( providerData as any));\n          const /** @type {?} */ instance = providerData.instance = createProviderInstance(view, nodeDef);\n          initView(componentView, instance, instance);\n        } else {\n          const /** @type {?} */ instance = createProviderInstance(view, nodeDef);\n          const /** @type {?} */ providerData = /** @type {?} */(( <ProviderData>{componentView: undefined, instance}));\n          nodes[i] = /** @type {?} */(( providerData as any));\n        }\n        break;\n      case NodeType.PureExpression:\n        nodes[i] = /** @type {?} */(( createPureExpression(view, nodeDef) as any));\n        break;\n      case NodeType.Query:\n        nodes[i] = /** @type {?} */(( createQuery() as any));\n        break;\n      case NodeType.NgContent:\n        appendNgContent(view, renderHost, nodeDef);\n        // no runtime data needed for NgContent...\n        nodes[i] = undefined;\n        break;\n    }\n  }\n  // Create the ViewData.nodes of component views after we created everything else,\n  // so that e.g. ng-content works\n  execComponentViewsAction(view, ViewAction.CreateViewNodes);\n}\n\nexport const /** @type {?} */ checkNoChangesView: (view: ViewData) => void =\n    entryAction(EntryAction.CheckNoChanges, _checkNoChangesView);\n/**\n * @param {?} view\n * @return {?}\n */\nfunction _checkNoChangesView(view: ViewData) {\n  view.def.update(view);\n  execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n  execQueriesAction(view, NodeFlags.HasContentQuery, QueryAction.CheckNoChanges);\n  execComponentViewsAction(view, ViewAction.CheckNoChanges);\n  execQueriesAction(view, NodeFlags.HasViewQuery, QueryAction.CheckNoChanges);\n}\n\nexport const /** @type {?} */ checkAndUpdateView: (view: ViewData) => void =\n    entryAction(EntryAction.CheckAndUpdate, _checkAndUpdateView);\n/**\n * @param {?} view\n * @return {?}\n */\nfunction _checkAndUpdateView(view: ViewData) {\n  view.def.update(view);\n  execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(view, NodeFlags.HasContentQuery, QueryAction.CheckAndUpdate);\n\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterContentChecked |\n          (view.state & ViewState.FirstCheck ? NodeFlags.AfterContentInit : 0));\n  execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(view, NodeFlags.HasViewQuery, QueryAction.CheckAndUpdate);\n\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterViewChecked |\n          (view.state & ViewState.FirstCheck ? NodeFlags.AfterViewInit : 0));\n\n  if (view.def.flags & ViewFlags.OnPush) {\n    view.state &= ~ViewState.ChecksEnabled;\n  }\n  view.state &= ~ViewState.FirstCheck;\n}\n/**\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nexport function checkNodeInline(\n    v0?: any, v1?: any, v2?: any, v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any,\n    v9?: any): any {\n  const /** @type {?} */ action = currentAction();\n  const /** @type {?} */ view = currentView();\n  const /** @type {?} */ nodeIndex = currentNodeIndex();\n  const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n  switch (action) {\n    case EntryAction.CheckNoChanges:\n      checkNodeNoChangesInline(view, nodeIndex, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n      break;\n    case EntryAction.CheckAndUpdate:\n      switch (nodeDef.type) {\n        case NodeType.Element:\n          checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n          break;\n        case NodeType.Text:\n          checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n          break;\n        case NodeType.Provider:\n          checkAndUpdateProviderInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n          break;\n        case NodeType.PureExpression:\n          checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n          break;\n      }\n      break;\n    default:\n      throw new Error(`Illegal State: In action ${EntryAction[action]}`);\n  }\n  return nodeDef.type === NodeType.PureExpression ? asPureExpressionData(view, nodeIndex).value :\n                                                    undefined;\n}\n/**\n * @param {?} values\n * @return {?}\n */\nexport function checkNodeDynamic(values: any[]): any {\n  const /** @type {?} */ action = currentAction();\n  const /** @type {?} */ view = currentView();\n  const /** @type {?} */ nodeIndex = currentNodeIndex();\n  const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n  switch (action) {\n    case EntryAction.CheckNoChanges:\n      checkNodeNoChangesDynamic(view, nodeIndex, values);\n      break;\n    case EntryAction.CheckAndUpdate:\n      switch (nodeDef.type) {\n        case NodeType.Element:\n          checkAndUpdateElementDynamic(view, nodeDef, values);\n          break;\n        case NodeType.Text:\n          checkAndUpdateTextDynamic(view, nodeDef, values);\n          break;\n        case NodeType.Provider:\n          checkAndUpdateProviderDynamic(view, nodeDef, values);\n          break;\n        case NodeType.PureExpression:\n          checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n          break;\n      }\n      break;\n    default:\n      throw new Error(`Illegal State: In action ${EntryAction[action]}`);\n  }\n  return nodeDef.type === NodeType.PureExpression ? asPureExpressionData(view, nodeIndex).value :\n                                                    undefined;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNodeNoChangesInline(\n    view: ViewData, nodeIndex: number, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any,\n    v6: any, v7: any, v8: any, v9: any): void {\n  const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n  // Note: fallthrough is intended!\n  switch (nodeDef.bindings.length) {\n    case 10:\n      checkBindingNoChanges(view, nodeDef, 9, v9);\n    case 9:\n      checkBindingNoChanges(view, nodeDef, 8, v8);\n    case 8:\n      checkBindingNoChanges(view, nodeDef, 7, v7);\n    case 7:\n      checkBindingNoChanges(view, nodeDef, 6, v6);\n    case 6:\n      checkBindingNoChanges(view, nodeDef, 5, v5);\n    case 5:\n      checkBindingNoChanges(view, nodeDef, 4, v4);\n    case 4:\n      checkBindingNoChanges(view, nodeDef, 3, v3);\n    case 3:\n      checkBindingNoChanges(view, nodeDef, 2, v2);\n    case 2:\n      checkBindingNoChanges(view, nodeDef, 1, v1);\n    case 1:\n      checkBindingNoChanges(view, nodeDef, 0, v0);\n  }\n  return undefined;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} values\n * @return {?}\n */\nfunction checkNodeNoChangesDynamic(view: ViewData, nodeIndex: number, values: any[]): void {\n  const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    checkBindingNoChanges(view, nodeDef, i, values[i]);\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view: ViewData, nodeDef: NodeDef) {\n  const /** @type {?} */ queryList = asQueryList(view, nodeDef.index);\n  if (queryList.dirty) {\n    throw expressionChangedAfterItHasBeenCheckedError(\n        Refs.createDebugContext(view, nodeDef.index), `Query ${nodeDef.query.id} not dirty`,\n        `Query ${nodeDef.query.id} dirty`, (view.state & ViewState.FirstCheck) !== 0);\n  }\n}\n\nexport const /** @type {?} */ destroyView: (view: ViewData) => void = entryAction(EntryAction.Destroy, _destroyView);\n/**\n * @param {?} view\n * @return {?}\n */\nfunction _destroyView(view: ViewData) {\n  callLifecycleHooksChildrenFirst(view, NodeFlags.OnDestroy);\n  if (view.disposables) {\n    for (let /** @type {?} */ i = 0; i < view.disposables.length; i++) {\n      view.disposables[i]();\n    }\n  }\n  execComponentViewsAction(view, ViewAction.Destroy);\n  execEmbeddedViewsAction(view, ViewAction.Destroy);\n  view.state |= ViewState.Destroyed;\n}\ntype ViewAction = number;\nlet ViewAction: any = {};\nViewAction.CreateViewNodes = 0;\nViewAction.CheckNoChanges = 1;\nViewAction.CheckAndUpdate = 2;\nViewAction.Destroy = 3;\nViewAction[ViewAction.CreateViewNodes] = \"CreateViewNodes\";\nViewAction[ViewAction.CheckNoChanges] = \"CheckNoChanges\";\nViewAction[ViewAction.CheckAndUpdate] = \"CheckAndUpdate\";\nViewAction[ViewAction.Destroy] = \"Destroy\";\n\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ def = view.def;\n  if (!(def.nodeFlags & NodeFlags.HasComponent)) {\n    return;\n  }\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.HasComponent) {\n      // a leaf\n      const /** @type {?} */ providerData = asProviderData(view, i);\n      callViewAction(providerData.componentView, action);\n    } else if ((nodeDef.childFlags & NodeFlags.HasComponent) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ def = view.def;\n  if (!(def.nodeFlags & NodeFlags.HasEmbeddedViews)) {\n    return;\n  }\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.HasEmbeddedViews) {\n      // a leaf\n      const /** @type {?} */ embeddedViews = asElementData(view, i).embeddedViews;\n      if (embeddedViews) {\n        for (let /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n          callViewAction(embeddedViews[k], action);\n        }\n      }\n    } else if ((nodeDef.childFlags & NodeFlags.HasEmbeddedViews) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ viewState = view.state;\n  switch (action) {\n    case ViewAction.CheckNoChanges:\n      if ((viewState & ViewState.ChecksEnabled) &&\n          (viewState & (ViewState.Errored | ViewState.Destroyed)) === 0) {\n        _checkNoChangesView(view);\n      }\n      break;\n    case ViewAction.CheckAndUpdate:\n      if ((viewState & ViewState.ChecksEnabled) &&\n          (viewState & (ViewState.Errored | ViewState.Destroyed)) === 0) {\n        _checkAndUpdateView(view);\n      }\n      break;\n    case ViewAction.Destroy:\n      _destroyView(view);\n      break;\n    case ViewAction.CreateViewNodes:\n      _createViewNodes(view);\n      break;\n  }\n}\ntype QueryAction = number;\nlet QueryAction: any = {};\nQueryAction.CheckAndUpdate = 0;\nQueryAction.CheckNoChanges = 1;\nQueryAction[QueryAction.CheckAndUpdate] = \"CheckAndUpdate\";\nQueryAction[QueryAction.CheckNoChanges] = \"CheckNoChanges\";\n\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} action\n * @return {?}\n */\nfunction execQueriesAction(view: ViewData, queryFlags: NodeFlags, action: QueryAction) {\n  if (!(view.def.nodeFlags & queryFlags)) {\n    return;\n  }\n  const /** @type {?} */ nodeCount = view.def.nodes.length;\n  for (let /** @type {?} */ i = 0; i < nodeCount; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & queryFlags) {\n      setCurrentNode(view, nodeDef.index);\n      switch (action) {\n        case QueryAction.CheckAndUpdate:\n          checkAndUpdateQuery(view, nodeDef);\n          break;\n        case QueryAction.CheckNoChanges:\n          checkNoChangesQuery(view, nodeDef);\n          break;\n      }\n    } else if ((nodeDef.childFlags & queryFlags) === 0) {\n      // no child has a content query\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n"]}