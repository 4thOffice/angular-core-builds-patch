{"version":3,"sources":["../../../../../modules/@angular/core/src/view/view.ts"],"names":[],"mappings":"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","file":"view.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ViewEncapsulation} from '../metadata/view';\nimport {RendererTypeV2, RendererV2} from '../render/api';\n\nimport {checkAndUpdateElementDynamic, checkAndUpdateElementInline, createElement} from './element';\nimport {expressionChangedAfterItHasBeenCheckedError} from './errors';\nimport {appendNgContent} from './ng_content';\nimport {callLifecycleHooksChildrenFirst, checkAndUpdateDirectiveDynamic, checkAndUpdateDirectiveInline, createDirectiveInstance, createPipeInstance, createProviderInstance} from './provider';\nimport {checkAndUpdatePureExpressionDynamic, checkAndUpdatePureExpressionInline, createPureExpression} from './pure_expression';\nimport {checkAndUpdateQuery, createQuery, queryDef} from './query';\nimport {checkAndUpdateTextDynamic, checkAndUpdateTextInline, createText} from './text';\nimport {ArgumentType, ElementDef, NodeData, NodeDef, NodeFlags, NodeType, ProviderData, ProviderDef, RootData, Services, TextDef, ViewData, ViewDefinition, ViewDefinitionFactory, ViewFlags, ViewHandleEventFn, ViewState, ViewUpdateFn, asElementData, asProviderData, asPureExpressionData, asQueryList, asTextData} from './types';\nimport {checkBindingNoChanges, isComponentView, resolveViewDefinition, viewParentEl} from './util';\n\nconst /** @type {?} */ NOOP = (): any => undefined;\n/**\n * @param {?} flags\n * @param {?} nodes\n * @param {?=} updateDirectives\n * @param {?=} updateRenderer\n * @return {?}\n */\nexport function viewDef(\n    flags: ViewFlags, nodes: NodeDef[], updateDirectives?: ViewUpdateFn,\n    updateRenderer?: ViewUpdateFn): ViewDefinition {\n  // clone nodes and set auto calculated values\n  if (nodes.length === 0) {\n    throw new Error(`Illegal State: Views without nodes are not allowed!`);\n  }\n\n  const /** @type {?} */ reverseChildNodes: NodeDef[] = new Array(nodes.length);\n  let /** @type {?} */ viewBindingCount = 0;\n  let /** @type {?} */ viewDisposableCount = 0;\n  let /** @type {?} */ viewNodeFlags = 0;\n  let /** @type {?} */ viewMatchedQueries = 0;\n  let /** @type {?} */ currentParent: NodeDef = null;\n  let /** @type {?} */ currentElementHasPublicProviders = false;\n  let /** @type {?} */ currentElementHasPrivateProviders = false;\n  let /** @type {?} */ lastRenderRootNode: NodeDef = null;\n  for (let /** @type {?} */ i = 0; i < nodes.length; i++) {\n    while (currentParent && i > currentParent.index + currentParent.childCount) {\n      const /** @type {?} */ newParent = currentParent.parent;\n      if (newParent) {\n        newParent.childFlags |= currentParent.childFlags;\n        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n      }\n      currentParent = newParent;\n    }\n    const /** @type {?} */ node = nodes[i];\n    node.index = i;\n    node.parent = currentParent;\n    node.bindingIndex = viewBindingCount;\n    node.disposableIndex = viewDisposableCount;\n    node.reverseChildIndex =\n        calculateReverseChildIndex(currentParent, i, node.childCount, nodes.length);\n\n    // renderParent needs to account for ng-container!\n    let /** @type {?} */ currentRenderParent: NodeDef;\n    if (currentParent && currentParent.type === NodeType.Element && !currentParent.element.name) {\n      currentRenderParent = currentParent.renderParent;\n    } else {\n      currentRenderParent = currentParent;\n    }\n    node.renderParent = currentRenderParent;\n\n    if (node.element) {\n      const /** @type {?} */ elDef = node.element;\n      elDef.publicProviders =\n          currentParent ? currentParent.element.publicProviders : Object.create(null);\n      elDef.allProviders = elDef.publicProviders;\n      // Note: We assume that all providers of an element are before any child element!\n      currentElementHasPublicProviders = false;\n      currentElementHasPrivateProviders = false;\n    }\n    reverseChildNodes[node.reverseChildIndex] = node;\n    validateNode(currentParent, node, nodes.length);\n\n    viewNodeFlags |= node.flags;\n    viewMatchedQueries |= node.matchedQueryIds;\n    if (node.element && node.element.template) {\n      viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n    }\n    if (currentParent) {\n      currentParent.childFlags |= node.flags;\n      currentParent.childMatchedQueries |= node.matchedQueryIds;\n      if (node.element && node.element.template) {\n        currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n      }\n    }\n\n    viewBindingCount += node.bindings.length;\n    viewDisposableCount += node.disposableCount;\n\n    if (!currentRenderParent && (node.type === NodeType.Element || node.type === NodeType.Text)) {\n      lastRenderRootNode = node;\n    }\n    if (node.type === NodeType.Provider || node.type === NodeType.Directive) {\n      if (!currentElementHasPublicProviders) {\n        currentElementHasPublicProviders = true;\n        // Use protoypical inheritance to not get O(n^2) complexity...\n        currentParent.element.publicProviders =\n            Object.create(currentParent.element.publicProviders);\n        currentParent.element.allProviders = currentParent.element.publicProviders;\n      }\n      const /** @type {?} */ isPrivateService = (node.flags & NodeFlags.PrivateProvider) !== 0;\n      const /** @type {?} */ isComponent = (node.flags & NodeFlags.HasComponent) !== 0;\n      if (!isPrivateService || isComponent) {\n        currentParent.element.publicProviders[node.provider.tokenKey] = node;\n      } else {\n        if (!currentElementHasPrivateProviders) {\n          currentElementHasPrivateProviders = true;\n          // Use protoypical inheritance to not get O(n^2) complexity...\n          currentParent.element.allProviders = Object.create(currentParent.element.publicProviders);\n        }\n        currentParent.element.allProviders[node.provider.tokenKey] = node;\n      }\n      if (isComponent) {\n        currentParent.element.component = node;\n      }\n    }\n    if (node.childCount) {\n      currentParent = node;\n    }\n  }\n  while (currentParent) {\n    const /** @type {?} */ newParent = currentParent.parent;\n    if (newParent) {\n      newParent.childFlags |= currentParent.childFlags;\n      newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n    }\n    currentParent = newParent;\n  }\n  const /** @type {?} */ handleEvent: ViewHandleEventFn = (view, nodeIndex, eventName, event) =>\n      nodes[nodeIndex].element.handleEvent(view, eventName, event);\n  return {\n    nodeFlags: viewNodeFlags,\n    nodeMatchedQueries: viewMatchedQueries, flags,\n    nodes: nodes, reverseChildNodes,\n    updateDirectives: updateDirectives || NOOP,\n    updateRenderer: updateRenderer || NOOP,\n    handleEvent: handleEvent || NOOP,\n    bindingCount: viewBindingCount,\n    disposableCount: viewDisposableCount, lastRenderRootNode\n  };\n}\n/**\n * @param {?} currentParent\n * @param {?} i\n * @param {?} childCount\n * @param {?} nodeCount\n * @return {?}\n */\nfunction calculateReverseChildIndex(\n    currentParent: NodeDef, i: number, childCount: number, nodeCount: number) {\n  // Notes about reverse child order:\n  // - Every node is directly before its children, in dfs and reverse child order.\n  // - node.childCount contains all children, in dfs and reverse child order.\n  // - In dfs order, every node is before its first child\n  // - In reverse child order, every node is before its last child\n\n  // Algorithm, main idea:\n  // - In reverse child order, the ranges for each child + its transitive children are mirrored\n  //   regarding their position inside of their parent\n\n  // Visualization:\n  // Given the following tree:\n  // Nodes: n0\n  //             n1         n2\n  //                n11 n12    n21 n22\n  // dfs:    0   1   2   3  4   5   6\n  // result: 0   4   6   5  1   3   2\n  //\n  // Example:\n  // Current node = 1\n  // 1) lastChildIndex = 3\n  // 2) lastChildOffsetRelativeToParentInDfsOrder = 2\n  // 3) parentEndIndexInReverseChildOrder = 6\n  // 4) result = 4\n  let /** @type {?} */ lastChildOffsetRelativeToParentInDfsOrder: number;\n  let /** @type {?} */ parentEndIndexInReverseChildOrder: number;\n  if (currentParent) {\n    const /** @type {?} */ lastChildIndex = i + childCount;\n    lastChildOffsetRelativeToParentInDfsOrder = lastChildIndex - currentParent.index - 1;\n    parentEndIndexInReverseChildOrder = currentParent.reverseChildIndex + currentParent.childCount;\n  } else {\n    lastChildOffsetRelativeToParentInDfsOrder = i + childCount;\n    parentEndIndexInReverseChildOrder = nodeCount - 1;\n  }\n  return parentEndIndexInReverseChildOrder - lastChildOffsetRelativeToParentInDfsOrder;\n}\n/**\n * @param {?} parent\n * @param {?} node\n * @param {?} nodeCount\n * @return {?}\n */\nfunction validateNode(parent: NodeDef, node: NodeDef, nodeCount: number) {\n  const /** @type {?} */ template = node.element && node.element.template;\n  if (template) {\n    if (template.lastRenderRootNode &&\n        template.lastRenderRootNode.flags & NodeFlags.HasEmbeddedViews) {\n      throw new Error(\n          `Illegal State: Last root node of a template can't have embedded views, at index ${node.index}!`);\n    }\n  }\n  if (node.type === NodeType.Provider || node.type === NodeType.Directive) {\n    const /** @type {?} */ parentType = parent ? parent.type : null;\n    if (parentType !== NodeType.Element) {\n      throw new Error(\n          `Illegal State: Provider/Directive nodes need to be children of elements or anchors, at index ${node.index}!`);\n    }\n  }\n  if (node.query) {\n    if (node.flags & NodeFlags.HasContentQuery && (!parent || parent.type !== NodeType.Directive)) {\n      throw new Error(\n          `Illegal State: Content Query nodes need to be children of directives, at index ${node.index}!`);\n    }\n    if (node.flags & NodeFlags.HasViewQuery && parent) {\n      throw new Error(\n          `Illegal State: View Query nodes have to be top level nodes, at index ${node.index}!`);\n    }\n  }\n  if (node.childCount) {\n    const /** @type {?} */ parentEnd = parent ? parent.index + parent.childCount : nodeCount - 1;\n    if (node.index <= parentEnd && node.index + node.childCount > parentEnd) {\n      throw new Error(\n          `Illegal State: childCount of node leads outside of parent, at index ${node.index}!`);\n    }\n  }\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?=} context\n * @return {?}\n */\nexport function createEmbeddedView(parent: ViewData, anchorDef: NodeDef, context?: any): ViewData {\n  // embedded views are seen as siblings to the anchor, so we need\n  // to get the parent of the anchor and use it as parentIndex.\n  const /** @type {?} */ view =\n      createView(parent.root, parent.renderer, parent, anchorDef, anchorDef.element.template);\n  initView(view, parent.component, context);\n  createViewNodes(view);\n  return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nexport function createRootView(root: RootData, def: ViewDefinition, context?: any): ViewData {\n  const /** @type {?} */ view = createView(root, root.renderer, null, null, def);\n  initView(view, context, context);\n  createViewNodes(view);\n  return view;\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(\n    root: RootData, renderer: RendererV2, parent: ViewData, parentNodeDef: NodeDef,\n    def: ViewDefinition): ViewData {\n  const /** @type {?} */ nodes: NodeData[] = new Array(def.nodes.length);\n  const /** @type {?} */ disposables = def.disposableCount ? new Array(def.disposableCount) : undefined;\n  const /** @type {?} */ view: ViewData = {\n    def,\n    parent,\n    parentNodeDef,\n    context: undefined,\n    component: undefined, nodes,\n    state: ViewState.FirstCheck | ViewState.ChecksEnabled, root, renderer,\n    oldValues: new Array(def.bindingCount), disposables\n  };\n  return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view: ViewData, component: any, context: any) {\n  view.component = component;\n  view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view: ViewData) {\n  let /** @type {?} */ renderHost: any;\n  if (isComponentView(view)) {\n    const /** @type {?} */ hostDef = view.parentNodeDef;\n    renderHost = asElementData(view.parent, hostDef.parent.index).renderElement;\n  }\n  const /** @type {?} */ def = view.def;\n  const /** @type {?} */ nodes = view.nodes;\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    Services.setCurrentNode(view, i);\n    switch (nodeDef.type) {\n      case NodeType.Element:\n        nodes[i] = /** @type {?} */(( createElement(view, renderHost, nodeDef) as any));\n        break;\n      case NodeType.Text:\n        nodes[i] = /** @type {?} */(( createText(view, renderHost, nodeDef) as any));\n        break;\n      case NodeType.Provider: {\n        const /** @type {?} */ instance = createProviderInstance(view, nodeDef);\n        const /** @type {?} */ providerData = /** @type {?} */(( <ProviderData>{componentView: undefined, instance}));\n        nodes[i] = /** @type {?} */(( providerData as any));\n        break;\n      }\n      case NodeType.Pipe: {\n        const /** @type {?} */ instance = createPipeInstance(view, nodeDef);\n        const /** @type {?} */ providerData = /** @type {?} */(( <ProviderData>{componentView: undefined, instance}));\n        nodes[i] = /** @type {?} */(( providerData as any));\n        break;\n      }\n      case NodeType.Directive: {\n        if (nodeDef.flags & NodeFlags.HasComponent) {\n          // Components can inject a ChangeDetectorRef that needs a references to\n          // the component view. Therefore, we create the component view first\n          // and set the ProviderData in ViewData, and then instantiate the provider.\n          const /** @type {?} */ compViewDef = resolveViewDefinition(nodeDef.provider.component);\n          const /** @type {?} */ rendererType = nodeDef.provider.rendererType;\n          let /** @type {?} */ compRenderer: RendererV2;\n          if (!rendererType) {\n            compRenderer = view.root.renderer;\n          } else {\n            const /** @type {?} */ hostEl = asElementData(view, nodeDef.parent.index).renderElement;\n            compRenderer = view.root.rendererFactory.createRenderer(hostEl, rendererType);\n          }\n          const /** @type {?} */ componentView = createView(view.root, compRenderer, view, nodeDef, compViewDef);\n          const /** @type {?} */ providerData = /** @type {?} */(( <ProviderData>{componentView, instance: undefined}));\n          nodes[i] = /** @type {?} */(( providerData as any));\n          const /** @type {?} */ instance = providerData.instance = createDirectiveInstance(view, nodeDef);\n          initView(componentView, instance, instance);\n        } else {\n          const /** @type {?} */ instance = createDirectiveInstance(view, nodeDef);\n          const /** @type {?} */ providerData = /** @type {?} */(( <ProviderData>{componentView: undefined, instance}));\n          nodes[i] = /** @type {?} */(( providerData as any));\n        }\n        break;\n      }\n      case NodeType.PureExpression:\n        nodes[i] = /** @type {?} */(( createPureExpression(view, nodeDef) as any));\n        break;\n      case NodeType.Query:\n        nodes[i] = /** @type {?} */(( createQuery() as any));\n        break;\n      case NodeType.NgContent:\n        appendNgContent(view, renderHost, nodeDef);\n        // no runtime data needed for NgContent...\n        nodes[i] = undefined;\n        break;\n    }\n  }\n  // Create the ViewData.nodes of component views after we created everything else,\n  // so that e.g. ng-content works\n  execComponentViewsAction(view, ViewAction.CreateViewNodes);\n\n  // fill static content and view queries\n  execQueriesAction(\n      view, NodeFlags.HasContentQuery | NodeFlags.HasViewQuery, NodeFlags.HasStaticQuery,\n      QueryAction.CheckAndUpdate);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function checkNoChangesView(view: ViewData) {\n  Services.updateDirectives(checkNoChangesNode, view);\n  execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n  execQueriesAction(\n      view, NodeFlags.HasContentQuery, NodeFlags.HasDynamicQuery, QueryAction.CheckNoChanges);\n  Services.updateRenderer(checkNoChangesNode, view);\n  execComponentViewsAction(view, ViewAction.CheckNoChanges);\n  execQueriesAction(\n      view, NodeFlags.HasViewQuery, NodeFlags.HasDynamicQuery, QueryAction.CheckNoChanges);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function checkAndUpdateView(view: ViewData) {\n  Services.updateDirectives(checkAndUpdateNode, view);\n  execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(\n      view, NodeFlags.HasContentQuery, NodeFlags.HasDynamicQuery, QueryAction.CheckAndUpdate);\n\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterContentChecked |\n          (view.state & ViewState.FirstCheck ? NodeFlags.AfterContentInit : 0));\n\n  Services.updateRenderer(checkAndUpdateNode, view);\n\n  execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(\n      view, NodeFlags.HasViewQuery, NodeFlags.HasDynamicQuery, QueryAction.CheckAndUpdate);\n\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterViewChecked |\n          (view.state & ViewState.FirstCheck ? NodeFlags.AfterViewInit : 0));\n\n  if (view.def.flags & ViewFlags.OnPush) {\n    view.state &= ~ViewState.ChecksEnabled;\n  }\n  view.state &= ~ViewState.FirstCheck;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNode(\n    view: ViewData, nodeIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  if (argStyle === ArgumentType.Inline) {\n    return checkAndUpdateNodeInline(view, nodeIndex, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    return checkAndUpdateNodeDynamic(view, nodeIndex, v0);\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(\n    view: ViewData, nodeIndex: number, v0?: any, v1?: any, v2?: any, v3?: any, v4?: any, v5?: any,\n    v6?: any, v7?: any, v8?: any, v9?: any): any {\n  const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n  switch (nodeDef.type) {\n    case NodeType.Element:\n      return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case NodeType.Text:\n      return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case NodeType.Directive:\n      return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case NodeType.PureExpression:\n      return checkAndUpdatePureExpressionInline(\n          view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view: ViewData, nodeIndex: number, values: any[]): any {\n  const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n  switch (nodeDef.type) {\n    case NodeType.Element:\n      return checkAndUpdateElementDynamic(view, nodeDef, values);\n    case NodeType.Text:\n      return checkAndUpdateTextDynamic(view, nodeDef, values);\n    case NodeType.Directive:\n      return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n    case NodeType.PureExpression:\n      return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkNoChangesNode(\n    view: ViewData, nodeIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  if (argStyle === ArgumentType.Inline) {\n    return checkNoChangesNodeInline(view, nodeIndex, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    return checkNoChangesNodeDynamic(view, nodeIndex, v0);\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(\n    view: ViewData, nodeIndex: number, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any,\n    v6: any, v7: any, v8: any, v9: any): void {\n  const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n  const /** @type {?} */ bindLen = nodeDef.bindings.length;\n  if (bindLen > 0) checkBindingNoChanges(view, nodeDef, 0, v0);\n  if (bindLen > 1) checkBindingNoChanges(view, nodeDef, 1, v1);\n  if (bindLen > 2) checkBindingNoChanges(view, nodeDef, 2, v2);\n  if (bindLen > 3) checkBindingNoChanges(view, nodeDef, 3, v3);\n  if (bindLen > 4) checkBindingNoChanges(view, nodeDef, 4, v4);\n  if (bindLen > 5) checkBindingNoChanges(view, nodeDef, 5, v5);\n  if (bindLen > 6) checkBindingNoChanges(view, nodeDef, 6, v6);\n  if (bindLen > 7) checkBindingNoChanges(view, nodeDef, 7, v7);\n  if (bindLen > 8) checkBindingNoChanges(view, nodeDef, 8, v8);\n  if (bindLen > 9) checkBindingNoChanges(view, nodeDef, 9, v9);\n  return nodeDef.type === NodeType.PureExpression ? asPureExpressionData(view, nodeIndex).value :\n                                                    undefined;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view: ViewData, nodeIndex: number, values: any[]): void {\n  const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    checkBindingNoChanges(view, nodeDef, i, values[i]);\n  }\n  return nodeDef.type === NodeType.PureExpression ? asPureExpressionData(view, nodeIndex).value :\n                                                    undefined;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view: ViewData, nodeDef: NodeDef) {\n  const /** @type {?} */ queryList = asQueryList(view, nodeDef.index);\n  if (queryList.dirty) {\n    throw expressionChangedAfterItHasBeenCheckedError(\n        Services.createDebugContext(view, nodeDef.index), `Query ${nodeDef.query.id} not dirty`,\n        `Query ${nodeDef.query.id} dirty`, (view.state & ViewState.FirstCheck) !== 0);\n  }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function destroyView(view: ViewData) {\n  if (view.state & ViewState.Destroyed) {\n    return;\n  }\n  execEmbeddedViewsAction(view, ViewAction.Destroy);\n  execComponentViewsAction(view, ViewAction.Destroy);\n  callLifecycleHooksChildrenFirst(view, NodeFlags.OnDestroy);\n  if (view.disposables) {\n    for (let /** @type {?} */ i = 0; i < view.disposables.length; i++) {\n      view.disposables[i]();\n    }\n  }\n  if (view.renderer.destroyNode) {\n    destroyViewNodes(view);\n  }\n  if (view.parentNodeDef && view.parentNodeDef.flags & NodeFlags.HasComponent) {\n    view.renderer.destroy();\n  }\n  view.state |= ViewState.Destroyed;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view: ViewData) {\n  const /** @type {?} */ len = view.def.nodes.length;\n  for (let /** @type {?} */ i = 0; i < len; i++) {\n    const /** @type {?} */ def = view.def.nodes[i];\n    if (def.type === NodeType.Element) {\n      view.renderer.destroyNode(asElementData(view, i).renderElement);\n    } else if (def.type === NodeType.Text) {\n      view.renderer.destroyNode(asTextData(view, i).renderText);\n    }\n  }\n}\ntype ViewAction = number;\nlet ViewAction: any = {};\nViewAction.CreateViewNodes = 0;\nViewAction.CheckNoChanges = 1;\nViewAction.CheckAndUpdate = 2;\nViewAction.Destroy = 3;\nViewAction[ViewAction.CreateViewNodes] = \"CreateViewNodes\";\nViewAction[ViewAction.CheckNoChanges] = \"CheckNoChanges\";\nViewAction[ViewAction.CheckAndUpdate] = \"CheckAndUpdate\";\nViewAction[ViewAction.Destroy] = \"Destroy\";\n\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ def = view.def;\n  if (!(def.nodeFlags & NodeFlags.HasComponent)) {\n    return;\n  }\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.HasComponent) {\n      // a leaf\n      const /** @type {?} */ providerData = asProviderData(view, i);\n      callViewAction(providerData.componentView, action);\n    } else if ((nodeDef.childFlags & NodeFlags.HasComponent) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ def = view.def;\n  if (!(def.nodeFlags & NodeFlags.HasEmbeddedViews)) {\n    return;\n  }\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.HasEmbeddedViews) {\n      // a leaf\n      const /** @type {?} */ embeddedViews = asElementData(view, i).embeddedViews;\n      if (embeddedViews) {\n        for (let /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n          callViewAction(embeddedViews[k], action);\n        }\n      }\n    } else if ((nodeDef.childFlags & NodeFlags.HasEmbeddedViews) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ viewState = view.state;\n  switch (action) {\n    case ViewAction.CheckNoChanges:\n      if ((viewState & ViewState.ChecksEnabled) &&\n          (viewState & (ViewState.Errored | ViewState.Destroyed)) === 0) {\n        checkNoChangesView(view);\n      }\n      break;\n    case ViewAction.CheckAndUpdate:\n      if ((viewState & ViewState.ChecksEnabled) &&\n          (viewState & (ViewState.Errored | ViewState.Destroyed)) === 0) {\n        checkAndUpdateView(view);\n      }\n      break;\n    case ViewAction.Destroy:\n      destroyView(view);\n      break;\n    case ViewAction.CreateViewNodes:\n      createViewNodes(view);\n      break;\n  }\n}\ntype QueryAction = number;\nlet QueryAction: any = {};\nQueryAction.CheckAndUpdate = 0;\nQueryAction.CheckNoChanges = 1;\nQueryAction[QueryAction.CheckAndUpdate] = \"CheckAndUpdate\";\nQueryAction[QueryAction.CheckNoChanges] = \"CheckNoChanges\";\n\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} action\n * @return {?}\n */\nfunction execQueriesAction(\n    view: ViewData, queryFlags: NodeFlags, staticDynamicQueryFlag: NodeFlags, action: QueryAction) {\n  if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n    return;\n  }\n  const /** @type {?} */ nodeCount = view.def.nodes.length;\n  for (let /** @type {?} */ i = 0; i < nodeCount; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n      Services.setCurrentNode(view, nodeDef.index);\n      switch (action) {\n        case QueryAction.CheckAndUpdate:\n          checkAndUpdateQuery(view, nodeDef);\n          break;\n        case QueryAction.CheckNoChanges:\n          checkNoChangesQuery(view, nodeDef);\n          break;\n      }\n    }\n    if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n      // no child has a matching query\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n"]}