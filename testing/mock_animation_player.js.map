{"version":3,"sources":["../../../../modules/@angular/core/testing/mock_animation_player.ts"],"names":[],"mappings":"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","file":"mock_animation_player.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AUTO_STYLE, AnimationPlayer} from '@angular/core';\n\nexport class MockAnimationPlayer implements AnimationPlayer {\n  private _onDoneFns: Function[] = [];\n  private _onStartFns: Function[] = [];\n  private _finished = false;\n  private _destroyed = false;\n  private _started = false;\n\n  public parentPlayer: AnimationPlayer = null;\n  public previousStyles: {[styleName: string]: string | number} = {};\n\n  public log: any[] = [];\n\n  constructor(\n      public startingStyles: {[key: string]: string | number} = {},\n      public keyframes: Array<[number, {[style: string]: string | number}]> = [],\n      previousPlayers: AnimationPlayer[] = []) {\n    previousPlayers.forEach(player => {\n      if (player instanceof MockAnimationPlayer) {\n        const styles = player._captureStyles();\n        Object.keys(styles).forEach(prop => this.previousStyles[prop] = styles[prop]);\n      }\n    });\n  }\n\n  private _onFinish(): void {\n    if (!this._finished) {\n      this._finished = true;\n      this.log.push('finish');\n\n      this._onDoneFns.forEach(fn => fn());\n      this._onDoneFns = [];\n    }\n  }\n\n  init(): void { this.log.push('init'); }\n\n  onDone(fn: () => void): void { this._onDoneFns.push(fn); }\n\n  onStart(fn: () => void): void { this._onStartFns.push(fn); }\n\n  hasStarted() { return this._started; }\n\n  play(): void {\n    if (!this.hasStarted()) {\n      this._onStartFns.forEach(fn => fn());\n      this._onStartFns = [];\n      this._started = true;\n    }\n    this.log.push('play');\n  }\n\n  pause(): void { this.log.push('pause'); }\n\n  restart(): void { this.log.push('restart'); }\n\n  finish(): void { this._onFinish(); }\n\n  reset(): void {\n    this.log.push('reset');\n    this._destroyed = false;\n    this._finished = false;\n    this._started = false;\n  }\n\n  destroy(): void {\n    if (!this._destroyed) {\n      this._destroyed = true;\n      this.finish();\n      this.log.push('destroy');\n    }\n  }\n\n  setPosition(p: number): void {}\n  getPosition(): number { return 0; }\n\n  private _captureStyles(): {[styleName: string]: string | number} {\n    const captures: {[prop: string]: string | number} = {};\n\n    if (this.hasStarted()) {\n      // when assembling the captured styles, it's important that\n      // we build the keyframe styles in the following order:\n      // {startingStyles, ... other styles within keyframes, ... previousStyles }\n      Object.keys(this.startingStyles).forEach(prop => {\n        captures[prop] = this.startingStyles[prop];\n      });\n\n      this.keyframes.forEach(kf => {\n        const [offset, styles] = kf;\n        const newStyles: {[prop: string]: string | number} = {};\n        Object.keys(styles).forEach(\n            prop => { captures[prop] = this._finished ? styles[prop] : AUTO_STYLE; });\n      });\n    }\n\n    Object.keys(this.previousStyles).forEach(prop => {\n      captures[prop] = this.previousStyles[prop];\n    });\n\n    return captures;\n  }\n}\n"]}